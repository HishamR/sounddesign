
Inlamningsuppgift_2_v02.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000598c  00080000  00080000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0008598c  0008598c  0000d98c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000008c4  20070000  00085994  00010000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000027dc  200708c4  00086258  000108c4  2**2
                  ALLOC
  4 .stack        00002000  200730a0  00088a34  000108c4  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  000108c4  2**0
                  CONTENTS, READONLY
  6 .comment      00000071  00000000  00000000  000108ed  2**0
                  CONTENTS, READONLY
  7 .debug_info   00018c95  00000000  00000000  0001095e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000047c6  00000000  00000000  000295f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000bd13  00000000  00000000  0002ddb9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000c20  00000000  00000000  00039ad0  2**3
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000898  00000000  00000000  0003a6f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00017b27  00000000  00000000  0003af88  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00011f54  00000000  00000000  00052aaf  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00062450  00000000  00000000  00064a03  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000019e8  00000000  00000000  000c6e54  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	200750a0 	.word	0x200750a0
   80004:	00080ce1 	.word	0x00080ce1
   80008:	00080cdd 	.word	0x00080cdd
   8000c:	00080cdd 	.word	0x00080cdd
   80010:	00080cdd 	.word	0x00080cdd
   80014:	00080cdd 	.word	0x00080cdd
   80018:	00080cdd 	.word	0x00080cdd
	...
   8002c:	00080cdd 	.word	0x00080cdd
   80030:	00080cdd 	.word	0x00080cdd
   80034:	00000000 	.word	0x00000000
   80038:	00080cdd 	.word	0x00080cdd
   8003c:	00080cdd 	.word	0x00080cdd
   80040:	00080cdd 	.word	0x00080cdd
   80044:	00080cdd 	.word	0x00080cdd
   80048:	00080cdd 	.word	0x00080cdd
   8004c:	00080cdd 	.word	0x00080cdd
   80050:	00080cdd 	.word	0x00080cdd
   80054:	00080cdd 	.word	0x00080cdd
   80058:	00080cdd 	.word	0x00080cdd
   8005c:	00080cdd 	.word	0x00080cdd
   80060:	00080cdd 	.word	0x00080cdd
   80064:	00080cdd 	.word	0x00080cdd
   80068:	00000000 	.word	0x00000000
   8006c:	00080af9 	.word	0x00080af9
   80070:	00080b0d 	.word	0x00080b0d
   80074:	00080b21 	.word	0x00080b21
   80078:	00080b35 	.word	0x00080b35
	...
   80084:	00080cdd 	.word	0x00080cdd
   80088:	00080cdd 	.word	0x00080cdd
   8008c:	00080cdd 	.word	0x00080cdd
   80090:	00080cdd 	.word	0x00080cdd
   80094:	00080cdd 	.word	0x00080cdd
   80098:	00080cdd 	.word	0x00080cdd
   8009c:	00080cdd 	.word	0x00080cdd
   800a0:	00080cdd 	.word	0x00080cdd
   800a4:	00000000 	.word	0x00000000
   800a8:	00080cdd 	.word	0x00080cdd
   800ac:	00080599 	.word	0x00080599
   800b0:	00080cdd 	.word	0x00080cdd
   800b4:	00080cdd 	.word	0x00080cdd
   800b8:	00080cdd 	.word	0x00080cdd
   800bc:	00080cdd 	.word	0x00080cdd
   800c0:	00080cdd 	.word	0x00080cdd
   800c4:	00080cdd 	.word	0x00080cdd
   800c8:	00080cdd 	.word	0x00080cdd
   800cc:	00080cdd 	.word	0x00080cdd
   800d0:	00080cdd 	.word	0x00080cdd
   800d4:	00080cdd 	.word	0x00080cdd
   800d8:	00080cdd 	.word	0x00080cdd
   800dc:	00080cdd 	.word	0x00080cdd
   800e0:	00080cdd 	.word	0x00080cdd
   800e4:	00080cdd 	.word	0x00080cdd
   800e8:	00080cdd 	.word	0x00080cdd
   800ec:	00080cdd 	.word	0x00080cdd
   800f0:	00080cdd 	.word	0x00080cdd

000800f4 <deregister_tm_clones>:
   800f4:	b508      	push	{r3, lr}
   800f6:	4805      	ldr	r0, [pc, #20]	; (8010c <deregister_tm_clones+0x18>)
   800f8:	4b05      	ldr	r3, [pc, #20]	; (80110 <deregister_tm_clones+0x1c>)
   800fa:	1a1b      	subs	r3, r3, r0
   800fc:	2b06      	cmp	r3, #6
   800fe:	d800      	bhi.n	80102 <deregister_tm_clones+0xe>
   80100:	bd08      	pop	{r3, pc}
   80102:	4b04      	ldr	r3, [pc, #16]	; (80114 <deregister_tm_clones+0x20>)
   80104:	2b00      	cmp	r3, #0
   80106:	d0fb      	beq.n	80100 <deregister_tm_clones+0xc>
   80108:	4798      	blx	r3
   8010a:	e7f9      	b.n	80100 <deregister_tm_clones+0xc>
   8010c:	00085994 	.word	0x00085994
   80110:	00085997 	.word	0x00085997
   80114:	00000000 	.word	0x00000000

00080118 <register_tm_clones>:
   80118:	b508      	push	{r3, lr}
   8011a:	4807      	ldr	r0, [pc, #28]	; (80138 <register_tm_clones+0x20>)
   8011c:	4b07      	ldr	r3, [pc, #28]	; (8013c <register_tm_clones+0x24>)
   8011e:	1a1b      	subs	r3, r3, r0
   80120:	109b      	asrs	r3, r3, #2
   80122:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
   80126:	1059      	asrs	r1, r3, #1
   80128:	d100      	bne.n	8012c <register_tm_clones+0x14>
   8012a:	bd08      	pop	{r3, pc}
   8012c:	4a04      	ldr	r2, [pc, #16]	; (80140 <register_tm_clones+0x28>)
   8012e:	2a00      	cmp	r2, #0
   80130:	d0fb      	beq.n	8012a <register_tm_clones+0x12>
   80132:	4790      	blx	r2
   80134:	e7f9      	b.n	8012a <register_tm_clones+0x12>
   80136:	bf00      	nop
   80138:	00085994 	.word	0x00085994
   8013c:	00085994 	.word	0x00085994
   80140:	00000000 	.word	0x00000000

00080144 <__do_global_dtors_aux>:
   80144:	b510      	push	{r4, lr}
   80146:	4c06      	ldr	r4, [pc, #24]	; (80160 <__do_global_dtors_aux+0x1c>)
   80148:	7823      	ldrb	r3, [r4, #0]
   8014a:	b943      	cbnz	r3, 8015e <__do_global_dtors_aux+0x1a>
   8014c:	f7ff ffd2 	bl	800f4 <deregister_tm_clones>
   80150:	4b04      	ldr	r3, [pc, #16]	; (80164 <__do_global_dtors_aux+0x20>)
   80152:	b113      	cbz	r3, 8015a <__do_global_dtors_aux+0x16>
   80154:	4804      	ldr	r0, [pc, #16]	; (80168 <__do_global_dtors_aux+0x24>)
   80156:	f3af 8000 	nop.w
   8015a:	2301      	movs	r3, #1
   8015c:	7023      	strb	r3, [r4, #0]
   8015e:	bd10      	pop	{r4, pc}
   80160:	200708c4 	.word	0x200708c4
   80164:	00000000 	.word	0x00000000
   80168:	00085994 	.word	0x00085994

0008016c <frame_dummy>:
   8016c:	b508      	push	{r3, lr}
   8016e:	4b08      	ldr	r3, [pc, #32]	; (80190 <frame_dummy+0x24>)
   80170:	b11b      	cbz	r3, 8017a <frame_dummy+0xe>
   80172:	4808      	ldr	r0, [pc, #32]	; (80194 <frame_dummy+0x28>)
   80174:	4908      	ldr	r1, [pc, #32]	; (80198 <frame_dummy+0x2c>)
   80176:	f3af 8000 	nop.w
   8017a:	4808      	ldr	r0, [pc, #32]	; (8019c <frame_dummy+0x30>)
   8017c:	6803      	ldr	r3, [r0, #0]
   8017e:	b113      	cbz	r3, 80186 <frame_dummy+0x1a>
   80180:	4b07      	ldr	r3, [pc, #28]	; (801a0 <frame_dummy+0x34>)
   80182:	b103      	cbz	r3, 80186 <frame_dummy+0x1a>
   80184:	4798      	blx	r3
   80186:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   8018a:	f7ff bfc5 	b.w	80118 <register_tm_clones>
   8018e:	bf00      	nop
   80190:	00000000 	.word	0x00000000
   80194:	00085994 	.word	0x00085994
   80198:	200708c8 	.word	0x200708c8
   8019c:	00085994 	.word	0x00085994
   801a0:	00000000 	.word	0x00000000

000801a4 <adc_setup>:
*/

#include <asf.h>
#include "adc_dac.h"

void adc_setup() {
   801a4:	b538      	push	{r3, r4, r5, lr}
	
	pmc_enable_periph_clk(ID_ADC);
   801a6:	2025      	movs	r0, #37	; 0x25
   801a8:	4b0f      	ldr	r3, [pc, #60]	; (801e8 <adc_setup+0x44>)
   801aa:	4798      	blx	r3
	adc_init(ADC, sysclk_get_main_hz(), 20000000, 0);	//Configure for maximum frequency @ 84 MHz, CHECK THIS!!
   801ac:	4c0f      	ldr	r4, [pc, #60]	; (801ec <adc_setup+0x48>)
   801ae:	4620      	mov	r0, r4
   801b0:	490f      	ldr	r1, [pc, #60]	; (801f0 <adc_setup+0x4c>)
   801b2:	4a10      	ldr	r2, [pc, #64]	; (801f4 <adc_setup+0x50>)
   801b4:	2300      	movs	r3, #0
   801b6:	4d10      	ldr	r5, [pc, #64]	; (801f8 <adc_setup+0x54>)
   801b8:	47a8      	blx	r5
	adc_configure_timing(ADC, 0, 0, 0);					//
   801ba:	4620      	mov	r0, r4
   801bc:	2100      	movs	r1, #0
   801be:	460a      	mov	r2, r1
   801c0:	460b      	mov	r3, r1
   801c2:	4d0e      	ldr	r5, [pc, #56]	; (801fc <adc_setup+0x58>)
   801c4:	47a8      	blx	r5
	adc_set_resolution(ADC, ADC_MR_LOWRES_BITS_12);		//
   801c6:	4620      	mov	r0, r4
   801c8:	2100      	movs	r1, #0
   801ca:	4b0d      	ldr	r3, [pc, #52]	; (80200 <adc_setup+0x5c>)
   801cc:	4798      	blx	r3
	adc_enable_channel(ADC, ADC_CHANNEL_10);			//Analog Input 8 on Arduino Due, used for Sampling
   801ce:	4620      	mov	r0, r4
   801d0:	210a      	movs	r1, #10
   801d2:	4d0c      	ldr	r5, [pc, #48]	; (80204 <adc_setup+0x60>)
   801d4:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL_11);			//Analog Input 9 on Arduino Due, used for Buttons
   801d6:	4620      	mov	r0, r4
   801d8:	210b      	movs	r1, #11
   801da:	47a8      	blx	r5
	adc_configure_trigger(ADC, ADC_TRIG_SW, 0);			//Trigger by Software
   801dc:	4620      	mov	r0, r4
   801de:	2100      	movs	r1, #0
   801e0:	460a      	mov	r2, r1
   801e2:	4b09      	ldr	r3, [pc, #36]	; (80208 <adc_setup+0x64>)
   801e4:	4798      	blx	r3
   801e6:	bd38      	pop	{r3, r4, r5, pc}
   801e8:	00080c31 	.word	0x00080c31
   801ec:	400c0000 	.word	0x400c0000
   801f0:	0a037a00 	.word	0x0a037a00
   801f4:	01312d00 	.word	0x01312d00
   801f8:	0008076d 	.word	0x0008076d
   801fc:	000807c1 	.word	0x000807c1
   80200:	000807a1 	.word	0x000807a1
   80204:	000807e9 	.word	0x000807e9
   80208:	000807b1 	.word	0x000807b1

0008020c <dac_setup>:
}

void dac_setup() {
   8020c:	b538      	push	{r3, r4, r5, lr}
	
	pmc_enable_periph_clk(ID_DACC);
   8020e:	2026      	movs	r0, #38	; 0x26
   80210:	4b0c      	ldr	r3, [pc, #48]	; (80244 <dac_setup+0x38>)
   80212:	4798      	blx	r3
	dacc_reset(DACC);
   80214:	4c0c      	ldr	r4, [pc, #48]	; (80248 <dac_setup+0x3c>)
   80216:	4620      	mov	r0, r4
   80218:	4b0c      	ldr	r3, [pc, #48]	; (8024c <dac_setup+0x40>)
   8021a:	4798      	blx	r3
	dacc_set_transfer_mode(DACC, 0);
   8021c:	4620      	mov	r0, r4
   8021e:	2100      	movs	r1, #0
   80220:	4b0b      	ldr	r3, [pc, #44]	; (80250 <dac_setup+0x44>)
   80222:	4798      	blx	r3
	dacc_set_timing(DACC,1,1,0);						//1 is shortest refresh period, 1 max. speed, 0 startup time
   80224:	4620      	mov	r0, r4
   80226:	2101      	movs	r1, #1
   80228:	460a      	mov	r2, r1
   8022a:	2300      	movs	r3, #0
   8022c:	4d09      	ldr	r5, [pc, #36]	; (80254 <dac_setup+0x48>)
   8022e:	47a8      	blx	r5
	dacc_set_channel_selection(DACC,0);					//Channel DAC0
   80230:	4620      	mov	r0, r4
   80232:	2100      	movs	r1, #0
   80234:	4b08      	ldr	r3, [pc, #32]	; (80258 <dac_setup+0x4c>)
   80236:	4798      	blx	r3
	dacc_enable_channel(DACC, 0);						//enable DAC0
   80238:	4620      	mov	r0, r4
   8023a:	2100      	movs	r1, #0
   8023c:	4b07      	ldr	r3, [pc, #28]	; (8025c <dac_setup+0x50>)
   8023e:	4798      	blx	r3
   80240:	bd38      	pop	{r3, r4, r5, pc}
   80242:	bf00      	nop
   80244:	00080c31 	.word	0x00080c31
   80248:	400c8000 	.word	0x400c8000
   8024c:	00080809 	.word	0x00080809
   80250:	00080811 	.word	0x00080811
   80254:	00080845 	.word	0x00080845
   80258:	0008082d 	.word	0x0008082d
   8025c:	00080875 	.word	0x00080875

00080260 <configure_tc>:

#include <asf.h>
#include "conf_tc.h"

void configure_tc(void)
{
   80260:	b510      	push	{r4, lr}
	/* Configure PMC */
	pmc_enable_periph_clk(ID_TC0);
   80262:	201b      	movs	r0, #27
   80264:	4b0e      	ldr	r3, [pc, #56]	; (802a0 <configure_tc+0x40>)
   80266:	4798      	blx	r3

	/** Configure TC for a 10 kHz frequency and trigger on RC compare. */
	tc_init(TC0, 0, 0 | TC_CMR_CPCTRG);			//Timer_clock_1 - MCK/2 - 42 MHz
   80268:	4c0e      	ldr	r4, [pc, #56]	; (802a4 <configure_tc+0x44>)
   8026a:	4620      	mov	r0, r4
   8026c:	2100      	movs	r1, #0
   8026e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   80272:	4b0d      	ldr	r3, [pc, #52]	; (802a8 <configure_tc+0x48>)
   80274:	4798      	blx	r3
	tc_write_rc(TC0, 0, 4200);					//4200 corresponds to fs = 10 kHz
   80276:	4620      	mov	r0, r4
   80278:	2100      	movs	r1, #0
   8027a:	f241 0268 	movw	r2, #4200	; 0x1068
   8027e:	4b0b      	ldr	r3, [pc, #44]	; (802ac <configure_tc+0x4c>)
   80280:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   80282:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   80286:	4b0a      	ldr	r3, [pc, #40]	; (802b0 <configure_tc+0x50>)
   80288:	601a      	str	r2, [r3, #0]

	/* Configure and enable interrupt on RC compare */
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
   8028a:	4620      	mov	r0, r4
   8028c:	2100      	movs	r1, #0
   8028e:	2210      	movs	r2, #16
   80290:	4b08      	ldr	r3, [pc, #32]	; (802b4 <configure_tc+0x54>)
   80292:	4798      	blx	r3

	tc_start(TC0, 0);
   80294:	4620      	mov	r0, r4
   80296:	2100      	movs	r1, #0
   80298:	4b07      	ldr	r3, [pc, #28]	; (802b8 <configure_tc+0x58>)
   8029a:	4798      	blx	r3
   8029c:	bd10      	pop	{r4, pc}
   8029e:	bf00      	nop
   802a0:	00080c31 	.word	0x00080c31
   802a4:	40080000 	.word	0x40080000
   802a8:	00080c89 	.word	0x00080c89
   802ac:	00080cc5 	.word	0x00080cc5
   802b0:	e000e100 	.word	0xe000e100
   802b4:	00080ccd 	.word	0x00080ccd
   802b8:	00080cad 	.word	0x00080cad

000802bc <DelayInit>:
*/

#include "delay.h"

void DelayInit(void)
{
   802bc:	b510      	push	{r4, lr}
	pmc_enable_periph_clk(ID_TC3);
   802be:	201e      	movs	r0, #30
   802c0:	4b08      	ldr	r3, [pc, #32]	; (802e4 <DelayInit+0x28>)
   802c2:	4798      	blx	r3
	tc_init(TC1,0,0);	/*TC0, channel 0, TCLK1 och capturemode */
   802c4:	4c08      	ldr	r4, [pc, #32]	; (802e8 <DelayInit+0x2c>)
   802c6:	4620      	mov	r0, r4
   802c8:	2100      	movs	r1, #0
   802ca:	460a      	mov	r2, r1
   802cc:	4b07      	ldr	r3, [pc, #28]	; (802ec <DelayInit+0x30>)
   802ce:	4798      	blx	r3
	tc_set_block_mode(TC1,0);
   802d0:	4620      	mov	r0, r4
   802d2:	2100      	movs	r1, #0
   802d4:	4b06      	ldr	r3, [pc, #24]	; (802f0 <DelayInit+0x34>)
   802d6:	4798      	blx	r3
	tc_stop(TC1,0);		/* Making sure the timer is not running */
   802d8:	4620      	mov	r0, r4
   802da:	2100      	movs	r1, #0
   802dc:	4b05      	ldr	r3, [pc, #20]	; (802f4 <DelayInit+0x38>)
   802de:	4798      	blx	r3
   802e0:	bd10      	pop	{r4, pc}
   802e2:	bf00      	nop
   802e4:	00080c31 	.word	0x00080c31
   802e8:	40084000 	.word	0x40084000
   802ec:	00080c89 	.word	0x00080c89
   802f0:	00080ca5 	.word	0x00080ca5
   802f4:	00080cb5 	.word	0x00080cb5

000802f8 <delay>:
	tc_stop(TC0,0);			/* making sure the timer does not run  */
}


void delay(uint32_t us)		/* A simple implementation for a delay in us (not calibrated) */
{
   802f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   802fa:	4604      	mov	r4, r0
	tc_start(TC0,0);
   802fc:	4809      	ldr	r0, [pc, #36]	; (80324 <delay+0x2c>)
   802fe:	2100      	movs	r1, #0
   80300:	4b09      	ldr	r3, [pc, #36]	; (80328 <delay+0x30>)
   80302:	4798      	blx	r3
	while (tc_read_cv(TC0,0) < us*42);
   80304:	272a      	movs	r7, #42	; 0x2a
   80306:	fb07 f704 	mul.w	r7, r7, r4
   8030a:	4e06      	ldr	r6, [pc, #24]	; (80324 <delay+0x2c>)
   8030c:	2500      	movs	r5, #0
   8030e:	4c07      	ldr	r4, [pc, #28]	; (8032c <delay+0x34>)
   80310:	4630      	mov	r0, r6
   80312:	4629      	mov	r1, r5
   80314:	47a0      	blx	r4
   80316:	42b8      	cmp	r0, r7
   80318:	d3fa      	bcc.n	80310 <delay+0x18>
	tc_stop(TC0,0);
   8031a:	4802      	ldr	r0, [pc, #8]	; (80324 <delay+0x2c>)
   8031c:	2100      	movs	r1, #0
   8031e:	4b04      	ldr	r3, [pc, #16]	; (80330 <delay+0x38>)
   80320:	4798      	blx	r3
   80322:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80324:	40080000 	.word	0x40080000
   80328:	00080cad 	.word	0x00080cad
   8032c:	00080cbd 	.word	0x00080cbd
   80330:	00080cb5 	.word	0x00080cb5

00080334 <LCDwrite>:
*	type = 0 controls the display
*	type = 1 writes the content of the byte (usually interpreted as ASCII-code) to the display
*
*	LCDwrite returns the actual pinout value on PIOC 26-23, which is the reverse order compared to the Due pin order of D4-D7
*/
{
   80334:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80338:	b084      	sub	sp, #16
   8033a:	4607      	mov	r7, r0
   8033c:	460d      	mov	r5, r1
	/* In it's infinite wisdom the shield has the data pins in mirrored order compared to the Due board */
	uint8_t mirror_pin[16]={0b0000,0b1000,0b0100,0b1100,0b0010,0b1010,0b0110,0b1110,0b0001,0b1001,0b0101,0b1101,0b0011,0b1011,0b0111,0b1111};
   8033e:	4b22      	ldr	r3, [pc, #136]	; (803c8 <LCDwrite+0x94>)
   80340:	466c      	mov	r4, sp
   80342:	6818      	ldr	r0, [r3, #0]
   80344:	6859      	ldr	r1, [r3, #4]
   80346:	689a      	ldr	r2, [r3, #8]
   80348:	68db      	ldr	r3, [r3, #12]
   8034a:	c40f      	stmia	r4!, {r0, r1, r2, r3}

	byte_orig = byte;

	/* write the first 4 bits to the shield. */
	byte = byte>>4;
	byte = mirror_pin[byte];
   8034c:	eb04 1317 	add.w	r3, r4, r7, lsr #4
   80350:	f813 2c10 	ldrb.w	r2, [r3, #-16]
	byte32 = (uint32_t)byte << 23;
   80354:	05d3      	lsls	r3, r2, #23
	mirrored_output = byte<<4;
   80356:	0112      	lsls	r2, r2, #4
   80358:	fa5f f882 	uxtb.w	r8, r2
__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
   8035c:	b125      	cbz	r5, 80368 <LCDwrite+0x34>
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   8035e:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
   80362:	4a1a      	ldr	r2, [pc, #104]	; (803cc <LCDwrite+0x98>)
   80364:	6311      	str	r1, [r2, #48]	; 0x30
   80366:	e003      	b.n	80370 <LCDwrite+0x3c>
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80368:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
   8036c:	4a17      	ldr	r2, [pc, #92]	; (803cc <LCDwrite+0x98>)
   8036e:	6351      	str	r1, [r2, #52]	; 0x34
__always_inline static void arch_ioport_set_port_level(ioport_port_t port,
		ioport_port_mask_t mask, ioport_port_mask_t level)
{
	Pio *base = arch_ioport_port_to_base(port);

	base->PIO_SODR = mask & level;
   80370:	f003 62f0 	and.w	r2, r3, #125829120	; 0x7800000
   80374:	4c15      	ldr	r4, [pc, #84]	; (803cc <LCDwrite+0x98>)
   80376:	6322      	str	r2, [r4, #48]	; 0x30
	base->PIO_CODR = mask & ~level;
   80378:	43db      	mvns	r3, r3
   8037a:	f003 63f0 	and.w	r3, r3, #125829120	; 0x7800000
   8037e:	6363      	str	r3, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80380:	f44f 1600 	mov.w	r6, #2097152	; 0x200000
   80384:	6326      	str	r6, [r4, #48]	; 0x30
	
	ioport_set_pin_level(LCD_RS, type);
	ioport_set_port_level(IOPORT_PIOC, LCD_mask_D4_D7, byte32);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);
   80386:	2001      	movs	r0, #1
   80388:	4d11      	ldr	r5, [pc, #68]	; (803d0 <LCDwrite+0x9c>)
   8038a:	47a8      	blx	r5
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   8038c:	6366      	str	r6, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(100);
   8038e:	2064      	movs	r0, #100	; 0x64
   80390:	47a8      	blx	r5
	
	/* write the second 4 bits to the shield. */
	byte = byte_orig;
	byte = byte & 0x0f;
	byte = mirror_pin[byte];
   80392:	f007 070f 	and.w	r7, r7, #15
   80396:	ab04      	add	r3, sp, #16
   80398:	441f      	add	r7, r3
   8039a:	f817 2c10 	ldrb.w	r2, [r7, #-16]
	byte32 = (uint32_t)byte<<23;
   8039e:	05d3      	lsls	r3, r2, #23
	mirrored_output = mirrored_output + byte;
   803a0:	4442      	add	r2, r8
   803a2:	b2d7      	uxtb	r7, r2
__always_inline static void arch_ioport_set_port_level(ioport_port_t port,
		ioport_port_mask_t mask, ioport_port_mask_t level)
{
	Pio *base = arch_ioport_port_to_base(port);

	base->PIO_SODR = mask & level;
   803a4:	f003 62f0 	and.w	r2, r3, #125829120	; 0x7800000
   803a8:	6322      	str	r2, [r4, #48]	; 0x30
	base->PIO_CODR = mask & ~level;
   803aa:	43db      	mvns	r3, r3
   803ac:	f003 63f0 	and.w	r3, r3, #125829120	; 0x7800000
   803b0:	6363      	str	r3, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   803b2:	6326      	str	r6, [r4, #48]	; 0x30

	ioport_set_port_level(IOPORT_PIOC, LCD_mask_D4_D7, byte32);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);
   803b4:	2001      	movs	r0, #1
   803b6:	47a8      	blx	r5
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   803b8:	6366      	str	r6, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	delay(100);
   803ba:	2064      	movs	r0, #100	; 0x64
   803bc:	47a8      	blx	r5
	
	return mirrored_output;
}
   803be:	4638      	mov	r0, r7
   803c0:	b004      	add	sp, #16
   803c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   803c6:	bf00      	nop
   803c8:	00085784 	.word	0x00085784
   803cc:	400e1200 	.word	0x400e1200
   803d0:	000802f9 	.word	0x000802f9

000803d4 <LCDInit>:
	tc_stop(TC0,0);
}


int LCDInit(void)		/* Initializes the display on the LCD shield, returns 1 if everything is ok */
{
   803d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   803d8:	4c34      	ldr	r4, [pc, #208]	; (804ac <LCDInit+0xd8>)
   803da:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
   803de:	6127      	str	r7, [r4, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   803e0:	f8c4 70a0 	str.w	r7, [r4, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   803e4:	f44f 1500 	mov.w	r5, #2097152	; 0x200000
   803e8:	6125      	str	r5, [r4, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   803ea:	f8c4 50a0 	str.w	r5, [r4, #160]	; 0xa0
		ioport_port_mask_t mask, enum ioport_direction group_direction)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (group_direction == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = mask;
   803ee:	f04f 63f0 	mov.w	r3, #125829120	; 0x7800000
   803f2:	6123      	str	r3, [r4, #16]
	} else if (group_direction == IOPORT_DIR_INPUT) {
		base->PIO_ODR = mask;
	}

	base->PIO_OWER = mask;
   803f4:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   803f8:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_dir(LCD_Enable, IOPORT_DIR_OUTPUT);
	ioport_set_port_dir(IOPORT_PIOC, LCD_mask_D4_D7, IOPORT_DIR_OUTPUT);
	
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(30000);		/* wait > 15 ms */
   803fa:	f247 5030 	movw	r0, #30000	; 0x7530
   803fe:	4e2c      	ldr	r6, [pc, #176]	; (804b0 <LCDInit+0xdc>)
   80400:	47b0      	blx	r6
   80402:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80404:	f04f 6a80 	mov.w	sl, #67108864	; 0x4000000
   80408:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
   8040c:	f04f 7900 	mov.w	r9, #33554432	; 0x2000000
   80410:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80414:	f04f 7880 	mov.w	r8, #16777216	; 0x1000000
   80418:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   8041c:	f44f 0700 	mov.w	r7, #8388608	; 0x800000
   80420:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80422:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, HIGH);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);		/* delay 1 us */
   80424:	2001      	movs	r0, #1
   80426:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80428:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(4100);	/* wait for more than 4,1 ms */
   8042a:	f241 0004 	movw	r0, #4100	; 0x1004
   8042e:	47b0      	blx	r6
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80430:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
   80434:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80438:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   8043c:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   8043e:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, HIGH);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);		/* delay 1 us */
   80440:	2001      	movs	r0, #1
   80442:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80444:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);

	delay(100);	/* wait 100 us */
   80446:	2064      	movs	r0, #100	; 0x64
   80448:	47b0      	blx	r6
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   8044a:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
   8044e:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80452:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   80456:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80458:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, HIGH);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);		/* delay 1 us */
   8045a:	2001      	movs	r0, #1
   8045c:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   8045e:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(100);	/* wait 100 us */
   80460:	2064      	movs	r0, #100	; 0x64
   80462:	47b0      	blx	r6
   80464:	f8c4 a034 	str.w	sl, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80468:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   8046c:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   80470:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80472:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, LOW);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);
   80474:	2001      	movs	r0, #1
   80476:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80478:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(100);
   8047a:	2064      	movs	r0, #100	; 0x64
   8047c:	47b0      	blx	r6

	LCDwrite(0b00101000, LOW);		/* Two rows, small font */
   8047e:	2028      	movs	r0, #40	; 0x28
   80480:	2100      	movs	r1, #0
   80482:	4c0c      	ldr	r4, [pc, #48]	; (804b4 <LCDInit+0xe0>)
   80484:	47a0      	blx	r4
	LCDwrite(0b00001000, LOW);		/* Display off */
   80486:	2008      	movs	r0, #8
   80488:	2100      	movs	r1, #0
   8048a:	47a0      	blx	r4
	LCDwrite(0b00000001, LOW);		/* Display clear */
   8048c:	2001      	movs	r0, #1
   8048e:	2100      	movs	r1, #0
   80490:	47a0      	blx	r4
	
	delay(3000);
   80492:	f640 30b8 	movw	r0, #3000	; 0xbb8
   80496:	47b0      	blx	r6
	
	LCDwrite(0b00000110, LOW);		/* Entry mode set: move cursor right, no display shift */
   80498:	2006      	movs	r0, #6
   8049a:	2100      	movs	r1, #0
   8049c:	47a0      	blx	r4
	LCDwrite(0b00001111 ,LOW);		/* Display on, cursor on, blinking on */
   8049e:	200f      	movs	r0, #15
   804a0:	2100      	movs	r1, #0
   804a2:	47a0      	blx	r4

	all_ok = 1;					/* simple return statement showing that the initialization of the LCD has completed */
	return all_ok;
}
   804a4:	2001      	movs	r0, #1
   804a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   804aa:	bf00      	nop
   804ac:	400e1200 	.word	0x400e1200
   804b0:	000802f9 	.word	0x000802f9
   804b4:	00080335 	.word	0x00080335

000804b8 <LCDwriteString>:

/*
* Displays strings on the Arduino Shield Display
*/
int LCDwriteString(const char* str)
{
   804b8:	b570      	push	{r4, r5, r6, lr}
   804ba:	4604      	mov	r4, r0
	int all_ok = 0;
	
	/*
	* Loops until break
	*/
	while (*str != '\0')
   804bc:	7800      	ldrb	r0, [r0, #0]
   804be:	b138      	cbz	r0, 804d0 <LCDwriteString+0x18>
	{
		LCDwrite(*str, HIGH);
   804c0:	2601      	movs	r6, #1
   804c2:	4d04      	ldr	r5, [pc, #16]	; (804d4 <LCDwriteString+0x1c>)
   804c4:	4631      	mov	r1, r6
   804c6:	47a8      	blx	r5
	int all_ok = 0;
	
	/*
	* Loops until break
	*/
	while (*str != '\0')
   804c8:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   804cc:	2800      	cmp	r0, #0
   804ce:	d1f9      	bne.n	804c4 <LCDwriteString+0xc>
		str++;
	}
	
	all_ok = 1;
	return all_ok;
}
   804d0:	2001      	movs	r0, #1
   804d2:	bd70      	pop	{r4, r5, r6, pc}
   804d4:	00080335 	.word	0x00080335

000804d8 <main>:
#include "conf_tc.h"
#include "LCDShield.h"
#include "sampel_int.h"
#include "delay.h"

int main(void) {
   804d8:	b508      	push	{r3, lr}
	
	sysclk_init();
   804da:	4b12      	ldr	r3, [pc, #72]	; (80524 <main+0x4c>)
   804dc:	4798      	blx	r3
	board_init();
   804de:	4b12      	ldr	r3, [pc, #72]	; (80528 <main+0x50>)
   804e0:	4798      	blx	r3
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   804e2:	200b      	movs	r0, #11
   804e4:	4c11      	ldr	r4, [pc, #68]	; (8052c <main+0x54>)
   804e6:	47a0      	blx	r4
   804e8:	200c      	movs	r0, #12
   804ea:	47a0      	blx	r4
   804ec:	200d      	movs	r0, #13
   804ee:	47a0      	blx	r4
   804f0:	200e      	movs	r0, #14
   804f2:	47a0      	blx	r4
	ioport_init();
	adc_setup();
   804f4:	4b0e      	ldr	r3, [pc, #56]	; (80530 <main+0x58>)
   804f6:	4798      	blx	r3
	dac_setup();
   804f8:	4b0e      	ldr	r3, [pc, #56]	; (80534 <main+0x5c>)
   804fa:	4798      	blx	r3
	DelayInit();
   804fc:	4b0e      	ldr	r3, [pc, #56]	; (80538 <main+0x60>)
   804fe:	4798      	blx	r3
	LCDInit();
   80500:	4b0e      	ldr	r3, [pc, #56]	; (8053c <main+0x64>)
   80502:	4798      	blx	r3
	
	/*
	* Start the program
	*/
	
	LCDwriteString(("DELAY  ECHO"));
   80504:	480e      	ldr	r0, [pc, #56]	; (80540 <main+0x68>)
   80506:	4b0f      	ldr	r3, [pc, #60]	; (80544 <main+0x6c>)
   80508:	4798      	blx	r3
	LCDupdate(0b11000000, ((4999 + 1) / 10), "ms");
   8050a:	20c0      	movs	r0, #192	; 0xc0
   8050c:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
   80510:	4a0d      	ldr	r2, [pc, #52]	; (80548 <main+0x70>)
   80512:	4c0e      	ldr	r4, [pc, #56]	; (8054c <main+0x74>)
   80514:	47a0      	blx	r4
	LCDupdate(0b11001010, 50, "%");
   80516:	20ca      	movs	r0, #202	; 0xca
   80518:	2132      	movs	r1, #50	; 0x32
   8051a:	4a0d      	ldr	r2, [pc, #52]	; (80550 <main+0x78>)
   8051c:	47a0      	blx	r4
	configure_tc();
   8051e:	4b0d      	ldr	r3, [pc, #52]	; (80554 <main+0x7c>)
   80520:	4798      	blx	r3
   80522:	e7fe      	b.n	80522 <main+0x4a>
   80524:	00080699 	.word	0x00080699
   80528:	000806fd 	.word	0x000806fd
   8052c:	00080c31 	.word	0x00080c31
   80530:	000801a5 	.word	0x000801a5
   80534:	0008020d 	.word	0x0008020d
   80538:	000802bd 	.word	0x000802bd
   8053c:	000803d5 	.word	0x000803d5
   80540:	00085794 	.word	0x00085794
   80544:	000804b9 	.word	0x000804b9
   80548:	000857a0 	.word	0x000857a0
   8054c:	00080559 	.word	0x00080559
   80550:	000857a4 	.word	0x000857a4
   80554:	00080261 	.word	0x00080261

00080558 <LCDupdate>:
#include "adc_dac.h"

/************************************************************************/
/*	Updating information on the LCD                                     */
/************************************************************************/
void LCDupdate(uint8_t pos, uint16_t val, const char *unit) {
   80558:	b530      	push	{r4, r5, lr}
   8055a:	b083      	sub	sp, #12
   8055c:	460d      	mov	r5, r1
   8055e:	4614      	mov	r4, r2
	
	char update[7];
	LCDwrite(pos, LOW);	//Cursor positioning
   80560:	2100      	movs	r1, #0
   80562:	4b08      	ldr	r3, [pc, #32]	; (80584 <LCDupdate+0x2c>)
   80564:	4798      	blx	r3
	delay(40);
   80566:	2028      	movs	r0, #40	; 0x28
   80568:	4b07      	ldr	r3, [pc, #28]	; (80588 <LCDupdate+0x30>)
   8056a:	4798      	blx	r3
	sprintf(update, "%d%s ", val, unit);	//Format
   8056c:	4668      	mov	r0, sp
   8056e:	4907      	ldr	r1, [pc, #28]	; (8058c <LCDupdate+0x34>)
   80570:	462a      	mov	r2, r5
   80572:	4623      	mov	r3, r4
   80574:	4c06      	ldr	r4, [pc, #24]	; (80590 <LCDupdate+0x38>)
   80576:	47a0      	blx	r4
	LCDwriteString(update); //To display
   80578:	4668      	mov	r0, sp
   8057a:	4b06      	ldr	r3, [pc, #24]	; (80594 <LCDupdate+0x3c>)
   8057c:	4798      	blx	r3
}
   8057e:	b003      	add	sp, #12
   80580:	bd30      	pop	{r4, r5, pc}
   80582:	bf00      	nop
   80584:	00080335 	.word	0x00080335
   80588:	000802f9 	.word	0x000802f9
   8058c:	000857a8 	.word	0x000857a8
   80590:	00081005 	.word	0x00081005
   80594:	000804b9 	.word	0x000804b9

00080598 <TC0_Handler>:

/************************************************************************/
/*	Interrupt handler for TC0 interrupt.                                */
/************************************************************************/
void TC0_Handler(void) {
   80598:	b538      	push	{r3, r4, r5, lr}
	static uint16_t i = 0;
	static uint16_t buffer[5000] = {0};
	uint32_t invalue, outvalue;
	uint16_t echo = 50, delay = 4999, steps = 10;
	
	tc_get_status(TC0, 0);
   8059a:	4831      	ldr	r0, [pc, #196]	; (80660 <TC0_Handler+0xc8>)
   8059c:	2100      	movs	r1, #0
   8059e:	4b31      	ldr	r3, [pc, #196]	; (80664 <TC0_Handler+0xcc>)
   805a0:	4798      	blx	r3
	adc_start(ADC);
   805a2:	4831      	ldr	r0, [pc, #196]	; (80668 <TC0_Handler+0xd0>)
   805a4:	4b31      	ldr	r3, [pc, #196]	; (8066c <TC0_Handler+0xd4>)
   805a6:	4798      	blx	r3
	
	while ((adc_get_status(ADC) & 0x01000000) == 0);
   805a8:	4d2f      	ldr	r5, [pc, #188]	; (80668 <TC0_Handler+0xd0>)
   805aa:	4c31      	ldr	r4, [pc, #196]	; (80670 <TC0_Handler+0xd8>)
   805ac:	4628      	mov	r0, r5
   805ae:	47a0      	blx	r4
   805b0:	f010 7f80 	tst.w	r0, #16777216	; 0x1000000
   805b4:	d0fa      	beq.n	805ac <TC0_Handler+0x14>
	invalue = adc_get_channel_value(ADC, ADC_CHANNEL_10);	// Channel 10 used for Sampling
   805b6:	4c2c      	ldr	r4, [pc, #176]	; (80668 <TC0_Handler+0xd0>)
   805b8:	4620      	mov	r0, r4
   805ba:	210a      	movs	r1, #10
   805bc:	4b2d      	ldr	r3, [pc, #180]	; (80674 <TC0_Handler+0xdc>)
   805be:	4798      	blx	r3
   805c0:	4605      	mov	r5, r0
	adc_start(ADC);
   805c2:	4620      	mov	r0, r4
   805c4:	4b29      	ldr	r3, [pc, #164]	; (8066c <TC0_Handler+0xd4>)
   805c6:	4798      	blx	r3
	
	/*
	* Delay function
	*/
	buffer[i] = ((buffer[i] + invalue) * echo) / 100;
   805c8:	4b2b      	ldr	r3, [pc, #172]	; (80678 <TC0_Handler+0xe0>)
   805ca:	881b      	ldrh	r3, [r3, #0]
   805cc:	4a2b      	ldr	r2, [pc, #172]	; (8067c <TC0_Handler+0xe4>)
   805ce:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
   805d2:	4429      	add	r1, r5
   805d4:	2032      	movs	r0, #50	; 0x32
   805d6:	fb00 f101 	mul.w	r1, r0, r1
   805da:	4829      	ldr	r0, [pc, #164]	; (80680 <TC0_Handler+0xe8>)
   805dc:	fba0 4101 	umull	r4, r1, r0, r1
   805e0:	0949      	lsrs	r1, r1, #5
   805e2:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	i++;
   805e6:	3301      	adds	r3, #1
   805e8:	b29b      	uxth	r3, r3
	if (i >= delay) {
   805ea:	f241 3286 	movw	r2, #4998	; 0x1386
   805ee:	4293      	cmp	r3, r2
   805f0:	d802      	bhi.n	805f8 <TC0_Handler+0x60>
	
	/*
	* Delay function
	*/
	buffer[i] = ((buffer[i] + invalue) * echo) / 100;
	i++;
   805f2:	4a21      	ldr	r2, [pc, #132]	; (80678 <TC0_Handler+0xe0>)
   805f4:	8013      	strh	r3, [r2, #0]
   805f6:	bd38      	pop	{r3, r4, r5, pc}
	if (i >= delay) {
		i = 0;
   805f8:	2200      	movs	r2, #0
   805fa:	4b1f      	ldr	r3, [pc, #124]	; (80678 <TC0_Handler+0xe0>)
   805fc:	801a      	strh	r2, [r3, #0]
		
		outvalue = invalue + buffer[i];
   805fe:	4b1f      	ldr	r3, [pc, #124]	; (8067c <TC0_Handler+0xe4>)
   80600:	8819      	ldrh	r1, [r3, #0]
		dacc_write_conversion_data(DACC, outvalue);
   80602:	4820      	ldr	r0, [pc, #128]	; (80684 <TC0_Handler+0xec>)
   80604:	4429      	add	r1, r5
   80606:	4b20      	ldr	r3, [pc, #128]	; (80688 <TC0_Handler+0xf0>)
   80608:	4798      	blx	r3
		
		/*
		* Button function
		*/
		invalue = adc_get_channel_value(ADC, ADC_CHANNEL_11);	//Channel 11 used for buttons
   8060a:	4817      	ldr	r0, [pc, #92]	; (80668 <TC0_Handler+0xd0>)
   8060c:	210b      	movs	r1, #11
   8060e:	4b19      	ldr	r3, [pc, #100]	; (80674 <TC0_Handler+0xdc>)
   80610:	4798      	blx	r3
		if (invalue < 50) {	//Right button on the LCD Shield, set to increase the echo
   80612:	2831      	cmp	r0, #49	; 0x31
   80614:	d805      	bhi.n	80622 <TC0_Handler+0x8a>
			if (echo < 100) {	//Max value for the delay is 100
				echo++;
				LCDupdate(0b11001010, echo, "%");	//Update display with the new value for the echo
   80616:	20ca      	movs	r0, #202	; 0xca
   80618:	2133      	movs	r1, #51	; 0x33
   8061a:	4a1c      	ldr	r2, [pc, #112]	; (8068c <TC0_Handler+0xf4>)
   8061c:	4b1c      	ldr	r3, [pc, #112]	; (80690 <TC0_Handler+0xf8>)
   8061e:	4798      	blx	r3
   80620:	bd38      	pop	{r3, r4, r5, pc}
			}
			} else if (invalue < 1900) {	//Left button on the LCD Shield, set to decrease the echo
   80622:	f240 736b 	movw	r3, #1899	; 0x76b
   80626:	4298      	cmp	r0, r3
   80628:	d805      	bhi.n	80636 <TC0_Handler+0x9e>
			if (echo > 0) {
				echo--;
				LCDupdate(0b11001010, echo, "%");	//Update display with the new value for the echo
   8062a:	20ca      	movs	r0, #202	; 0xca
   8062c:	2131      	movs	r1, #49	; 0x31
   8062e:	4a17      	ldr	r2, [pc, #92]	; (8068c <TC0_Handler+0xf4>)
   80630:	4b17      	ldr	r3, [pc, #92]	; (80690 <TC0_Handler+0xf8>)
   80632:	4798      	blx	r3
   80634:	bd38      	pop	{r3, r4, r5, pc}
			}
			} else if (invalue < 700) {	//Up button on the LCD Shield, set to increase the delay
   80636:	f5b0 7f2f 	cmp.w	r0, #700	; 0x2bc
   8063a:	d206      	bcs.n	8064a <TC0_Handler+0xb2>
			if (delay < 5000) {
				delay += steps;
				if (delay > 5000) {
					delay = 5000;
				}
				LCDupdate(0b11000000, ((delay + 1) / 10), "ms");	//Update display with the new value for the delay
   8063c:	20c0      	movs	r0, #192	; 0xc0
   8063e:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
   80642:	4a14      	ldr	r2, [pc, #80]	; (80694 <TC0_Handler+0xfc>)
   80644:	4b12      	ldr	r3, [pc, #72]	; (80690 <TC0_Handler+0xf8>)
   80646:	4798      	blx	r3
   80648:	bd38      	pop	{r3, r4, r5, pc}
			}
			} else if (invalue < 1500) {	//Down button on the LCD Shield, set to increase the echo
   8064a:	f240 53db 	movw	r3, #1499	; 0x5db
   8064e:	4298      	cmp	r0, r3
   80650:	d805      	bhi.n	8065e <TC0_Handler+0xc6>
			if (delay > 0) {
				delay -= steps;
				if (delay < 0) {
					delay = 0;
				}
				LCDupdate(0b11000000, ((delay + 1) / 10), "ms");	//Update display with the new value for the delay
   80652:	20c0      	movs	r0, #192	; 0xc0
   80654:	f240 11f3 	movw	r1, #499	; 0x1f3
   80658:	4a0e      	ldr	r2, [pc, #56]	; (80694 <TC0_Handler+0xfc>)
   8065a:	4b0d      	ldr	r3, [pc, #52]	; (80690 <TC0_Handler+0xf8>)
   8065c:	4798      	blx	r3
   8065e:	bd38      	pop	{r3, r4, r5, pc}
   80660:	40080000 	.word	0x40080000
   80664:	00080cd5 	.word	0x00080cd5
   80668:	400c0000 	.word	0x400c0000
   8066c:	000807e1 	.word	0x000807e1
   80670:	00080805 	.word	0x00080805
   80674:	000807f5 	.word	0x000807f5
   80678:	200708e0 	.word	0x200708e0
   8067c:	200708e4 	.word	0x200708e4
   80680:	51eb851f 	.word	0x51eb851f
   80684:	400c8000 	.word	0x400c8000
   80688:	00080829 	.word	0x00080829
   8068c:	000857a4 	.word	0x000857a4
   80690:	00080559 	.word	0x00080559
   80694:	000857a0 	.word	0x000857a0

00080698 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   80698:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   8069a:	480e      	ldr	r0, [pc, #56]	; (806d4 <sysclk_init+0x3c>)
   8069c:	4b0e      	ldr	r3, [pc, #56]	; (806d8 <sysclk_init+0x40>)
   8069e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   806a0:	2000      	movs	r0, #0
   806a2:	213e      	movs	r1, #62	; 0x3e
   806a4:	4b0d      	ldr	r3, [pc, #52]	; (806dc <sysclk_init+0x44>)
   806a6:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   806a8:	4c0d      	ldr	r4, [pc, #52]	; (806e0 <sysclk_init+0x48>)
   806aa:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   806ac:	2800      	cmp	r0, #0
   806ae:	d0fc      	beq.n	806aa <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   806b0:	4b0c      	ldr	r3, [pc, #48]	; (806e4 <sysclk_init+0x4c>)
   806b2:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   806b4:	4a0c      	ldr	r2, [pc, #48]	; (806e8 <sysclk_init+0x50>)
   806b6:	4b0d      	ldr	r3, [pc, #52]	; (806ec <sysclk_init+0x54>)
   806b8:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   806ba:	4c0d      	ldr	r4, [pc, #52]	; (806f0 <sysclk_init+0x58>)
   806bc:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   806be:	2800      	cmp	r0, #0
   806c0:	d0fc      	beq.n	806bc <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   806c2:	2010      	movs	r0, #16
   806c4:	4b0b      	ldr	r3, [pc, #44]	; (806f4 <sysclk_init+0x5c>)
   806c6:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   806c8:	4b0b      	ldr	r3, [pc, #44]	; (806f8 <sysclk_init+0x60>)
   806ca:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   806cc:	4801      	ldr	r0, [pc, #4]	; (806d4 <sysclk_init+0x3c>)
   806ce:	4b02      	ldr	r3, [pc, #8]	; (806d8 <sysclk_init+0x40>)
   806d0:	4798      	blx	r3
   806d2:	bd10      	pop	{r4, pc}
   806d4:	0501bd00 	.word	0x0501bd00
   806d8:	00080ead 	.word	0x00080ead
   806dc:	00080bad 	.word	0x00080bad
   806e0:	00080c01 	.word	0x00080c01
   806e4:	00080c11 	.word	0x00080c11
   806e8:	200d3f01 	.word	0x200d3f01
   806ec:	400e0600 	.word	0x400e0600
   806f0:	00080c21 	.word	0x00080c21
   806f4:	00080b49 	.word	0x00080b49
   806f8:	00080d91 	.word	0x00080d91

000806fc <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   806fc:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   806fe:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80702:	4b13      	ldr	r3, [pc, #76]	; (80750 <board_init+0x54>)
   80704:	605a      	str	r2, [r3, #4]
   80706:	200b      	movs	r0, #11
   80708:	4c12      	ldr	r4, [pc, #72]	; (80754 <board_init+0x58>)
   8070a:	47a0      	blx	r4
   8070c:	200c      	movs	r0, #12
   8070e:	47a0      	blx	r4
   80710:	200d      	movs	r0, #13
   80712:	47a0      	blx	r4
   80714:	200e      	movs	r0, #14
   80716:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   80718:	203b      	movs	r0, #59	; 0x3b
   8071a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8071e:	4c0e      	ldr	r4, [pc, #56]	; (80758 <board_init+0x5c>)
   80720:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   80722:	2055      	movs	r0, #85	; 0x55
   80724:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80728:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   8072a:	2056      	movs	r0, #86	; 0x56
   8072c:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80730:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   80732:	2068      	movs	r0, #104	; 0x68
   80734:	4909      	ldr	r1, [pc, #36]	; (8075c <board_init+0x60>)
   80736:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   80738:	205c      	movs	r0, #92	; 0x5c
   8073a:	4909      	ldr	r1, [pc, #36]	; (80760 <board_init+0x64>)
   8073c:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   8073e:	4809      	ldr	r0, [pc, #36]	; (80764 <board_init+0x68>)
   80740:	f44f 7140 	mov.w	r1, #768	; 0x300
   80744:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   80748:	4b07      	ldr	r3, [pc, #28]	; (80768 <board_init+0x6c>)
   8074a:	4798      	blx	r3
   8074c:	bd10      	pop	{r4, pc}
   8074e:	bf00      	nop
   80750:	400e1a50 	.word	0x400e1a50
   80754:	00080c31 	.word	0x00080c31
   80758:	0008092d 	.word	0x0008092d
   8075c:	28000079 	.word	0x28000079
   80760:	28000001 	.word	0x28000001
   80764:	400e0e00 	.word	0x400e0e00
   80768:	00080a01 	.word	0x00080a01

0008076c <adc_init>:
 *
 * \return 0 on success.
 */
uint32_t adc_init(Adc *p_adc, const uint32_t ul_mck,
		const uint32_t ul_adc_clock, const enum adc_startup_time startup)
{
   8076c:	b430      	push	{r4, r5}
	uint32_t ul_prescal;

	/*  Reset the controller. */
	p_adc->ADC_CR = ADC_CR_SWRST;
   8076e:	2401      	movs	r4, #1
   80770:	6004      	str	r4, [r0, #0]

	/* Reset Mode Register. */
	p_adc->ADC_MR = 0;
   80772:	2400      	movs	r4, #0
   80774:	6044      	str	r4, [r0, #4]

	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
   80776:	f240 2502 	movw	r5, #514	; 0x202
   8077a:	f8c0 5120 	str.w	r5, [r0, #288]	; 0x120
	p_adc->ADC_RCR = 0;
   8077e:	f8c0 4104 	str.w	r4, [r0, #260]	; 0x104
	p_adc->ADC_RNCR = 0;
   80782:	f8c0 4114 	str.w	r4, [r0, #276]	; 0x114

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   80786:	6845      	ldr	r5, [r0, #4]
   80788:	432b      	orrs	r3, r5
	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
	p_adc->ADC_RCR = 0;
	p_adc->ADC_RNCR = 0;

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
   8078a:	0052      	lsls	r2, r2, #1
   8078c:	fbb1 f1f2 	udiv	r1, r1, r2
   80790:	1e4d      	subs	r5, r1, #1
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   80792:	022d      	lsls	r5, r5, #8
   80794:	b2ad      	uxth	r5, r5
   80796:	432b      	orrs	r3, r5
   80798:	6043      	str	r3, [r0, #4]
	return 0;
}
   8079a:	4620      	mov	r0, r4
   8079c:	bc30      	pop	{r4, r5}
   8079e:	4770      	bx	lr

000807a0 <adc_set_resolution>:
		p_adc->ADC_MR &= ~ADC_MR_LOWRES;
		p_adc->ADC_EMR |= resolution;
		break;
	}
#else
	p_adc->ADC_MR &= ~ADC_MR_LOWRES;
   807a0:	6843      	ldr	r3, [r0, #4]
   807a2:	f023 0310 	bic.w	r3, r3, #16
   807a6:	6043      	str	r3, [r0, #4]
	p_adc->ADC_MR |= resolution;
   807a8:	6843      	ldr	r3, [r0, #4]
   807aa:	4319      	orrs	r1, r3
   807ac:	6041      	str	r1, [r0, #4]
   807ae:	4770      	bx	lr

000807b0 <adc_configure_trigger>:
 *
 */
void adc_configure_trigger(Adc *p_adc, const enum adc_trigger_t trigger,
		uint8_t uc_freerun)
{
	p_adc->ADC_MR |= trigger | ((uc_freerun << 7) & ADC_MR_FREERUN);
   807b0:	6843      	ldr	r3, [r0, #4]
   807b2:	4319      	orrs	r1, r3
   807b4:	01d2      	lsls	r2, r2, #7
   807b6:	b2d3      	uxtb	r3, r2
   807b8:	4319      	orrs	r1, r3
   807ba:	6041      	str	r1, [r0, #4]
   807bc:	4770      	bx	lr
   807be:	bf00      	nop

000807c0 <adc_configure_timing>:
 * \param uc_settling Analog settling time = (uc_settling + 1) / ADC clock.
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
   807c0:	b410      	push	{r4}
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   807c2:	6844      	ldr	r4, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
   807c4:	4322      	orrs	r2, r4
   807c6:	0609      	lsls	r1, r1, #24
   807c8:	f001 6470 	and.w	r4, r1, #251658240	; 0xf000000
   807cc:	4322      	orrs	r2, r4
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   807ce:	071b      	lsls	r3, r3, #28
   807d0:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
   807d4:	431a      	orrs	r2, r3
   807d6:	6042      	str	r2, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
}
   807d8:	f85d 4b04 	ldr.w	r4, [sp], #4
   807dc:	4770      	bx	lr
   807de:	bf00      	nop

000807e0 <adc_start>:
 * \param p_adc Pointer to an ADC instance.
 */

void adc_start(Adc *p_adc)
{
	p_adc->ADC_CR = ADC_CR_START;
   807e0:	2302      	movs	r3, #2
   807e2:	6003      	str	r3, [r0, #0]
   807e4:	4770      	bx	lr
   807e6:	bf00      	nop

000807e8 <adc_enable_channel>:
 * \param p_adc Pointer to an ADC instance.
 * \param adc_ch ADC channel number.
 */
void adc_enable_channel(Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	p_adc->ADC_CHER = 1 << adc_ch;
   807e8:	2301      	movs	r3, #1
   807ea:	fa03 f101 	lsl.w	r1, r3, r1
   807ee:	6101      	str	r1, [r0, #16]
   807f0:	4770      	bx	lr
   807f2:	bf00      	nop

000807f4 <adc_get_channel_value>:
 */
uint32_t adc_get_channel_value(const Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	uint32_t ul_data = 0;

	if (15 >= adc_ch) {
   807f4:	290f      	cmp	r1, #15
   807f6:	d803      	bhi.n	80800 <adc_get_channel_value+0xc>
		ul_data = *(p_adc->ADC_CDR + adc_ch);
   807f8:	3114      	adds	r1, #20
   807fa:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
   807fe:	4770      	bx	lr
 *
 * \return ADC value of the specified channel.
 */
uint32_t adc_get_channel_value(const Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	uint32_t ul_data = 0;
   80800:	2000      	movs	r0, #0
	if (15 >= adc_ch) {
		ul_data = *(p_adc->ADC_CDR + adc_ch);
	}

	return ul_data;
}
   80802:	4770      	bx	lr

00080804 <adc_get_status>:
 *
 * \return ADC status structure.
 */
uint32_t adc_get_status(const Adc *p_adc)
{
	return p_adc->ADC_ISR;
   80804:	6b00      	ldr	r0, [r0, #48]	; 0x30
}
   80806:	4770      	bx	lr

00080808 <dacc_reset>:
 *
 * \param p_dacc Pointer to a DACC instance. 
 */
void dacc_reset(Dacc *p_dacc)
{
	p_dacc->DACC_CR = DACC_CR_SWRST;
   80808:	2301      	movs	r3, #1
   8080a:	6003      	str	r3, [r0, #0]
   8080c:	4770      	bx	lr
   8080e:	bf00      	nop

00080810 <dacc_set_transfer_mode>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_transfer_mode(Dacc *p_dacc, uint32_t ul_mode)
{
	if (ul_mode) {
   80810:	b121      	cbz	r1, 8081c <dacc_set_transfer_mode+0xc>
#if (SAM3N) || (SAM4L) || (SAM4N)
		p_dacc->DACC_MR |= DACC_MR_WORD;
#else
		p_dacc->DACC_MR |= DACC_MR_WORD_WORD;
   80812:	6843      	ldr	r3, [r0, #4]
   80814:	f043 0310 	orr.w	r3, r3, #16
   80818:	6043      	str	r3, [r0, #4]
   8081a:	e003      	b.n	80824 <dacc_set_transfer_mode+0x14>
#endif
	} else {
#if (SAM3N) || (SAM4L) || (SAM4N)
		p_dacc->DACC_MR &= (~DACC_MR_WORD);
#else
		p_dacc->DACC_MR &= (~DACC_MR_WORD_WORD);
   8081c:	6843      	ldr	r3, [r0, #4]
   8081e:	f023 0310 	bic.w	r3, r3, #16
   80822:	6043      	str	r3, [r0, #4]
#endif
	}
	return DACC_RC_OK;
}
   80824:	2000      	movs	r0, #0
   80826:	4770      	bx	lr

00080828 <dacc_write_conversion_data>:
 * \param p_dacc Pointer to a DACC instance. 
 * \param ul_data The data to be transferred to analog value. 
 */
void dacc_write_conversion_data(Dacc *p_dacc, uint32_t ul_data)
{
	p_dacc->DACC_CDR = ul_data;
   80828:	6201      	str	r1, [r0, #32]
   8082a:	4770      	bx	lr

0008082c <dacc_set_channel_selection>:
 *
 * \return \ref DACC_RC_OK if successful.
 */
uint32_t dacc_set_channel_selection(Dacc *p_dacc, uint32_t ul_channel)
{
	uint32_t mr = p_dacc->DACC_MR & (~DACC_MR_USER_SEL_Msk);
   8082c:	6843      	ldr	r3, [r0, #4]
	if (ul_channel > MAX_CH_NB) {
   8082e:	2901      	cmp	r1, #1
   80830:	d806      	bhi.n	80840 <dacc_set_channel_selection+0x14>
		return DACC_RC_INVALID_PARAM;
	}
	mr &= ~(DACC_MR_TAG);
   80832:	f423 1398 	bic.w	r3, r3, #1245184	; 0x130000
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
   80836:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
	p_dacc->DACC_MR = mr;
   8083a:	6041      	str	r1, [r0, #4]
	return DACC_RC_OK;
   8083c:	2000      	movs	r0, #0
   8083e:	4770      	bx	lr
 */
uint32_t dacc_set_channel_selection(Dacc *p_dacc, uint32_t ul_channel)
{
	uint32_t mr = p_dacc->DACC_MR & (~DACC_MR_USER_SEL_Msk);
	if (ul_channel > MAX_CH_NB) {
		return DACC_RC_INVALID_PARAM;
   80840:	2001      	movs	r0, #1
	}
	mr &= ~(DACC_MR_TAG);
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
	p_dacc->DACC_MR = mr;
	return DACC_RC_OK;
}
   80842:	4770      	bx	lr

00080844 <dacc_set_timing>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_timing(Dacc *p_dacc,
		uint32_t ul_refresh, uint32_t ul_maxs, uint32_t ul_startup)
{
   80844:	b410      	push	{r4}
	uint32_t mr = p_dacc->DACC_MR
   80846:	6844      	ldr	r4, [r0, #4]
   80848:	f024 547c 	bic.w	r4, r4, #1056964608	; 0x3f000000
   8084c:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
		& (~(DACC_MR_REFRESH_Msk | DACC_MR_STARTUP_Msk));
	mr |= DACC_MR_REFRESH(ul_refresh);
   80850:	0209      	lsls	r1, r1, #8
   80852:	b289      	uxth	r1, r1
   80854:	430c      	orrs	r4, r1
	if (ul_maxs) {
   80856:	b112      	cbz	r2, 8085e <dacc_set_timing+0x1a>
		mr |= DACC_MR_MAXS;
   80858:	f444 1400 	orr.w	r4, r4, #2097152	; 0x200000
   8085c:	e001      	b.n	80862 <dacc_set_timing+0x1e>
	} else {
		mr &= ~DACC_MR_MAXS;
   8085e:	f424 1400 	bic.w	r4, r4, #2097152	; 0x200000
	}
	mr |= (DACC_MR_STARTUP_Msk & ((ul_startup) << DACC_MR_STARTUP_Pos));
   80862:	061b      	lsls	r3, r3, #24
   80864:	f003 537c 	and.w	r3, r3, #1056964608	; 0x3f000000
   80868:	431c      	orrs	r4, r3
	p_dacc->DACC_MR = mr;
   8086a:	6044      	str	r4, [r0, #4]
	return DACC_RC_OK;
}
   8086c:	2000      	movs	r0, #0
   8086e:	f85d 4b04 	ldr.w	r4, [sp], #4
   80872:	4770      	bx	lr

00080874 <dacc_enable_channel>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_enable_channel(Dacc *p_dacc, uint32_t ul_channel)
{
	if (ul_channel > MAX_CH_NB)
   80874:	2901      	cmp	r1, #1
   80876:	d805      	bhi.n	80884 <dacc_enable_channel+0x10>
		return DACC_RC_INVALID_PARAM;

	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
   80878:	2301      	movs	r3, #1
   8087a:	fa03 f101 	lsl.w	r1, r3, r1
   8087e:	6101      	str	r1, [r0, #16]
	return DACC_RC_OK;
   80880:	2000      	movs	r0, #0
   80882:	4770      	bx	lr
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_enable_channel(Dacc *p_dacc, uint32_t ul_channel)
{
	if (ul_channel > MAX_CH_NB)
		return DACC_RC_INVALID_PARAM;
   80884:	2001      	movs	r0, #1

	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
	return DACC_RC_OK;
}
   80886:	4770      	bx	lr

00080888 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   80888:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   8088a:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   8088e:	d016      	beq.n	808be <pio_set_peripheral+0x36>
   80890:	d804      	bhi.n	8089c <pio_set_peripheral+0x14>
   80892:	b1c1      	cbz	r1, 808c6 <pio_set_peripheral+0x3e>
   80894:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   80898:	d00a      	beq.n	808b0 <pio_set_peripheral+0x28>
   8089a:	e013      	b.n	808c4 <pio_set_peripheral+0x3c>
   8089c:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   808a0:	d011      	beq.n	808c6 <pio_set_peripheral+0x3e>
   808a2:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   808a6:	d00e      	beq.n	808c6 <pio_set_peripheral+0x3e>
   808a8:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   808ac:	d10a      	bne.n	808c4 <pio_set_peripheral+0x3c>
   808ae:	4770      	bx	lr
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   808b0:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   808b2:	6f01      	ldr	r1, [r0, #112]	; 0x70
   808b4:	400b      	ands	r3, r1
   808b6:	ea23 0302 	bic.w	r3, r3, r2
   808ba:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   808bc:	e002      	b.n	808c4 <pio_set_peripheral+0x3c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   808be:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   808c0:	4313      	orrs	r3, r2
   808c2:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   808c4:	6042      	str	r2, [r0, #4]
   808c6:	4770      	bx	lr

000808c8 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   808c8:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   808ca:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   808ce:	bf14      	ite	ne
   808d0:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   808d2:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   808d4:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   808d8:	bf14      	ite	ne
   808da:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
   808dc:	6241      	streq	r1, [r0, #36]	; 0x24
			p_pio->PIO_IFSCER = ul_mask;
		}
	}
#elif (SAM3XA|| SAM3U)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
   808de:	f012 0f02 	tst.w	r2, #2
   808e2:	d002      	beq.n	808ea <pio_set_input+0x22>
		p_pio->PIO_SCIFSR = ul_mask;
   808e4:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   808e8:	e004      	b.n	808f4 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
   808ea:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   808ee:	bf18      	it	ne
   808f0:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
   808f4:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   808f6:	6001      	str	r1, [r0, #0]
   808f8:	4770      	bx	lr
   808fa:	bf00      	nop

000808fc <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
   808fc:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   808fe:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80900:	9c01      	ldr	r4, [sp, #4]
   80902:	b10c      	cbz	r4, 80908 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
   80904:	6641      	str	r1, [r0, #100]	; 0x64
   80906:	e000      	b.n	8090a <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80908:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
   8090a:	b10b      	cbz	r3, 80910 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
   8090c:	6501      	str	r1, [r0, #80]	; 0x50
   8090e:	e000      	b.n	80912 <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
   80910:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
   80912:	b10a      	cbz	r2, 80918 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
   80914:	6301      	str	r1, [r0, #48]	; 0x30
   80916:	e000      	b.n	8091a <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
   80918:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
   8091a:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   8091c:	6001      	str	r1, [r0, #0]
}
   8091e:	f85d 4b04 	ldr.w	r4, [sp], #4
   80922:	4770      	bx	lr

00080924 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80924:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   80926:	4770      	bx	lr

00080928 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   80928:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   8092a:	4770      	bx	lr

0008092c <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   8092c:	b570      	push	{r4, r5, r6, lr}
   8092e:	b082      	sub	sp, #8
   80930:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80932:	0944      	lsrs	r4, r0, #5
   80934:	f504 1400 	add.w	r4, r4, #2097152	; 0x200000
   80938:	f204 7407 	addw	r4, r4, #1799	; 0x707
   8093c:	0266      	lsls	r6, r4, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   8093e:	f001 44f0 	and.w	r4, r1, #2013265920	; 0x78000000
   80942:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80946:	d030      	beq.n	809aa <pio_configure_pin+0x7e>
   80948:	d806      	bhi.n	80958 <pio_configure_pin+0x2c>
   8094a:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   8094e:	d00a      	beq.n	80966 <pio_configure_pin+0x3a>
   80950:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80954:	d018      	beq.n	80988 <pio_configure_pin+0x5c>
   80956:	e049      	b.n	809ec <pio_configure_pin+0xc0>
   80958:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   8095c:	d030      	beq.n	809c0 <pio_configure_pin+0x94>
   8095e:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80962:	d02d      	beq.n	809c0 <pio_configure_pin+0x94>
   80964:	e042      	b.n	809ec <pio_configure_pin+0xc0>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   80966:	f000 001f 	and.w	r0, r0, #31
   8096a:	2401      	movs	r4, #1
   8096c:	4084      	lsls	r4, r0
   8096e:	4630      	mov	r0, r6
   80970:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80974:	4622      	mov	r2, r4
   80976:	4b1f      	ldr	r3, [pc, #124]	; (809f4 <pio_configure_pin+0xc8>)
   80978:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   8097a:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   8097e:	bf14      	ite	ne
   80980:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80982:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80984:	2001      	movs	r0, #1
   80986:	e032      	b.n	809ee <pio_configure_pin+0xc2>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   80988:	f000 001f 	and.w	r0, r0, #31
   8098c:	2401      	movs	r4, #1
   8098e:	4084      	lsls	r4, r0
   80990:	4630      	mov	r0, r6
   80992:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80996:	4622      	mov	r2, r4
   80998:	4b16      	ldr	r3, [pc, #88]	; (809f4 <pio_configure_pin+0xc8>)
   8099a:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   8099c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   809a0:	bf14      	ite	ne
   809a2:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   809a4:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   809a6:	2001      	movs	r0, #1
   809a8:	e021      	b.n	809ee <pio_configure_pin+0xc2>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   809aa:	f000 011f 	and.w	r1, r0, #31
   809ae:	2401      	movs	r4, #1
   809b0:	4630      	mov	r0, r6
   809b2:	fa04 f101 	lsl.w	r1, r4, r1
   809b6:	462a      	mov	r2, r5
   809b8:	4b0f      	ldr	r3, [pc, #60]	; (809f8 <pio_configure_pin+0xcc>)
   809ba:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   809bc:	4620      	mov	r0, r4
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
   809be:	e016      	b.n	809ee <pio_configure_pin+0xc2>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   809c0:	f000 011f 	and.w	r1, r0, #31
   809c4:	2401      	movs	r4, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   809c6:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   809ca:	ea05 0304 	and.w	r3, r5, r4
   809ce:	9300      	str	r3, [sp, #0]
   809d0:	4630      	mov	r0, r6
   809d2:	fa04 f101 	lsl.w	r1, r4, r1
   809d6:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   809da:	bf14      	ite	ne
   809dc:	2200      	movne	r2, #0
   809de:	2201      	moveq	r2, #1
   809e0:	f3c5 0380 	ubfx	r3, r5, #2, #1
   809e4:	4d05      	ldr	r5, [pc, #20]	; (809fc <pio_configure_pin+0xd0>)
   809e6:	47a8      	blx	r5

	default:
		return 0;
	}

	return 1;
   809e8:	4620      	mov	r0, r4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   809ea:	e000      	b.n	809ee <pio_configure_pin+0xc2>

	default:
		return 0;
   809ec:	2000      	movs	r0, #0
	}

	return 1;
}
   809ee:	b002      	add	sp, #8
   809f0:	bd70      	pop	{r4, r5, r6, pc}
   809f2:	bf00      	nop
   809f4:	00080889 	.word	0x00080889
   809f8:	000808c9 	.word	0x000808c9
   809fc:	000808fd 	.word	0x000808fd

00080a00 <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
   80a00:	b5f0      	push	{r4, r5, r6, r7, lr}
   80a02:	b083      	sub	sp, #12
   80a04:	4607      	mov	r7, r0
   80a06:	460e      	mov	r6, r1
   80a08:	4615      	mov	r5, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80a0a:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
   80a0e:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80a12:	d026      	beq.n	80a62 <pio_configure_pin_group+0x62>
   80a14:	d806      	bhi.n	80a24 <pio_configure_pin_group+0x24>
   80a16:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80a1a:	d00a      	beq.n	80a32 <pio_configure_pin_group+0x32>
   80a1c:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80a20:	d013      	beq.n	80a4a <pio_configure_pin_group+0x4a>
   80a22:	e034      	b.n	80a8e <pio_configure_pin_group+0x8e>
   80a24:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80a28:	d01f      	beq.n	80a6a <pio_configure_pin_group+0x6a>
   80a2a:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80a2e:	d01c      	beq.n	80a6a <pio_configure_pin_group+0x6a>
   80a30:	e02d      	b.n	80a8e <pio_configure_pin_group+0x8e>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   80a32:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80a36:	4632      	mov	r2, r6
   80a38:	4b16      	ldr	r3, [pc, #88]	; (80a94 <pio_configure_pin_group+0x94>)
   80a3a:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a3c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80a40:	bf14      	ite	ne
   80a42:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80a44:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80a46:	2001      	movs	r0, #1
   80a48:	e022      	b.n	80a90 <pio_configure_pin_group+0x90>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80a4a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80a4e:	4632      	mov	r2, r6
   80a50:	4b10      	ldr	r3, [pc, #64]	; (80a94 <pio_configure_pin_group+0x94>)
   80a52:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a54:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80a58:	bf14      	ite	ne
   80a5a:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80a5c:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80a5e:	2001      	movs	r0, #1
   80a60:	e016      	b.n	80a90 <pio_configure_pin_group+0x90>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
   80a62:	4b0d      	ldr	r3, [pc, #52]	; (80a98 <pio_configure_pin_group+0x98>)
   80a64:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80a66:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
   80a68:	e012      	b.n	80a90 <pio_configure_pin_group+0x90>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80a6a:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
   80a6e:	f005 0301 	and.w	r3, r5, #1
   80a72:	9300      	str	r3, [sp, #0]
   80a74:	4638      	mov	r0, r7
   80a76:	4631      	mov	r1, r6
   80a78:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80a7c:	bf14      	ite	ne
   80a7e:	2200      	movne	r2, #0
   80a80:	2201      	moveq	r2, #1
   80a82:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80a86:	4c05      	ldr	r4, [pc, #20]	; (80a9c <pio_configure_pin_group+0x9c>)
   80a88:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   80a8a:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80a8c:	e000      	b.n	80a90 <pio_configure_pin_group+0x90>

	default:
		return 0;
   80a8e:	2000      	movs	r0, #0
	}

	return 1;
}
   80a90:	b003      	add	sp, #12
   80a92:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80a94:	00080889 	.word	0x00080889
   80a98:	000808c9 	.word	0x000808c9
   80a9c:	000808fd 	.word	0x000808fd

00080aa0 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80aa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80aa4:	4604      	mov	r4, r0
   80aa6:	460e      	mov	r6, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80aa8:	4b10      	ldr	r3, [pc, #64]	; (80aec <pio_handler_process+0x4c>)
   80aaa:	4798      	blx	r3
   80aac:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80aae:	4620      	mov	r0, r4
   80ab0:	4b0f      	ldr	r3, [pc, #60]	; (80af0 <pio_handler_process+0x50>)
   80ab2:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80ab4:	4005      	ands	r5, r0
   80ab6:	d017      	beq.n	80ae8 <pio_handler_process+0x48>
   80ab8:	4f0e      	ldr	r7, [pc, #56]	; (80af4 <pio_handler_process+0x54>)
   80aba:	f107 040c 	add.w	r4, r7, #12
   80abe:	376c      	adds	r7, #108	; 0x6c
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   80ac0:	f854 3c0c 	ldr.w	r3, [r4, #-12]
   80ac4:	42b3      	cmp	r3, r6
   80ac6:	d10a      	bne.n	80ade <pio_handler_process+0x3e>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80ac8:	f854 1c08 	ldr.w	r1, [r4, #-8]
   80acc:	4229      	tst	r1, r5
   80ace:	d006      	beq.n	80ade <pio_handler_process+0x3e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80ad0:	6823      	ldr	r3, [r4, #0]
   80ad2:	4630      	mov	r0, r6
   80ad4:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
   80ad6:	f854 3c08 	ldr.w	r3, [r4, #-8]
   80ada:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80ade:	42bc      	cmp	r4, r7
   80ae0:	d002      	beq.n	80ae8 <pio_handler_process+0x48>
   80ae2:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
   80ae4:	2d00      	cmp	r5, #0
   80ae6:	d1eb      	bne.n	80ac0 <pio_handler_process+0x20>
   80ae8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80aec:	00080925 	.word	0x00080925
   80af0:	00080929 	.word	0x00080929
   80af4:	20072ff4 	.word	0x20072ff4

00080af8 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80af8:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80afa:	4802      	ldr	r0, [pc, #8]	; (80b04 <PIOA_Handler+0xc>)
   80afc:	210b      	movs	r1, #11
   80afe:	4b02      	ldr	r3, [pc, #8]	; (80b08 <PIOA_Handler+0x10>)
   80b00:	4798      	blx	r3
   80b02:	bd08      	pop	{r3, pc}
   80b04:	400e0e00 	.word	0x400e0e00
   80b08:	00080aa1 	.word	0x00080aa1

00080b0c <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80b0c:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80b0e:	4802      	ldr	r0, [pc, #8]	; (80b18 <PIOB_Handler+0xc>)
   80b10:	210c      	movs	r1, #12
   80b12:	4b02      	ldr	r3, [pc, #8]	; (80b1c <PIOB_Handler+0x10>)
   80b14:	4798      	blx	r3
   80b16:	bd08      	pop	{r3, pc}
   80b18:	400e1000 	.word	0x400e1000
   80b1c:	00080aa1 	.word	0x00080aa1

00080b20 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80b20:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80b22:	4802      	ldr	r0, [pc, #8]	; (80b2c <PIOC_Handler+0xc>)
   80b24:	210d      	movs	r1, #13
   80b26:	4b02      	ldr	r3, [pc, #8]	; (80b30 <PIOC_Handler+0x10>)
   80b28:	4798      	blx	r3
   80b2a:	bd08      	pop	{r3, pc}
   80b2c:	400e1200 	.word	0x400e1200
   80b30:	00080aa1 	.word	0x00080aa1

00080b34 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   80b34:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   80b36:	4802      	ldr	r0, [pc, #8]	; (80b40 <PIOD_Handler+0xc>)
   80b38:	210e      	movs	r1, #14
   80b3a:	4b02      	ldr	r3, [pc, #8]	; (80b44 <PIOD_Handler+0x10>)
   80b3c:	4798      	blx	r3
   80b3e:	bd08      	pop	{r3, pc}
   80b40:	400e1400 	.word	0x400e1400
   80b44:	00080aa1 	.word	0x00080aa1

00080b48 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   80b48:	4b17      	ldr	r3, [pc, #92]	; (80ba8 <pmc_switch_mck_to_pllack+0x60>)
   80b4a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80b4c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   80b50:	4310      	orrs	r0, r2
   80b52:	6318      	str	r0, [r3, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80b54:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80b56:	f013 0f08 	tst.w	r3, #8
   80b5a:	d109      	bne.n	80b70 <pmc_switch_mck_to_pllack+0x28>
   80b5c:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80b60:	4911      	ldr	r1, [pc, #68]	; (80ba8 <pmc_switch_mck_to_pllack+0x60>)
   80b62:	e001      	b.n	80b68 <pmc_switch_mck_to_pllack+0x20>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80b64:	3b01      	subs	r3, #1
   80b66:	d019      	beq.n	80b9c <pmc_switch_mck_to_pllack+0x54>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80b68:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80b6a:	f012 0f08 	tst.w	r2, #8
   80b6e:	d0f9      	beq.n	80b64 <pmc_switch_mck_to_pllack+0x1c>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   80b70:	4b0d      	ldr	r3, [pc, #52]	; (80ba8 <pmc_switch_mck_to_pllack+0x60>)
   80b72:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80b74:	f022 0203 	bic.w	r2, r2, #3
   80b78:	f042 0202 	orr.w	r2, r2, #2
   80b7c:	631a      	str	r2, [r3, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80b7e:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80b80:	f010 0008 	ands.w	r0, r0, #8
   80b84:	d10c      	bne.n	80ba0 <pmc_switch_mck_to_pllack+0x58>
   80b86:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80b8a:	4907      	ldr	r1, [pc, #28]	; (80ba8 <pmc_switch_mck_to_pllack+0x60>)
   80b8c:	e001      	b.n	80b92 <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80b8e:	3b01      	subs	r3, #1
   80b90:	d008      	beq.n	80ba4 <pmc_switch_mck_to_pllack+0x5c>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80b92:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80b94:	f012 0f08 	tst.w	r2, #8
   80b98:	d0f9      	beq.n	80b8e <pmc_switch_mck_to_pllack+0x46>
   80b9a:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80b9c:	2001      	movs	r0, #1
   80b9e:	4770      	bx	lr
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
   80ba0:	2000      	movs	r0, #0
   80ba2:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80ba4:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   80ba6:	4770      	bx	lr
   80ba8:	400e0600 	.word	0x400e0600

00080bac <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   80bac:	b138      	cbz	r0, 80bbe <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80bae:	4911      	ldr	r1, [pc, #68]	; (80bf4 <pmc_switch_mainck_to_xtal+0x48>)
   80bb0:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   80bb2:	4a11      	ldr	r2, [pc, #68]	; (80bf8 <pmc_switch_mainck_to_xtal+0x4c>)
   80bb4:	401a      	ands	r2, r3
   80bb6:	4b11      	ldr	r3, [pc, #68]	; (80bfc <pmc_switch_mainck_to_xtal+0x50>)
   80bb8:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80bba:	620b      	str	r3, [r1, #32]
   80bbc:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80bbe:	4a0d      	ldr	r2, [pc, #52]	; (80bf4 <pmc_switch_mainck_to_xtal+0x48>)
   80bc0:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80bc2:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   80bc6:	f023 0303 	bic.w	r3, r3, #3
   80bca:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80bce:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   80bd2:	0209      	lsls	r1, r1, #8
   80bd4:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80bd6:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80bd8:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   80bda:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80bdc:	f013 0f01 	tst.w	r3, #1
   80be0:	d0fb      	beq.n	80bda <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   80be2:	4a04      	ldr	r2, [pc, #16]	; (80bf4 <pmc_switch_mainck_to_xtal+0x48>)
   80be4:	6a13      	ldr	r3, [r2, #32]
   80be6:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   80bea:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   80bee:	6213      	str	r3, [r2, #32]
   80bf0:	4770      	bx	lr
   80bf2:	bf00      	nop
   80bf4:	400e0600 	.word	0x400e0600
   80bf8:	fec8fffc 	.word	0xfec8fffc
   80bfc:	01370002 	.word	0x01370002

00080c00 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   80c00:	4b02      	ldr	r3, [pc, #8]	; (80c0c <pmc_osc_is_ready_mainck+0xc>)
   80c02:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80c04:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80c08:	4770      	bx	lr
   80c0a:	bf00      	nop
   80c0c:	400e0600 	.word	0x400e0600

00080c10 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   80c10:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80c14:	4b01      	ldr	r3, [pc, #4]	; (80c1c <pmc_disable_pllack+0xc>)
   80c16:	629a      	str	r2, [r3, #40]	; 0x28
   80c18:	4770      	bx	lr
   80c1a:	bf00      	nop
   80c1c:	400e0600 	.word	0x400e0600

00080c20 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   80c20:	4b02      	ldr	r3, [pc, #8]	; (80c2c <pmc_is_locked_pllack+0xc>)
   80c22:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80c24:	f000 0002 	and.w	r0, r0, #2
   80c28:	4770      	bx	lr
   80c2a:	bf00      	nop
   80c2c:	400e0600 	.word	0x400e0600

00080c30 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   80c30:	282c      	cmp	r0, #44	; 0x2c
   80c32:	d820      	bhi.n	80c76 <pmc_enable_periph_clk+0x46>
		return 1;
	}

	if (ul_id < 32) {
   80c34:	281f      	cmp	r0, #31
   80c36:	d80d      	bhi.n	80c54 <pmc_enable_periph_clk+0x24>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   80c38:	4b12      	ldr	r3, [pc, #72]	; (80c84 <pmc_enable_periph_clk+0x54>)
   80c3a:	699a      	ldr	r2, [r3, #24]
   80c3c:	2301      	movs	r3, #1
   80c3e:	4083      	lsls	r3, r0
   80c40:	401a      	ands	r2, r3
   80c42:	4293      	cmp	r3, r2
   80c44:	d019      	beq.n	80c7a <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER0 = 1 << ul_id;
   80c46:	2301      	movs	r3, #1
   80c48:	fa03 f000 	lsl.w	r0, r3, r0
   80c4c:	4b0d      	ldr	r3, [pc, #52]	; (80c84 <pmc_enable_periph_clk+0x54>)
   80c4e:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80c50:	2000      	movs	r0, #0
   80c52:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80c54:	4b0b      	ldr	r3, [pc, #44]	; (80c84 <pmc_enable_periph_clk+0x54>)
   80c56:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP)
	} else {
		ul_id -= 32;
   80c5a:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80c5c:	2301      	movs	r3, #1
   80c5e:	4083      	lsls	r3, r0
   80c60:	401a      	ands	r2, r3
   80c62:	4293      	cmp	r3, r2
   80c64:	d00b      	beq.n	80c7e <pmc_enable_periph_clk+0x4e>
			PMC->PMC_PCER1 = 1 << ul_id;
   80c66:	2301      	movs	r3, #1
   80c68:	fa03 f000 	lsl.w	r0, r3, r0
   80c6c:	4b05      	ldr	r3, [pc, #20]	; (80c84 <pmc_enable_periph_clk+0x54>)
   80c6e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
   80c72:	2000      	movs	r0, #0
   80c74:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
   80c76:	2001      	movs	r0, #1
   80c78:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80c7a:	2000      	movs	r0, #0
   80c7c:	4770      	bx	lr
   80c7e:	2000      	movs	r0, #0
}
   80c80:	4770      	bx	lr
   80c82:	bf00      	nop
   80c84:	400e0600 	.word	0x400e0600

00080c88 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   80c88:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80c8a:	0189      	lsls	r1, r1, #6
   80c8c:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   80c8e:	2402      	movs	r4, #2
   80c90:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   80c92:	f04f 31ff 	mov.w	r1, #4294967295
   80c96:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   80c98:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   80c9a:	605a      	str	r2, [r3, #4]
}
   80c9c:	f85d 4b04 	ldr.w	r4, [sp], #4
   80ca0:	4770      	bx	lr
   80ca2:	bf00      	nop

00080ca4 <tc_set_block_mode>:
		uint32_t ul_blockmode)
{
	/* Validate inputs. */
	Assert(p_tc);
	
	p_tc->TC_BMR = ul_blockmode;
   80ca4:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
   80ca8:	4770      	bx	lr
   80caa:	bf00      	nop

00080cac <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   80cac:	0189      	lsls	r1, r1, #6
   80cae:	2305      	movs	r3, #5
   80cb0:	5043      	str	r3, [r0, r1]
   80cb2:	4770      	bx	lr

00080cb4 <tc_stop>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKDIS;
   80cb4:	0189      	lsls	r1, r1, #6
   80cb6:	2302      	movs	r3, #2
   80cb8:	5043      	str	r3, [r0, r1]
   80cba:	4770      	bx	lr

00080cbc <tc_read_cv>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_CV;
   80cbc:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80cc0:	6908      	ldr	r0, [r1, #16]
}
   80cc2:	4770      	bx	lr

00080cc4 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   80cc4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80cc8:	61ca      	str	r2, [r1, #28]
   80cca:	4770      	bx	lr

00080ccc <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80ccc:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
   80cd0:	624a      	str	r2, [r1, #36]	; 0x24
   80cd2:	4770      	bx	lr

00080cd4 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80cd4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
   80cd8:	6a08      	ldr	r0, [r1, #32]
}
   80cda:	4770      	bx	lr

00080cdc <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80cdc:	e7fe      	b.n	80cdc <Dummy_Handler>
   80cde:	bf00      	nop

00080ce0 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80ce0:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80ce2:	4b1e      	ldr	r3, [pc, #120]	; (80d5c <Reset_Handler+0x7c>)
   80ce4:	4a1e      	ldr	r2, [pc, #120]	; (80d60 <Reset_Handler+0x80>)
   80ce6:	429a      	cmp	r2, r3
   80ce8:	d003      	beq.n	80cf2 <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
   80cea:	4b1e      	ldr	r3, [pc, #120]	; (80d64 <Reset_Handler+0x84>)
   80cec:	4a1b      	ldr	r2, [pc, #108]	; (80d5c <Reset_Handler+0x7c>)
   80cee:	429a      	cmp	r2, r3
   80cf0:	d304      	bcc.n	80cfc <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80cf2:	4b1d      	ldr	r3, [pc, #116]	; (80d68 <Reset_Handler+0x88>)
   80cf4:	4a1d      	ldr	r2, [pc, #116]	; (80d6c <Reset_Handler+0x8c>)
   80cf6:	429a      	cmp	r2, r3
   80cf8:	d30f      	bcc.n	80d1a <Reset_Handler+0x3a>
   80cfa:	e01a      	b.n	80d32 <Reset_Handler+0x52>
   80cfc:	4b1c      	ldr	r3, [pc, #112]	; (80d70 <Reset_Handler+0x90>)
   80cfe:	4c1d      	ldr	r4, [pc, #116]	; (80d74 <Reset_Handler+0x94>)
   80d00:	1ae4      	subs	r4, r4, r3
   80d02:	f024 0403 	bic.w	r4, r4, #3
   80d06:	3404      	adds	r4, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80d08:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
   80d0a:	4814      	ldr	r0, [pc, #80]	; (80d5c <Reset_Handler+0x7c>)
   80d0c:	4914      	ldr	r1, [pc, #80]	; (80d60 <Reset_Handler+0x80>)
   80d0e:	585a      	ldr	r2, [r3, r1]
   80d10:	501a      	str	r2, [r3, r0]
   80d12:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80d14:	42a3      	cmp	r3, r4
   80d16:	d1fa      	bne.n	80d0e <Reset_Handler+0x2e>
   80d18:	e7eb      	b.n	80cf2 <Reset_Handler+0x12>
   80d1a:	4b17      	ldr	r3, [pc, #92]	; (80d78 <Reset_Handler+0x98>)
   80d1c:	4917      	ldr	r1, [pc, #92]	; (80d7c <Reset_Handler+0x9c>)
   80d1e:	1ac9      	subs	r1, r1, r3
   80d20:	f021 0103 	bic.w	r1, r1, #3
   80d24:	1d1a      	adds	r2, r3, #4
   80d26:	4411      	add	r1, r2
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
		*pDest++ = 0;
   80d28:	2200      	movs	r2, #0
   80d2a:	f843 2f04 	str.w	r2, [r3, #4]!
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80d2e:	428b      	cmp	r3, r1
   80d30:	d1fb      	bne.n	80d2a <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80d32:	4a13      	ldr	r2, [pc, #76]	; (80d80 <Reset_Handler+0xa0>)
   80d34:	f022 4360 	bic.w	r3, r2, #3758096384	; 0xe0000000
   80d38:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   80d3c:	4911      	ldr	r1, [pc, #68]	; (80d84 <Reset_Handler+0xa4>)
   80d3e:	608b      	str	r3, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80d40:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
   80d44:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
   80d48:	d203      	bcs.n	80d52 <Reset_Handler+0x72>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80d4a:	688a      	ldr	r2, [r1, #8]
   80d4c:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
   80d50:	608a      	str	r2, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80d52:	4b0d      	ldr	r3, [pc, #52]	; (80d88 <Reset_Handler+0xa8>)
   80d54:	4798      	blx	r3

	/* Branch to main function */
	main();
   80d56:	4b0d      	ldr	r3, [pc, #52]	; (80d8c <Reset_Handler+0xac>)
   80d58:	4798      	blx	r3
   80d5a:	e7fe      	b.n	80d5a <Reset_Handler+0x7a>
   80d5c:	20070000 	.word	0x20070000
   80d60:	00085994 	.word	0x00085994
   80d64:	200708c4 	.word	0x200708c4
   80d68:	200730a0 	.word	0x200730a0
   80d6c:	200708c4 	.word	0x200708c4
   80d70:	20070004 	.word	0x20070004
   80d74:	200708c7 	.word	0x200708c7
   80d78:	200708c0 	.word	0x200708c0
   80d7c:	2007309b 	.word	0x2007309b
   80d80:	00080000 	.word	0x00080000
   80d84:	e000ed00 	.word	0xe000ed00
   80d88:	00080f69 	.word	0x00080f69
   80d8c:	000804d9 	.word	0x000804d9

00080d90 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80d90:	4b3e      	ldr	r3, [pc, #248]	; (80e8c <SystemCoreClockUpdate+0xfc>)
   80d92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80d94:	f003 0303 	and.w	r3, r3, #3
   80d98:	2b03      	cmp	r3, #3
   80d9a:	d85f      	bhi.n	80e5c <SystemCoreClockUpdate+0xcc>
   80d9c:	e8df f003 	tbb	[pc, r3]
   80da0:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80da4:	4b3a      	ldr	r3, [pc, #232]	; (80e90 <SystemCoreClockUpdate+0x100>)
   80da6:	695b      	ldr	r3, [r3, #20]
   80da8:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80dac:	bf14      	ite	ne
   80dae:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80db2:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80db6:	4b37      	ldr	r3, [pc, #220]	; (80e94 <SystemCoreClockUpdate+0x104>)
   80db8:	601a      	str	r2, [r3, #0]
   80dba:	e04f      	b.n	80e5c <SystemCoreClockUpdate+0xcc>
		}
		break;
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80dbc:	4b33      	ldr	r3, [pc, #204]	; (80e8c <SystemCoreClockUpdate+0xfc>)
   80dbe:	6a1b      	ldr	r3, [r3, #32]
   80dc0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80dc4:	d003      	beq.n	80dce <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80dc6:	4a34      	ldr	r2, [pc, #208]	; (80e98 <SystemCoreClockUpdate+0x108>)
   80dc8:	4b32      	ldr	r3, [pc, #200]	; (80e94 <SystemCoreClockUpdate+0x104>)
   80dca:	601a      	str	r2, [r3, #0]
   80dcc:	e046      	b.n	80e5c <SystemCoreClockUpdate+0xcc>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80dce:	4a33      	ldr	r2, [pc, #204]	; (80e9c <SystemCoreClockUpdate+0x10c>)
   80dd0:	4b30      	ldr	r3, [pc, #192]	; (80e94 <SystemCoreClockUpdate+0x104>)
   80dd2:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80dd4:	4b2d      	ldr	r3, [pc, #180]	; (80e8c <SystemCoreClockUpdate+0xfc>)
   80dd6:	6a1b      	ldr	r3, [r3, #32]
   80dd8:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80ddc:	2b10      	cmp	r3, #16
   80dde:	d002      	beq.n	80de6 <SystemCoreClockUpdate+0x56>
   80de0:	2b20      	cmp	r3, #32
   80de2:	d004      	beq.n	80dee <SystemCoreClockUpdate+0x5e>
   80de4:	e03a      	b.n	80e5c <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80de6:	4a2e      	ldr	r2, [pc, #184]	; (80ea0 <SystemCoreClockUpdate+0x110>)
   80de8:	4b2a      	ldr	r3, [pc, #168]	; (80e94 <SystemCoreClockUpdate+0x104>)
   80dea:	601a      	str	r2, [r3, #0]
				break;
   80dec:	e036      	b.n	80e5c <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80dee:	4a2a      	ldr	r2, [pc, #168]	; (80e98 <SystemCoreClockUpdate+0x108>)
   80df0:	4b28      	ldr	r3, [pc, #160]	; (80e94 <SystemCoreClockUpdate+0x104>)
   80df2:	601a      	str	r2, [r3, #0]
				break;
   80df4:	e032      	b.n	80e5c <SystemCoreClockUpdate+0xcc>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80df6:	4b25      	ldr	r3, [pc, #148]	; (80e8c <SystemCoreClockUpdate+0xfc>)
   80df8:	6a1b      	ldr	r3, [r3, #32]
   80dfa:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80dfe:	d003      	beq.n	80e08 <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80e00:	4a25      	ldr	r2, [pc, #148]	; (80e98 <SystemCoreClockUpdate+0x108>)
   80e02:	4b24      	ldr	r3, [pc, #144]	; (80e94 <SystemCoreClockUpdate+0x104>)
   80e04:	601a      	str	r2, [r3, #0]
   80e06:	e012      	b.n	80e2e <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80e08:	4a24      	ldr	r2, [pc, #144]	; (80e9c <SystemCoreClockUpdate+0x10c>)
   80e0a:	4b22      	ldr	r3, [pc, #136]	; (80e94 <SystemCoreClockUpdate+0x104>)
   80e0c:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80e0e:	4b1f      	ldr	r3, [pc, #124]	; (80e8c <SystemCoreClockUpdate+0xfc>)
   80e10:	6a1b      	ldr	r3, [r3, #32]
   80e12:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80e16:	2b10      	cmp	r3, #16
   80e18:	d002      	beq.n	80e20 <SystemCoreClockUpdate+0x90>
   80e1a:	2b20      	cmp	r3, #32
   80e1c:	d004      	beq.n	80e28 <SystemCoreClockUpdate+0x98>
   80e1e:	e006      	b.n	80e2e <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80e20:	4a1f      	ldr	r2, [pc, #124]	; (80ea0 <SystemCoreClockUpdate+0x110>)
   80e22:	4b1c      	ldr	r3, [pc, #112]	; (80e94 <SystemCoreClockUpdate+0x104>)
   80e24:	601a      	str	r2, [r3, #0]
				break;
   80e26:	e002      	b.n	80e2e <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80e28:	4a1b      	ldr	r2, [pc, #108]	; (80e98 <SystemCoreClockUpdate+0x108>)
   80e2a:	4b1a      	ldr	r3, [pc, #104]	; (80e94 <SystemCoreClockUpdate+0x104>)
   80e2c:	601a      	str	r2, [r3, #0]
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   80e2e:	4b17      	ldr	r3, [pc, #92]	; (80e8c <SystemCoreClockUpdate+0xfc>)
   80e30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80e32:	f003 0303 	and.w	r3, r3, #3
   80e36:	2b02      	cmp	r3, #2
   80e38:	d10d      	bne.n	80e56 <SystemCoreClockUpdate+0xc6>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80e3a:	4b14      	ldr	r3, [pc, #80]	; (80e8c <SystemCoreClockUpdate+0xfc>)
   80e3c:	6a98      	ldr	r0, [r3, #40]	; 0x28
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80e3e:	6a99      	ldr	r1, [r3, #40]	; 0x28
   80e40:	4b14      	ldr	r3, [pc, #80]	; (80e94 <SystemCoreClockUpdate+0x104>)
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80e42:	f3c0 400a 	ubfx	r0, r0, #16, #11
   80e46:	681a      	ldr	r2, [r3, #0]
   80e48:	fb00 2202 	mla	r2, r0, r2, r2
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80e4c:	b2c9      	uxtb	r1, r1
   80e4e:	fbb2 f2f1 	udiv	r2, r2, r1
   80e52:	601a      	str	r2, [r3, #0]
   80e54:	e002      	b.n	80e5c <SystemCoreClockUpdate+0xcc>
				                             CKGR_PLLAR_DIVA_Pos));
		} else {
			SystemCoreClock = SYS_UTMIPLL / 2U;
   80e56:	4a13      	ldr	r2, [pc, #76]	; (80ea4 <SystemCoreClockUpdate+0x114>)
   80e58:	4b0e      	ldr	r3, [pc, #56]	; (80e94 <SystemCoreClockUpdate+0x104>)
   80e5a:	601a      	str	r2, [r3, #0]
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   80e5c:	4b0b      	ldr	r3, [pc, #44]	; (80e8c <SystemCoreClockUpdate+0xfc>)
   80e5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80e60:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80e64:	2b70      	cmp	r3, #112	; 0x70
   80e66:	d107      	bne.n	80e78 <SystemCoreClockUpdate+0xe8>
		SystemCoreClock /= 3U;
   80e68:	4b0a      	ldr	r3, [pc, #40]	; (80e94 <SystemCoreClockUpdate+0x104>)
   80e6a:	681a      	ldr	r2, [r3, #0]
   80e6c:	490e      	ldr	r1, [pc, #56]	; (80ea8 <SystemCoreClockUpdate+0x118>)
   80e6e:	fba1 0202 	umull	r0, r2, r1, r2
   80e72:	0852      	lsrs	r2, r2, #1
   80e74:	601a      	str	r2, [r3, #0]
   80e76:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   80e78:	4b04      	ldr	r3, [pc, #16]	; (80e8c <SystemCoreClockUpdate+0xfc>)
   80e7a:	6b19      	ldr	r1, [r3, #48]	; 0x30
   80e7c:	4b05      	ldr	r3, [pc, #20]	; (80e94 <SystemCoreClockUpdate+0x104>)
   80e7e:	f3c1 1102 	ubfx	r1, r1, #4, #3
   80e82:	681a      	ldr	r2, [r3, #0]
   80e84:	40ca      	lsrs	r2, r1
   80e86:	601a      	str	r2, [r3, #0]
   80e88:	4770      	bx	lr
   80e8a:	bf00      	nop
   80e8c:	400e0600 	.word	0x400e0600
   80e90:	400e1a10 	.word	0x400e1a10
   80e94:	20070000 	.word	0x20070000
   80e98:	00b71b00 	.word	0x00b71b00
   80e9c:	003d0900 	.word	0x003d0900
   80ea0:	007a1200 	.word	0x007a1200
   80ea4:	0e4e1c00 	.word	0x0e4e1c00
   80ea8:	aaaaaaab 	.word	0xaaaaaaab

00080eac <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
   80eac:	4b1b      	ldr	r3, [pc, #108]	; (80f1c <system_init_flash+0x70>)
   80eae:	4298      	cmp	r0, r3
   80eb0:	d806      	bhi.n	80ec0 <system_init_flash+0x14>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
   80eb2:	2300      	movs	r3, #0
   80eb4:	4a1a      	ldr	r2, [pc, #104]	; (80f20 <system_init_flash+0x74>)
   80eb6:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
   80eb8:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80ebc:	6013      	str	r3, [r2, #0]
   80ebe:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
   80ec0:	4b18      	ldr	r3, [pc, #96]	; (80f24 <system_init_flash+0x78>)
   80ec2:	4298      	cmp	r0, r3
   80ec4:	d807      	bhi.n	80ed6 <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
   80ec6:	f44f 7380 	mov.w	r3, #256	; 0x100
   80eca:	4a15      	ldr	r2, [pc, #84]	; (80f20 <system_init_flash+0x74>)
   80ecc:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
   80ece:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80ed2:	6013      	str	r3, [r2, #0]
   80ed4:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
   80ed6:	4b14      	ldr	r3, [pc, #80]	; (80f28 <system_init_flash+0x7c>)
   80ed8:	4298      	cmp	r0, r3
   80eda:	d807      	bhi.n	80eec <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
   80edc:	f44f 7300 	mov.w	r3, #512	; 0x200
   80ee0:	4a0f      	ldr	r2, [pc, #60]	; (80f20 <system_init_flash+0x74>)
   80ee2:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
   80ee4:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80ee8:	6013      	str	r3, [r2, #0]
   80eea:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
   80eec:	4b0f      	ldr	r3, [pc, #60]	; (80f2c <system_init_flash+0x80>)
   80eee:	4298      	cmp	r0, r3
   80ef0:	d807      	bhi.n	80f02 <system_init_flash+0x56>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
   80ef2:	f44f 7340 	mov.w	r3, #768	; 0x300
   80ef6:	4a0a      	ldr	r2, [pc, #40]	; (80f20 <system_init_flash+0x74>)
   80ef8:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
   80efa:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80efe:	6013      	str	r3, [r2, #0]
   80f00:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
   80f02:	4b0b      	ldr	r3, [pc, #44]	; (80f30 <system_init_flash+0x84>)
   80f04:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
   80f06:	bf94      	ite	ls
   80f08:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
   80f0c:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
   80f10:	4a03      	ldr	r2, [pc, #12]	; (80f20 <system_init_flash+0x74>)
   80f12:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
   80f14:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80f18:	6013      	str	r3, [r2, #0]
   80f1a:	4770      	bx	lr
   80f1c:	0121eabf 	.word	0x0121eabf
   80f20:	400e0a00 	.word	0x400e0a00
   80f24:	02faf07f 	.word	0x02faf07f
   80f28:	03d08fff 	.word	0x03d08fff
   80f2c:	04c4b3ff 	.word	0x04c4b3ff
   80f30:	055d4a7f 	.word	0x055d4a7f

00080f34 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   80f34:	4b09      	ldr	r3, [pc, #36]	; (80f5c <_sbrk+0x28>)
   80f36:	681b      	ldr	r3, [r3, #0]
   80f38:	b913      	cbnz	r3, 80f40 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
   80f3a:	4a09      	ldr	r2, [pc, #36]	; (80f60 <_sbrk+0x2c>)
   80f3c:	4b07      	ldr	r3, [pc, #28]	; (80f5c <_sbrk+0x28>)
   80f3e:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   80f40:	4b06      	ldr	r3, [pc, #24]	; (80f5c <_sbrk+0x28>)
   80f42:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   80f44:	181a      	adds	r2, r3, r0
   80f46:	4907      	ldr	r1, [pc, #28]	; (80f64 <_sbrk+0x30>)
   80f48:	4291      	cmp	r1, r2
   80f4a:	db04      	blt.n	80f56 <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
   80f4c:	4610      	mov	r0, r2
   80f4e:	4a03      	ldr	r2, [pc, #12]	; (80f5c <_sbrk+0x28>)
   80f50:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   80f52:	4618      	mov	r0, r3
   80f54:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
   80f56:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
   80f5a:	4770      	bx	lr
   80f5c:	20073064 	.word	0x20073064
   80f60:	200750a0 	.word	0x200750a0
   80f64:	20087ffc 	.word	0x20087ffc

00080f68 <__libc_init_array>:
   80f68:	b570      	push	{r4, r5, r6, lr}
   80f6a:	4b0e      	ldr	r3, [pc, #56]	; (80fa4 <__libc_init_array+0x3c>)
   80f6c:	4d0e      	ldr	r5, [pc, #56]	; (80fa8 <__libc_init_array+0x40>)
   80f6e:	2400      	movs	r4, #0
   80f70:	1aed      	subs	r5, r5, r3
   80f72:	10ad      	asrs	r5, r5, #2
   80f74:	461e      	mov	r6, r3
   80f76:	42ac      	cmp	r4, r5
   80f78:	d004      	beq.n	80f84 <__libc_init_array+0x1c>
   80f7a:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   80f7e:	4790      	blx	r2
   80f80:	3401      	adds	r4, #1
   80f82:	e7f8      	b.n	80f76 <__libc_init_array+0xe>
   80f84:	f004 fcf0 	bl	85968 <_init>
   80f88:	4d08      	ldr	r5, [pc, #32]	; (80fac <__libc_init_array+0x44>)
   80f8a:	4b09      	ldr	r3, [pc, #36]	; (80fb0 <__libc_init_array+0x48>)
   80f8c:	2400      	movs	r4, #0
   80f8e:	1aed      	subs	r5, r5, r3
   80f90:	10ad      	asrs	r5, r5, #2
   80f92:	461e      	mov	r6, r3
   80f94:	42ac      	cmp	r4, r5
   80f96:	d004      	beq.n	80fa2 <__libc_init_array+0x3a>
   80f98:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   80f9c:	4790      	blx	r2
   80f9e:	3401      	adds	r4, #1
   80fa0:	e7f8      	b.n	80f94 <__libc_init_array+0x2c>
   80fa2:	bd70      	pop	{r4, r5, r6, pc}
   80fa4:	00085974 	.word	0x00085974
   80fa8:	00085974 	.word	0x00085974
   80fac:	0008597c 	.word	0x0008597c
   80fb0:	00085974 	.word	0x00085974

00080fb4 <memset>:
   80fb4:	4402      	add	r2, r0
   80fb6:	4603      	mov	r3, r0
   80fb8:	4293      	cmp	r3, r2
   80fba:	d002      	beq.n	80fc2 <memset+0xe>
   80fbc:	f803 1b01 	strb.w	r1, [r3], #1
   80fc0:	e7fa      	b.n	80fb8 <memset+0x4>
   80fc2:	4770      	bx	lr

00080fc4 <_sprintf_r>:
   80fc4:	b40c      	push	{r2, r3}
   80fc6:	b510      	push	{r4, lr}
   80fc8:	b09c      	sub	sp, #112	; 0x70
   80fca:	ab1e      	add	r3, sp, #120	; 0x78
   80fcc:	9102      	str	r1, [sp, #8]
   80fce:	9106      	str	r1, [sp, #24]
   80fd0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   80fd4:	f853 2b04 	ldr.w	r2, [r3], #4
   80fd8:	9104      	str	r1, [sp, #16]
   80fda:	9107      	str	r1, [sp, #28]
   80fdc:	f64f 71ff 	movw	r1, #65535	; 0xffff
   80fe0:	f8ad 1016 	strh.w	r1, [sp, #22]
   80fe4:	f44f 7402 	mov.w	r4, #520	; 0x208
   80fe8:	a902      	add	r1, sp, #8
   80fea:	9301      	str	r3, [sp, #4]
   80fec:	f8ad 4014 	strh.w	r4, [sp, #20]
   80ff0:	f000 f834 	bl	8105c <_svfprintf_r>
   80ff4:	9b02      	ldr	r3, [sp, #8]
   80ff6:	2200      	movs	r2, #0
   80ff8:	701a      	strb	r2, [r3, #0]
   80ffa:	b01c      	add	sp, #112	; 0x70
   80ffc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   81000:	b002      	add	sp, #8
   81002:	4770      	bx	lr

00081004 <sprintf>:
   81004:	b40e      	push	{r1, r2, r3}
   81006:	b500      	push	{lr}
   81008:	f44f 7102 	mov.w	r1, #520	; 0x208
   8100c:	b09c      	sub	sp, #112	; 0x70
   8100e:	f8ad 1014 	strh.w	r1, [sp, #20]
   81012:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   81016:	9104      	str	r1, [sp, #16]
   81018:	9107      	str	r1, [sp, #28]
   8101a:	f64f 71ff 	movw	r1, #65535	; 0xffff
   8101e:	ab1d      	add	r3, sp, #116	; 0x74
   81020:	f8ad 1016 	strh.w	r1, [sp, #22]
   81024:	4908      	ldr	r1, [pc, #32]	; (81048 <sprintf+0x44>)
   81026:	f853 2b04 	ldr.w	r2, [r3], #4
   8102a:	9002      	str	r0, [sp, #8]
   8102c:	9006      	str	r0, [sp, #24]
   8102e:	6808      	ldr	r0, [r1, #0]
   81030:	a902      	add	r1, sp, #8
   81032:	9301      	str	r3, [sp, #4]
   81034:	f000 f812 	bl	8105c <_svfprintf_r>
   81038:	9b02      	ldr	r3, [sp, #8]
   8103a:	2200      	movs	r2, #0
   8103c:	701a      	strb	r2, [r3, #0]
   8103e:	b01c      	add	sp, #112	; 0x70
   81040:	f85d eb04 	ldr.w	lr, [sp], #4
   81044:	b003      	add	sp, #12
   81046:	4770      	bx	lr
   81048:	20070008 	.word	0x20070008

0008104c <strlen>:
   8104c:	4603      	mov	r3, r0
   8104e:	f813 2b01 	ldrb.w	r2, [r3], #1
   81052:	2a00      	cmp	r2, #0
   81054:	d1fb      	bne.n	8104e <strlen+0x2>
   81056:	1a18      	subs	r0, r3, r0
   81058:	3801      	subs	r0, #1
   8105a:	4770      	bx	lr

0008105c <_svfprintf_r>:
   8105c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81060:	b0c3      	sub	sp, #268	; 0x10c
   81062:	468b      	mov	fp, r1
   81064:	4698      	mov	r8, r3
   81066:	920b      	str	r2, [sp, #44]	; 0x2c
   81068:	4682      	mov	sl, r0
   8106a:	f001 ff2d 	bl	82ec8 <_localeconv_r>
   8106e:	6800      	ldr	r0, [r0, #0]
   81070:	9018      	str	r0, [sp, #96]	; 0x60
   81072:	f7ff ffeb 	bl	8104c <strlen>
   81076:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   8107a:	9010      	str	r0, [sp, #64]	; 0x40
   8107c:	0619      	lsls	r1, r3, #24
   8107e:	d515      	bpl.n	810ac <_svfprintf_r+0x50>
   81080:	f8db 3010 	ldr.w	r3, [fp, #16]
   81084:	b993      	cbnz	r3, 810ac <_svfprintf_r+0x50>
   81086:	4650      	mov	r0, sl
   81088:	2140      	movs	r1, #64	; 0x40
   8108a:	f001 ff2f 	bl	82eec <_malloc_r>
   8108e:	f8cb 0000 	str.w	r0, [fp]
   81092:	f8cb 0010 	str.w	r0, [fp, #16]
   81096:	b930      	cbnz	r0, 810a6 <_svfprintf_r+0x4a>
   81098:	230c      	movs	r3, #12
   8109a:	f8ca 3000 	str.w	r3, [sl]
   8109e:	f04f 30ff 	mov.w	r0, #4294967295
   810a2:	f000 bf6e 	b.w	81f82 <_svfprintf_r+0xf26>
   810a6:	2340      	movs	r3, #64	; 0x40
   810a8:	f8cb 3014 	str.w	r3, [fp, #20]
   810ac:	2400      	movs	r4, #0
   810ae:	2500      	movs	r5, #0
   810b0:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
   810b4:	2300      	movs	r3, #0
   810b6:	ae32      	add	r6, sp, #200	; 0xc8
   810b8:	9625      	str	r6, [sp, #148]	; 0x94
   810ba:	9327      	str	r3, [sp, #156]	; 0x9c
   810bc:	9326      	str	r3, [sp, #152]	; 0x98
   810be:	9309      	str	r3, [sp, #36]	; 0x24
   810c0:	931b      	str	r3, [sp, #108]	; 0x6c
   810c2:	931a      	str	r3, [sp, #104]	; 0x68
   810c4:	930f      	str	r3, [sp, #60]	; 0x3c
   810c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   810c8:	461c      	mov	r4, r3
   810ca:	f813 2b01 	ldrb.w	r2, [r3], #1
   810ce:	b91a      	cbnz	r2, 810d8 <_svfprintf_r+0x7c>
   810d0:	980b      	ldr	r0, [sp, #44]	; 0x2c
   810d2:	1a25      	subs	r5, r4, r0
   810d4:	d103      	bne.n	810de <_svfprintf_r+0x82>
   810d6:	e01b      	b.n	81110 <_svfprintf_r+0xb4>
   810d8:	2a25      	cmp	r2, #37	; 0x25
   810da:	d1f5      	bne.n	810c8 <_svfprintf_r+0x6c>
   810dc:	e7f8      	b.n	810d0 <_svfprintf_r+0x74>
   810de:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   810e0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   810e2:	442b      	add	r3, r5
   810e4:	9327      	str	r3, [sp, #156]	; 0x9c
   810e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   810e8:	e886 0022 	stmia.w	r6, {r1, r5}
   810ec:	3301      	adds	r3, #1
   810ee:	2b07      	cmp	r3, #7
   810f0:	9326      	str	r3, [sp, #152]	; 0x98
   810f2:	dc01      	bgt.n	810f8 <_svfprintf_r+0x9c>
   810f4:	3608      	adds	r6, #8
   810f6:	e008      	b.n	8110a <_svfprintf_r+0xae>
   810f8:	4650      	mov	r0, sl
   810fa:	4659      	mov	r1, fp
   810fc:	aa25      	add	r2, sp, #148	; 0x94
   810fe:	f002 ff01 	bl	83f04 <__ssprint_r>
   81102:	2800      	cmp	r0, #0
   81104:	f040 8735 	bne.w	81f72 <_svfprintf_r+0xf16>
   81108:	ae32      	add	r6, sp, #200	; 0xc8
   8110a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8110c:	442a      	add	r2, r5
   8110e:	920f      	str	r2, [sp, #60]	; 0x3c
   81110:	7823      	ldrb	r3, [r4, #0]
   81112:	2b00      	cmp	r3, #0
   81114:	f000 8726 	beq.w	81f64 <_svfprintf_r+0xf08>
   81118:	2300      	movs	r3, #0
   8111a:	3401      	adds	r4, #1
   8111c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81120:	f04f 39ff 	mov.w	r9, #4294967295
   81124:	930e      	str	r3, [sp, #56]	; 0x38
   81126:	461f      	mov	r7, r3
   81128:	1c65      	adds	r5, r4, #1
   8112a:	7824      	ldrb	r4, [r4, #0]
   8112c:	950b      	str	r5, [sp, #44]	; 0x2c
   8112e:	9408      	str	r4, [sp, #32]
   81130:	9c08      	ldr	r4, [sp, #32]
   81132:	f1a4 0220 	sub.w	r2, r4, #32
   81136:	2a58      	cmp	r2, #88	; 0x58
   81138:	f200 8385 	bhi.w	81846 <_svfprintf_r+0x7ea>
   8113c:	e8df f012 	tbh	[pc, r2, lsl #1]
   81140:	0383006d 	.word	0x0383006d
   81144:	00710383 	.word	0x00710383
   81148:	03830383 	.word	0x03830383
   8114c:	03830383 	.word	0x03830383
   81150:	03830383 	.word	0x03830383
   81154:	0059005b 	.word	0x0059005b
   81158:	00770383 	.word	0x00770383
   8115c:	0383007a 	.word	0x0383007a
   81160:	00a2009f 	.word	0x00a2009f
   81164:	00a200a2 	.word	0x00a200a2
   81168:	00a200a2 	.word	0x00a200a2
   8116c:	00a200a2 	.word	0x00a200a2
   81170:	00a200a2 	.word	0x00a200a2
   81174:	03830383 	.word	0x03830383
   81178:	03830383 	.word	0x03830383
   8117c:	03830383 	.word	0x03830383
   81180:	03830383 	.word	0x03830383
   81184:	03830383 	.word	0x03830383
   81188:	00fe00d3 	.word	0x00fe00d3
   8118c:	00fe0383 	.word	0x00fe0383
   81190:	03830383 	.word	0x03830383
   81194:	03830383 	.word	0x03830383
   81198:	038300b6 	.word	0x038300b6
   8119c:	026b0383 	.word	0x026b0383
   811a0:	03830383 	.word	0x03830383
   811a4:	03830383 	.word	0x03830383
   811a8:	02bb0383 	.word	0x02bb0383
   811ac:	03830383 	.word	0x03830383
   811b0:	03830068 	.word	0x03830068
   811b4:	03830383 	.word	0x03830383
   811b8:	03830383 	.word	0x03830383
   811bc:	03830383 	.word	0x03830383
   811c0:	03830383 	.word	0x03830383
   811c4:	00c90383 	.word	0x00c90383
   811c8:	00fe0065 	.word	0x00fe0065
   811cc:	00fe00fe 	.word	0x00fe00fe
   811d0:	006500b9 	.word	0x006500b9
   811d4:	03830383 	.word	0x03830383
   811d8:	038300bc 	.word	0x038300bc
   811dc:	026d024c 	.word	0x026d024c
   811e0:	00c6028c 	.word	0x00c6028c
   811e4:	029e0383 	.word	0x029e0383
   811e8:	02bd0383 	.word	0x02bd0383
   811ec:	03830383 	.word	0x03830383
   811f0:	02d8      	.short	0x02d8
   811f2:	232b      	movs	r3, #43	; 0x2b
   811f4:	e007      	b.n	81206 <_svfprintf_r+0x1aa>
   811f6:	f8d8 5000 	ldr.w	r5, [r8]
   811fa:	f108 0204 	add.w	r2, r8, #4
   811fe:	2d00      	cmp	r5, #0
   81200:	950e      	str	r5, [sp, #56]	; 0x38
   81202:	db11      	blt.n	81228 <_svfprintf_r+0x1cc>
   81204:	4690      	mov	r8, r2
   81206:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   81208:	e78e      	b.n	81128 <_svfprintf_r+0xcc>
   8120a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8120e:	e06e      	b.n	812ee <_svfprintf_r+0x292>
   81210:	4cab      	ldr	r4, [pc, #684]	; (814c0 <_svfprintf_r+0x464>)
   81212:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81216:	941b      	str	r4, [sp, #108]	; 0x6c
   81218:	e26e      	b.n	816f8 <_svfprintf_r+0x69c>
   8121a:	2b00      	cmp	r3, #0
   8121c:	bf08      	it	eq
   8121e:	2320      	moveq	r3, #32
   81220:	e7f1      	b.n	81206 <_svfprintf_r+0x1aa>
   81222:	f047 0701 	orr.w	r7, r7, #1
   81226:	e7ee      	b.n	81206 <_svfprintf_r+0x1aa>
   81228:	426d      	negs	r5, r5
   8122a:	950e      	str	r5, [sp, #56]	; 0x38
   8122c:	4690      	mov	r8, r2
   8122e:	f047 0704 	orr.w	r7, r7, #4
   81232:	e7e8      	b.n	81206 <_svfprintf_r+0x1aa>
   81234:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   81236:	7825      	ldrb	r5, [r4, #0]
   81238:	1c62      	adds	r2, r4, #1
   8123a:	2d2a      	cmp	r5, #42	; 0x2a
   8123c:	9508      	str	r5, [sp, #32]
   8123e:	d002      	beq.n	81246 <_svfprintf_r+0x1ea>
   81240:	f04f 0900 	mov.w	r9, #0
   81244:	e00b      	b.n	8125e <_svfprintf_r+0x202>
   81246:	f8d8 9000 	ldr.w	r9, [r8]
   8124a:	f108 0104 	add.w	r1, r8, #4
   8124e:	f1b9 0f00 	cmp.w	r9, #0
   81252:	4688      	mov	r8, r1
   81254:	920b      	str	r2, [sp, #44]	; 0x2c
   81256:	dad6      	bge.n	81206 <_svfprintf_r+0x1aa>
   81258:	f04f 39ff 	mov.w	r9, #4294967295
   8125c:	e7d3      	b.n	81206 <_svfprintf_r+0x1aa>
   8125e:	9d08      	ldr	r5, [sp, #32]
   81260:	f1a5 0130 	sub.w	r1, r5, #48	; 0x30
   81264:	2909      	cmp	r1, #9
   81266:	d806      	bhi.n	81276 <_svfprintf_r+0x21a>
   81268:	f812 4b01 	ldrb.w	r4, [r2], #1
   8126c:	200a      	movs	r0, #10
   8126e:	fb00 1909 	mla	r9, r0, r9, r1
   81272:	9408      	str	r4, [sp, #32]
   81274:	e7f3      	b.n	8125e <_svfprintf_r+0x202>
   81276:	ea49 79e9 	orr.w	r9, r9, r9, asr #31
   8127a:	920b      	str	r2, [sp, #44]	; 0x2c
   8127c:	e758      	b.n	81130 <_svfprintf_r+0xd4>
   8127e:	f047 0780 	orr.w	r7, r7, #128	; 0x80
   81282:	e7c0      	b.n	81206 <_svfprintf_r+0x1aa>
   81284:	2400      	movs	r4, #0
   81286:	940e      	str	r4, [sp, #56]	; 0x38
   81288:	9d08      	ldr	r5, [sp, #32]
   8128a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   8128c:	f1a5 0230 	sub.w	r2, r5, #48	; 0x30
   81290:	210a      	movs	r1, #10
   81292:	fb01 2404 	mla	r4, r1, r4, r2
   81296:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   81298:	940e      	str	r4, [sp, #56]	; 0x38
   8129a:	f812 5b01 	ldrb.w	r5, [r2], #1
   8129e:	f1a5 0130 	sub.w	r1, r5, #48	; 0x30
   812a2:	2909      	cmp	r1, #9
   812a4:	9508      	str	r5, [sp, #32]
   812a6:	d8e8      	bhi.n	8127a <_svfprintf_r+0x21e>
   812a8:	920b      	str	r2, [sp, #44]	; 0x2c
   812aa:	e7ed      	b.n	81288 <_svfprintf_r+0x22c>
   812ac:	f047 0708 	orr.w	r7, r7, #8
   812b0:	e7a9      	b.n	81206 <_svfprintf_r+0x1aa>
   812b2:	f047 0740 	orr.w	r7, r7, #64	; 0x40
   812b6:	e7a6      	b.n	81206 <_svfprintf_r+0x1aa>
   812b8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   812ba:	7822      	ldrb	r2, [r4, #0]
   812bc:	2a6c      	cmp	r2, #108	; 0x6c
   812be:	d102      	bne.n	812c6 <_svfprintf_r+0x26a>
   812c0:	3401      	adds	r4, #1
   812c2:	940b      	str	r4, [sp, #44]	; 0x2c
   812c4:	e002      	b.n	812cc <_svfprintf_r+0x270>
   812c6:	f047 0710 	orr.w	r7, r7, #16
   812ca:	e79c      	b.n	81206 <_svfprintf_r+0x1aa>
   812cc:	f047 0720 	orr.w	r7, r7, #32
   812d0:	e799      	b.n	81206 <_svfprintf_r+0x1aa>
   812d2:	f8d8 3000 	ldr.w	r3, [r8]
   812d6:	2500      	movs	r5, #0
   812d8:	f88d 30a0 	strb.w	r3, [sp, #160]	; 0xa0
   812dc:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   812e0:	f108 0804 	add.w	r8, r8, #4
   812e4:	e2ba      	b.n	8185c <_svfprintf_r+0x800>
   812e6:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   812ea:	f047 0710 	orr.w	r7, r7, #16
   812ee:	06ba      	lsls	r2, r7, #26
   812f0:	d508      	bpl.n	81304 <_svfprintf_r+0x2a8>
   812f2:	f108 0807 	add.w	r8, r8, #7
   812f6:	f028 0307 	bic.w	r3, r8, #7
   812fa:	f103 0808 	add.w	r8, r3, #8
   812fe:	e9d3 4500 	ldrd	r4, r5, [r3]
   81302:	e00f      	b.n	81324 <_svfprintf_r+0x2c8>
   81304:	f017 0f10 	tst.w	r7, #16
   81308:	f108 0304 	add.w	r3, r8, #4
   8130c:	d002      	beq.n	81314 <_svfprintf_r+0x2b8>
   8130e:	f8d8 4000 	ldr.w	r4, [r8]
   81312:	e005      	b.n	81320 <_svfprintf_r+0x2c4>
   81314:	f8d8 4000 	ldr.w	r4, [r8]
   81318:	f017 0f40 	tst.w	r7, #64	; 0x40
   8131c:	bf18      	it	ne
   8131e:	b224      	sxthne	r4, r4
   81320:	17e5      	asrs	r5, r4, #31
   81322:	4698      	mov	r8, r3
   81324:	2c00      	cmp	r4, #0
   81326:	f175 0100 	sbcs.w	r1, r5, #0
   8132a:	f280 8210 	bge.w	8174e <_svfprintf_r+0x6f2>
   8132e:	232d      	movs	r3, #45	; 0x2d
   81330:	4264      	negs	r4, r4
   81332:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   81336:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8133a:	e208      	b.n	8174e <_svfprintf_r+0x6f2>
   8133c:	9c08      	ldr	r4, [sp, #32]
   8133e:	f108 0807 	add.w	r8, r8, #7
   81342:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81346:	970a      	str	r7, [sp, #40]	; 0x28
   81348:	f028 0307 	bic.w	r3, r8, #7
   8134c:	9411      	str	r4, [sp, #68]	; 0x44
   8134e:	e9d3 4500 	ldrd	r4, r5, [r3]
   81352:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
   81356:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   8135a:	f103 0808 	add.w	r8, r3, #8
   8135e:	f002 fd95 	bl	83e8c <__fpclassifyd>
   81362:	2801      	cmp	r0, #1
   81364:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   81368:	d114      	bne.n	81394 <_svfprintf_r+0x338>
   8136a:	2200      	movs	r2, #0
   8136c:	2300      	movs	r3, #0
   8136e:	f003 fed9 	bl	85124 <__aeabi_dcmplt>
   81372:	b110      	cbz	r0, 8137a <_svfprintf_r+0x31e>
   81374:	232d      	movs	r3, #45	; 0x2d
   81376:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8137a:	9d08      	ldr	r5, [sp, #32]
   8137c:	4b51      	ldr	r3, [pc, #324]	; (814c4 <_svfprintf_r+0x468>)
   8137e:	4a52      	ldr	r2, [pc, #328]	; (814c8 <_svfprintf_r+0x46c>)
   81380:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   81384:	2d47      	cmp	r5, #71	; 0x47
   81386:	bfd8      	it	le
   81388:	461a      	movle	r2, r3
   8138a:	9207      	str	r2, [sp, #28]
   8138c:	f04f 0903 	mov.w	r9, #3
   81390:	2500      	movs	r5, #0
   81392:	e26a      	b.n	8186a <_svfprintf_r+0x80e>
   81394:	f002 fd7a 	bl	83e8c <__fpclassifyd>
   81398:	b958      	cbnz	r0, 813b2 <_svfprintf_r+0x356>
   8139a:	4b4c      	ldr	r3, [pc, #304]	; (814cc <_svfprintf_r+0x470>)
   8139c:	4a4c      	ldr	r2, [pc, #304]	; (814d0 <_svfprintf_r+0x474>)
   8139e:	9c08      	ldr	r4, [sp, #32]
   813a0:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   813a4:	2c47      	cmp	r4, #71	; 0x47
   813a6:	bfd8      	it	le
   813a8:	461a      	movle	r2, r3
   813aa:	9207      	str	r2, [sp, #28]
   813ac:	f04f 0903 	mov.w	r9, #3
   813b0:	e25a      	b.n	81868 <_svfprintf_r+0x80c>
   813b2:	f1b9 3fff 	cmp.w	r9, #4294967295
   813b6:	d00a      	beq.n	813ce <_svfprintf_r+0x372>
   813b8:	9d08      	ldr	r5, [sp, #32]
   813ba:	f025 0320 	bic.w	r3, r5, #32
   813be:	2b47      	cmp	r3, #71	; 0x47
   813c0:	d107      	bne.n	813d2 <_svfprintf_r+0x376>
   813c2:	f1b9 0f00 	cmp.w	r9, #0
   813c6:	bf08      	it	eq
   813c8:	f04f 0901 	moveq.w	r9, #1
   813cc:	e001      	b.n	813d2 <_svfprintf_r+0x376>
   813ce:	f04f 0906 	mov.w	r9, #6
   813d2:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   813d6:	2b00      	cmp	r3, #0
   813d8:	f447 7780 	orr.w	r7, r7, #256	; 0x100
   813dc:	da08      	bge.n	813f0 <_svfprintf_r+0x394>
   813de:	990d      	ldr	r1, [sp, #52]	; 0x34
   813e0:	980c      	ldr	r0, [sp, #48]	; 0x30
   813e2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
   813e6:	242d      	movs	r4, #45	; 0x2d
   813e8:	9012      	str	r0, [sp, #72]	; 0x48
   813ea:	9113      	str	r1, [sp, #76]	; 0x4c
   813ec:	9419      	str	r4, [sp, #100]	; 0x64
   813ee:	e005      	b.n	813fc <_svfprintf_r+0x3a0>
   813f0:	e9dd 450c 	ldrd	r4, r5, [sp, #48]	; 0x30
   813f4:	e9cd 4512 	strd	r4, r5, [sp, #72]	; 0x48
   813f8:	2500      	movs	r5, #0
   813fa:	9519      	str	r5, [sp, #100]	; 0x64
   813fc:	9d08      	ldr	r5, [sp, #32]
   813fe:	f025 0420 	bic.w	r4, r5, #32
   81402:	2c46      	cmp	r4, #70	; 0x46
   81404:	d004      	beq.n	81410 <_svfprintf_r+0x3b4>
   81406:	2c45      	cmp	r4, #69	; 0x45
   81408:	d105      	bne.n	81416 <_svfprintf_r+0x3ba>
   8140a:	f109 0501 	add.w	r5, r9, #1
   8140e:	e003      	b.n	81418 <_svfprintf_r+0x3bc>
   81410:	464d      	mov	r5, r9
   81412:	2303      	movs	r3, #3
   81414:	e001      	b.n	8141a <_svfprintf_r+0x3be>
   81416:	464d      	mov	r5, r9
   81418:	2302      	movs	r3, #2
   8141a:	e88d 0028 	stmia.w	sp, {r3, r5}
   8141e:	ab1f      	add	r3, sp, #124	; 0x7c
   81420:	9302      	str	r3, [sp, #8]
   81422:	ab20      	add	r3, sp, #128	; 0x80
   81424:	9303      	str	r3, [sp, #12]
   81426:	ab23      	add	r3, sp, #140	; 0x8c
   81428:	9304      	str	r3, [sp, #16]
   8142a:	4650      	mov	r0, sl
   8142c:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
   81430:	f000 fe4d 	bl	820ce <_dtoa_r>
   81434:	2c47      	cmp	r4, #71	; 0x47
   81436:	9007      	str	r0, [sp, #28]
   81438:	d10a      	bne.n	81450 <_svfprintf_r+0x3f4>
   8143a:	980a      	ldr	r0, [sp, #40]	; 0x28
   8143c:	07c3      	lsls	r3, r0, #31
   8143e:	d407      	bmi.n	81450 <_svfprintf_r+0x3f4>
   81440:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   81442:	9d07      	ldr	r5, [sp, #28]
   81444:	2c47      	cmp	r4, #71	; 0x47
   81446:	ebc5 0303 	rsb	r3, r5, r3
   8144a:	9309      	str	r3, [sp, #36]	; 0x24
   8144c:	d142      	bne.n	814d4 <_svfprintf_r+0x478>
   8144e:	e02d      	b.n	814ac <_svfprintf_r+0x450>
   81450:	f8dd c01c 	ldr.w	ip, [sp, #28]
   81454:	2c46      	cmp	r4, #70	; 0x46
   81456:	44ac      	add	ip, r5
   81458:	d113      	bne.n	81482 <_svfprintf_r+0x426>
   8145a:	9807      	ldr	r0, [sp, #28]
   8145c:	7803      	ldrb	r3, [r0, #0]
   8145e:	2b30      	cmp	r3, #48	; 0x30
   81460:	d10d      	bne.n	8147e <_svfprintf_r+0x422>
   81462:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   81466:	2200      	movs	r2, #0
   81468:	2300      	movs	r3, #0
   8146a:	f8cd c018 	str.w	ip, [sp, #24]
   8146e:	f003 fe4f 	bl	85110 <__aeabi_dcmpeq>
   81472:	f8dd c018 	ldr.w	ip, [sp, #24]
   81476:	b910      	cbnz	r0, 8147e <_svfprintf_r+0x422>
   81478:	f1c5 0501 	rsb	r5, r5, #1
   8147c:	951f      	str	r5, [sp, #124]	; 0x7c
   8147e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81480:	449c      	add	ip, r3
   81482:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   81486:	2200      	movs	r2, #0
   81488:	2300      	movs	r3, #0
   8148a:	f8cd c018 	str.w	ip, [sp, #24]
   8148e:	f003 fe3f 	bl	85110 <__aeabi_dcmpeq>
   81492:	f8dd c018 	ldr.w	ip, [sp, #24]
   81496:	b108      	cbz	r0, 8149c <_svfprintf_r+0x440>
   81498:	f8cd c08c 	str.w	ip, [sp, #140]	; 0x8c
   8149c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8149e:	4563      	cmp	r3, ip
   814a0:	d2ce      	bcs.n	81440 <_svfprintf_r+0x3e4>
   814a2:	1c5a      	adds	r2, r3, #1
   814a4:	9223      	str	r2, [sp, #140]	; 0x8c
   814a6:	2230      	movs	r2, #48	; 0x30
   814a8:	701a      	strb	r2, [r3, #0]
   814aa:	e7f7      	b.n	8149c <_svfprintf_r+0x440>
   814ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   814ae:	1cdc      	adds	r4, r3, #3
   814b0:	db01      	blt.n	814b6 <_svfprintf_r+0x45a>
   814b2:	454b      	cmp	r3, r9
   814b4:	dd6e      	ble.n	81594 <_svfprintf_r+0x538>
   814b6:	9c08      	ldr	r4, [sp, #32]
   814b8:	3c02      	subs	r4, #2
   814ba:	9408      	str	r4, [sp, #32]
   814bc:	e00d      	b.n	814da <_svfprintf_r+0x47e>
   814be:	bf00      	nop
   814c0:	000857e6 	.word	0x000857e6
   814c4:	000857d6 	.word	0x000857d6
   814c8:	000857da 	.word	0x000857da
   814cc:	000857de 	.word	0x000857de
   814d0:	000857e2 	.word	0x000857e2
   814d4:	9d08      	ldr	r5, [sp, #32]
   814d6:	2d65      	cmp	r5, #101	; 0x65
   814d8:	dc43      	bgt.n	81562 <_svfprintf_r+0x506>
   814da:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   814dc:	9c08      	ldr	r4, [sp, #32]
   814de:	3b01      	subs	r3, #1
   814e0:	2b00      	cmp	r3, #0
   814e2:	931f      	str	r3, [sp, #124]	; 0x7c
   814e4:	bfba      	itte	lt
   814e6:	425b      	neglt	r3, r3
   814e8:	222d      	movlt	r2, #45	; 0x2d
   814ea:	222b      	movge	r2, #43	; 0x2b
   814ec:	2b09      	cmp	r3, #9
   814ee:	f88d 4084 	strb.w	r4, [sp, #132]	; 0x84
   814f2:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   814f6:	dd1d      	ble.n	81534 <_svfprintf_r+0x4d8>
   814f8:	f10d 0292 	add.w	r2, sp, #146	; 0x92
   814fc:	200a      	movs	r0, #10
   814fe:	fb93 f1f0 	sdiv	r1, r3, r0
   81502:	fb00 3311 	mls	r3, r0, r1, r3
   81506:	2909      	cmp	r1, #9
   81508:	f103 0330 	add.w	r3, r3, #48	; 0x30
   8150c:	4614      	mov	r4, r2
   8150e:	f802 3901 	strb.w	r3, [r2], #-1
   81512:	460b      	mov	r3, r1
   81514:	dcf2      	bgt.n	814fc <_svfprintf_r+0x4a0>
   81516:	f101 0330 	add.w	r3, r1, #48	; 0x30
   8151a:	f804 3d01 	strb.w	r3, [r4, #-1]!
   8151e:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   81522:	f10d 0293 	add.w	r2, sp, #147	; 0x93
   81526:	4294      	cmp	r4, r2
   81528:	d20b      	bcs.n	81542 <_svfprintf_r+0x4e6>
   8152a:	f814 2b01 	ldrb.w	r2, [r4], #1
   8152e:	f803 2b01 	strb.w	r2, [r3], #1
   81532:	e7f6      	b.n	81522 <_svfprintf_r+0x4c6>
   81534:	2230      	movs	r2, #48	; 0x30
   81536:	4413      	add	r3, r2
   81538:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   8153c:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   81540:	ab22      	add	r3, sp, #136	; 0x88
   81542:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81544:	aa21      	add	r2, sp, #132	; 0x84
   81546:	1a9a      	subs	r2, r3, r2
   81548:	4691      	mov	r9, r2
   8154a:	2d01      	cmp	r5, #1
   8154c:	921a      	str	r2, [sp, #104]	; 0x68
   8154e:	44a9      	add	r9, r5
   81550:	dc03      	bgt.n	8155a <_svfprintf_r+0x4fe>
   81552:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   81554:	f015 0401 	ands.w	r4, r5, #1
   81558:	d037      	beq.n	815ca <_svfprintf_r+0x56e>
   8155a:	f109 0901 	add.w	r9, r9, #1
   8155e:	2400      	movs	r4, #0
   81560:	e033      	b.n	815ca <_svfprintf_r+0x56e>
   81562:	9c08      	ldr	r4, [sp, #32]
   81564:	2c66      	cmp	r4, #102	; 0x66
   81566:	d115      	bne.n	81594 <_svfprintf_r+0x538>
   81568:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   8156a:	2b00      	cmp	r3, #0
   8156c:	dd09      	ble.n	81582 <_svfprintf_r+0x526>
   8156e:	f1b9 0f00 	cmp.w	r9, #0
   81572:	d102      	bne.n	8157a <_svfprintf_r+0x51e>
   81574:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   81576:	07e8      	lsls	r0, r5, #31
   81578:	d523      	bpl.n	815c2 <_svfprintf_r+0x566>
   8157a:	f109 0901 	add.w	r9, r9, #1
   8157e:	444b      	add	r3, r9
   81580:	e01f      	b.n	815c2 <_svfprintf_r+0x566>
   81582:	f1b9 0f00 	cmp.w	r9, #0
   81586:	d102      	bne.n	8158e <_svfprintf_r+0x532>
   81588:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8158a:	07e1      	lsls	r1, r4, #31
   8158c:	d515      	bpl.n	815ba <_svfprintf_r+0x55e>
   8158e:	f109 0302 	add.w	r3, r9, #2
   81592:	e016      	b.n	815c2 <_svfprintf_r+0x566>
   81594:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81596:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81598:	42ab      	cmp	r3, r5
   8159a:	db04      	blt.n	815a6 <_svfprintf_r+0x54a>
   8159c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8159e:	07e2      	lsls	r2, r4, #31
   815a0:	d50d      	bpl.n	815be <_svfprintf_r+0x562>
   815a2:	3301      	adds	r3, #1
   815a4:	e006      	b.n	815b4 <_svfprintf_r+0x558>
   815a6:	2b00      	cmp	r3, #0
   815a8:	9c09      	ldr	r4, [sp, #36]	; 0x24
   815aa:	bfd4      	ite	le
   815ac:	f1c3 0302 	rsble	r3, r3, #2
   815b0:	2301      	movgt	r3, #1
   815b2:	4423      	add	r3, r4
   815b4:	2567      	movs	r5, #103	; 0x67
   815b6:	9511      	str	r5, [sp, #68]	; 0x44
   815b8:	e003      	b.n	815c2 <_svfprintf_r+0x566>
   815ba:	2301      	movs	r3, #1
   815bc:	e001      	b.n	815c2 <_svfprintf_r+0x566>
   815be:	2467      	movs	r4, #103	; 0x67
   815c0:	9411      	str	r4, [sp, #68]	; 0x44
   815c2:	9d11      	ldr	r5, [sp, #68]	; 0x44
   815c4:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
   815c6:	9508      	str	r5, [sp, #32]
   815c8:	4699      	mov	r9, r3
   815ca:	9d19      	ldr	r5, [sp, #100]	; 0x64
   815cc:	b115      	cbz	r5, 815d4 <_svfprintf_r+0x578>
   815ce:	232d      	movs	r3, #45	; 0x2d
   815d0:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   815d4:	2500      	movs	r5, #0
   815d6:	e149      	b.n	8186c <_svfprintf_r+0x810>
   815d8:	f017 0f20 	tst.w	r7, #32
   815dc:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   815e0:	f108 0104 	add.w	r1, r8, #4
   815e4:	d008      	beq.n	815f8 <_svfprintf_r+0x59c>
   815e6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   815e8:	f8d8 0000 	ldr.w	r0, [r8]
   815ec:	17e5      	asrs	r5, r4, #31
   815ee:	4622      	mov	r2, r4
   815f0:	462b      	mov	r3, r5
   815f2:	e9c0 2300 	strd	r2, r3, [r0]
   815f6:	e00c      	b.n	81612 <_svfprintf_r+0x5b6>
   815f8:	06fb      	lsls	r3, r7, #27
   815fa:	d406      	bmi.n	8160a <_svfprintf_r+0x5ae>
   815fc:	067d      	lsls	r5, r7, #25
   815fe:	d504      	bpl.n	8160a <_svfprintf_r+0x5ae>
   81600:	f8d8 3000 	ldr.w	r3, [r8]
   81604:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   81606:	801c      	strh	r4, [r3, #0]
   81608:	e003      	b.n	81612 <_svfprintf_r+0x5b6>
   8160a:	f8d8 3000 	ldr.w	r3, [r8]
   8160e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81610:	601d      	str	r5, [r3, #0]
   81612:	4688      	mov	r8, r1
   81614:	e557      	b.n	810c6 <_svfprintf_r+0x6a>
   81616:	f047 0710 	orr.w	r7, r7, #16
   8161a:	f017 0320 	ands.w	r3, r7, #32
   8161e:	d009      	beq.n	81634 <_svfprintf_r+0x5d8>
   81620:	f108 0807 	add.w	r8, r8, #7
   81624:	f028 0307 	bic.w	r3, r8, #7
   81628:	f103 0808 	add.w	r8, r3, #8
   8162c:	e9d3 4500 	ldrd	r4, r5, [r3]
   81630:	2300      	movs	r3, #0
   81632:	e088      	b.n	81746 <_svfprintf_r+0x6ea>
   81634:	f017 0110 	ands.w	r1, r7, #16
   81638:	f108 0204 	add.w	r2, r8, #4
   8163c:	d107      	bne.n	8164e <_svfprintf_r+0x5f2>
   8163e:	f017 0340 	ands.w	r3, r7, #64	; 0x40
   81642:	d004      	beq.n	8164e <_svfprintf_r+0x5f2>
   81644:	f8b8 4000 	ldrh.w	r4, [r8]
   81648:	2500      	movs	r5, #0
   8164a:	4690      	mov	r8, r2
   8164c:	e7f0      	b.n	81630 <_svfprintf_r+0x5d4>
   8164e:	f8d8 4000 	ldr.w	r4, [r8]
   81652:	2500      	movs	r5, #0
   81654:	4690      	mov	r8, r2
   81656:	e076      	b.n	81746 <_svfprintf_r+0x6ea>
   81658:	48a9      	ldr	r0, [pc, #676]	; (81900 <_svfprintf_r+0x8a4>)
   8165a:	2330      	movs	r3, #48	; 0x30
   8165c:	2278      	movs	r2, #120	; 0x78
   8165e:	f8d8 4000 	ldr.w	r4, [r8]
   81662:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   81666:	2500      	movs	r5, #0
   81668:	f047 0702 	orr.w	r7, r7, #2
   8166c:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   81670:	f108 0804 	add.w	r8, r8, #4
   81674:	901b      	str	r0, [sp, #108]	; 0x6c
   81676:	2302      	movs	r3, #2
   81678:	9208      	str	r2, [sp, #32]
   8167a:	e064      	b.n	81746 <_svfprintf_r+0x6ea>
   8167c:	4643      	mov	r3, r8
   8167e:	2500      	movs	r5, #0
   81680:	681b      	ldr	r3, [r3, #0]
   81682:	45a9      	cmp	r9, r5
   81684:	9307      	str	r3, [sp, #28]
   81686:	f108 0804 	add.w	r8, r8, #4
   8168a:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   8168e:	db0d      	blt.n	816ac <_svfprintf_r+0x650>
   81690:	4618      	mov	r0, r3
   81692:	4629      	mov	r1, r5
   81694:	464a      	mov	r2, r9
   81696:	f001 fe31 	bl	832fc <memchr>
   8169a:	2800      	cmp	r0, #0
   8169c:	f000 80e4 	beq.w	81868 <_svfprintf_r+0x80c>
   816a0:	9c07      	ldr	r4, [sp, #28]
   816a2:	1b00      	subs	r0, r0, r4
   816a4:	4548      	cmp	r0, r9
   816a6:	bfb8      	it	lt
   816a8:	4681      	movlt	r9, r0
   816aa:	e0de      	b.n	8186a <_svfprintf_r+0x80e>
   816ac:	9807      	ldr	r0, [sp, #28]
   816ae:	f7ff fccd 	bl	8104c <strlen>
   816b2:	4681      	mov	r9, r0
   816b4:	e0d9      	b.n	8186a <_svfprintf_r+0x80e>
   816b6:	f047 0710 	orr.w	r7, r7, #16
   816ba:	06bc      	lsls	r4, r7, #26
   816bc:	d508      	bpl.n	816d0 <_svfprintf_r+0x674>
   816be:	f108 0807 	add.w	r8, r8, #7
   816c2:	f028 0307 	bic.w	r3, r8, #7
   816c6:	f103 0808 	add.w	r8, r3, #8
   816ca:	e9d3 4500 	ldrd	r4, r5, [r3]
   816ce:	e00d      	b.n	816ec <_svfprintf_r+0x690>
   816d0:	f017 0f10 	tst.w	r7, #16
   816d4:	f108 0304 	add.w	r3, r8, #4
   816d8:	d104      	bne.n	816e4 <_svfprintf_r+0x688>
   816da:	0678      	lsls	r0, r7, #25
   816dc:	d502      	bpl.n	816e4 <_svfprintf_r+0x688>
   816de:	f8b8 4000 	ldrh.w	r4, [r8]
   816e2:	e001      	b.n	816e8 <_svfprintf_r+0x68c>
   816e4:	f8d8 4000 	ldr.w	r4, [r8]
   816e8:	2500      	movs	r5, #0
   816ea:	4698      	mov	r8, r3
   816ec:	2301      	movs	r3, #1
   816ee:	e02a      	b.n	81746 <_svfprintf_r+0x6ea>
   816f0:	4d83      	ldr	r5, [pc, #524]	; (81900 <_svfprintf_r+0x8a4>)
   816f2:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   816f6:	951b      	str	r5, [sp, #108]	; 0x6c
   816f8:	06b9      	lsls	r1, r7, #26
   816fa:	d508      	bpl.n	8170e <_svfprintf_r+0x6b2>
   816fc:	f108 0807 	add.w	r8, r8, #7
   81700:	f028 0307 	bic.w	r3, r8, #7
   81704:	f103 0808 	add.w	r8, r3, #8
   81708:	e9d3 4500 	ldrd	r4, r5, [r3]
   8170c:	e00d      	b.n	8172a <_svfprintf_r+0x6ce>
   8170e:	f017 0f10 	tst.w	r7, #16
   81712:	f108 0304 	add.w	r3, r8, #4
   81716:	d104      	bne.n	81722 <_svfprintf_r+0x6c6>
   81718:	067a      	lsls	r2, r7, #25
   8171a:	d502      	bpl.n	81722 <_svfprintf_r+0x6c6>
   8171c:	f8b8 4000 	ldrh.w	r4, [r8]
   81720:	e001      	b.n	81726 <_svfprintf_r+0x6ca>
   81722:	f8d8 4000 	ldr.w	r4, [r8]
   81726:	2500      	movs	r5, #0
   81728:	4698      	mov	r8, r3
   8172a:	07fb      	lsls	r3, r7, #31
   8172c:	d50a      	bpl.n	81744 <_svfprintf_r+0x6e8>
   8172e:	ea54 0005 	orrs.w	r0, r4, r5
   81732:	d007      	beq.n	81744 <_svfprintf_r+0x6e8>
   81734:	9908      	ldr	r1, [sp, #32]
   81736:	2330      	movs	r3, #48	; 0x30
   81738:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   8173c:	f88d 1079 	strb.w	r1, [sp, #121]	; 0x79
   81740:	f047 0702 	orr.w	r7, r7, #2
   81744:	2302      	movs	r3, #2
   81746:	2200      	movs	r2, #0
   81748:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   8174c:	e000      	b.n	81750 <_svfprintf_r+0x6f4>
   8174e:	2301      	movs	r3, #1
   81750:	f1b9 0f00 	cmp.w	r9, #0
   81754:	bfa8      	it	ge
   81756:	f027 0780 	bicge.w	r7, r7, #128	; 0x80
   8175a:	ea54 0205 	orrs.w	r2, r4, r5
   8175e:	d102      	bne.n	81766 <_svfprintf_r+0x70a>
   81760:	f1b9 0f00 	cmp.w	r9, #0
   81764:	d05a      	beq.n	8181c <_svfprintf_r+0x7c0>
   81766:	2b01      	cmp	r3, #1
   81768:	d01f      	beq.n	817aa <_svfprintf_r+0x74e>
   8176a:	2b02      	cmp	r3, #2
   8176c:	f10d 03c7 	add.w	r3, sp, #199	; 0xc7
   81770:	d041      	beq.n	817f6 <_svfprintf_r+0x79a>
   81772:	08e1      	lsrs	r1, r4, #3
   81774:	ea41 7045 	orr.w	r0, r1, r5, lsl #29
   81778:	08e9      	lsrs	r1, r5, #3
   8177a:	f004 0207 	and.w	r2, r4, #7
   8177e:	9014      	str	r0, [sp, #80]	; 0x50
   81780:	9115      	str	r1, [sp, #84]	; 0x54
   81782:	3230      	adds	r2, #48	; 0x30
   81784:	e9dd 4514 	ldrd	r4, r5, [sp, #80]	; 0x50
   81788:	ea54 0005 	orrs.w	r0, r4, r5
   8178c:	9307      	str	r3, [sp, #28]
   8178e:	701a      	strb	r2, [r3, #0]
   81790:	f103 33ff 	add.w	r3, r3, #4294967295
   81794:	d1ed      	bne.n	81772 <_svfprintf_r+0x716>
   81796:	07f8      	lsls	r0, r7, #31
   81798:	9907      	ldr	r1, [sp, #28]
   8179a:	d54c      	bpl.n	81836 <_svfprintf_r+0x7da>
   8179c:	2a30      	cmp	r2, #48	; 0x30
   8179e:	d04a      	beq.n	81836 <_svfprintf_r+0x7da>
   817a0:	9307      	str	r3, [sp, #28]
   817a2:	2330      	movs	r3, #48	; 0x30
   817a4:	f801 3c01 	strb.w	r3, [r1, #-1]
   817a8:	e045      	b.n	81836 <_svfprintf_r+0x7da>
   817aa:	2d00      	cmp	r5, #0
   817ac:	bf08      	it	eq
   817ae:	2c0a      	cmpeq	r4, #10
   817b0:	d205      	bcs.n	817be <_svfprintf_r+0x762>
   817b2:	3430      	adds	r4, #48	; 0x30
   817b4:	f88d 40c7 	strb.w	r4, [sp, #199]	; 0xc7
   817b8:	f10d 04c7 	add.w	r4, sp, #199	; 0xc7
   817bc:	e03a      	b.n	81834 <_svfprintf_r+0x7d8>
   817be:	f10d 00c7 	add.w	r0, sp, #199	; 0xc7
   817c2:	900a      	str	r0, [sp, #40]	; 0x28
   817c4:	990a      	ldr	r1, [sp, #40]	; 0x28
   817c6:	4620      	mov	r0, r4
   817c8:	9107      	str	r1, [sp, #28]
   817ca:	220a      	movs	r2, #10
   817cc:	4629      	mov	r1, r5
   817ce:	2300      	movs	r3, #0
   817d0:	f003 fcf8 	bl	851c4 <__aeabi_uldivmod>
   817d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   817d6:	3230      	adds	r2, #48	; 0x30
   817d8:	f803 2901 	strb.w	r2, [r3], #-1
   817dc:	930a      	str	r3, [sp, #40]	; 0x28
   817de:	4620      	mov	r0, r4
   817e0:	4629      	mov	r1, r5
   817e2:	220a      	movs	r2, #10
   817e4:	2300      	movs	r3, #0
   817e6:	f003 fced 	bl	851c4 <__aeabi_uldivmod>
   817ea:	4604      	mov	r4, r0
   817ec:	460d      	mov	r5, r1
   817ee:	ea54 0005 	orrs.w	r0, r4, r5
   817f2:	d1e7      	bne.n	817c4 <_svfprintf_r+0x768>
   817f4:	e01f      	b.n	81836 <_svfprintf_r+0x7da>
   817f6:	991b      	ldr	r1, [sp, #108]	; 0x6c
   817f8:	f004 020f 	and.w	r2, r4, #15
   817fc:	5c8a      	ldrb	r2, [r1, r2]
   817fe:	9307      	str	r3, [sp, #28]
   81800:	f803 2901 	strb.w	r2, [r3], #-1
   81804:	0922      	lsrs	r2, r4, #4
   81806:	ea42 7005 	orr.w	r0, r2, r5, lsl #28
   8180a:	0929      	lsrs	r1, r5, #4
   8180c:	9016      	str	r0, [sp, #88]	; 0x58
   8180e:	9117      	str	r1, [sp, #92]	; 0x5c
   81810:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	; 0x58
   81814:	ea54 0205 	orrs.w	r2, r4, r5
   81818:	d1ed      	bne.n	817f6 <_svfprintf_r+0x79a>
   8181a:	e00c      	b.n	81836 <_svfprintf_r+0x7da>
   8181c:	b933      	cbnz	r3, 8182c <_svfprintf_r+0x7d0>
   8181e:	07fb      	lsls	r3, r7, #31
   81820:	d507      	bpl.n	81832 <_svfprintf_r+0x7d6>
   81822:	ac42      	add	r4, sp, #264	; 0x108
   81824:	2330      	movs	r3, #48	; 0x30
   81826:	f804 3d41 	strb.w	r3, [r4, #-65]!
   8182a:	e003      	b.n	81834 <_svfprintf_r+0x7d8>
   8182c:	ad32      	add	r5, sp, #200	; 0xc8
   8182e:	9507      	str	r5, [sp, #28]
   81830:	e001      	b.n	81836 <_svfprintf_r+0x7da>
   81832:	ac32      	add	r4, sp, #200	; 0xc8
   81834:	9407      	str	r4, [sp, #28]
   81836:	9c07      	ldr	r4, [sp, #28]
   81838:	464d      	mov	r5, r9
   8183a:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   8183e:	ebc4 0909 	rsb	r9, r4, r9
   81842:	2400      	movs	r4, #0
   81844:	e012      	b.n	8186c <_svfprintf_r+0x810>
   81846:	9d08      	ldr	r5, [sp, #32]
   81848:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8184c:	2d00      	cmp	r5, #0
   8184e:	f000 8389 	beq.w	81f64 <_svfprintf_r+0xf08>
   81852:	f88d 50a0 	strb.w	r5, [sp, #160]	; 0xa0
   81856:	2500      	movs	r5, #0
   81858:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   8185c:	a828      	add	r0, sp, #160	; 0xa0
   8185e:	f04f 0901 	mov.w	r9, #1
   81862:	462c      	mov	r4, r5
   81864:	9007      	str	r0, [sp, #28]
   81866:	e001      	b.n	8186c <_svfprintf_r+0x810>
   81868:	4605      	mov	r5, r0
   8186a:	462c      	mov	r4, r5
   8186c:	f89d 3077 	ldrb.w	r3, [sp, #119]	; 0x77
   81870:	45a9      	cmp	r9, r5
   81872:	bfac      	ite	ge
   81874:	4649      	movge	r1, r9
   81876:	4629      	movlt	r1, r5
   81878:	910a      	str	r1, [sp, #40]	; 0x28
   8187a:	b10b      	cbz	r3, 81880 <_svfprintf_r+0x824>
   8187c:	3101      	adds	r1, #1
   8187e:	910a      	str	r1, [sp, #40]	; 0x28
   81880:	f017 0302 	ands.w	r3, r7, #2
   81884:	9311      	str	r3, [sp, #68]	; 0x44
   81886:	d002      	beq.n	8188e <_svfprintf_r+0x832>
   81888:	980a      	ldr	r0, [sp, #40]	; 0x28
   8188a:	3002      	adds	r0, #2
   8188c:	900a      	str	r0, [sp, #40]	; 0x28
   8188e:	f017 0384 	ands.w	r3, r7, #132	; 0x84
   81892:	9319      	str	r3, [sp, #100]	; 0x64
   81894:	d141      	bne.n	8191a <_svfprintf_r+0x8be>
   81896:	980e      	ldr	r0, [sp, #56]	; 0x38
   81898:	990a      	ldr	r1, [sp, #40]	; 0x28
   8189a:	ebc1 0c00 	rsb	ip, r1, r0
   8189e:	f1bc 0f00 	cmp.w	ip, #0
   818a2:	dd3a      	ble.n	8191a <_svfprintf_r+0x8be>
   818a4:	4b17      	ldr	r3, [pc, #92]	; (81904 <_svfprintf_r+0x8a8>)
   818a6:	f1bc 0f10 	cmp.w	ip, #16
   818aa:	6033      	str	r3, [r6, #0]
   818ac:	dd1b      	ble.n	818e6 <_svfprintf_r+0x88a>
   818ae:	2310      	movs	r3, #16
   818b0:	6073      	str	r3, [r6, #4]
   818b2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   818b4:	3310      	adds	r3, #16
   818b6:	9327      	str	r3, [sp, #156]	; 0x9c
   818b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   818ba:	3301      	adds	r3, #1
   818bc:	2b07      	cmp	r3, #7
   818be:	9326      	str	r3, [sp, #152]	; 0x98
   818c0:	dc01      	bgt.n	818c6 <_svfprintf_r+0x86a>
   818c2:	3608      	adds	r6, #8
   818c4:	e00c      	b.n	818e0 <_svfprintf_r+0x884>
   818c6:	4650      	mov	r0, sl
   818c8:	4659      	mov	r1, fp
   818ca:	aa25      	add	r2, sp, #148	; 0x94
   818cc:	f8cd c018 	str.w	ip, [sp, #24]
   818d0:	f002 fb18 	bl	83f04 <__ssprint_r>
   818d4:	f8dd c018 	ldr.w	ip, [sp, #24]
   818d8:	2800      	cmp	r0, #0
   818da:	f040 834a 	bne.w	81f72 <_svfprintf_r+0xf16>
   818de:	ae32      	add	r6, sp, #200	; 0xc8
   818e0:	f1ac 0c10 	sub.w	ip, ip, #16
   818e4:	e7de      	b.n	818a4 <_svfprintf_r+0x848>
   818e6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   818e8:	f8c6 c004 	str.w	ip, [r6, #4]
   818ec:	4463      	add	r3, ip
   818ee:	9327      	str	r3, [sp, #156]	; 0x9c
   818f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   818f2:	3301      	adds	r3, #1
   818f4:	2b07      	cmp	r3, #7
   818f6:	9326      	str	r3, [sp, #152]	; 0x98
   818f8:	dc06      	bgt.n	81908 <_svfprintf_r+0x8ac>
   818fa:	3608      	adds	r6, #8
   818fc:	e00d      	b.n	8191a <_svfprintf_r+0x8be>
   818fe:	bf00      	nop
   81900:	000857f7 	.word	0x000857f7
   81904:	000857b6 	.word	0x000857b6
   81908:	4650      	mov	r0, sl
   8190a:	4659      	mov	r1, fp
   8190c:	aa25      	add	r2, sp, #148	; 0x94
   8190e:	f002 faf9 	bl	83f04 <__ssprint_r>
   81912:	2800      	cmp	r0, #0
   81914:	f040 832d 	bne.w	81f72 <_svfprintf_r+0xf16>
   81918:	ae32      	add	r6, sp, #200	; 0xc8
   8191a:	f89d 3077 	ldrb.w	r3, [sp, #119]	; 0x77
   8191e:	b1bb      	cbz	r3, 81950 <_svfprintf_r+0x8f4>
   81920:	f10d 0377 	add.w	r3, sp, #119	; 0x77
   81924:	6033      	str	r3, [r6, #0]
   81926:	2301      	movs	r3, #1
   81928:	6073      	str	r3, [r6, #4]
   8192a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   8192c:	3301      	adds	r3, #1
   8192e:	9327      	str	r3, [sp, #156]	; 0x9c
   81930:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81932:	3301      	adds	r3, #1
   81934:	2b07      	cmp	r3, #7
   81936:	9326      	str	r3, [sp, #152]	; 0x98
   81938:	dc01      	bgt.n	8193e <_svfprintf_r+0x8e2>
   8193a:	3608      	adds	r6, #8
   8193c:	e008      	b.n	81950 <_svfprintf_r+0x8f4>
   8193e:	4650      	mov	r0, sl
   81940:	4659      	mov	r1, fp
   81942:	aa25      	add	r2, sp, #148	; 0x94
   81944:	f002 fade 	bl	83f04 <__ssprint_r>
   81948:	2800      	cmp	r0, #0
   8194a:	f040 8312 	bne.w	81f72 <_svfprintf_r+0xf16>
   8194e:	ae32      	add	r6, sp, #200	; 0xc8
   81950:	9b11      	ldr	r3, [sp, #68]	; 0x44
   81952:	b1b3      	cbz	r3, 81982 <_svfprintf_r+0x926>
   81954:	ab1e      	add	r3, sp, #120	; 0x78
   81956:	6033      	str	r3, [r6, #0]
   81958:	2302      	movs	r3, #2
   8195a:	6073      	str	r3, [r6, #4]
   8195c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   8195e:	3302      	adds	r3, #2
   81960:	9327      	str	r3, [sp, #156]	; 0x9c
   81962:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81964:	3301      	adds	r3, #1
   81966:	2b07      	cmp	r3, #7
   81968:	9326      	str	r3, [sp, #152]	; 0x98
   8196a:	dc01      	bgt.n	81970 <_svfprintf_r+0x914>
   8196c:	3608      	adds	r6, #8
   8196e:	e008      	b.n	81982 <_svfprintf_r+0x926>
   81970:	4650      	mov	r0, sl
   81972:	4659      	mov	r1, fp
   81974:	aa25      	add	r2, sp, #148	; 0x94
   81976:	f002 fac5 	bl	83f04 <__ssprint_r>
   8197a:	2800      	cmp	r0, #0
   8197c:	f040 82f9 	bne.w	81f72 <_svfprintf_r+0xf16>
   81980:	ae32      	add	r6, sp, #200	; 0xc8
   81982:	9b19      	ldr	r3, [sp, #100]	; 0x64
   81984:	2b80      	cmp	r3, #128	; 0x80
   81986:	d13c      	bne.n	81a02 <_svfprintf_r+0x9a6>
   81988:	980e      	ldr	r0, [sp, #56]	; 0x38
   8198a:	990a      	ldr	r1, [sp, #40]	; 0x28
   8198c:	ebc1 0c00 	rsb	ip, r1, r0
   81990:	f1bc 0f00 	cmp.w	ip, #0
   81994:	dd35      	ble.n	81a02 <_svfprintf_r+0x9a6>
   81996:	4b9c      	ldr	r3, [pc, #624]	; (81c08 <_svfprintf_r+0xbac>)
   81998:	f1bc 0f10 	cmp.w	ip, #16
   8199c:	6033      	str	r3, [r6, #0]
   8199e:	dd1b      	ble.n	819d8 <_svfprintf_r+0x97c>
   819a0:	2310      	movs	r3, #16
   819a2:	6073      	str	r3, [r6, #4]
   819a4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   819a6:	3310      	adds	r3, #16
   819a8:	9327      	str	r3, [sp, #156]	; 0x9c
   819aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
   819ac:	3301      	adds	r3, #1
   819ae:	2b07      	cmp	r3, #7
   819b0:	9326      	str	r3, [sp, #152]	; 0x98
   819b2:	dc01      	bgt.n	819b8 <_svfprintf_r+0x95c>
   819b4:	3608      	adds	r6, #8
   819b6:	e00c      	b.n	819d2 <_svfprintf_r+0x976>
   819b8:	4650      	mov	r0, sl
   819ba:	4659      	mov	r1, fp
   819bc:	aa25      	add	r2, sp, #148	; 0x94
   819be:	f8cd c018 	str.w	ip, [sp, #24]
   819c2:	f002 fa9f 	bl	83f04 <__ssprint_r>
   819c6:	f8dd c018 	ldr.w	ip, [sp, #24]
   819ca:	2800      	cmp	r0, #0
   819cc:	f040 82d1 	bne.w	81f72 <_svfprintf_r+0xf16>
   819d0:	ae32      	add	r6, sp, #200	; 0xc8
   819d2:	f1ac 0c10 	sub.w	ip, ip, #16
   819d6:	e7de      	b.n	81996 <_svfprintf_r+0x93a>
   819d8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   819da:	f8c6 c004 	str.w	ip, [r6, #4]
   819de:	4463      	add	r3, ip
   819e0:	9327      	str	r3, [sp, #156]	; 0x9c
   819e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   819e4:	3301      	adds	r3, #1
   819e6:	2b07      	cmp	r3, #7
   819e8:	9326      	str	r3, [sp, #152]	; 0x98
   819ea:	dc01      	bgt.n	819f0 <_svfprintf_r+0x994>
   819ec:	3608      	adds	r6, #8
   819ee:	e008      	b.n	81a02 <_svfprintf_r+0x9a6>
   819f0:	4650      	mov	r0, sl
   819f2:	4659      	mov	r1, fp
   819f4:	aa25      	add	r2, sp, #148	; 0x94
   819f6:	f002 fa85 	bl	83f04 <__ssprint_r>
   819fa:	2800      	cmp	r0, #0
   819fc:	f040 82b9 	bne.w	81f72 <_svfprintf_r+0xf16>
   81a00:	ae32      	add	r6, sp, #200	; 0xc8
   81a02:	ebc9 0505 	rsb	r5, r9, r5
   81a06:	2d00      	cmp	r5, #0
   81a08:	dd2e      	ble.n	81a68 <_svfprintf_r+0xa0c>
   81a0a:	4b7f      	ldr	r3, [pc, #508]	; (81c08 <_svfprintf_r+0xbac>)
   81a0c:	2d10      	cmp	r5, #16
   81a0e:	6033      	str	r3, [r6, #0]
   81a10:	dd16      	ble.n	81a40 <_svfprintf_r+0x9e4>
   81a12:	2310      	movs	r3, #16
   81a14:	6073      	str	r3, [r6, #4]
   81a16:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81a18:	3310      	adds	r3, #16
   81a1a:	9327      	str	r3, [sp, #156]	; 0x9c
   81a1c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81a1e:	3301      	adds	r3, #1
   81a20:	2b07      	cmp	r3, #7
   81a22:	9326      	str	r3, [sp, #152]	; 0x98
   81a24:	dc01      	bgt.n	81a2a <_svfprintf_r+0x9ce>
   81a26:	3608      	adds	r6, #8
   81a28:	e008      	b.n	81a3c <_svfprintf_r+0x9e0>
   81a2a:	4650      	mov	r0, sl
   81a2c:	4659      	mov	r1, fp
   81a2e:	aa25      	add	r2, sp, #148	; 0x94
   81a30:	f002 fa68 	bl	83f04 <__ssprint_r>
   81a34:	2800      	cmp	r0, #0
   81a36:	f040 829c 	bne.w	81f72 <_svfprintf_r+0xf16>
   81a3a:	ae32      	add	r6, sp, #200	; 0xc8
   81a3c:	3d10      	subs	r5, #16
   81a3e:	e7e4      	b.n	81a0a <_svfprintf_r+0x9ae>
   81a40:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81a42:	6075      	str	r5, [r6, #4]
   81a44:	441d      	add	r5, r3
   81a46:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81a48:	9527      	str	r5, [sp, #156]	; 0x9c
   81a4a:	3301      	adds	r3, #1
   81a4c:	2b07      	cmp	r3, #7
   81a4e:	9326      	str	r3, [sp, #152]	; 0x98
   81a50:	dc01      	bgt.n	81a56 <_svfprintf_r+0x9fa>
   81a52:	3608      	adds	r6, #8
   81a54:	e008      	b.n	81a68 <_svfprintf_r+0xa0c>
   81a56:	4650      	mov	r0, sl
   81a58:	4659      	mov	r1, fp
   81a5a:	aa25      	add	r2, sp, #148	; 0x94
   81a5c:	f002 fa52 	bl	83f04 <__ssprint_r>
   81a60:	2800      	cmp	r0, #0
   81a62:	f040 8286 	bne.w	81f72 <_svfprintf_r+0xf16>
   81a66:	ae32      	add	r6, sp, #200	; 0xc8
   81a68:	05fd      	lsls	r5, r7, #23
   81a6a:	d405      	bmi.n	81a78 <_svfprintf_r+0xa1c>
   81a6c:	9c07      	ldr	r4, [sp, #28]
   81a6e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81a70:	e886 0210 	stmia.w	r6, {r4, r9}
   81a74:	444b      	add	r3, r9
   81a76:	e0da      	b.n	81c2e <_svfprintf_r+0xbd2>
   81a78:	9d08      	ldr	r5, [sp, #32]
   81a7a:	2d65      	cmp	r5, #101	; 0x65
   81a7c:	f340 81a7 	ble.w	81dce <_svfprintf_r+0xd72>
   81a80:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   81a84:	2200      	movs	r2, #0
   81a86:	2300      	movs	r3, #0
   81a88:	f003 fb42 	bl	85110 <__aeabi_dcmpeq>
   81a8c:	2800      	cmp	r0, #0
   81a8e:	d059      	beq.n	81b44 <_svfprintf_r+0xae8>
   81a90:	4b5e      	ldr	r3, [pc, #376]	; (81c0c <_svfprintf_r+0xbb0>)
   81a92:	6033      	str	r3, [r6, #0]
   81a94:	2301      	movs	r3, #1
   81a96:	6073      	str	r3, [r6, #4]
   81a98:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81a9a:	3301      	adds	r3, #1
   81a9c:	9327      	str	r3, [sp, #156]	; 0x9c
   81a9e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81aa0:	3301      	adds	r3, #1
   81aa2:	2b07      	cmp	r3, #7
   81aa4:	9326      	str	r3, [sp, #152]	; 0x98
   81aa6:	dc01      	bgt.n	81aac <_svfprintf_r+0xa50>
   81aa8:	3608      	adds	r6, #8
   81aaa:	e008      	b.n	81abe <_svfprintf_r+0xa62>
   81aac:	4650      	mov	r0, sl
   81aae:	4659      	mov	r1, fp
   81ab0:	aa25      	add	r2, sp, #148	; 0x94
   81ab2:	f002 fa27 	bl	83f04 <__ssprint_r>
   81ab6:	2800      	cmp	r0, #0
   81ab8:	f040 825b 	bne.w	81f72 <_svfprintf_r+0xf16>
   81abc:	ae32      	add	r6, sp, #200	; 0xc8
   81abe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81ac0:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81ac2:	42a3      	cmp	r3, r4
   81ac4:	db02      	blt.n	81acc <_svfprintf_r+0xa70>
   81ac6:	07fc      	lsls	r4, r7, #31
   81ac8:	f140 8202 	bpl.w	81ed0 <_svfprintf_r+0xe74>
   81acc:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81ace:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81ad0:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81ad2:	4423      	add	r3, r4
   81ad4:	9327      	str	r3, [sp, #156]	; 0x9c
   81ad6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81ad8:	6035      	str	r5, [r6, #0]
   81ada:	3301      	adds	r3, #1
   81adc:	2b07      	cmp	r3, #7
   81ade:	6074      	str	r4, [r6, #4]
   81ae0:	9326      	str	r3, [sp, #152]	; 0x98
   81ae2:	dc01      	bgt.n	81ae8 <_svfprintf_r+0xa8c>
   81ae4:	3608      	adds	r6, #8
   81ae6:	e008      	b.n	81afa <_svfprintf_r+0xa9e>
   81ae8:	4650      	mov	r0, sl
   81aea:	4659      	mov	r1, fp
   81aec:	aa25      	add	r2, sp, #148	; 0x94
   81aee:	f002 fa09 	bl	83f04 <__ssprint_r>
   81af2:	2800      	cmp	r0, #0
   81af4:	f040 823d 	bne.w	81f72 <_svfprintf_r+0xf16>
   81af8:	ae32      	add	r6, sp, #200	; 0xc8
   81afa:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81afc:	1e6c      	subs	r4, r5, #1
   81afe:	2c00      	cmp	r4, #0
   81b00:	f340 81e6 	ble.w	81ed0 <_svfprintf_r+0xe74>
   81b04:	4b40      	ldr	r3, [pc, #256]	; (81c08 <_svfprintf_r+0xbac>)
   81b06:	2c10      	cmp	r4, #16
   81b08:	6033      	str	r3, [r6, #0]
   81b0a:	dd16      	ble.n	81b3a <_svfprintf_r+0xade>
   81b0c:	2310      	movs	r3, #16
   81b0e:	6073      	str	r3, [r6, #4]
   81b10:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81b12:	3310      	adds	r3, #16
   81b14:	9327      	str	r3, [sp, #156]	; 0x9c
   81b16:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81b18:	3301      	adds	r3, #1
   81b1a:	2b07      	cmp	r3, #7
   81b1c:	9326      	str	r3, [sp, #152]	; 0x98
   81b1e:	dc01      	bgt.n	81b24 <_svfprintf_r+0xac8>
   81b20:	3608      	adds	r6, #8
   81b22:	e008      	b.n	81b36 <_svfprintf_r+0xada>
   81b24:	4650      	mov	r0, sl
   81b26:	4659      	mov	r1, fp
   81b28:	aa25      	add	r2, sp, #148	; 0x94
   81b2a:	f002 f9eb 	bl	83f04 <__ssprint_r>
   81b2e:	2800      	cmp	r0, #0
   81b30:	f040 821f 	bne.w	81f72 <_svfprintf_r+0xf16>
   81b34:	ae32      	add	r6, sp, #200	; 0xc8
   81b36:	3c10      	subs	r4, #16
   81b38:	e7e4      	b.n	81b04 <_svfprintf_r+0xaa8>
   81b3a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81b3c:	6074      	str	r4, [r6, #4]
   81b3e:	441c      	add	r4, r3
   81b40:	9427      	str	r4, [sp, #156]	; 0x9c
   81b42:	e134      	b.n	81dae <_svfprintf_r+0xd52>
   81b44:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81b46:	2b00      	cmp	r3, #0
   81b48:	dc73      	bgt.n	81c32 <_svfprintf_r+0xbd6>
   81b4a:	4b30      	ldr	r3, [pc, #192]	; (81c0c <_svfprintf_r+0xbb0>)
   81b4c:	6033      	str	r3, [r6, #0]
   81b4e:	2301      	movs	r3, #1
   81b50:	6073      	str	r3, [r6, #4]
   81b52:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81b54:	3301      	adds	r3, #1
   81b56:	9327      	str	r3, [sp, #156]	; 0x9c
   81b58:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81b5a:	3301      	adds	r3, #1
   81b5c:	2b07      	cmp	r3, #7
   81b5e:	9326      	str	r3, [sp, #152]	; 0x98
   81b60:	dc01      	bgt.n	81b66 <_svfprintf_r+0xb0a>
   81b62:	3608      	adds	r6, #8
   81b64:	e008      	b.n	81b78 <_svfprintf_r+0xb1c>
   81b66:	4650      	mov	r0, sl
   81b68:	4659      	mov	r1, fp
   81b6a:	aa25      	add	r2, sp, #148	; 0x94
   81b6c:	f002 f9ca 	bl	83f04 <__ssprint_r>
   81b70:	2800      	cmp	r0, #0
   81b72:	f040 81fe 	bne.w	81f72 <_svfprintf_r+0xf16>
   81b76:	ae32      	add	r6, sp, #200	; 0xc8
   81b78:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81b7a:	b923      	cbnz	r3, 81b86 <_svfprintf_r+0xb2a>
   81b7c:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81b7e:	b914      	cbnz	r4, 81b86 <_svfprintf_r+0xb2a>
   81b80:	07f8      	lsls	r0, r7, #31
   81b82:	f140 81a5 	bpl.w	81ed0 <_svfprintf_r+0xe74>
   81b86:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81b88:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81b8a:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81b8c:	4423      	add	r3, r4
   81b8e:	9327      	str	r3, [sp, #156]	; 0x9c
   81b90:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81b92:	6035      	str	r5, [r6, #0]
   81b94:	3301      	adds	r3, #1
   81b96:	2b07      	cmp	r3, #7
   81b98:	6074      	str	r4, [r6, #4]
   81b9a:	9326      	str	r3, [sp, #152]	; 0x98
   81b9c:	dc01      	bgt.n	81ba2 <_svfprintf_r+0xb46>
   81b9e:	3608      	adds	r6, #8
   81ba0:	e008      	b.n	81bb4 <_svfprintf_r+0xb58>
   81ba2:	4650      	mov	r0, sl
   81ba4:	4659      	mov	r1, fp
   81ba6:	aa25      	add	r2, sp, #148	; 0x94
   81ba8:	f002 f9ac 	bl	83f04 <__ssprint_r>
   81bac:	2800      	cmp	r0, #0
   81bae:	f040 81e0 	bne.w	81f72 <_svfprintf_r+0xf16>
   81bb2:	ae32      	add	r6, sp, #200	; 0xc8
   81bb4:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
   81bb6:	4264      	negs	r4, r4
   81bb8:	2c00      	cmp	r4, #0
   81bba:	dd32      	ble.n	81c22 <_svfprintf_r+0xbc6>
   81bbc:	4b12      	ldr	r3, [pc, #72]	; (81c08 <_svfprintf_r+0xbac>)
   81bbe:	2c10      	cmp	r4, #16
   81bc0:	6033      	str	r3, [r6, #0]
   81bc2:	dd16      	ble.n	81bf2 <_svfprintf_r+0xb96>
   81bc4:	2310      	movs	r3, #16
   81bc6:	6073      	str	r3, [r6, #4]
   81bc8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81bca:	3310      	adds	r3, #16
   81bcc:	9327      	str	r3, [sp, #156]	; 0x9c
   81bce:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81bd0:	3301      	adds	r3, #1
   81bd2:	2b07      	cmp	r3, #7
   81bd4:	9326      	str	r3, [sp, #152]	; 0x98
   81bd6:	dc01      	bgt.n	81bdc <_svfprintf_r+0xb80>
   81bd8:	3608      	adds	r6, #8
   81bda:	e008      	b.n	81bee <_svfprintf_r+0xb92>
   81bdc:	4650      	mov	r0, sl
   81bde:	4659      	mov	r1, fp
   81be0:	aa25      	add	r2, sp, #148	; 0x94
   81be2:	f002 f98f 	bl	83f04 <__ssprint_r>
   81be6:	2800      	cmp	r0, #0
   81be8:	f040 81c3 	bne.w	81f72 <_svfprintf_r+0xf16>
   81bec:	ae32      	add	r6, sp, #200	; 0xc8
   81bee:	3c10      	subs	r4, #16
   81bf0:	e7e4      	b.n	81bbc <_svfprintf_r+0xb60>
   81bf2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81bf4:	6074      	str	r4, [r6, #4]
   81bf6:	441c      	add	r4, r3
   81bf8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81bfa:	9427      	str	r4, [sp, #156]	; 0x9c
   81bfc:	3301      	adds	r3, #1
   81bfe:	2b07      	cmp	r3, #7
   81c00:	9326      	str	r3, [sp, #152]	; 0x98
   81c02:	dc05      	bgt.n	81c10 <_svfprintf_r+0xbb4>
   81c04:	3608      	adds	r6, #8
   81c06:	e00c      	b.n	81c22 <_svfprintf_r+0xbc6>
   81c08:	000857c6 	.word	0x000857c6
   81c0c:	00085808 	.word	0x00085808
   81c10:	4650      	mov	r0, sl
   81c12:	4659      	mov	r1, fp
   81c14:	aa25      	add	r2, sp, #148	; 0x94
   81c16:	f002 f975 	bl	83f04 <__ssprint_r>
   81c1a:	2800      	cmp	r0, #0
   81c1c:	f040 81a9 	bne.w	81f72 <_svfprintf_r+0xf16>
   81c20:	ae32      	add	r6, sp, #200	; 0xc8
   81c22:	9d07      	ldr	r5, [sp, #28]
   81c24:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81c26:	6035      	str	r5, [r6, #0]
   81c28:	6074      	str	r4, [r6, #4]
   81c2a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81c2c:	4423      	add	r3, r4
   81c2e:	9327      	str	r3, [sp, #156]	; 0x9c
   81c30:	e0bd      	b.n	81dae <_svfprintf_r+0xd52>
   81c32:	9809      	ldr	r0, [sp, #36]	; 0x24
   81c34:	9d07      	ldr	r5, [sp, #28]
   81c36:	4681      	mov	r9, r0
   81c38:	45a1      	cmp	r9, r4
   81c3a:	bfa8      	it	ge
   81c3c:	46a1      	movge	r9, r4
   81c3e:	f1b9 0f00 	cmp.w	r9, #0
   81c42:	4405      	add	r5, r0
   81c44:	dd15      	ble.n	81c72 <_svfprintf_r+0xc16>
   81c46:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81c48:	9907      	ldr	r1, [sp, #28]
   81c4a:	444b      	add	r3, r9
   81c4c:	9327      	str	r3, [sp, #156]	; 0x9c
   81c4e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81c50:	e886 0202 	stmia.w	r6, {r1, r9}
   81c54:	3301      	adds	r3, #1
   81c56:	2b07      	cmp	r3, #7
   81c58:	9326      	str	r3, [sp, #152]	; 0x98
   81c5a:	dc01      	bgt.n	81c60 <_svfprintf_r+0xc04>
   81c5c:	3608      	adds	r6, #8
   81c5e:	e008      	b.n	81c72 <_svfprintf_r+0xc16>
   81c60:	4650      	mov	r0, sl
   81c62:	4659      	mov	r1, fp
   81c64:	aa25      	add	r2, sp, #148	; 0x94
   81c66:	f002 f94d 	bl	83f04 <__ssprint_r>
   81c6a:	2800      	cmp	r0, #0
   81c6c:	f040 8181 	bne.w	81f72 <_svfprintf_r+0xf16>
   81c70:	ae32      	add	r6, sp, #200	; 0xc8
   81c72:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
   81c76:	ebc9 0904 	rsb	r9, r9, r4
   81c7a:	f1b9 0f00 	cmp.w	r9, #0
   81c7e:	dd31      	ble.n	81ce4 <_svfprintf_r+0xc88>
   81c80:	4b9a      	ldr	r3, [pc, #616]	; (81eec <_svfprintf_r+0xe90>)
   81c82:	f1b9 0f10 	cmp.w	r9, #16
   81c86:	6033      	str	r3, [r6, #0]
   81c88:	dd17      	ble.n	81cba <_svfprintf_r+0xc5e>
   81c8a:	2310      	movs	r3, #16
   81c8c:	6073      	str	r3, [r6, #4]
   81c8e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81c90:	3310      	adds	r3, #16
   81c92:	9327      	str	r3, [sp, #156]	; 0x9c
   81c94:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81c96:	3301      	adds	r3, #1
   81c98:	2b07      	cmp	r3, #7
   81c9a:	9326      	str	r3, [sp, #152]	; 0x98
   81c9c:	dc01      	bgt.n	81ca2 <_svfprintf_r+0xc46>
   81c9e:	3608      	adds	r6, #8
   81ca0:	e008      	b.n	81cb4 <_svfprintf_r+0xc58>
   81ca2:	4650      	mov	r0, sl
   81ca4:	4659      	mov	r1, fp
   81ca6:	aa25      	add	r2, sp, #148	; 0x94
   81ca8:	f002 f92c 	bl	83f04 <__ssprint_r>
   81cac:	2800      	cmp	r0, #0
   81cae:	f040 8160 	bne.w	81f72 <_svfprintf_r+0xf16>
   81cb2:	ae32      	add	r6, sp, #200	; 0xc8
   81cb4:	f1a9 0910 	sub.w	r9, r9, #16
   81cb8:	e7e2      	b.n	81c80 <_svfprintf_r+0xc24>
   81cba:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81cbc:	f8c6 9004 	str.w	r9, [r6, #4]
   81cc0:	444b      	add	r3, r9
   81cc2:	9327      	str	r3, [sp, #156]	; 0x9c
   81cc4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81cc6:	3301      	adds	r3, #1
   81cc8:	2b07      	cmp	r3, #7
   81cca:	9326      	str	r3, [sp, #152]	; 0x98
   81ccc:	dc01      	bgt.n	81cd2 <_svfprintf_r+0xc76>
   81cce:	3608      	adds	r6, #8
   81cd0:	e008      	b.n	81ce4 <_svfprintf_r+0xc88>
   81cd2:	4650      	mov	r0, sl
   81cd4:	4659      	mov	r1, fp
   81cd6:	aa25      	add	r2, sp, #148	; 0x94
   81cd8:	f002 f914 	bl	83f04 <__ssprint_r>
   81cdc:	2800      	cmp	r0, #0
   81cde:	f040 8148 	bne.w	81f72 <_svfprintf_r+0xf16>
   81ce2:	ae32      	add	r6, sp, #200	; 0xc8
   81ce4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81ce6:	9809      	ldr	r0, [sp, #36]	; 0x24
   81ce8:	9a07      	ldr	r2, [sp, #28]
   81cea:	4283      	cmp	r3, r0
   81cec:	4414      	add	r4, r2
   81cee:	db01      	blt.n	81cf4 <_svfprintf_r+0xc98>
   81cf0:	07f9      	lsls	r1, r7, #31
   81cf2:	d516      	bpl.n	81d22 <_svfprintf_r+0xcc6>
   81cf4:	9a10      	ldr	r2, [sp, #64]	; 0x40
   81cf6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81cf8:	9918      	ldr	r1, [sp, #96]	; 0x60
   81cfa:	4413      	add	r3, r2
   81cfc:	9327      	str	r3, [sp, #156]	; 0x9c
   81cfe:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81d00:	6031      	str	r1, [r6, #0]
   81d02:	3301      	adds	r3, #1
   81d04:	2b07      	cmp	r3, #7
   81d06:	6072      	str	r2, [r6, #4]
   81d08:	9326      	str	r3, [sp, #152]	; 0x98
   81d0a:	dc01      	bgt.n	81d10 <_svfprintf_r+0xcb4>
   81d0c:	3608      	adds	r6, #8
   81d0e:	e008      	b.n	81d22 <_svfprintf_r+0xcc6>
   81d10:	4650      	mov	r0, sl
   81d12:	4659      	mov	r1, fp
   81d14:	aa25      	add	r2, sp, #148	; 0x94
   81d16:	f002 f8f5 	bl	83f04 <__ssprint_r>
   81d1a:	2800      	cmp	r0, #0
   81d1c:	f040 8129 	bne.w	81f72 <_svfprintf_r+0xf16>
   81d20:	ae32      	add	r6, sp, #200	; 0xc8
   81d22:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81d24:	9809      	ldr	r0, [sp, #36]	; 0x24
   81d26:	1b2d      	subs	r5, r5, r4
   81d28:	1ac3      	subs	r3, r0, r3
   81d2a:	429d      	cmp	r5, r3
   81d2c:	bfa8      	it	ge
   81d2e:	461d      	movge	r5, r3
   81d30:	2d00      	cmp	r5, #0
   81d32:	dd14      	ble.n	81d5e <_svfprintf_r+0xd02>
   81d34:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81d36:	e886 0030 	stmia.w	r6, {r4, r5}
   81d3a:	442b      	add	r3, r5
   81d3c:	9327      	str	r3, [sp, #156]	; 0x9c
   81d3e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81d40:	3301      	adds	r3, #1
   81d42:	2b07      	cmp	r3, #7
   81d44:	9326      	str	r3, [sp, #152]	; 0x98
   81d46:	dc01      	bgt.n	81d4c <_svfprintf_r+0xcf0>
   81d48:	3608      	adds	r6, #8
   81d4a:	e008      	b.n	81d5e <_svfprintf_r+0xd02>
   81d4c:	4650      	mov	r0, sl
   81d4e:	4659      	mov	r1, fp
   81d50:	aa25      	add	r2, sp, #148	; 0x94
   81d52:	f002 f8d7 	bl	83f04 <__ssprint_r>
   81d56:	2800      	cmp	r0, #0
   81d58:	f040 810b 	bne.w	81f72 <_svfprintf_r+0xf16>
   81d5c:	ae32      	add	r6, sp, #200	; 0xc8
   81d5e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81d60:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81d62:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
   81d66:	1ae3      	subs	r3, r4, r3
   81d68:	1b5d      	subs	r5, r3, r5
   81d6a:	2d00      	cmp	r5, #0
   81d6c:	f340 80b0 	ble.w	81ed0 <_svfprintf_r+0xe74>
   81d70:	4b5e      	ldr	r3, [pc, #376]	; (81eec <_svfprintf_r+0xe90>)
   81d72:	2d10      	cmp	r5, #16
   81d74:	6033      	str	r3, [r6, #0]
   81d76:	dd16      	ble.n	81da6 <_svfprintf_r+0xd4a>
   81d78:	2310      	movs	r3, #16
   81d7a:	6073      	str	r3, [r6, #4]
   81d7c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81d7e:	3310      	adds	r3, #16
   81d80:	9327      	str	r3, [sp, #156]	; 0x9c
   81d82:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81d84:	3301      	adds	r3, #1
   81d86:	2b07      	cmp	r3, #7
   81d88:	9326      	str	r3, [sp, #152]	; 0x98
   81d8a:	dc01      	bgt.n	81d90 <_svfprintf_r+0xd34>
   81d8c:	3608      	adds	r6, #8
   81d8e:	e008      	b.n	81da2 <_svfprintf_r+0xd46>
   81d90:	4650      	mov	r0, sl
   81d92:	4659      	mov	r1, fp
   81d94:	aa25      	add	r2, sp, #148	; 0x94
   81d96:	f002 f8b5 	bl	83f04 <__ssprint_r>
   81d9a:	2800      	cmp	r0, #0
   81d9c:	f040 80e9 	bne.w	81f72 <_svfprintf_r+0xf16>
   81da0:	ae32      	add	r6, sp, #200	; 0xc8
   81da2:	3d10      	subs	r5, #16
   81da4:	e7e4      	b.n	81d70 <_svfprintf_r+0xd14>
   81da6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81da8:	6075      	str	r5, [r6, #4]
   81daa:	441d      	add	r5, r3
   81dac:	9527      	str	r5, [sp, #156]	; 0x9c
   81dae:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81db0:	3301      	adds	r3, #1
   81db2:	2b07      	cmp	r3, #7
   81db4:	9326      	str	r3, [sp, #152]	; 0x98
   81db6:	f340 808a 	ble.w	81ece <_svfprintf_r+0xe72>
   81dba:	4650      	mov	r0, sl
   81dbc:	4659      	mov	r1, fp
   81dbe:	aa25      	add	r2, sp, #148	; 0x94
   81dc0:	f002 f8a0 	bl	83f04 <__ssprint_r>
   81dc4:	2800      	cmp	r0, #0
   81dc6:	f040 80d4 	bne.w	81f72 <_svfprintf_r+0xf16>
   81dca:	ae32      	add	r6, sp, #200	; 0xc8
   81dcc:	e080      	b.n	81ed0 <_svfprintf_r+0xe74>
   81dce:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81dd0:	2d01      	cmp	r5, #1
   81dd2:	dc01      	bgt.n	81dd8 <_svfprintf_r+0xd7c>
   81dd4:	07fa      	lsls	r2, r7, #31
   81dd6:	d56d      	bpl.n	81eb4 <_svfprintf_r+0xe58>
   81dd8:	2301      	movs	r3, #1
   81dda:	6073      	str	r3, [r6, #4]
   81ddc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81dde:	9c07      	ldr	r4, [sp, #28]
   81de0:	3301      	adds	r3, #1
   81de2:	9327      	str	r3, [sp, #156]	; 0x9c
   81de4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81de6:	6034      	str	r4, [r6, #0]
   81de8:	3301      	adds	r3, #1
   81dea:	2b07      	cmp	r3, #7
   81dec:	9326      	str	r3, [sp, #152]	; 0x98
   81dee:	dc01      	bgt.n	81df4 <_svfprintf_r+0xd98>
   81df0:	3608      	adds	r6, #8
   81df2:	e008      	b.n	81e06 <_svfprintf_r+0xdaa>
   81df4:	4650      	mov	r0, sl
   81df6:	4659      	mov	r1, fp
   81df8:	aa25      	add	r2, sp, #148	; 0x94
   81dfa:	f002 f883 	bl	83f04 <__ssprint_r>
   81dfe:	2800      	cmp	r0, #0
   81e00:	f040 80b7 	bne.w	81f72 <_svfprintf_r+0xf16>
   81e04:	ae32      	add	r6, sp, #200	; 0xc8
   81e06:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81e08:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81e0a:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81e0c:	4423      	add	r3, r4
   81e0e:	9327      	str	r3, [sp, #156]	; 0x9c
   81e10:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81e12:	6035      	str	r5, [r6, #0]
   81e14:	3301      	adds	r3, #1
   81e16:	2b07      	cmp	r3, #7
   81e18:	6074      	str	r4, [r6, #4]
   81e1a:	9326      	str	r3, [sp, #152]	; 0x98
   81e1c:	dc01      	bgt.n	81e22 <_svfprintf_r+0xdc6>
   81e1e:	3608      	adds	r6, #8
   81e20:	e008      	b.n	81e34 <_svfprintf_r+0xdd8>
   81e22:	4650      	mov	r0, sl
   81e24:	4659      	mov	r1, fp
   81e26:	aa25      	add	r2, sp, #148	; 0x94
   81e28:	f002 f86c 	bl	83f04 <__ssprint_r>
   81e2c:	2800      	cmp	r0, #0
   81e2e:	f040 80a0 	bne.w	81f72 <_svfprintf_r+0xf16>
   81e32:	ae32      	add	r6, sp, #200	; 0xc8
   81e34:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   81e38:	2200      	movs	r2, #0
   81e3a:	2300      	movs	r3, #0
   81e3c:	f003 f968 	bl	85110 <__aeabi_dcmpeq>
   81e40:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81e42:	1e6c      	subs	r4, r5, #1
   81e44:	b940      	cbnz	r0, 81e58 <_svfprintf_r+0xdfc>
   81e46:	9d07      	ldr	r5, [sp, #28]
   81e48:	1c6b      	adds	r3, r5, #1
   81e4a:	e886 0018 	stmia.w	r6, {r3, r4}
   81e4e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81e50:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81e52:	3b01      	subs	r3, #1
   81e54:	4423      	add	r3, r4
   81e56:	e033      	b.n	81ec0 <_svfprintf_r+0xe64>
   81e58:	2c00      	cmp	r4, #0
   81e5a:	dd34      	ble.n	81ec6 <_svfprintf_r+0xe6a>
   81e5c:	4b23      	ldr	r3, [pc, #140]	; (81eec <_svfprintf_r+0xe90>)
   81e5e:	2c10      	cmp	r4, #16
   81e60:	6033      	str	r3, [r6, #0]
   81e62:	dd15      	ble.n	81e90 <_svfprintf_r+0xe34>
   81e64:	2310      	movs	r3, #16
   81e66:	6073      	str	r3, [r6, #4]
   81e68:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81e6a:	3310      	adds	r3, #16
   81e6c:	9327      	str	r3, [sp, #156]	; 0x9c
   81e6e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81e70:	3301      	adds	r3, #1
   81e72:	2b07      	cmp	r3, #7
   81e74:	9326      	str	r3, [sp, #152]	; 0x98
   81e76:	dc01      	bgt.n	81e7c <_svfprintf_r+0xe20>
   81e78:	3608      	adds	r6, #8
   81e7a:	e007      	b.n	81e8c <_svfprintf_r+0xe30>
   81e7c:	4650      	mov	r0, sl
   81e7e:	4659      	mov	r1, fp
   81e80:	aa25      	add	r2, sp, #148	; 0x94
   81e82:	f002 f83f 	bl	83f04 <__ssprint_r>
   81e86:	2800      	cmp	r0, #0
   81e88:	d173      	bne.n	81f72 <_svfprintf_r+0xf16>
   81e8a:	ae32      	add	r6, sp, #200	; 0xc8
   81e8c:	3c10      	subs	r4, #16
   81e8e:	e7e5      	b.n	81e5c <_svfprintf_r+0xe00>
   81e90:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81e92:	6074      	str	r4, [r6, #4]
   81e94:	441c      	add	r4, r3
   81e96:	9427      	str	r4, [sp, #156]	; 0x9c
   81e98:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81e9a:	3301      	adds	r3, #1
   81e9c:	2b07      	cmp	r3, #7
   81e9e:	9326      	str	r3, [sp, #152]	; 0x98
   81ea0:	dd10      	ble.n	81ec4 <_svfprintf_r+0xe68>
   81ea2:	4650      	mov	r0, sl
   81ea4:	4659      	mov	r1, fp
   81ea6:	aa25      	add	r2, sp, #148	; 0x94
   81ea8:	f002 f82c 	bl	83f04 <__ssprint_r>
   81eac:	2800      	cmp	r0, #0
   81eae:	d160      	bne.n	81f72 <_svfprintf_r+0xf16>
   81eb0:	ae32      	add	r6, sp, #200	; 0xc8
   81eb2:	e008      	b.n	81ec6 <_svfprintf_r+0xe6a>
   81eb4:	2301      	movs	r3, #1
   81eb6:	9d07      	ldr	r5, [sp, #28]
   81eb8:	6073      	str	r3, [r6, #4]
   81eba:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81ebc:	6035      	str	r5, [r6, #0]
   81ebe:	3301      	adds	r3, #1
   81ec0:	9327      	str	r3, [sp, #156]	; 0x9c
   81ec2:	e7e9      	b.n	81e98 <_svfprintf_r+0xe3c>
   81ec4:	3608      	adds	r6, #8
   81ec6:	ab21      	add	r3, sp, #132	; 0x84
   81ec8:	6033      	str	r3, [r6, #0]
   81eca:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   81ecc:	e6ac      	b.n	81c28 <_svfprintf_r+0xbcc>
   81ece:	3608      	adds	r6, #8
   81ed0:	077b      	lsls	r3, r7, #29
   81ed2:	d40d      	bmi.n	81ef0 <_svfprintf_r+0xe94>
   81ed4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81ed6:	980a      	ldr	r0, [sp, #40]	; 0x28
   81ed8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81eda:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81edc:	42a0      	cmp	r0, r4
   81ede:	bfac      	ite	ge
   81ee0:	182d      	addge	r5, r5, r0
   81ee2:	192d      	addlt	r5, r5, r4
   81ee4:	950f      	str	r5, [sp, #60]	; 0x3c
   81ee6:	2b00      	cmp	r3, #0
   81ee8:	d037      	beq.n	81f5a <_svfprintf_r+0xefe>
   81eea:	e030      	b.n	81f4e <_svfprintf_r+0xef2>
   81eec:	000857c6 	.word	0x000857c6
   81ef0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   81ef2:	980a      	ldr	r0, [sp, #40]	; 0x28
   81ef4:	1a2c      	subs	r4, r5, r0
   81ef6:	2c00      	cmp	r4, #0
   81ef8:	ddec      	ble.n	81ed4 <_svfprintf_r+0xe78>
   81efa:	4b23      	ldr	r3, [pc, #140]	; (81f88 <_svfprintf_r+0xf2c>)
   81efc:	2c10      	cmp	r4, #16
   81efe:	6033      	str	r3, [r6, #0]
   81f00:	dd14      	ble.n	81f2c <_svfprintf_r+0xed0>
   81f02:	2310      	movs	r3, #16
   81f04:	6073      	str	r3, [r6, #4]
   81f06:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81f08:	3310      	adds	r3, #16
   81f0a:	9327      	str	r3, [sp, #156]	; 0x9c
   81f0c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81f0e:	3301      	adds	r3, #1
   81f10:	2b07      	cmp	r3, #7
   81f12:	9326      	str	r3, [sp, #152]	; 0x98
   81f14:	dc01      	bgt.n	81f1a <_svfprintf_r+0xebe>
   81f16:	3608      	adds	r6, #8
   81f18:	e006      	b.n	81f28 <_svfprintf_r+0xecc>
   81f1a:	4650      	mov	r0, sl
   81f1c:	4659      	mov	r1, fp
   81f1e:	aa25      	add	r2, sp, #148	; 0x94
   81f20:	f001 fff0 	bl	83f04 <__ssprint_r>
   81f24:	bb28      	cbnz	r0, 81f72 <_svfprintf_r+0xf16>
   81f26:	ae32      	add	r6, sp, #200	; 0xc8
   81f28:	3c10      	subs	r4, #16
   81f2a:	e7e6      	b.n	81efa <_svfprintf_r+0xe9e>
   81f2c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81f2e:	6074      	str	r4, [r6, #4]
   81f30:	441c      	add	r4, r3
   81f32:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81f34:	9427      	str	r4, [sp, #156]	; 0x9c
   81f36:	3301      	adds	r3, #1
   81f38:	2b07      	cmp	r3, #7
   81f3a:	9326      	str	r3, [sp, #152]	; 0x98
   81f3c:	ddca      	ble.n	81ed4 <_svfprintf_r+0xe78>
   81f3e:	4650      	mov	r0, sl
   81f40:	4659      	mov	r1, fp
   81f42:	aa25      	add	r2, sp, #148	; 0x94
   81f44:	f001 ffde 	bl	83f04 <__ssprint_r>
   81f48:	2800      	cmp	r0, #0
   81f4a:	d0c3      	beq.n	81ed4 <_svfprintf_r+0xe78>
   81f4c:	e011      	b.n	81f72 <_svfprintf_r+0xf16>
   81f4e:	4650      	mov	r0, sl
   81f50:	4659      	mov	r1, fp
   81f52:	aa25      	add	r2, sp, #148	; 0x94
   81f54:	f001 ffd6 	bl	83f04 <__ssprint_r>
   81f58:	b958      	cbnz	r0, 81f72 <_svfprintf_r+0xf16>
   81f5a:	2300      	movs	r3, #0
   81f5c:	9326      	str	r3, [sp, #152]	; 0x98
   81f5e:	ae32      	add	r6, sp, #200	; 0xc8
   81f60:	f7ff b8b1 	b.w	810c6 <_svfprintf_r+0x6a>
   81f64:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81f66:	b123      	cbz	r3, 81f72 <_svfprintf_r+0xf16>
   81f68:	4650      	mov	r0, sl
   81f6a:	4659      	mov	r1, fp
   81f6c:	aa25      	add	r2, sp, #148	; 0x94
   81f6e:	f001 ffc9 	bl	83f04 <__ssprint_r>
   81f72:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   81f76:	980f      	ldr	r0, [sp, #60]	; 0x3c
   81f78:	f013 0f40 	tst.w	r3, #64	; 0x40
   81f7c:	bf18      	it	ne
   81f7e:	f04f 30ff 	movne.w	r0, #4294967295
   81f82:	b043      	add	sp, #268	; 0x10c
   81f84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81f88:	000857b6 	.word	0x000857b6

00081f8c <register_fini>:
   81f8c:	4b02      	ldr	r3, [pc, #8]	; (81f98 <register_fini+0xc>)
   81f8e:	b113      	cbz	r3, 81f96 <register_fini+0xa>
   81f90:	4802      	ldr	r0, [pc, #8]	; (81f9c <register_fini+0x10>)
   81f92:	f000 b805 	b.w	81fa0 <atexit>
   81f96:	4770      	bx	lr
   81f98:	00000000 	.word	0x00000000
   81f9c:	00082c31 	.word	0x00082c31

00081fa0 <atexit>:
   81fa0:	4601      	mov	r1, r0
   81fa2:	2000      	movs	r0, #0
   81fa4:	4602      	mov	r2, r0
   81fa6:	4603      	mov	r3, r0
   81fa8:	f002 bc18 	b.w	847dc <__register_exitproc>
   81fac:	0000      	movs	r0, r0
	...

00081fb0 <quorem>:
   81fb0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81fb4:	6903      	ldr	r3, [r0, #16]
   81fb6:	690c      	ldr	r4, [r1, #16]
   81fb8:	4680      	mov	r8, r0
   81fba:	42a3      	cmp	r3, r4
   81fbc:	f2c0 8083 	blt.w	820c6 <quorem+0x116>
   81fc0:	3c01      	subs	r4, #1
   81fc2:	00a2      	lsls	r2, r4, #2
   81fc4:	f101 0714 	add.w	r7, r1, #20
   81fc8:	f100 0514 	add.w	r5, r0, #20
   81fcc:	4691      	mov	r9, r2
   81fce:	9200      	str	r2, [sp, #0]
   81fd0:	f857 6024 	ldr.w	r6, [r7, r4, lsl #2]
   81fd4:	442a      	add	r2, r5
   81fd6:	9201      	str	r2, [sp, #4]
   81fd8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
   81fdc:	3601      	adds	r6, #1
   81fde:	fbb2 f6f6 	udiv	r6, r2, r6
   81fe2:	44b9      	add	r9, r7
   81fe4:	2e00      	cmp	r6, #0
   81fe6:	d03b      	beq.n	82060 <quorem+0xb0>
   81fe8:	f04f 0e00 	mov.w	lr, #0
   81fec:	463a      	mov	r2, r7
   81fee:	4628      	mov	r0, r5
   81ff0:	46f3      	mov	fp, lr
   81ff2:	f852 cb04 	ldr.w	ip, [r2], #4
   81ff6:	6803      	ldr	r3, [r0, #0]
   81ff8:	fa1f fa8c 	uxth.w	sl, ip
   81ffc:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
   82000:	fb0a ea06 	mla	sl, sl, r6, lr
   82004:	fb0c fc06 	mul.w	ip, ip, r6
   82008:	eb0c 4c1a 	add.w	ip, ip, sl, lsr #16
   8200c:	fa1f fa8a 	uxth.w	sl, sl
   82010:	ebca 0b0b 	rsb	fp, sl, fp
   82014:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
   82018:	fa1f fa83 	uxth.w	sl, r3
   8201c:	fa1f fc8c 	uxth.w	ip, ip
   82020:	44da      	add	sl, fp
   82022:	ebcc 4c13 	rsb	ip, ip, r3, lsr #16
   82026:	eb0c 4c2a 	add.w	ip, ip, sl, asr #16
   8202a:	fa1f fa8a 	uxth.w	sl, sl
   8202e:	ea4a 4a0c 	orr.w	sl, sl, ip, lsl #16
   82032:	454a      	cmp	r2, r9
   82034:	ea4f 4b2c 	mov.w	fp, ip, asr #16
   82038:	f840 ab04 	str.w	sl, [r0], #4
   8203c:	d9d9      	bls.n	81ff2 <quorem+0x42>
   8203e:	9a00      	ldr	r2, [sp, #0]
   82040:	58ab      	ldr	r3, [r5, r2]
   82042:	b96b      	cbnz	r3, 82060 <quorem+0xb0>
   82044:	9a01      	ldr	r2, [sp, #4]
   82046:	1f13      	subs	r3, r2, #4
   82048:	42ab      	cmp	r3, r5
   8204a:	461a      	mov	r2, r3
   8204c:	d802      	bhi.n	82054 <quorem+0xa4>
   8204e:	f8c8 4010 	str.w	r4, [r8, #16]
   82052:	e005      	b.n	82060 <quorem+0xb0>
   82054:	6812      	ldr	r2, [r2, #0]
   82056:	3b04      	subs	r3, #4
   82058:	2a00      	cmp	r2, #0
   8205a:	d1f8      	bne.n	8204e <quorem+0x9e>
   8205c:	3c01      	subs	r4, #1
   8205e:	e7f3      	b.n	82048 <quorem+0x98>
   82060:	4640      	mov	r0, r8
   82062:	f001 fbaa 	bl	837ba <__mcmp>
   82066:	2800      	cmp	r0, #0
   82068:	db2b      	blt.n	820c2 <quorem+0x112>
   8206a:	3601      	adds	r6, #1
   8206c:	462b      	mov	r3, r5
   8206e:	2000      	movs	r0, #0
   82070:	f857 cb04 	ldr.w	ip, [r7], #4
   82074:	681a      	ldr	r2, [r3, #0]
   82076:	fa1f f18c 	uxth.w	r1, ip
   8207a:	1a41      	subs	r1, r0, r1
   8207c:	fa1f fa82 	uxth.w	sl, r2
   82080:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
   82084:	4451      	add	r1, sl
   82086:	ebcc 4212 	rsb	r2, ip, r2, lsr #16
   8208a:	eb02 4221 	add.w	r2, r2, r1, asr #16
   8208e:	b289      	uxth	r1, r1
   82090:	1410      	asrs	r0, r2, #16
   82092:	454f      	cmp	r7, r9
   82094:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
   82098:	f843 2b04 	str.w	r2, [r3], #4
   8209c:	d9e8      	bls.n	82070 <quorem+0xc0>
   8209e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
   820a2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
   820a6:	b962      	cbnz	r2, 820c2 <quorem+0x112>
   820a8:	3b04      	subs	r3, #4
   820aa:	42ab      	cmp	r3, r5
   820ac:	461a      	mov	r2, r3
   820ae:	d802      	bhi.n	820b6 <quorem+0x106>
   820b0:	f8c8 4010 	str.w	r4, [r8, #16]
   820b4:	e005      	b.n	820c2 <quorem+0x112>
   820b6:	6812      	ldr	r2, [r2, #0]
   820b8:	3b04      	subs	r3, #4
   820ba:	2a00      	cmp	r2, #0
   820bc:	d1f8      	bne.n	820b0 <quorem+0x100>
   820be:	3c01      	subs	r4, #1
   820c0:	e7f3      	b.n	820aa <quorem+0xfa>
   820c2:	4630      	mov	r0, r6
   820c4:	e000      	b.n	820c8 <quorem+0x118>
   820c6:	2000      	movs	r0, #0
   820c8:	b003      	add	sp, #12
   820ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000820ce <_dtoa_r>:
   820ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   820d2:	6c01      	ldr	r1, [r0, #64]	; 0x40
   820d4:	b09b      	sub	sp, #108	; 0x6c
   820d6:	4682      	mov	sl, r0
   820d8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   820da:	e9cd 2304 	strd	r2, r3, [sp, #16]
   820de:	b151      	cbz	r1, 820f6 <_dtoa_r+0x28>
   820e0:	6c43      	ldr	r3, [r0, #68]	; 0x44
   820e2:	2201      	movs	r2, #1
   820e4:	604b      	str	r3, [r1, #4]
   820e6:	fa02 f303 	lsl.w	r3, r2, r3
   820ea:	608b      	str	r3, [r1, #8]
   820ec:	f001 f960 	bl	833b0 <_Bfree>
   820f0:	2300      	movs	r3, #0
   820f2:	f8ca 3040 	str.w	r3, [sl, #64]	; 0x40
   820f6:	9805      	ldr	r0, [sp, #20]
   820f8:	2800      	cmp	r0, #0
   820fa:	da05      	bge.n	82108 <_dtoa_r+0x3a>
   820fc:	2301      	movs	r3, #1
   820fe:	f020 4100 	bic.w	r1, r0, #2147483648	; 0x80000000
   82102:	6023      	str	r3, [r4, #0]
   82104:	9105      	str	r1, [sp, #20]
   82106:	e001      	b.n	8210c <_dtoa_r+0x3e>
   82108:	2300      	movs	r3, #0
   8210a:	6023      	str	r3, [r4, #0]
   8210c:	9f05      	ldr	r7, [sp, #20]
   8210e:	4a9c      	ldr	r2, [pc, #624]	; (82380 <_dtoa_r+0x2b2>)
   82110:	f027 4300 	bic.w	r3, r7, #2147483648	; 0x80000000
   82114:	0d1b      	lsrs	r3, r3, #20
   82116:	051b      	lsls	r3, r3, #20
   82118:	4293      	cmp	r3, r2
   8211a:	d11d      	bne.n	82158 <_dtoa_r+0x8a>
   8211c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8211e:	f242 730f 	movw	r3, #9999	; 0x270f
   82122:	6013      	str	r3, [r2, #0]
   82124:	9b04      	ldr	r3, [sp, #16]
   82126:	b943      	cbnz	r3, 8213a <_dtoa_r+0x6c>
   82128:	4b96      	ldr	r3, [pc, #600]	; (82384 <_dtoa_r+0x2b6>)
   8212a:	4a97      	ldr	r2, [pc, #604]	; (82388 <_dtoa_r+0x2ba>)
   8212c:	f3c7 0013 	ubfx	r0, r7, #0, #20
   82130:	2800      	cmp	r0, #0
   82132:	bf0c      	ite	eq
   82134:	4610      	moveq	r0, r2
   82136:	4618      	movne	r0, r3
   82138:	e000      	b.n	8213c <_dtoa_r+0x6e>
   8213a:	4892      	ldr	r0, [pc, #584]	; (82384 <_dtoa_r+0x2b6>)
   8213c:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   8213e:	2f00      	cmp	r7, #0
   82140:	f000 856f 	beq.w	82c22 <_dtoa_r+0xb54>
   82144:	78c3      	ldrb	r3, [r0, #3]
   82146:	b113      	cbz	r3, 8214e <_dtoa_r+0x80>
   82148:	f100 0308 	add.w	r3, r0, #8
   8214c:	e000      	b.n	82150 <_dtoa_r+0x82>
   8214e:	1cc3      	adds	r3, r0, #3
   82150:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   82152:	603b      	str	r3, [r7, #0]
   82154:	f000 bd65 	b.w	82c22 <_dtoa_r+0xb54>
   82158:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
   8215c:	2200      	movs	r2, #0
   8215e:	4620      	mov	r0, r4
   82160:	4629      	mov	r1, r5
   82162:	2300      	movs	r3, #0
   82164:	f002 ffd4 	bl	85110 <__aeabi_dcmpeq>
   82168:	4680      	mov	r8, r0
   8216a:	b158      	cbz	r0, 82184 <_dtoa_r+0xb6>
   8216c:	9f26      	ldr	r7, [sp, #152]	; 0x98
   8216e:	2301      	movs	r3, #1
   82170:	603b      	str	r3, [r7, #0]
   82172:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   82174:	2f00      	cmp	r7, #0
   82176:	f000 8551 	beq.w	82c1c <_dtoa_r+0xb4e>
   8217a:	4884      	ldr	r0, [pc, #528]	; (8238c <_dtoa_r+0x2be>)
   8217c:	6038      	str	r0, [r7, #0]
   8217e:	3801      	subs	r0, #1
   82180:	f000 bd4f 	b.w	82c22 <_dtoa_r+0xb54>
   82184:	ab19      	add	r3, sp, #100	; 0x64
   82186:	9300      	str	r3, [sp, #0]
   82188:	ab18      	add	r3, sp, #96	; 0x60
   8218a:	9301      	str	r3, [sp, #4]
   8218c:	4650      	mov	r0, sl
   8218e:	4622      	mov	r2, r4
   82190:	462b      	mov	r3, r5
   82192:	f001 fc02 	bl	8399a <__d2b>
   82196:	f3c7 560a 	ubfx	r6, r7, #20, #11
   8219a:	4683      	mov	fp, r0
   8219c:	b15e      	cbz	r6, 821b6 <_dtoa_r+0xe8>
   8219e:	f3c5 0313 	ubfx	r3, r5, #0, #20
   821a2:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   821a6:	4620      	mov	r0, r4
   821a8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   821ac:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
   821b0:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
   821b4:	e01c      	b.n	821f0 <_dtoa_r+0x122>
   821b6:	9b19      	ldr	r3, [sp, #100]	; 0x64
   821b8:	9e18      	ldr	r6, [sp, #96]	; 0x60
   821ba:	441e      	add	r6, r3
   821bc:	f46f 6382 	mvn.w	r3, #1040	; 0x410
   821c0:	429e      	cmp	r6, r3
   821c2:	db09      	blt.n	821d8 <_dtoa_r+0x10a>
   821c4:	9904      	ldr	r1, [sp, #16]
   821c6:	331f      	adds	r3, #31
   821c8:	f206 4012 	addw	r0, r6, #1042	; 0x412
   821cc:	1b9b      	subs	r3, r3, r6
   821ce:	fa21 f000 	lsr.w	r0, r1, r0
   821d2:	409f      	lsls	r7, r3
   821d4:	4338      	orrs	r0, r7
   821d6:	e004      	b.n	821e2 <_dtoa_r+0x114>
   821d8:	486d      	ldr	r0, [pc, #436]	; (82390 <_dtoa_r+0x2c2>)
   821da:	9a04      	ldr	r2, [sp, #16]
   821dc:	1b80      	subs	r0, r0, r6
   821de:	fa02 f000 	lsl.w	r0, r2, r0
   821e2:	f002 fcb7 	bl	84b54 <__aeabi_ui2d>
   821e6:	2701      	movs	r7, #1
   821e8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   821ec:	3e01      	subs	r6, #1
   821ee:	9715      	str	r7, [sp, #84]	; 0x54
   821f0:	2200      	movs	r2, #0
   821f2:	4b68      	ldr	r3, [pc, #416]	; (82394 <_dtoa_r+0x2c6>)
   821f4:	f002 fb70 	bl	848d8 <__aeabi_dsub>
   821f8:	a35b      	add	r3, pc, #364	; (adr r3, 82368 <_dtoa_r+0x29a>)
   821fa:	e9d3 2300 	ldrd	r2, r3, [r3]
   821fe:	f002 fd1f 	bl	84c40 <__aeabi_dmul>
   82202:	a35b      	add	r3, pc, #364	; (adr r3, 82370 <_dtoa_r+0x2a2>)
   82204:	e9d3 2300 	ldrd	r2, r3, [r3]
   82208:	f002 fb68 	bl	848dc <__adddf3>
   8220c:	4604      	mov	r4, r0
   8220e:	4630      	mov	r0, r6
   82210:	460d      	mov	r5, r1
   82212:	f002 fcaf 	bl	84b74 <__aeabi_i2d>
   82216:	a358      	add	r3, pc, #352	; (adr r3, 82378 <_dtoa_r+0x2aa>)
   82218:	e9d3 2300 	ldrd	r2, r3, [r3]
   8221c:	f002 fd10 	bl	84c40 <__aeabi_dmul>
   82220:	4602      	mov	r2, r0
   82222:	460b      	mov	r3, r1
   82224:	4620      	mov	r0, r4
   82226:	4629      	mov	r1, r5
   82228:	f002 fb58 	bl	848dc <__adddf3>
   8222c:	4604      	mov	r4, r0
   8222e:	460d      	mov	r5, r1
   82230:	f002 ffa0 	bl	85174 <__aeabi_d2iz>
   82234:	4629      	mov	r1, r5
   82236:	4681      	mov	r9, r0
   82238:	2200      	movs	r2, #0
   8223a:	4620      	mov	r0, r4
   8223c:	2300      	movs	r3, #0
   8223e:	f002 ff71 	bl	85124 <__aeabi_dcmplt>
   82242:	b158      	cbz	r0, 8225c <_dtoa_r+0x18e>
   82244:	4648      	mov	r0, r9
   82246:	f002 fc95 	bl	84b74 <__aeabi_i2d>
   8224a:	4602      	mov	r2, r0
   8224c:	460b      	mov	r3, r1
   8224e:	4620      	mov	r0, r4
   82250:	4629      	mov	r1, r5
   82252:	f002 ff5d 	bl	85110 <__aeabi_dcmpeq>
   82256:	b908      	cbnz	r0, 8225c <_dtoa_r+0x18e>
   82258:	f109 39ff 	add.w	r9, r9, #4294967295
   8225c:	f1b9 0f16 	cmp.w	r9, #22
   82260:	d80d      	bhi.n	8227e <_dtoa_r+0x1b0>
   82262:	4b4d      	ldr	r3, [pc, #308]	; (82398 <_dtoa_r+0x2ca>)
   82264:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
   82268:	e9d3 0100 	ldrd	r0, r1, [r3]
   8226c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   82270:	f002 ff76 	bl	85160 <__aeabi_dcmpgt>
   82274:	b130      	cbz	r0, 82284 <_dtoa_r+0x1b6>
   82276:	f109 39ff 	add.w	r9, r9, #4294967295
   8227a:	2700      	movs	r7, #0
   8227c:	e000      	b.n	82280 <_dtoa_r+0x1b2>
   8227e:	2701      	movs	r7, #1
   82280:	9714      	str	r7, [sp, #80]	; 0x50
   82282:	e000      	b.n	82286 <_dtoa_r+0x1b8>
   82284:	9014      	str	r0, [sp, #80]	; 0x50
   82286:	9b18      	ldr	r3, [sp, #96]	; 0x60
   82288:	1b9e      	subs	r6, r3, r6
   8228a:	3e01      	subs	r6, #1
   8228c:	960a      	str	r6, [sp, #40]	; 0x28
   8228e:	d504      	bpl.n	8229a <_dtoa_r+0x1cc>
   82290:	4277      	negs	r7, r6
   82292:	9708      	str	r7, [sp, #32]
   82294:	2700      	movs	r7, #0
   82296:	970a      	str	r7, [sp, #40]	; 0x28
   82298:	e001      	b.n	8229e <_dtoa_r+0x1d0>
   8229a:	2700      	movs	r7, #0
   8229c:	9708      	str	r7, [sp, #32]
   8229e:	f1b9 0f00 	cmp.w	r9, #0
   822a2:	db07      	blt.n	822b4 <_dtoa_r+0x1e6>
   822a4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   822a6:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
   822aa:	444f      	add	r7, r9
   822ac:	970a      	str	r7, [sp, #40]	; 0x28
   822ae:	2700      	movs	r7, #0
   822b0:	970e      	str	r7, [sp, #56]	; 0x38
   822b2:	e008      	b.n	822c6 <_dtoa_r+0x1f8>
   822b4:	9f08      	ldr	r7, [sp, #32]
   822b6:	ebc9 0707 	rsb	r7, r9, r7
   822ba:	9708      	str	r7, [sp, #32]
   822bc:	f1c9 0700 	rsb	r7, r9, #0
   822c0:	970e      	str	r7, [sp, #56]	; 0x38
   822c2:	2700      	movs	r7, #0
   822c4:	9711      	str	r7, [sp, #68]	; 0x44
   822c6:	9f24      	ldr	r7, [sp, #144]	; 0x90
   822c8:	2f09      	cmp	r7, #9
   822ca:	d829      	bhi.n	82320 <_dtoa_r+0x252>
   822cc:	2f05      	cmp	r7, #5
   822ce:	bfc4      	itt	gt
   822d0:	3f04      	subgt	r7, #4
   822d2:	9724      	strgt	r7, [sp, #144]	; 0x90
   822d4:	9f24      	ldr	r7, [sp, #144]	; 0x90
   822d6:	bfc8      	it	gt
   822d8:	2400      	movgt	r4, #0
   822da:	f1a7 0302 	sub.w	r3, r7, #2
   822de:	bfd8      	it	le
   822e0:	2401      	movle	r4, #1
   822e2:	2b03      	cmp	r3, #3
   822e4:	d821      	bhi.n	8232a <_dtoa_r+0x25c>
   822e6:	e8df f003 	tbb	[pc, r3]
   822ea:	0f06      	.short	0x0f06
   822ec:	0402      	.short	0x0402
   822ee:	2701      	movs	r7, #1
   822f0:	e002      	b.n	822f8 <_dtoa_r+0x22a>
   822f2:	2701      	movs	r7, #1
   822f4:	e009      	b.n	8230a <_dtoa_r+0x23c>
   822f6:	2700      	movs	r7, #0
   822f8:	970f      	str	r7, [sp, #60]	; 0x3c
   822fa:	9f25      	ldr	r7, [sp, #148]	; 0x94
   822fc:	2f00      	cmp	r7, #0
   822fe:	dd1e      	ble.n	8233e <_dtoa_r+0x270>
   82300:	970b      	str	r7, [sp, #44]	; 0x2c
   82302:	9707      	str	r7, [sp, #28]
   82304:	463b      	mov	r3, r7
   82306:	e01f      	b.n	82348 <_dtoa_r+0x27a>
   82308:	2700      	movs	r7, #0
   8230a:	970f      	str	r7, [sp, #60]	; 0x3c
   8230c:	9f25      	ldr	r7, [sp, #148]	; 0x94
   8230e:	444f      	add	r7, r9
   82310:	970b      	str	r7, [sp, #44]	; 0x2c
   82312:	3701      	adds	r7, #1
   82314:	463b      	mov	r3, r7
   82316:	9707      	str	r7, [sp, #28]
   82318:	2b01      	cmp	r3, #1
   8231a:	bfb8      	it	lt
   8231c:	2301      	movlt	r3, #1
   8231e:	e013      	b.n	82348 <_dtoa_r+0x27a>
   82320:	2401      	movs	r4, #1
   82322:	2700      	movs	r7, #0
   82324:	9724      	str	r7, [sp, #144]	; 0x90
   82326:	940f      	str	r4, [sp, #60]	; 0x3c
   82328:	e001      	b.n	8232e <_dtoa_r+0x260>
   8232a:	2701      	movs	r7, #1
   8232c:	970f      	str	r7, [sp, #60]	; 0x3c
   8232e:	f04f 37ff 	mov.w	r7, #4294967295
   82332:	970b      	str	r7, [sp, #44]	; 0x2c
   82334:	9707      	str	r7, [sp, #28]
   82336:	2700      	movs	r7, #0
   82338:	2312      	movs	r3, #18
   8233a:	9725      	str	r7, [sp, #148]	; 0x94
   8233c:	e004      	b.n	82348 <_dtoa_r+0x27a>
   8233e:	2701      	movs	r7, #1
   82340:	970b      	str	r7, [sp, #44]	; 0x2c
   82342:	9707      	str	r7, [sp, #28]
   82344:	463b      	mov	r3, r7
   82346:	9725      	str	r7, [sp, #148]	; 0x94
   82348:	2200      	movs	r2, #0
   8234a:	f8ca 2044 	str.w	r2, [sl, #68]	; 0x44
   8234e:	2204      	movs	r2, #4
   82350:	f102 0114 	add.w	r1, r2, #20
   82354:	4299      	cmp	r1, r3
   82356:	d821      	bhi.n	8239c <_dtoa_r+0x2ce>
   82358:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
   8235c:	0052      	lsls	r2, r2, #1
   8235e:	3101      	adds	r1, #1
   82360:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
   82364:	e7f4      	b.n	82350 <_dtoa_r+0x282>
   82366:	bf00      	nop
   82368:	636f4361 	.word	0x636f4361
   8236c:	3fd287a7 	.word	0x3fd287a7
   82370:	8b60c8b3 	.word	0x8b60c8b3
   82374:	3fc68a28 	.word	0x3fc68a28
   82378:	509f79fb 	.word	0x509f79fb
   8237c:	3fd34413 	.word	0x3fd34413
   82380:	7ff00000 	.word	0x7ff00000
   82384:	00085813 	.word	0x00085813
   82388:	0008580a 	.word	0x0008580a
   8238c:	00085809 	.word	0x00085809
   82390:	fffffbee 	.word	0xfffffbee
   82394:	3ff80000 	.word	0x3ff80000
   82398:	00085830 	.word	0x00085830
   8239c:	4650      	mov	r0, sl
   8239e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
   823a2:	f000 ffdf 	bl	83364 <_Balloc>
   823a6:	9f07      	ldr	r7, [sp, #28]
   823a8:	9009      	str	r0, [sp, #36]	; 0x24
   823aa:	2f0e      	cmp	r7, #14
   823ac:	f8ca 0040 	str.w	r0, [sl, #64]	; 0x40
   823b0:	f200 816a 	bhi.w	82688 <_dtoa_r+0x5ba>
   823b4:	2c00      	cmp	r4, #0
   823b6:	f000 8167 	beq.w	82688 <_dtoa_r+0x5ba>
   823ba:	f1b9 0f00 	cmp.w	r9, #0
   823be:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   823c2:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   823c6:	dd31      	ble.n	8242c <_dtoa_r+0x35e>
   823c8:	4a80      	ldr	r2, [pc, #512]	; (825cc <_dtoa_r+0x4fe>)
   823ca:	f009 030f 	and.w	r3, r9, #15
   823ce:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   823d2:	ea4f 1429 	mov.w	r4, r9, asr #4
   823d6:	e9d3 0100 	ldrd	r0, r1, [r3]
   823da:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   823de:	06e0      	lsls	r0, r4, #27
   823e0:	d50c      	bpl.n	823fc <_dtoa_r+0x32e>
   823e2:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   823e6:	4b7a      	ldr	r3, [pc, #488]	; (825d0 <_dtoa_r+0x502>)
   823e8:	f004 040f 	and.w	r4, r4, #15
   823ec:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   823f0:	f002 fd50 	bl	84e94 <__aeabi_ddiv>
   823f4:	2703      	movs	r7, #3
   823f6:	e9cd 0104 	strd	r0, r1, [sp, #16]
   823fa:	e000      	b.n	823fe <_dtoa_r+0x330>
   823fc:	2702      	movs	r7, #2
   823fe:	4d74      	ldr	r5, [pc, #464]	; (825d0 <_dtoa_r+0x502>)
   82400:	b16c      	cbz	r4, 8241e <_dtoa_r+0x350>
   82402:	07e1      	lsls	r1, r4, #31
   82404:	d508      	bpl.n	82418 <_dtoa_r+0x34a>
   82406:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   8240a:	e9d5 2300 	ldrd	r2, r3, [r5]
   8240e:	f002 fc17 	bl	84c40 <__aeabi_dmul>
   82412:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   82416:	3701      	adds	r7, #1
   82418:	1064      	asrs	r4, r4, #1
   8241a:	3508      	adds	r5, #8
   8241c:	e7f0      	b.n	82400 <_dtoa_r+0x332>
   8241e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82422:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   82426:	f002 fd35 	bl	84e94 <__aeabi_ddiv>
   8242a:	e01b      	b.n	82464 <_dtoa_r+0x396>
   8242c:	f1c9 0400 	rsb	r4, r9, #0
   82430:	b1dc      	cbz	r4, 8246a <_dtoa_r+0x39c>
   82432:	4b66      	ldr	r3, [pc, #408]	; (825cc <_dtoa_r+0x4fe>)
   82434:	f004 020f 	and.w	r2, r4, #15
   82438:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8243c:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   82440:	e9d3 2300 	ldrd	r2, r3, [r3]
   82444:	f002 fbfc 	bl	84c40 <__aeabi_dmul>
   82448:	4d61      	ldr	r5, [pc, #388]	; (825d0 <_dtoa_r+0x502>)
   8244a:	1124      	asrs	r4, r4, #4
   8244c:	2702      	movs	r7, #2
   8244e:	b14c      	cbz	r4, 82464 <_dtoa_r+0x396>
   82450:	07e2      	lsls	r2, r4, #31
   82452:	d504      	bpl.n	8245e <_dtoa_r+0x390>
   82454:	e9d5 2300 	ldrd	r2, r3, [r5]
   82458:	3701      	adds	r7, #1
   8245a:	f002 fbf1 	bl	84c40 <__aeabi_dmul>
   8245e:	1064      	asrs	r4, r4, #1
   82460:	3508      	adds	r5, #8
   82462:	e7f4      	b.n	8244e <_dtoa_r+0x380>
   82464:	e9cd 0104 	strd	r0, r1, [sp, #16]
   82468:	e000      	b.n	8246c <_dtoa_r+0x39e>
   8246a:	2702      	movs	r7, #2
   8246c:	9914      	ldr	r1, [sp, #80]	; 0x50
   8246e:	b1e9      	cbz	r1, 824ac <_dtoa_r+0x3de>
   82470:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
   82474:	2200      	movs	r2, #0
   82476:	4620      	mov	r0, r4
   82478:	4629      	mov	r1, r5
   8247a:	4b56      	ldr	r3, [pc, #344]	; (825d4 <_dtoa_r+0x506>)
   8247c:	f002 fe52 	bl	85124 <__aeabi_dcmplt>
   82480:	b1c8      	cbz	r0, 824b6 <_dtoa_r+0x3e8>
   82482:	9a07      	ldr	r2, [sp, #28]
   82484:	b1e2      	cbz	r2, 824c0 <_dtoa_r+0x3f2>
   82486:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82488:	2b00      	cmp	r3, #0
   8248a:	f340 80f9 	ble.w	82680 <_dtoa_r+0x5b2>
   8248e:	f109 30ff 	add.w	r0, r9, #4294967295
   82492:	9010      	str	r0, [sp, #64]	; 0x40
   82494:	4629      	mov	r1, r5
   82496:	4620      	mov	r0, r4
   82498:	2200      	movs	r2, #0
   8249a:	4b4f      	ldr	r3, [pc, #316]	; (825d8 <_dtoa_r+0x50a>)
   8249c:	f002 fbd0 	bl	84c40 <__aeabi_dmul>
   824a0:	e9cd 0104 	strd	r0, r1, [sp, #16]
   824a4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   824a6:	3701      	adds	r7, #1
   824a8:	910c      	str	r1, [sp, #48]	; 0x30
   824aa:	e00d      	b.n	824c8 <_dtoa_r+0x3fa>
   824ac:	9a07      	ldr	r2, [sp, #28]
   824ae:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   824b2:	920c      	str	r2, [sp, #48]	; 0x30
   824b4:	e008      	b.n	824c8 <_dtoa_r+0x3fa>
   824b6:	9b07      	ldr	r3, [sp, #28]
   824b8:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   824bc:	930c      	str	r3, [sp, #48]	; 0x30
   824be:	e003      	b.n	824c8 <_dtoa_r+0x3fa>
   824c0:	9807      	ldr	r0, [sp, #28]
   824c2:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   824c6:	900c      	str	r0, [sp, #48]	; 0x30
   824c8:	4638      	mov	r0, r7
   824ca:	f002 fb53 	bl	84b74 <__aeabi_i2d>
   824ce:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   824d2:	f002 fbb5 	bl	84c40 <__aeabi_dmul>
   824d6:	2200      	movs	r2, #0
   824d8:	4b40      	ldr	r3, [pc, #256]	; (825dc <_dtoa_r+0x50e>)
   824da:	f002 f9ff 	bl	848dc <__adddf3>
   824de:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   824e0:	4604      	mov	r4, r0
   824e2:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
   824e6:	b9cf      	cbnz	r7, 8251c <_dtoa_r+0x44e>
   824e8:	2200      	movs	r2, #0
   824ea:	4b3d      	ldr	r3, [pc, #244]	; (825e0 <_dtoa_r+0x512>)
   824ec:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   824f0:	f002 f9f2 	bl	848d8 <__aeabi_dsub>
   824f4:	4622      	mov	r2, r4
   824f6:	462b      	mov	r3, r5
   824f8:	4606      	mov	r6, r0
   824fa:	460f      	mov	r7, r1
   824fc:	f002 fe30 	bl	85160 <__aeabi_dcmpgt>
   82500:	2800      	cmp	r0, #0
   82502:	f040 8252 	bne.w	829aa <_dtoa_r+0x8dc>
   82506:	4622      	mov	r2, r4
   82508:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   8250c:	4630      	mov	r0, r6
   8250e:	4639      	mov	r1, r7
   82510:	f002 fe08 	bl	85124 <__aeabi_dcmplt>
   82514:	2800      	cmp	r0, #0
   82516:	f040 823e 	bne.w	82996 <_dtoa_r+0x8c8>
   8251a:	e0b1      	b.n	82680 <_dtoa_r+0x5b2>
   8251c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   8251e:	4b2b      	ldr	r3, [pc, #172]	; (825cc <_dtoa_r+0x4fe>)
   82520:	1e7a      	subs	r2, r7, #1
   82522:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   82524:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   82528:	2f00      	cmp	r7, #0
   8252a:	d05d      	beq.n	825e8 <_dtoa_r+0x51a>
   8252c:	e9d3 2300 	ldrd	r2, r3, [r3]
   82530:	2000      	movs	r0, #0
   82532:	492c      	ldr	r1, [pc, #176]	; (825e4 <_dtoa_r+0x516>)
   82534:	f002 fcae 	bl	84e94 <__aeabi_ddiv>
   82538:	4622      	mov	r2, r4
   8253a:	462b      	mov	r3, r5
   8253c:	f002 f9cc 	bl	848d8 <__aeabi_dsub>
   82540:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   82544:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   82548:	4604      	mov	r4, r0
   8254a:	460d      	mov	r5, r1
   8254c:	4639      	mov	r1, r7
   8254e:	4630      	mov	r0, r6
   82550:	f002 fe10 	bl	85174 <__aeabi_d2iz>
   82554:	9002      	str	r0, [sp, #8]
   82556:	f002 fb0d 	bl	84b74 <__aeabi_i2d>
   8255a:	4602      	mov	r2, r0
   8255c:	460b      	mov	r3, r1
   8255e:	4630      	mov	r0, r6
   82560:	4639      	mov	r1, r7
   82562:	f002 f9b9 	bl	848d8 <__aeabi_dsub>
   82566:	f8dd c008 	ldr.w	ip, [sp, #8]
   8256a:	4622      	mov	r2, r4
   8256c:	f10c 0330 	add.w	r3, ip, #48	; 0x30
   82570:	f808 3b01 	strb.w	r3, [r8], #1
   82574:	462b      	mov	r3, r5
   82576:	4606      	mov	r6, r0
   82578:	460f      	mov	r7, r1
   8257a:	f002 fdd3 	bl	85124 <__aeabi_dcmplt>
   8257e:	2800      	cmp	r0, #0
   82580:	f040 833a 	bne.w	82bf8 <_dtoa_r+0xb2a>
   82584:	4632      	mov	r2, r6
   82586:	463b      	mov	r3, r7
   82588:	2000      	movs	r0, #0
   8258a:	4912      	ldr	r1, [pc, #72]	; (825d4 <_dtoa_r+0x506>)
   8258c:	f002 f9a4 	bl	848d8 <__aeabi_dsub>
   82590:	4622      	mov	r2, r4
   82592:	462b      	mov	r3, r5
   82594:	f002 fdc6 	bl	85124 <__aeabi_dcmplt>
   82598:	2800      	cmp	r0, #0
   8259a:	f040 80d4 	bne.w	82746 <_dtoa_r+0x678>
   8259e:	9809      	ldr	r0, [sp, #36]	; 0x24
   825a0:	990c      	ldr	r1, [sp, #48]	; 0x30
   825a2:	ebc0 0308 	rsb	r3, r0, r8
   825a6:	428b      	cmp	r3, r1
   825a8:	da6a      	bge.n	82680 <_dtoa_r+0x5b2>
   825aa:	4620      	mov	r0, r4
   825ac:	4629      	mov	r1, r5
   825ae:	2200      	movs	r2, #0
   825b0:	4b09      	ldr	r3, [pc, #36]	; (825d8 <_dtoa_r+0x50a>)
   825b2:	f002 fb45 	bl	84c40 <__aeabi_dmul>
   825b6:	2200      	movs	r2, #0
   825b8:	4604      	mov	r4, r0
   825ba:	460d      	mov	r5, r1
   825bc:	4630      	mov	r0, r6
   825be:	4639      	mov	r1, r7
   825c0:	4b05      	ldr	r3, [pc, #20]	; (825d8 <_dtoa_r+0x50a>)
   825c2:	f002 fb3d 	bl	84c40 <__aeabi_dmul>
   825c6:	4606      	mov	r6, r0
   825c8:	460f      	mov	r7, r1
   825ca:	e7bf      	b.n	8254c <_dtoa_r+0x47e>
   825cc:	00085830 	.word	0x00085830
   825d0:	00085920 	.word	0x00085920
   825d4:	3ff00000 	.word	0x3ff00000
   825d8:	40240000 	.word	0x40240000
   825dc:	401c0000 	.word	0x401c0000
   825e0:	40140000 	.word	0x40140000
   825e4:	3fe00000 	.word	0x3fe00000
   825e8:	4622      	mov	r2, r4
   825ea:	e9d3 0100 	ldrd	r0, r1, [r3]
   825ee:	462b      	mov	r3, r5
   825f0:	f002 fb26 	bl	84c40 <__aeabi_dmul>
   825f4:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   825f8:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   825fc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   825fe:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   82602:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82604:	4490      	add	r8, r2
   82606:	4639      	mov	r1, r7
   82608:	4630      	mov	r0, r6
   8260a:	f002 fdb3 	bl	85174 <__aeabi_d2iz>
   8260e:	4605      	mov	r5, r0
   82610:	f002 fab0 	bl	84b74 <__aeabi_i2d>
   82614:	4602      	mov	r2, r0
   82616:	460b      	mov	r3, r1
   82618:	4630      	mov	r0, r6
   8261a:	4639      	mov	r1, r7
   8261c:	f002 f95c 	bl	848d8 <__aeabi_dsub>
   82620:	3530      	adds	r5, #48	; 0x30
   82622:	f804 5b01 	strb.w	r5, [r4], #1
   82626:	4544      	cmp	r4, r8
   82628:	4606      	mov	r6, r0
   8262a:	460f      	mov	r7, r1
   8262c:	d121      	bne.n	82672 <_dtoa_r+0x5a4>
   8262e:	2200      	movs	r2, #0
   82630:	4b87      	ldr	r3, [pc, #540]	; (82850 <_dtoa_r+0x782>)
   82632:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   82636:	f002 f951 	bl	848dc <__adddf3>
   8263a:	4602      	mov	r2, r0
   8263c:	460b      	mov	r3, r1
   8263e:	4630      	mov	r0, r6
   82640:	4639      	mov	r1, r7
   82642:	f002 fd8d 	bl	85160 <__aeabi_dcmpgt>
   82646:	2800      	cmp	r0, #0
   82648:	d17d      	bne.n	82746 <_dtoa_r+0x678>
   8264a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   8264e:	2000      	movs	r0, #0
   82650:	497f      	ldr	r1, [pc, #508]	; (82850 <_dtoa_r+0x782>)
   82652:	f002 f941 	bl	848d8 <__aeabi_dsub>
   82656:	4602      	mov	r2, r0
   82658:	460b      	mov	r3, r1
   8265a:	4630      	mov	r0, r6
   8265c:	4639      	mov	r1, r7
   8265e:	f002 fd61 	bl	85124 <__aeabi_dcmplt>
   82662:	b168      	cbz	r0, 82680 <_dtoa_r+0x5b2>
   82664:	46a0      	mov	r8, r4
   82666:	f818 3c01 	ldrb.w	r3, [r8, #-1]
   8266a:	3c01      	subs	r4, #1
   8266c:	2b30      	cmp	r3, #48	; 0x30
   8266e:	d0f9      	beq.n	82664 <_dtoa_r+0x596>
   82670:	e2c2      	b.n	82bf8 <_dtoa_r+0xb2a>
   82672:	2200      	movs	r2, #0
   82674:	4b77      	ldr	r3, [pc, #476]	; (82854 <_dtoa_r+0x786>)
   82676:	f002 fae3 	bl	84c40 <__aeabi_dmul>
   8267a:	4606      	mov	r6, r0
   8267c:	460f      	mov	r7, r1
   8267e:	e7c2      	b.n	82606 <_dtoa_r+0x538>
   82680:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   82684:	e9cd 0104 	strd	r0, r1, [sp, #16]
   82688:	9b19      	ldr	r3, [sp, #100]	; 0x64
   8268a:	2b00      	cmp	r3, #0
   8268c:	db7c      	blt.n	82788 <_dtoa_r+0x6ba>
   8268e:	f1b9 0f0e 	cmp.w	r9, #14
   82692:	dc79      	bgt.n	82788 <_dtoa_r+0x6ba>
   82694:	4b70      	ldr	r3, [pc, #448]	; (82858 <_dtoa_r+0x78a>)
   82696:	9f25      	ldr	r7, [sp, #148]	; 0x94
   82698:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
   8269c:	2f00      	cmp	r7, #0
   8269e:	e9d3 4500 	ldrd	r4, r5, [r3]
   826a2:	da14      	bge.n	826ce <_dtoa_r+0x600>
   826a4:	9f07      	ldr	r7, [sp, #28]
   826a6:	2f00      	cmp	r7, #0
   826a8:	dc11      	bgt.n	826ce <_dtoa_r+0x600>
   826aa:	f040 8176 	bne.w	8299a <_dtoa_r+0x8cc>
   826ae:	4620      	mov	r0, r4
   826b0:	4629      	mov	r1, r5
   826b2:	2200      	movs	r2, #0
   826b4:	4b69      	ldr	r3, [pc, #420]	; (8285c <_dtoa_r+0x78e>)
   826b6:	f002 fac3 	bl	84c40 <__aeabi_dmul>
   826ba:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   826be:	f002 fd45 	bl	8514c <__aeabi_dcmpge>
   826c2:	9d07      	ldr	r5, [sp, #28]
   826c4:	462c      	mov	r4, r5
   826c6:	2800      	cmp	r0, #0
   826c8:	f040 8169 	bne.w	8299e <_dtoa_r+0x8d0>
   826cc:	e171      	b.n	829b2 <_dtoa_r+0x8e4>
   826ce:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   826d2:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   826d6:	4622      	mov	r2, r4
   826d8:	462b      	mov	r3, r5
   826da:	4630      	mov	r0, r6
   826dc:	4639      	mov	r1, r7
   826de:	f002 fbd9 	bl	84e94 <__aeabi_ddiv>
   826e2:	f002 fd47 	bl	85174 <__aeabi_d2iz>
   826e6:	9004      	str	r0, [sp, #16]
   826e8:	f002 fa44 	bl	84b74 <__aeabi_i2d>
   826ec:	4622      	mov	r2, r4
   826ee:	462b      	mov	r3, r5
   826f0:	f002 faa6 	bl	84c40 <__aeabi_dmul>
   826f4:	4602      	mov	r2, r0
   826f6:	460b      	mov	r3, r1
   826f8:	4630      	mov	r0, r6
   826fa:	4639      	mov	r1, r7
   826fc:	f002 f8ec 	bl	848d8 <__aeabi_dsub>
   82700:	9f04      	ldr	r7, [sp, #16]
   82702:	4602      	mov	r2, r0
   82704:	f107 0630 	add.w	r6, r7, #48	; 0x30
   82708:	9f09      	ldr	r7, [sp, #36]	; 0x24
   8270a:	f808 6b01 	strb.w	r6, [r8], #1
   8270e:	ebc7 0608 	rsb	r6, r7, r8
   82712:	9f07      	ldr	r7, [sp, #28]
   82714:	460b      	mov	r3, r1
   82716:	42be      	cmp	r6, r7
   82718:	d129      	bne.n	8276e <_dtoa_r+0x6a0>
   8271a:	f002 f8df 	bl	848dc <__adddf3>
   8271e:	4622      	mov	r2, r4
   82720:	462b      	mov	r3, r5
   82722:	4606      	mov	r6, r0
   82724:	460f      	mov	r7, r1
   82726:	f002 fd1b 	bl	85160 <__aeabi_dcmpgt>
   8272a:	b970      	cbnz	r0, 8274a <_dtoa_r+0x67c>
   8272c:	4630      	mov	r0, r6
   8272e:	4639      	mov	r1, r7
   82730:	4622      	mov	r2, r4
   82732:	462b      	mov	r3, r5
   82734:	f002 fcec 	bl	85110 <__aeabi_dcmpeq>
   82738:	2800      	cmp	r0, #0
   8273a:	f000 825f 	beq.w	82bfc <_dtoa_r+0xb2e>
   8273e:	9f04      	ldr	r7, [sp, #16]
   82740:	07fb      	lsls	r3, r7, #31
   82742:	d402      	bmi.n	8274a <_dtoa_r+0x67c>
   82744:	e25a      	b.n	82bfc <_dtoa_r+0xb2e>
   82746:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   8274a:	4643      	mov	r3, r8
   8274c:	4698      	mov	r8, r3
   8274e:	f818 2c01 	ldrb.w	r2, [r8, #-1]
   82752:	3b01      	subs	r3, #1
   82754:	2a39      	cmp	r2, #57	; 0x39
   82756:	d106      	bne.n	82766 <_dtoa_r+0x698>
   82758:	9f09      	ldr	r7, [sp, #36]	; 0x24
   8275a:	429f      	cmp	r7, r3
   8275c:	d1f6      	bne.n	8274c <_dtoa_r+0x67e>
   8275e:	2230      	movs	r2, #48	; 0x30
   82760:	f109 0901 	add.w	r9, r9, #1
   82764:	703a      	strb	r2, [r7, #0]
   82766:	781a      	ldrb	r2, [r3, #0]
   82768:	3201      	adds	r2, #1
   8276a:	701a      	strb	r2, [r3, #0]
   8276c:	e246      	b.n	82bfc <_dtoa_r+0xb2e>
   8276e:	2200      	movs	r2, #0
   82770:	4b38      	ldr	r3, [pc, #224]	; (82854 <_dtoa_r+0x786>)
   82772:	f002 fa65 	bl	84c40 <__aeabi_dmul>
   82776:	2200      	movs	r2, #0
   82778:	2300      	movs	r3, #0
   8277a:	4606      	mov	r6, r0
   8277c:	460f      	mov	r7, r1
   8277e:	f002 fcc7 	bl	85110 <__aeabi_dcmpeq>
   82782:	2800      	cmp	r0, #0
   82784:	d0a7      	beq.n	826d6 <_dtoa_r+0x608>
   82786:	e239      	b.n	82bfc <_dtoa_r+0xb2e>
   82788:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   8278a:	2f00      	cmp	r7, #0
   8278c:	d030      	beq.n	827f0 <_dtoa_r+0x722>
   8278e:	9f24      	ldr	r7, [sp, #144]	; 0x90
   82790:	2f01      	cmp	r7, #1
   82792:	dc0a      	bgt.n	827aa <_dtoa_r+0x6dc>
   82794:	9f15      	ldr	r7, [sp, #84]	; 0x54
   82796:	b117      	cbz	r7, 8279e <_dtoa_r+0x6d0>
   82798:	f203 4333 	addw	r3, r3, #1075	; 0x433
   8279c:	e002      	b.n	827a4 <_dtoa_r+0x6d6>
   8279e:	9b18      	ldr	r3, [sp, #96]	; 0x60
   827a0:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   827a4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   827a6:	9e08      	ldr	r6, [sp, #32]
   827a8:	e016      	b.n	827d8 <_dtoa_r+0x70a>
   827aa:	9f07      	ldr	r7, [sp, #28]
   827ac:	1e7d      	subs	r5, r7, #1
   827ae:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   827b0:	42af      	cmp	r7, r5
   827b2:	db01      	blt.n	827b8 <_dtoa_r+0x6ea>
   827b4:	1b7d      	subs	r5, r7, r5
   827b6:	e006      	b.n	827c6 <_dtoa_r+0x6f8>
   827b8:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   827ba:	950e      	str	r5, [sp, #56]	; 0x38
   827bc:	1beb      	subs	r3, r5, r7
   827be:	9f11      	ldr	r7, [sp, #68]	; 0x44
   827c0:	2500      	movs	r5, #0
   827c2:	441f      	add	r7, r3
   827c4:	9711      	str	r7, [sp, #68]	; 0x44
   827c6:	9f07      	ldr	r7, [sp, #28]
   827c8:	2f00      	cmp	r7, #0
   827ca:	da03      	bge.n	827d4 <_dtoa_r+0x706>
   827cc:	9808      	ldr	r0, [sp, #32]
   827ce:	2300      	movs	r3, #0
   827d0:	1bc6      	subs	r6, r0, r7
   827d2:	e001      	b.n	827d8 <_dtoa_r+0x70a>
   827d4:	9e08      	ldr	r6, [sp, #32]
   827d6:	9b07      	ldr	r3, [sp, #28]
   827d8:	9f08      	ldr	r7, [sp, #32]
   827da:	4650      	mov	r0, sl
   827dc:	441f      	add	r7, r3
   827de:	9708      	str	r7, [sp, #32]
   827e0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   827e2:	2101      	movs	r1, #1
   827e4:	441f      	add	r7, r3
   827e6:	970a      	str	r7, [sp, #40]	; 0x28
   827e8:	f000 feb4 	bl	83554 <__i2b>
   827ec:	4604      	mov	r4, r0
   827ee:	e002      	b.n	827f6 <_dtoa_r+0x728>
   827f0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   827f2:	9e08      	ldr	r6, [sp, #32]
   827f4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   827f6:	b16e      	cbz	r6, 82814 <_dtoa_r+0x746>
   827f8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   827fa:	2f00      	cmp	r7, #0
   827fc:	dd0a      	ble.n	82814 <_dtoa_r+0x746>
   827fe:	463b      	mov	r3, r7
   82800:	9f08      	ldr	r7, [sp, #32]
   82802:	42b3      	cmp	r3, r6
   82804:	bfa8      	it	ge
   82806:	4633      	movge	r3, r6
   82808:	1aff      	subs	r7, r7, r3
   8280a:	9708      	str	r7, [sp, #32]
   8280c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   8280e:	1af6      	subs	r6, r6, r3
   82810:	1aff      	subs	r7, r7, r3
   82812:	970a      	str	r7, [sp, #40]	; 0x28
   82814:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   82816:	2f00      	cmp	r7, #0
   82818:	dd28      	ble.n	8286c <_dtoa_r+0x79e>
   8281a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   8281c:	b307      	cbz	r7, 82860 <_dtoa_r+0x792>
   8281e:	2d00      	cmp	r5, #0
   82820:	dd10      	ble.n	82844 <_dtoa_r+0x776>
   82822:	4621      	mov	r1, r4
   82824:	462a      	mov	r2, r5
   82826:	4650      	mov	r0, sl
   82828:	f000 ff35 	bl	83696 <__pow5mult>
   8282c:	4604      	mov	r4, r0
   8282e:	465a      	mov	r2, fp
   82830:	4621      	mov	r1, r4
   82832:	4650      	mov	r0, sl
   82834:	f000 fe97 	bl	83566 <__multiply>
   82838:	4659      	mov	r1, fp
   8283a:	4607      	mov	r7, r0
   8283c:	4650      	mov	r0, sl
   8283e:	f000 fdb7 	bl	833b0 <_Bfree>
   82842:	46bb      	mov	fp, r7
   82844:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   82846:	1b7a      	subs	r2, r7, r5
   82848:	d010      	beq.n	8286c <_dtoa_r+0x79e>
   8284a:	4650      	mov	r0, sl
   8284c:	4659      	mov	r1, fp
   8284e:	e00a      	b.n	82866 <_dtoa_r+0x798>
   82850:	3fe00000 	.word	0x3fe00000
   82854:	40240000 	.word	0x40240000
   82858:	00085830 	.word	0x00085830
   8285c:	40140000 	.word	0x40140000
   82860:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82862:	4650      	mov	r0, sl
   82864:	4659      	mov	r1, fp
   82866:	f000 ff16 	bl	83696 <__pow5mult>
   8286a:	4683      	mov	fp, r0
   8286c:	4650      	mov	r0, sl
   8286e:	2101      	movs	r1, #1
   82870:	f000 fe70 	bl	83554 <__i2b>
   82874:	9f11      	ldr	r7, [sp, #68]	; 0x44
   82876:	4605      	mov	r5, r0
   82878:	2f00      	cmp	r7, #0
   8287a:	dd05      	ble.n	82888 <_dtoa_r+0x7ba>
   8287c:	4629      	mov	r1, r5
   8287e:	4650      	mov	r0, sl
   82880:	463a      	mov	r2, r7
   82882:	f000 ff08 	bl	83696 <__pow5mult>
   82886:	4605      	mov	r5, r0
   82888:	9f24      	ldr	r7, [sp, #144]	; 0x90
   8288a:	2f01      	cmp	r7, #1
   8288c:	dc12      	bgt.n	828b4 <_dtoa_r+0x7e6>
   8288e:	9804      	ldr	r0, [sp, #16]
   82890:	b980      	cbnz	r0, 828b4 <_dtoa_r+0x7e6>
   82892:	9905      	ldr	r1, [sp, #20]
   82894:	f3c1 0313 	ubfx	r3, r1, #0, #20
   82898:	b973      	cbnz	r3, 828b8 <_dtoa_r+0x7ea>
   8289a:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
   8289e:	0d3f      	lsrs	r7, r7, #20
   828a0:	053f      	lsls	r7, r7, #20
   828a2:	b157      	cbz	r7, 828ba <_dtoa_r+0x7ec>
   828a4:	9f08      	ldr	r7, [sp, #32]
   828a6:	3701      	adds	r7, #1
   828a8:	9708      	str	r7, [sp, #32]
   828aa:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   828ac:	3701      	adds	r7, #1
   828ae:	970a      	str	r7, [sp, #40]	; 0x28
   828b0:	2701      	movs	r7, #1
   828b2:	e002      	b.n	828ba <_dtoa_r+0x7ec>
   828b4:	2700      	movs	r7, #0
   828b6:	e000      	b.n	828ba <_dtoa_r+0x7ec>
   828b8:	9f04      	ldr	r7, [sp, #16]
   828ba:	9811      	ldr	r0, [sp, #68]	; 0x44
   828bc:	b140      	cbz	r0, 828d0 <_dtoa_r+0x802>
   828be:	692b      	ldr	r3, [r5, #16]
   828c0:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   828c4:	6918      	ldr	r0, [r3, #16]
   828c6:	f000 fdf8 	bl	834ba <__hi0bits>
   828ca:	f1c0 0020 	rsb	r0, r0, #32
   828ce:	e000      	b.n	828d2 <_dtoa_r+0x804>
   828d0:	2001      	movs	r0, #1
   828d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   828d4:	4403      	add	r3, r0
   828d6:	f013 031f 	ands.w	r3, r3, #31
   828da:	d00f      	beq.n	828fc <_dtoa_r+0x82e>
   828dc:	f1c3 0220 	rsb	r2, r3, #32
   828e0:	2a04      	cmp	r2, #4
   828e2:	dd09      	ble.n	828f8 <_dtoa_r+0x82a>
   828e4:	9908      	ldr	r1, [sp, #32]
   828e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   828e8:	f1c3 031c 	rsb	r3, r3, #28
   828ec:	4419      	add	r1, r3
   828ee:	441a      	add	r2, r3
   828f0:	9108      	str	r1, [sp, #32]
   828f2:	441e      	add	r6, r3
   828f4:	920a      	str	r2, [sp, #40]	; 0x28
   828f6:	e009      	b.n	8290c <_dtoa_r+0x83e>
   828f8:	d008      	beq.n	8290c <_dtoa_r+0x83e>
   828fa:	4613      	mov	r3, r2
   828fc:	9808      	ldr	r0, [sp, #32]
   828fe:	990a      	ldr	r1, [sp, #40]	; 0x28
   82900:	331c      	adds	r3, #28
   82902:	4418      	add	r0, r3
   82904:	4419      	add	r1, r3
   82906:	9008      	str	r0, [sp, #32]
   82908:	441e      	add	r6, r3
   8290a:	910a      	str	r1, [sp, #40]	; 0x28
   8290c:	9a08      	ldr	r2, [sp, #32]
   8290e:	2a00      	cmp	r2, #0
   82910:	dd04      	ble.n	8291c <_dtoa_r+0x84e>
   82912:	4659      	mov	r1, fp
   82914:	4650      	mov	r0, sl
   82916:	f000 fefd 	bl	83714 <__lshift>
   8291a:	4683      	mov	fp, r0
   8291c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8291e:	2b00      	cmp	r3, #0
   82920:	dd05      	ble.n	8292e <_dtoa_r+0x860>
   82922:	4629      	mov	r1, r5
   82924:	4650      	mov	r0, sl
   82926:	461a      	mov	r2, r3
   82928:	f000 fef4 	bl	83714 <__lshift>
   8292c:	4605      	mov	r5, r0
   8292e:	9814      	ldr	r0, [sp, #80]	; 0x50
   82930:	b1e0      	cbz	r0, 8296c <_dtoa_r+0x89e>
   82932:	4658      	mov	r0, fp
   82934:	4629      	mov	r1, r5
   82936:	f000 ff40 	bl	837ba <__mcmp>
   8293a:	2800      	cmp	r0, #0
   8293c:	da16      	bge.n	8296c <_dtoa_r+0x89e>
   8293e:	4659      	mov	r1, fp
   82940:	4650      	mov	r0, sl
   82942:	220a      	movs	r2, #10
   82944:	2300      	movs	r3, #0
   82946:	f000 fd3c 	bl	833c2 <__multadd>
   8294a:	990f      	ldr	r1, [sp, #60]	; 0x3c
   8294c:	f109 39ff 	add.w	r9, r9, #4294967295
   82950:	4683      	mov	fp, r0
   82952:	b149      	cbz	r1, 82968 <_dtoa_r+0x89a>
   82954:	4621      	mov	r1, r4
   82956:	220a      	movs	r2, #10
   82958:	4650      	mov	r0, sl
   8295a:	2300      	movs	r3, #0
   8295c:	f000 fd31 	bl	833c2 <__multadd>
   82960:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82962:	4604      	mov	r4, r0
   82964:	9207      	str	r2, [sp, #28]
   82966:	e001      	b.n	8296c <_dtoa_r+0x89e>
   82968:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8296a:	9307      	str	r3, [sp, #28]
   8296c:	9807      	ldr	r0, [sp, #28]
   8296e:	2800      	cmp	r0, #0
   82970:	dc29      	bgt.n	829c6 <_dtoa_r+0x8f8>
   82972:	9924      	ldr	r1, [sp, #144]	; 0x90
   82974:	2902      	cmp	r1, #2
   82976:	dd26      	ble.n	829c6 <_dtoa_r+0x8f8>
   82978:	b988      	cbnz	r0, 8299e <_dtoa_r+0x8d0>
   8297a:	4629      	mov	r1, r5
   8297c:	2205      	movs	r2, #5
   8297e:	9b07      	ldr	r3, [sp, #28]
   82980:	4650      	mov	r0, sl
   82982:	f000 fd1e 	bl	833c2 <__multadd>
   82986:	4605      	mov	r5, r0
   82988:	4629      	mov	r1, r5
   8298a:	4658      	mov	r0, fp
   8298c:	f000 ff15 	bl	837ba <__mcmp>
   82990:	2800      	cmp	r0, #0
   82992:	dc0e      	bgt.n	829b2 <_dtoa_r+0x8e4>
   82994:	e003      	b.n	8299e <_dtoa_r+0x8d0>
   82996:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   82998:	e000      	b.n	8299c <_dtoa_r+0x8ce>
   8299a:	2500      	movs	r5, #0
   8299c:	462c      	mov	r4, r5
   8299e:	9f25      	ldr	r7, [sp, #148]	; 0x94
   829a0:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   829a4:	ea6f 0907 	mvn.w	r9, r7
   829a8:	e00a      	b.n	829c0 <_dtoa_r+0x8f2>
   829aa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   829ac:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   829b0:	462c      	mov	r4, r5
   829b2:	9f09      	ldr	r7, [sp, #36]	; 0x24
   829b4:	2331      	movs	r3, #49	; 0x31
   829b6:	f107 0801 	add.w	r8, r7, #1
   829ba:	703b      	strb	r3, [r7, #0]
   829bc:	f109 0901 	add.w	r9, r9, #1
   829c0:	4627      	mov	r7, r4
   829c2:	2400      	movs	r4, #0
   829c4:	e107      	b.n	82bd6 <_dtoa_r+0xb08>
   829c6:	980f      	ldr	r0, [sp, #60]	; 0x3c
   829c8:	2800      	cmp	r0, #0
   829ca:	f000 80bb 	beq.w	82b44 <_dtoa_r+0xa76>
   829ce:	2e00      	cmp	r6, #0
   829d0:	dd05      	ble.n	829de <_dtoa_r+0x910>
   829d2:	4621      	mov	r1, r4
   829d4:	4650      	mov	r0, sl
   829d6:	4632      	mov	r2, r6
   829d8:	f000 fe9c 	bl	83714 <__lshift>
   829dc:	4604      	mov	r4, r0
   829de:	b19f      	cbz	r7, 82a08 <_dtoa_r+0x93a>
   829e0:	6861      	ldr	r1, [r4, #4]
   829e2:	4650      	mov	r0, sl
   829e4:	f000 fcbe 	bl	83364 <_Balloc>
   829e8:	6922      	ldr	r2, [r4, #16]
   829ea:	4606      	mov	r6, r0
   829ec:	3202      	adds	r2, #2
   829ee:	f104 010c 	add.w	r1, r4, #12
   829f2:	0092      	lsls	r2, r2, #2
   829f4:	300c      	adds	r0, #12
   829f6:	f000 fc8f 	bl	83318 <memcpy>
   829fa:	4650      	mov	r0, sl
   829fc:	4631      	mov	r1, r6
   829fe:	2201      	movs	r2, #1
   82a00:	f000 fe88 	bl	83714 <__lshift>
   82a04:	4607      	mov	r7, r0
   82a06:	e000      	b.n	82a0a <_dtoa_r+0x93c>
   82a08:	4627      	mov	r7, r4
   82a0a:	9e09      	ldr	r6, [sp, #36]	; 0x24
   82a0c:	4629      	mov	r1, r5
   82a0e:	4658      	mov	r0, fp
   82a10:	f7ff face 	bl	81fb0 <quorem>
   82a14:	4621      	mov	r1, r4
   82a16:	f100 0c30 	add.w	ip, r0, #48	; 0x30
   82a1a:	4680      	mov	r8, r0
   82a1c:	4658      	mov	r0, fp
   82a1e:	f8cd c008 	str.w	ip, [sp, #8]
   82a22:	f000 feca 	bl	837ba <__mcmp>
   82a26:	463a      	mov	r2, r7
   82a28:	9008      	str	r0, [sp, #32]
   82a2a:	4629      	mov	r1, r5
   82a2c:	4650      	mov	r0, sl
   82a2e:	f000 fee1 	bl	837f4 <__mdiff>
   82a32:	68c3      	ldr	r3, [r0, #12]
   82a34:	4602      	mov	r2, r0
   82a36:	f8dd c008 	ldr.w	ip, [sp, #8]
   82a3a:	b94b      	cbnz	r3, 82a50 <_dtoa_r+0x982>
   82a3c:	4611      	mov	r1, r2
   82a3e:	4658      	mov	r0, fp
   82a40:	9203      	str	r2, [sp, #12]
   82a42:	f000 feba 	bl	837ba <__mcmp>
   82a46:	9a03      	ldr	r2, [sp, #12]
   82a48:	4603      	mov	r3, r0
   82a4a:	f8dd c008 	ldr.w	ip, [sp, #8]
   82a4e:	e000      	b.n	82a52 <_dtoa_r+0x984>
   82a50:	2301      	movs	r3, #1
   82a52:	4650      	mov	r0, sl
   82a54:	4611      	mov	r1, r2
   82a56:	9303      	str	r3, [sp, #12]
   82a58:	f8cd c008 	str.w	ip, [sp, #8]
   82a5c:	f000 fca8 	bl	833b0 <_Bfree>
   82a60:	9b03      	ldr	r3, [sp, #12]
   82a62:	f8dd c008 	ldr.w	ip, [sp, #8]
   82a66:	b963      	cbnz	r3, 82a82 <_dtoa_r+0x9b4>
   82a68:	9924      	ldr	r1, [sp, #144]	; 0x90
   82a6a:	b951      	cbnz	r1, 82a82 <_dtoa_r+0x9b4>
   82a6c:	9804      	ldr	r0, [sp, #16]
   82a6e:	f000 0201 	and.w	r2, r0, #1
   82a72:	b932      	cbnz	r2, 82a82 <_dtoa_r+0x9b4>
   82a74:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   82a78:	d035      	beq.n	82ae6 <_dtoa_r+0xa18>
   82a7a:	9b08      	ldr	r3, [sp, #32]
   82a7c:	2b00      	cmp	r3, #0
   82a7e:	dc24      	bgt.n	82aca <_dtoa_r+0x9fc>
   82a80:	e025      	b.n	82ace <_dtoa_r+0xa00>
   82a82:	9808      	ldr	r0, [sp, #32]
   82a84:	2800      	cmp	r0, #0
   82a86:	da02      	bge.n	82a8e <_dtoa_r+0x9c0>
   82a88:	2b00      	cmp	r3, #0
   82a8a:	dc08      	bgt.n	82a9e <_dtoa_r+0x9d0>
   82a8c:	e01f      	b.n	82ace <_dtoa_r+0xa00>
   82a8e:	d123      	bne.n	82ad8 <_dtoa_r+0xa0a>
   82a90:	9924      	ldr	r1, [sp, #144]	; 0x90
   82a92:	bb09      	cbnz	r1, 82ad8 <_dtoa_r+0xa0a>
   82a94:	9804      	ldr	r0, [sp, #16]
   82a96:	f000 0201 	and.w	r2, r0, #1
   82a9a:	b9ea      	cbnz	r2, 82ad8 <_dtoa_r+0xa0a>
   82a9c:	e7f4      	b.n	82a88 <_dtoa_r+0x9ba>
   82a9e:	4659      	mov	r1, fp
   82aa0:	2201      	movs	r2, #1
   82aa2:	4650      	mov	r0, sl
   82aa4:	f8cd c008 	str.w	ip, [sp, #8]
   82aa8:	f000 fe34 	bl	83714 <__lshift>
   82aac:	4629      	mov	r1, r5
   82aae:	4683      	mov	fp, r0
   82ab0:	f000 fe83 	bl	837ba <__mcmp>
   82ab4:	2800      	cmp	r0, #0
   82ab6:	f8dd c008 	ldr.w	ip, [sp, #8]
   82aba:	dc03      	bgt.n	82ac4 <_dtoa_r+0x9f6>
   82abc:	d107      	bne.n	82ace <_dtoa_r+0xa00>
   82abe:	f01c 0f01 	tst.w	ip, #1
   82ac2:	d004      	beq.n	82ace <_dtoa_r+0xa00>
   82ac4:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   82ac8:	d00d      	beq.n	82ae6 <_dtoa_r+0xa18>
   82aca:	f108 0c31 	add.w	ip, r8, #49	; 0x31
   82ace:	f106 0801 	add.w	r8, r6, #1
   82ad2:	f886 c000 	strb.w	ip, [r6]
   82ad6:	e07e      	b.n	82bd6 <_dtoa_r+0xb08>
   82ad8:	2b00      	cmp	r3, #0
   82ada:	f106 0801 	add.w	r8, r6, #1
   82ade:	dd09      	ble.n	82af4 <_dtoa_r+0xa26>
   82ae0:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   82ae4:	d103      	bne.n	82aee <_dtoa_r+0xa20>
   82ae6:	2339      	movs	r3, #57	; 0x39
   82ae8:	7033      	strb	r3, [r6, #0]
   82aea:	3601      	adds	r6, #1
   82aec:	e05b      	b.n	82ba6 <_dtoa_r+0xad8>
   82aee:	f10c 0301 	add.w	r3, ip, #1
   82af2:	e068      	b.n	82bc6 <_dtoa_r+0xaf8>
   82af4:	9909      	ldr	r1, [sp, #36]	; 0x24
   82af6:	9a07      	ldr	r2, [sp, #28]
   82af8:	ebc1 0308 	rsb	r3, r1, r8
   82afc:	4646      	mov	r6, r8
   82afe:	4293      	cmp	r3, r2
   82b00:	f806 cc01 	strb.w	ip, [r6, #-1]
   82b04:	d03c      	beq.n	82b80 <_dtoa_r+0xab2>
   82b06:	4659      	mov	r1, fp
   82b08:	220a      	movs	r2, #10
   82b0a:	2300      	movs	r3, #0
   82b0c:	4650      	mov	r0, sl
   82b0e:	f000 fc58 	bl	833c2 <__multadd>
   82b12:	42bc      	cmp	r4, r7
   82b14:	4683      	mov	fp, r0
   82b16:	4621      	mov	r1, r4
   82b18:	4650      	mov	r0, sl
   82b1a:	f04f 020a 	mov.w	r2, #10
   82b1e:	f04f 0300 	mov.w	r3, #0
   82b22:	d104      	bne.n	82b2e <_dtoa_r+0xa60>
   82b24:	f000 fc4d 	bl	833c2 <__multadd>
   82b28:	4604      	mov	r4, r0
   82b2a:	4607      	mov	r7, r0
   82b2c:	e76e      	b.n	82a0c <_dtoa_r+0x93e>
   82b2e:	f000 fc48 	bl	833c2 <__multadd>
   82b32:	4639      	mov	r1, r7
   82b34:	4604      	mov	r4, r0
   82b36:	220a      	movs	r2, #10
   82b38:	4650      	mov	r0, sl
   82b3a:	2300      	movs	r3, #0
   82b3c:	f000 fc41 	bl	833c2 <__multadd>
   82b40:	4607      	mov	r7, r0
   82b42:	e763      	b.n	82a0c <_dtoa_r+0x93e>
   82b44:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
   82b46:	4658      	mov	r0, fp
   82b48:	4629      	mov	r1, r5
   82b4a:	f7ff fa31 	bl	81fb0 <quorem>
   82b4e:	9f09      	ldr	r7, [sp, #36]	; 0x24
   82b50:	f100 0c30 	add.w	ip, r0, #48	; 0x30
   82b54:	f807 c006 	strb.w	ip, [r7, r6]
   82b58:	9f07      	ldr	r7, [sp, #28]
   82b5a:	3601      	adds	r6, #1
   82b5c:	42be      	cmp	r6, r7
   82b5e:	db07      	blt.n	82b70 <_dtoa_r+0xaa2>
   82b60:	9e09      	ldr	r6, [sp, #36]	; 0x24
   82b62:	2f01      	cmp	r7, #1
   82b64:	bfac      	ite	ge
   82b66:	19f6      	addge	r6, r6, r7
   82b68:	3601      	addlt	r6, #1
   82b6a:	4627      	mov	r7, r4
   82b6c:	2400      	movs	r4, #0
   82b6e:	e007      	b.n	82b80 <_dtoa_r+0xab2>
   82b70:	4659      	mov	r1, fp
   82b72:	4650      	mov	r0, sl
   82b74:	220a      	movs	r2, #10
   82b76:	2300      	movs	r3, #0
   82b78:	f000 fc23 	bl	833c2 <__multadd>
   82b7c:	4683      	mov	fp, r0
   82b7e:	e7e2      	b.n	82b46 <_dtoa_r+0xa78>
   82b80:	4659      	mov	r1, fp
   82b82:	2201      	movs	r2, #1
   82b84:	4650      	mov	r0, sl
   82b86:	f8cd c008 	str.w	ip, [sp, #8]
   82b8a:	f000 fdc3 	bl	83714 <__lshift>
   82b8e:	4629      	mov	r1, r5
   82b90:	4683      	mov	fp, r0
   82b92:	f000 fe12 	bl	837ba <__mcmp>
   82b96:	2800      	cmp	r0, #0
   82b98:	f8dd c008 	ldr.w	ip, [sp, #8]
   82b9c:	dc03      	bgt.n	82ba6 <_dtoa_r+0xad8>
   82b9e:	d114      	bne.n	82bca <_dtoa_r+0xafc>
   82ba0:	f01c 0f01 	tst.w	ip, #1
   82ba4:	d011      	beq.n	82bca <_dtoa_r+0xafc>
   82ba6:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   82baa:	46b0      	mov	r8, r6
   82bac:	2b39      	cmp	r3, #57	; 0x39
   82bae:	f106 36ff 	add.w	r6, r6, #4294967295
   82bb2:	d107      	bne.n	82bc4 <_dtoa_r+0xaf6>
   82bb4:	9809      	ldr	r0, [sp, #36]	; 0x24
   82bb6:	42b0      	cmp	r0, r6
   82bb8:	d1f5      	bne.n	82ba6 <_dtoa_r+0xad8>
   82bba:	2331      	movs	r3, #49	; 0x31
   82bbc:	f109 0901 	add.w	r9, r9, #1
   82bc0:	7003      	strb	r3, [r0, #0]
   82bc2:	e008      	b.n	82bd6 <_dtoa_r+0xb08>
   82bc4:	3301      	adds	r3, #1
   82bc6:	7033      	strb	r3, [r6, #0]
   82bc8:	e005      	b.n	82bd6 <_dtoa_r+0xb08>
   82bca:	46b0      	mov	r8, r6
   82bcc:	f818 3c01 	ldrb.w	r3, [r8, #-1]
   82bd0:	3e01      	subs	r6, #1
   82bd2:	2b30      	cmp	r3, #48	; 0x30
   82bd4:	d0f9      	beq.n	82bca <_dtoa_r+0xafc>
   82bd6:	4650      	mov	r0, sl
   82bd8:	4629      	mov	r1, r5
   82bda:	f000 fbe9 	bl	833b0 <_Bfree>
   82bde:	b16f      	cbz	r7, 82bfc <_dtoa_r+0xb2e>
   82be0:	b12c      	cbz	r4, 82bee <_dtoa_r+0xb20>
   82be2:	42bc      	cmp	r4, r7
   82be4:	d003      	beq.n	82bee <_dtoa_r+0xb20>
   82be6:	4650      	mov	r0, sl
   82be8:	4621      	mov	r1, r4
   82bea:	f000 fbe1 	bl	833b0 <_Bfree>
   82bee:	4650      	mov	r0, sl
   82bf0:	4639      	mov	r1, r7
   82bf2:	f000 fbdd 	bl	833b0 <_Bfree>
   82bf6:	e001      	b.n	82bfc <_dtoa_r+0xb2e>
   82bf8:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   82bfc:	4650      	mov	r0, sl
   82bfe:	4659      	mov	r1, fp
   82c00:	f000 fbd6 	bl	833b0 <_Bfree>
   82c04:	2300      	movs	r3, #0
   82c06:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82c08:	f888 3000 	strb.w	r3, [r8]
   82c0c:	f109 0301 	add.w	r3, r9, #1
   82c10:	603b      	str	r3, [r7, #0]
   82c12:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   82c14:	b127      	cbz	r7, 82c20 <_dtoa_r+0xb52>
   82c16:	f8c7 8000 	str.w	r8, [r7]
   82c1a:	e001      	b.n	82c20 <_dtoa_r+0xb52>
   82c1c:	4802      	ldr	r0, [pc, #8]	; (82c28 <_dtoa_r+0xb5a>)
   82c1e:	e000      	b.n	82c22 <_dtoa_r+0xb54>
   82c20:	9809      	ldr	r0, [sp, #36]	; 0x24
   82c22:	b01b      	add	sp, #108	; 0x6c
   82c24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82c28:	00085808 	.word	0x00085808
   82c2c:	f3af 8000 	nop.w

00082c30 <__libc_fini_array>:
   82c30:	b538      	push	{r3, r4, r5, lr}
   82c32:	4d08      	ldr	r5, [pc, #32]	; (82c54 <__libc_fini_array+0x24>)
   82c34:	4c08      	ldr	r4, [pc, #32]	; (82c58 <__libc_fini_array+0x28>)
   82c36:	1b64      	subs	r4, r4, r5
   82c38:	10a4      	asrs	r4, r4, #2
   82c3a:	eb05 0584 	add.w	r5, r5, r4, lsl #2
   82c3e:	b124      	cbz	r4, 82c4a <__libc_fini_array+0x1a>
   82c40:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   82c44:	3c01      	subs	r4, #1
   82c46:	4798      	blx	r3
   82c48:	e7f9      	b.n	82c3e <__libc_fini_array+0xe>
   82c4a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   82c4e:	f002 be95 	b.w	8597c <_fini>
   82c52:	bf00      	nop
   82c54:	00085988 	.word	0x00085988
   82c58:	0008598c 	.word	0x0008598c

00082c5c <_malloc_trim_r>:
   82c5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82c5e:	4d23      	ldr	r5, [pc, #140]	; (82cec <_malloc_trim_r+0x90>)
   82c60:	460e      	mov	r6, r1
   82c62:	4604      	mov	r4, r0
   82c64:	f000 fb7c 	bl	83360 <__malloc_lock>
   82c68:	68ab      	ldr	r3, [r5, #8]
   82c6a:	685f      	ldr	r7, [r3, #4]
   82c6c:	f027 0703 	bic.w	r7, r7, #3
   82c70:	1bbe      	subs	r6, r7, r6
   82c72:	f606 76ef 	addw	r6, r6, #4079	; 0xfef
   82c76:	f426 667f 	bic.w	r6, r6, #4080	; 0xff0
   82c7a:	f026 060f 	bic.w	r6, r6, #15
   82c7e:	f5a6 5680 	sub.w	r6, r6, #4096	; 0x1000
   82c82:	f5b6 5f80 	cmp.w	r6, #4096	; 0x1000
   82c86:	da04      	bge.n	82c92 <_malloc_trim_r+0x36>
   82c88:	4620      	mov	r0, r4
   82c8a:	f000 fb6a 	bl	83362 <__malloc_unlock>
   82c8e:	2000      	movs	r0, #0
   82c90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82c92:	4620      	mov	r0, r4
   82c94:	2100      	movs	r1, #0
   82c96:	f001 f91b 	bl	83ed0 <_sbrk_r>
   82c9a:	68ab      	ldr	r3, [r5, #8]
   82c9c:	443b      	add	r3, r7
   82c9e:	4298      	cmp	r0, r3
   82ca0:	d1f2      	bne.n	82c88 <_malloc_trim_r+0x2c>
   82ca2:	4620      	mov	r0, r4
   82ca4:	4271      	negs	r1, r6
   82ca6:	f001 f913 	bl	83ed0 <_sbrk_r>
   82caa:	3001      	adds	r0, #1
   82cac:	d110      	bne.n	82cd0 <_malloc_trim_r+0x74>
   82cae:	4620      	mov	r0, r4
   82cb0:	2100      	movs	r1, #0
   82cb2:	f001 f90d 	bl	83ed0 <_sbrk_r>
   82cb6:	68ab      	ldr	r3, [r5, #8]
   82cb8:	1ac2      	subs	r2, r0, r3
   82cba:	2a0f      	cmp	r2, #15
   82cbc:	dde4      	ble.n	82c88 <_malloc_trim_r+0x2c>
   82cbe:	490c      	ldr	r1, [pc, #48]	; (82cf0 <_malloc_trim_r+0x94>)
   82cc0:	f042 0201 	orr.w	r2, r2, #1
   82cc4:	6809      	ldr	r1, [r1, #0]
   82cc6:	605a      	str	r2, [r3, #4]
   82cc8:	1a40      	subs	r0, r0, r1
   82cca:	490a      	ldr	r1, [pc, #40]	; (82cf4 <_malloc_trim_r+0x98>)
   82ccc:	6008      	str	r0, [r1, #0]
   82cce:	e7db      	b.n	82c88 <_malloc_trim_r+0x2c>
   82cd0:	68ab      	ldr	r3, [r5, #8]
   82cd2:	1bbf      	subs	r7, r7, r6
   82cd4:	f047 0701 	orr.w	r7, r7, #1
   82cd8:	605f      	str	r7, [r3, #4]
   82cda:	4b06      	ldr	r3, [pc, #24]	; (82cf4 <_malloc_trim_r+0x98>)
   82cdc:	4620      	mov	r0, r4
   82cde:	681a      	ldr	r2, [r3, #0]
   82ce0:	1b96      	subs	r6, r2, r6
   82ce2:	601e      	str	r6, [r3, #0]
   82ce4:	f000 fb3d 	bl	83362 <__malloc_unlock>
   82ce8:	2001      	movs	r0, #1
   82cea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82cec:	200704b4 	.word	0x200704b4
   82cf0:	200708bc 	.word	0x200708bc
   82cf4:	2007306c 	.word	0x2007306c

00082cf8 <_free_r>:
   82cf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82cfa:	4606      	mov	r6, r0
   82cfc:	460d      	mov	r5, r1
   82cfe:	2900      	cmp	r1, #0
   82d00:	f000 80a9 	beq.w	82e56 <_free_r+0x15e>
   82d04:	f000 fb2c 	bl	83360 <__malloc_lock>
   82d08:	f855 cc04 	ldr.w	ip, [r5, #-4]
   82d0c:	4c52      	ldr	r4, [pc, #328]	; (82e58 <_free_r+0x160>)
   82d0e:	f1a5 0308 	sub.w	r3, r5, #8
   82d12:	f02c 0201 	bic.w	r2, ip, #1
   82d16:	1898      	adds	r0, r3, r2
   82d18:	68a1      	ldr	r1, [r4, #8]
   82d1a:	6847      	ldr	r7, [r0, #4]
   82d1c:	4288      	cmp	r0, r1
   82d1e:	f027 0703 	bic.w	r7, r7, #3
   82d22:	f00c 0101 	and.w	r1, ip, #1
   82d26:	d11b      	bne.n	82d60 <_free_r+0x68>
   82d28:	443a      	add	r2, r7
   82d2a:	b939      	cbnz	r1, 82d3c <_free_r+0x44>
   82d2c:	f855 1c08 	ldr.w	r1, [r5, #-8]
   82d30:	1a5b      	subs	r3, r3, r1
   82d32:	6898      	ldr	r0, [r3, #8]
   82d34:	440a      	add	r2, r1
   82d36:	68d9      	ldr	r1, [r3, #12]
   82d38:	60c1      	str	r1, [r0, #12]
   82d3a:	6088      	str	r0, [r1, #8]
   82d3c:	f042 0101 	orr.w	r1, r2, #1
   82d40:	6059      	str	r1, [r3, #4]
   82d42:	60a3      	str	r3, [r4, #8]
   82d44:	4b45      	ldr	r3, [pc, #276]	; (82e5c <_free_r+0x164>)
   82d46:	681b      	ldr	r3, [r3, #0]
   82d48:	429a      	cmp	r2, r3
   82d4a:	d304      	bcc.n	82d56 <_free_r+0x5e>
   82d4c:	4b44      	ldr	r3, [pc, #272]	; (82e60 <_free_r+0x168>)
   82d4e:	4630      	mov	r0, r6
   82d50:	6819      	ldr	r1, [r3, #0]
   82d52:	f7ff ff83 	bl	82c5c <_malloc_trim_r>
   82d56:	4630      	mov	r0, r6
   82d58:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   82d5c:	f000 bb01 	b.w	83362 <__malloc_unlock>
   82d60:	6047      	str	r7, [r0, #4]
   82d62:	b979      	cbnz	r1, 82d84 <_free_r+0x8c>
   82d64:	f855 5c08 	ldr.w	r5, [r5, #-8]
   82d68:	f104 0c08 	add.w	ip, r4, #8
   82d6c:	1b5b      	subs	r3, r3, r5
   82d6e:	442a      	add	r2, r5
   82d70:	689d      	ldr	r5, [r3, #8]
   82d72:	4565      	cmp	r5, ip
   82d74:	d008      	beq.n	82d88 <_free_r+0x90>
   82d76:	f8d3 c00c 	ldr.w	ip, [r3, #12]
   82d7a:	f8c5 c00c 	str.w	ip, [r5, #12]
   82d7e:	f8cc 5008 	str.w	r5, [ip, #8]
   82d82:	e002      	b.n	82d8a <_free_r+0x92>
   82d84:	2100      	movs	r1, #0
   82d86:	e000      	b.n	82d8a <_free_r+0x92>
   82d88:	2101      	movs	r1, #1
   82d8a:	19c5      	adds	r5, r0, r7
   82d8c:	686d      	ldr	r5, [r5, #4]
   82d8e:	07ed      	lsls	r5, r5, #31
   82d90:	d40e      	bmi.n	82db0 <_free_r+0xb8>
   82d92:	443a      	add	r2, r7
   82d94:	6885      	ldr	r5, [r0, #8]
   82d96:	b941      	cbnz	r1, 82daa <_free_r+0xb2>
   82d98:	4f32      	ldr	r7, [pc, #200]	; (82e64 <_free_r+0x16c>)
   82d9a:	42bd      	cmp	r5, r7
   82d9c:	d105      	bne.n	82daa <_free_r+0xb2>
   82d9e:	6163      	str	r3, [r4, #20]
   82da0:	6123      	str	r3, [r4, #16]
   82da2:	2101      	movs	r1, #1
   82da4:	60dd      	str	r5, [r3, #12]
   82da6:	609d      	str	r5, [r3, #8]
   82da8:	e002      	b.n	82db0 <_free_r+0xb8>
   82daa:	68c0      	ldr	r0, [r0, #12]
   82dac:	60e8      	str	r0, [r5, #12]
   82dae:	6085      	str	r5, [r0, #8]
   82db0:	f042 0001 	orr.w	r0, r2, #1
   82db4:	6058      	str	r0, [r3, #4]
   82db6:	509a      	str	r2, [r3, r2]
   82db8:	2900      	cmp	r1, #0
   82dba:	d1cc      	bne.n	82d56 <_free_r+0x5e>
   82dbc:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   82dc0:	d20e      	bcs.n	82de0 <_free_r+0xe8>
   82dc2:	08d2      	lsrs	r2, r2, #3
   82dc4:	1091      	asrs	r1, r2, #2
   82dc6:	2001      	movs	r0, #1
   82dc8:	4088      	lsls	r0, r1
   82dca:	6861      	ldr	r1, [r4, #4]
   82dcc:	4301      	orrs	r1, r0
   82dce:	6061      	str	r1, [r4, #4]
   82dd0:	eb04 04c2 	add.w	r4, r4, r2, lsl #3
   82dd4:	68a2      	ldr	r2, [r4, #8]
   82dd6:	60dc      	str	r4, [r3, #12]
   82dd8:	609a      	str	r2, [r3, #8]
   82dda:	60a3      	str	r3, [r4, #8]
   82ddc:	60d3      	str	r3, [r2, #12]
   82dde:	e7ba      	b.n	82d56 <_free_r+0x5e>
   82de0:	0a51      	lsrs	r1, r2, #9
   82de2:	2904      	cmp	r1, #4
   82de4:	d802      	bhi.n	82dec <_free_r+0xf4>
   82de6:	0991      	lsrs	r1, r2, #6
   82de8:	3138      	adds	r1, #56	; 0x38
   82dea:	e015      	b.n	82e18 <_free_r+0x120>
   82dec:	2914      	cmp	r1, #20
   82dee:	d801      	bhi.n	82df4 <_free_r+0xfc>
   82df0:	315b      	adds	r1, #91	; 0x5b
   82df2:	e011      	b.n	82e18 <_free_r+0x120>
   82df4:	2954      	cmp	r1, #84	; 0x54
   82df6:	d802      	bhi.n	82dfe <_free_r+0x106>
   82df8:	0b11      	lsrs	r1, r2, #12
   82dfa:	316e      	adds	r1, #110	; 0x6e
   82dfc:	e00c      	b.n	82e18 <_free_r+0x120>
   82dfe:	f5b1 7faa 	cmp.w	r1, #340	; 0x154
   82e02:	d802      	bhi.n	82e0a <_free_r+0x112>
   82e04:	0bd1      	lsrs	r1, r2, #15
   82e06:	3177      	adds	r1, #119	; 0x77
   82e08:	e006      	b.n	82e18 <_free_r+0x120>
   82e0a:	f240 5054 	movw	r0, #1364	; 0x554
   82e0e:	4281      	cmp	r1, r0
   82e10:	bf9a      	itte	ls
   82e12:	0c91      	lsrls	r1, r2, #18
   82e14:	317c      	addls	r1, #124	; 0x7c
   82e16:	217e      	movhi	r1, #126	; 0x7e
   82e18:	eb04 04c1 	add.w	r4, r4, r1, lsl #3
   82e1c:	68a5      	ldr	r5, [r4, #8]
   82e1e:	480e      	ldr	r0, [pc, #56]	; (82e58 <_free_r+0x160>)
   82e20:	42a5      	cmp	r5, r4
   82e22:	d001      	beq.n	82e28 <_free_r+0x130>
   82e24:	4629      	mov	r1, r5
   82e26:	e00b      	b.n	82e40 <_free_r+0x148>
   82e28:	2201      	movs	r2, #1
   82e2a:	1089      	asrs	r1, r1, #2
   82e2c:	fa02 f101 	lsl.w	r1, r2, r1
   82e30:	6842      	ldr	r2, [r0, #4]
   82e32:	430a      	orrs	r2, r1
   82e34:	6042      	str	r2, [r0, #4]
   82e36:	4629      	mov	r1, r5
   82e38:	e008      	b.n	82e4c <_free_r+0x154>
   82e3a:	6889      	ldr	r1, [r1, #8]
   82e3c:	42a1      	cmp	r1, r4
   82e3e:	d004      	beq.n	82e4a <_free_r+0x152>
   82e40:	6848      	ldr	r0, [r1, #4]
   82e42:	f020 0003 	bic.w	r0, r0, #3
   82e46:	4282      	cmp	r2, r0
   82e48:	d3f7      	bcc.n	82e3a <_free_r+0x142>
   82e4a:	68cd      	ldr	r5, [r1, #12]
   82e4c:	60dd      	str	r5, [r3, #12]
   82e4e:	6099      	str	r1, [r3, #8]
   82e50:	60ab      	str	r3, [r5, #8]
   82e52:	60cb      	str	r3, [r1, #12]
   82e54:	e77f      	b.n	82d56 <_free_r+0x5e>
   82e56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82e58:	200704b4 	.word	0x200704b4
   82e5c:	200708c0 	.word	0x200708c0
   82e60:	20073068 	.word	0x20073068
   82e64:	200704bc 	.word	0x200704bc

00082e68 <_setlocale_r>:
   82e68:	b510      	push	{r4, lr}
   82e6a:	4614      	mov	r4, r2
   82e6c:	b90a      	cbnz	r2, 82e72 <_setlocale_r+0xa>
   82e6e:	480b      	ldr	r0, [pc, #44]	; (82e9c <_setlocale_r+0x34>)
   82e70:	bd10      	pop	{r4, pc}
   82e72:	4610      	mov	r0, r2
   82e74:	490a      	ldr	r1, [pc, #40]	; (82ea0 <_setlocale_r+0x38>)
   82e76:	f001 f83b 	bl	83ef0 <strcmp>
   82e7a:	2800      	cmp	r0, #0
   82e7c:	d0f7      	beq.n	82e6e <_setlocale_r+0x6>
   82e7e:	4620      	mov	r0, r4
   82e80:	4906      	ldr	r1, [pc, #24]	; (82e9c <_setlocale_r+0x34>)
   82e82:	f001 f835 	bl	83ef0 <strcmp>
   82e86:	2800      	cmp	r0, #0
   82e88:	d0f1      	beq.n	82e6e <_setlocale_r+0x6>
   82e8a:	4620      	mov	r0, r4
   82e8c:	4905      	ldr	r1, [pc, #20]	; (82ea4 <_setlocale_r+0x3c>)
   82e8e:	f001 f82f 	bl	83ef0 <strcmp>
   82e92:	2800      	cmp	r0, #0
   82e94:	4801      	ldr	r0, [pc, #4]	; (82e9c <_setlocale_r+0x34>)
   82e96:	bf18      	it	ne
   82e98:	2000      	movne	r0, #0
   82e9a:	bd10      	pop	{r4, pc}
   82e9c:	000857b4 	.word	0x000857b4
   82ea0:	00085817 	.word	0x00085817
   82ea4:	0008581e 	.word	0x0008581e

00082ea8 <__locale_charset>:
   82ea8:	4800      	ldr	r0, [pc, #0]	; (82eac <__locale_charset+0x4>)
   82eaa:	4770      	bx	lr
   82eac:	20070438 	.word	0x20070438

00082eb0 <__locale_mb_cur_max>:
   82eb0:	4b01      	ldr	r3, [pc, #4]	; (82eb8 <__locale_mb_cur_max+0x8>)
   82eb2:	6a18      	ldr	r0, [r3, #32]
   82eb4:	4770      	bx	lr
   82eb6:	bf00      	nop
   82eb8:	20070438 	.word	0x20070438

00082ebc <__locale_msgcharset>:
   82ebc:	4800      	ldr	r0, [pc, #0]	; (82ec0 <__locale_msgcharset+0x4>)
   82ebe:	4770      	bx	lr
   82ec0:	2007045c 	.word	0x2007045c

00082ec4 <__locale_cjk_lang>:
   82ec4:	2000      	movs	r0, #0
   82ec6:	4770      	bx	lr

00082ec8 <_localeconv_r>:
   82ec8:	4800      	ldr	r0, [pc, #0]	; (82ecc <_localeconv_r+0x4>)
   82eca:	4770      	bx	lr
   82ecc:	2007047c 	.word	0x2007047c

00082ed0 <setlocale>:
   82ed0:	460a      	mov	r2, r1
   82ed2:	4903      	ldr	r1, [pc, #12]	; (82ee0 <setlocale+0x10>)
   82ed4:	4603      	mov	r3, r0
   82ed6:	6808      	ldr	r0, [r1, #0]
   82ed8:	4619      	mov	r1, r3
   82eda:	f7ff bfc5 	b.w	82e68 <_setlocale_r>
   82ede:	bf00      	nop
   82ee0:	20070008 	.word	0x20070008

00082ee4 <localeconv>:
   82ee4:	4800      	ldr	r0, [pc, #0]	; (82ee8 <localeconv+0x4>)
   82ee6:	4770      	bx	lr
   82ee8:	2007047c 	.word	0x2007047c

00082eec <_malloc_r>:
   82eec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82ef0:	f101 040b 	add.w	r4, r1, #11
   82ef4:	2c16      	cmp	r4, #22
   82ef6:	4607      	mov	r7, r0
   82ef8:	d903      	bls.n	82f02 <_malloc_r+0x16>
   82efa:	f034 0407 	bics.w	r4, r4, #7
   82efe:	d501      	bpl.n	82f04 <_malloc_r+0x18>
   82f00:	e002      	b.n	82f08 <_malloc_r+0x1c>
   82f02:	2410      	movs	r4, #16
   82f04:	428c      	cmp	r4, r1
   82f06:	d202      	bcs.n	82f0e <_malloc_r+0x22>
   82f08:	230c      	movs	r3, #12
   82f0a:	603b      	str	r3, [r7, #0]
   82f0c:	e1de      	b.n	832cc <_malloc_r+0x3e0>
   82f0e:	4638      	mov	r0, r7
   82f10:	f000 fa26 	bl	83360 <__malloc_lock>
   82f14:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
   82f18:	4da3      	ldr	r5, [pc, #652]	; (831a8 <_malloc_r+0x2bc>)
   82f1a:	d214      	bcs.n	82f46 <_malloc_r+0x5a>
   82f1c:	08e2      	lsrs	r2, r4, #3
   82f1e:	eb05 03c2 	add.w	r3, r5, r2, lsl #3
   82f22:	68de      	ldr	r6, [r3, #12]
   82f24:	429e      	cmp	r6, r3
   82f26:	d106      	bne.n	82f36 <_malloc_r+0x4a>
   82f28:	f106 0308 	add.w	r3, r6, #8
   82f2c:	6976      	ldr	r6, [r6, #20]
   82f2e:	429e      	cmp	r6, r3
   82f30:	bf08      	it	eq
   82f32:	3202      	addeq	r2, #2
   82f34:	d043      	beq.n	82fbe <_malloc_r+0xd2>
   82f36:	6873      	ldr	r3, [r6, #4]
   82f38:	68f2      	ldr	r2, [r6, #12]
   82f3a:	68b1      	ldr	r1, [r6, #8]
   82f3c:	f023 0303 	bic.w	r3, r3, #3
   82f40:	60ca      	str	r2, [r1, #12]
   82f42:	6091      	str	r1, [r2, #8]
   82f44:	e05d      	b.n	83002 <_malloc_r+0x116>
   82f46:	0a62      	lsrs	r2, r4, #9
   82f48:	d01a      	beq.n	82f80 <_malloc_r+0x94>
   82f4a:	2a04      	cmp	r2, #4
   82f4c:	d802      	bhi.n	82f54 <_malloc_r+0x68>
   82f4e:	09a2      	lsrs	r2, r4, #6
   82f50:	3238      	adds	r2, #56	; 0x38
   82f52:	e018      	b.n	82f86 <_malloc_r+0x9a>
   82f54:	2a14      	cmp	r2, #20
   82f56:	d801      	bhi.n	82f5c <_malloc_r+0x70>
   82f58:	325b      	adds	r2, #91	; 0x5b
   82f5a:	e014      	b.n	82f86 <_malloc_r+0x9a>
   82f5c:	2a54      	cmp	r2, #84	; 0x54
   82f5e:	d802      	bhi.n	82f66 <_malloc_r+0x7a>
   82f60:	0b22      	lsrs	r2, r4, #12
   82f62:	326e      	adds	r2, #110	; 0x6e
   82f64:	e00f      	b.n	82f86 <_malloc_r+0x9a>
   82f66:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   82f6a:	d802      	bhi.n	82f72 <_malloc_r+0x86>
   82f6c:	0be2      	lsrs	r2, r4, #15
   82f6e:	3277      	adds	r2, #119	; 0x77
   82f70:	e009      	b.n	82f86 <_malloc_r+0x9a>
   82f72:	f240 5354 	movw	r3, #1364	; 0x554
   82f76:	429a      	cmp	r2, r3
   82f78:	d804      	bhi.n	82f84 <_malloc_r+0x98>
   82f7a:	0ca2      	lsrs	r2, r4, #18
   82f7c:	327c      	adds	r2, #124	; 0x7c
   82f7e:	e002      	b.n	82f86 <_malloc_r+0x9a>
   82f80:	223f      	movs	r2, #63	; 0x3f
   82f82:	e000      	b.n	82f86 <_malloc_r+0x9a>
   82f84:	227e      	movs	r2, #126	; 0x7e
   82f86:	eb05 03c2 	add.w	r3, r5, r2, lsl #3
   82f8a:	68de      	ldr	r6, [r3, #12]
   82f8c:	429e      	cmp	r6, r3
   82f8e:	d015      	beq.n	82fbc <_malloc_r+0xd0>
   82f90:	6871      	ldr	r1, [r6, #4]
   82f92:	f021 0103 	bic.w	r1, r1, #3
   82f96:	1b08      	subs	r0, r1, r4
   82f98:	280f      	cmp	r0, #15
   82f9a:	dd01      	ble.n	82fa0 <_malloc_r+0xb4>
   82f9c:	3a01      	subs	r2, #1
   82f9e:	e00d      	b.n	82fbc <_malloc_r+0xd0>
   82fa0:	2800      	cmp	r0, #0
   82fa2:	db09      	blt.n	82fb8 <_malloc_r+0xcc>
   82fa4:	68f3      	ldr	r3, [r6, #12]
   82fa6:	68b2      	ldr	r2, [r6, #8]
   82fa8:	60d3      	str	r3, [r2, #12]
   82faa:	609a      	str	r2, [r3, #8]
   82fac:	1873      	adds	r3, r6, r1
   82fae:	685a      	ldr	r2, [r3, #4]
   82fb0:	f042 0201 	orr.w	r2, r2, #1
   82fb4:	605a      	str	r2, [r3, #4]
   82fb6:	e194      	b.n	832e2 <_malloc_r+0x3f6>
   82fb8:	68f6      	ldr	r6, [r6, #12]
   82fba:	e7e7      	b.n	82f8c <_malloc_r+0xa0>
   82fbc:	3201      	adds	r2, #1
   82fbe:	497a      	ldr	r1, [pc, #488]	; (831a8 <_malloc_r+0x2bc>)
   82fc0:	692e      	ldr	r6, [r5, #16]
   82fc2:	f101 0008 	add.w	r0, r1, #8
   82fc6:	4286      	cmp	r6, r0
   82fc8:	4686      	mov	lr, r0
   82fca:	d06d      	beq.n	830a8 <_malloc_r+0x1bc>
   82fcc:	6873      	ldr	r3, [r6, #4]
   82fce:	f023 0303 	bic.w	r3, r3, #3
   82fd2:	ebc4 0c03 	rsb	ip, r4, r3
   82fd6:	f1bc 0f0f 	cmp.w	ip, #15
   82fda:	dd0d      	ble.n	82ff8 <_malloc_r+0x10c>
   82fdc:	1933      	adds	r3, r6, r4
   82fde:	f04c 0201 	orr.w	r2, ip, #1
   82fe2:	f044 0401 	orr.w	r4, r4, #1
   82fe6:	6074      	str	r4, [r6, #4]
   82fe8:	614b      	str	r3, [r1, #20]
   82fea:	610b      	str	r3, [r1, #16]
   82fec:	60d8      	str	r0, [r3, #12]
   82fee:	6098      	str	r0, [r3, #8]
   82ff0:	605a      	str	r2, [r3, #4]
   82ff2:	f843 c00c 	str.w	ip, [r3, ip]
   82ff6:	e174      	b.n	832e2 <_malloc_r+0x3f6>
   82ff8:	f1bc 0f00 	cmp.w	ip, #0
   82ffc:	6148      	str	r0, [r1, #20]
   82ffe:	6108      	str	r0, [r1, #16]
   83000:	db01      	blt.n	83006 <_malloc_r+0x11a>
   83002:	4433      	add	r3, r6
   83004:	e7d3      	b.n	82fae <_malloc_r+0xc2>
   83006:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   8300a:	d211      	bcs.n	83030 <_malloc_r+0x144>
   8300c:	08db      	lsrs	r3, r3, #3
   8300e:	1098      	asrs	r0, r3, #2
   83010:	f04f 0c01 	mov.w	ip, #1
   83014:	fa0c fc00 	lsl.w	ip, ip, r0
   83018:	6848      	ldr	r0, [r1, #4]
   8301a:	ea4c 0000 	orr.w	r0, ip, r0
   8301e:	6048      	str	r0, [r1, #4]
   83020:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
   83024:	688b      	ldr	r3, [r1, #8]
   83026:	60f1      	str	r1, [r6, #12]
   83028:	60b3      	str	r3, [r6, #8]
   8302a:	608e      	str	r6, [r1, #8]
   8302c:	60de      	str	r6, [r3, #12]
   8302e:	e03b      	b.n	830a8 <_malloc_r+0x1bc>
   83030:	0a58      	lsrs	r0, r3, #9
   83032:	2804      	cmp	r0, #4
   83034:	d802      	bhi.n	8303c <_malloc_r+0x150>
   83036:	0998      	lsrs	r0, r3, #6
   83038:	3038      	adds	r0, #56	; 0x38
   8303a:	e015      	b.n	83068 <_malloc_r+0x17c>
   8303c:	2814      	cmp	r0, #20
   8303e:	d801      	bhi.n	83044 <_malloc_r+0x158>
   83040:	305b      	adds	r0, #91	; 0x5b
   83042:	e011      	b.n	83068 <_malloc_r+0x17c>
   83044:	2854      	cmp	r0, #84	; 0x54
   83046:	d802      	bhi.n	8304e <_malloc_r+0x162>
   83048:	0b18      	lsrs	r0, r3, #12
   8304a:	306e      	adds	r0, #110	; 0x6e
   8304c:	e00c      	b.n	83068 <_malloc_r+0x17c>
   8304e:	f5b0 7faa 	cmp.w	r0, #340	; 0x154
   83052:	d802      	bhi.n	8305a <_malloc_r+0x16e>
   83054:	0bd8      	lsrs	r0, r3, #15
   83056:	3077      	adds	r0, #119	; 0x77
   83058:	e006      	b.n	83068 <_malloc_r+0x17c>
   8305a:	f240 5154 	movw	r1, #1364	; 0x554
   8305e:	4288      	cmp	r0, r1
   83060:	bf9a      	itte	ls
   83062:	0c98      	lsrls	r0, r3, #18
   83064:	307c      	addls	r0, #124	; 0x7c
   83066:	207e      	movhi	r0, #126	; 0x7e
   83068:	eb05 0cc0 	add.w	ip, r5, r0, lsl #3
   8306c:	f8dc 1008 	ldr.w	r1, [ip, #8]
   83070:	f8df 8134 	ldr.w	r8, [pc, #308]	; 831a8 <_malloc_r+0x2bc>
   83074:	4561      	cmp	r1, ip
   83076:	d10d      	bne.n	83094 <_malloc_r+0x1a8>
   83078:	2301      	movs	r3, #1
   8307a:	1080      	asrs	r0, r0, #2
   8307c:	fa03 f000 	lsl.w	r0, r3, r0
   83080:	f8d8 3004 	ldr.w	r3, [r8, #4]
   83084:	4303      	orrs	r3, r0
   83086:	f8c8 3004 	str.w	r3, [r8, #4]
   8308a:	460b      	mov	r3, r1
   8308c:	e008      	b.n	830a0 <_malloc_r+0x1b4>
   8308e:	6889      	ldr	r1, [r1, #8]
   83090:	4561      	cmp	r1, ip
   83092:	d004      	beq.n	8309e <_malloc_r+0x1b2>
   83094:	6848      	ldr	r0, [r1, #4]
   83096:	f020 0003 	bic.w	r0, r0, #3
   8309a:	4283      	cmp	r3, r0
   8309c:	d3f7      	bcc.n	8308e <_malloc_r+0x1a2>
   8309e:	68cb      	ldr	r3, [r1, #12]
   830a0:	60f3      	str	r3, [r6, #12]
   830a2:	60b1      	str	r1, [r6, #8]
   830a4:	609e      	str	r6, [r3, #8]
   830a6:	60ce      	str	r6, [r1, #12]
   830a8:	2101      	movs	r1, #1
   830aa:	1093      	asrs	r3, r2, #2
   830ac:	fa01 f303 	lsl.w	r3, r1, r3
   830b0:	6869      	ldr	r1, [r5, #4]
   830b2:	428b      	cmp	r3, r1
   830b4:	d85d      	bhi.n	83172 <_malloc_r+0x286>
   830b6:	420b      	tst	r3, r1
   830b8:	d106      	bne.n	830c8 <_malloc_r+0x1dc>
   830ba:	f022 0203 	bic.w	r2, r2, #3
   830be:	005b      	lsls	r3, r3, #1
   830c0:	420b      	tst	r3, r1
   830c2:	f102 0204 	add.w	r2, r2, #4
   830c6:	d0fa      	beq.n	830be <_malloc_r+0x1d2>
   830c8:	eb05 00c2 	add.w	r0, r5, r2, lsl #3
   830cc:	4680      	mov	r8, r0
   830ce:	4694      	mov	ip, r2
   830d0:	f8d8 600c 	ldr.w	r6, [r8, #12]
   830d4:	4546      	cmp	r6, r8
   830d6:	d02d      	beq.n	83134 <_malloc_r+0x248>
   830d8:	6871      	ldr	r1, [r6, #4]
   830da:	f021 0903 	bic.w	r9, r1, #3
   830de:	ebc4 0109 	rsb	r1, r4, r9
   830e2:	290f      	cmp	r1, #15
   830e4:	dd13      	ble.n	8310e <_malloc_r+0x222>
   830e6:	1933      	adds	r3, r6, r4
   830e8:	f044 0401 	orr.w	r4, r4, #1
   830ec:	68f2      	ldr	r2, [r6, #12]
   830ee:	6074      	str	r4, [r6, #4]
   830f0:	f856 0f08 	ldr.w	r0, [r6, #8]!
   830f4:	60c2      	str	r2, [r0, #12]
   830f6:	6090      	str	r0, [r2, #8]
   830f8:	f041 0201 	orr.w	r2, r1, #1
   830fc:	616b      	str	r3, [r5, #20]
   830fe:	612b      	str	r3, [r5, #16]
   83100:	f8c3 e00c 	str.w	lr, [r3, #12]
   83104:	f8c3 e008 	str.w	lr, [r3, #8]
   83108:	605a      	str	r2, [r3, #4]
   8310a:	5059      	str	r1, [r3, r1]
   8310c:	e00c      	b.n	83128 <_malloc_r+0x23c>
   8310e:	2900      	cmp	r1, #0
   83110:	db0e      	blt.n	83130 <_malloc_r+0x244>
   83112:	eb06 0109 	add.w	r1, r6, r9
   83116:	684b      	ldr	r3, [r1, #4]
   83118:	f043 0301 	orr.w	r3, r3, #1
   8311c:	604b      	str	r3, [r1, #4]
   8311e:	68f3      	ldr	r3, [r6, #12]
   83120:	f856 2f08 	ldr.w	r2, [r6, #8]!
   83124:	60d3      	str	r3, [r2, #12]
   83126:	609a      	str	r2, [r3, #8]
   83128:	4638      	mov	r0, r7
   8312a:	f000 f91a 	bl	83362 <__malloc_unlock>
   8312e:	e0dc      	b.n	832ea <_malloc_r+0x3fe>
   83130:	68f6      	ldr	r6, [r6, #12]
   83132:	e7cf      	b.n	830d4 <_malloc_r+0x1e8>
   83134:	f10c 0c01 	add.w	ip, ip, #1
   83138:	f01c 0f03 	tst.w	ip, #3
   8313c:	f108 0808 	add.w	r8, r8, #8
   83140:	d1c6      	bne.n	830d0 <_malloc_r+0x1e4>
   83142:	0791      	lsls	r1, r2, #30
   83144:	d104      	bne.n	83150 <_malloc_r+0x264>
   83146:	686a      	ldr	r2, [r5, #4]
   83148:	ea22 0203 	bic.w	r2, r2, r3
   8314c:	606a      	str	r2, [r5, #4]
   8314e:	e005      	b.n	8315c <_malloc_r+0x270>
   83150:	f1a0 0108 	sub.w	r1, r0, #8
   83154:	6800      	ldr	r0, [r0, #0]
   83156:	3a01      	subs	r2, #1
   83158:	4288      	cmp	r0, r1
   8315a:	d0f2      	beq.n	83142 <_malloc_r+0x256>
   8315c:	6869      	ldr	r1, [r5, #4]
   8315e:	005b      	lsls	r3, r3, #1
   83160:	428b      	cmp	r3, r1
   83162:	d806      	bhi.n	83172 <_malloc_r+0x286>
   83164:	b12b      	cbz	r3, 83172 <_malloc_r+0x286>
   83166:	4662      	mov	r2, ip
   83168:	420b      	tst	r3, r1
   8316a:	d1ad      	bne.n	830c8 <_malloc_r+0x1dc>
   8316c:	3204      	adds	r2, #4
   8316e:	005b      	lsls	r3, r3, #1
   83170:	e7fa      	b.n	83168 <_malloc_r+0x27c>
   83172:	f8d5 9008 	ldr.w	r9, [r5, #8]
   83176:	f8d9 3004 	ldr.w	r3, [r9, #4]
   8317a:	f023 0b03 	bic.w	fp, r3, #3
   8317e:	45a3      	cmp	fp, r4
   83180:	d304      	bcc.n	8318c <_malloc_r+0x2a0>
   83182:	ebc4 030b 	rsb	r3, r4, fp
   83186:	2b0f      	cmp	r3, #15
   83188:	f300 80a2 	bgt.w	832d0 <_malloc_r+0x3e4>
   8318c:	4907      	ldr	r1, [pc, #28]	; (831ac <_malloc_r+0x2c0>)
   8318e:	eb09 030b 	add.w	r3, r9, fp
   83192:	680a      	ldr	r2, [r1, #0]
   83194:	4688      	mov	r8, r1
   83196:	eb04 0a02 	add.w	sl, r4, r2
   8319a:	f8d5 2408 	ldr.w	r2, [r5, #1032]	; 0x408
   8319e:	3201      	adds	r2, #1
   831a0:	d106      	bne.n	831b0 <_malloc_r+0x2c4>
   831a2:	f10a 0a10 	add.w	sl, sl, #16
   831a6:	e00b      	b.n	831c0 <_malloc_r+0x2d4>
   831a8:	200704b4 	.word	0x200704b4
   831ac:	20073068 	.word	0x20073068
   831b0:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
   831b4:	f10a 0a0f 	add.w	sl, sl, #15
   831b8:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
   831bc:	f02a 0a0f 	bic.w	sl, sl, #15
   831c0:	4638      	mov	r0, r7
   831c2:	4651      	mov	r1, sl
   831c4:	9301      	str	r3, [sp, #4]
   831c6:	f000 fe83 	bl	83ed0 <_sbrk_r>
   831ca:	1c42      	adds	r2, r0, #1
   831cc:	4606      	mov	r6, r0
   831ce:	9b01      	ldr	r3, [sp, #4]
   831d0:	d06f      	beq.n	832b2 <_malloc_r+0x3c6>
   831d2:	4298      	cmp	r0, r3
   831d4:	d201      	bcs.n	831da <_malloc_r+0x2ee>
   831d6:	45a9      	cmp	r9, r5
   831d8:	d16b      	bne.n	832b2 <_malloc_r+0x3c6>
   831da:	f8d8 2004 	ldr.w	r2, [r8, #4]
   831de:	429e      	cmp	r6, r3
   831e0:	4452      	add	r2, sl
   831e2:	f8c8 2004 	str.w	r2, [r8, #4]
   831e6:	d108      	bne.n	831fa <_malloc_r+0x30e>
   831e8:	f3c6 010b 	ubfx	r1, r6, #0, #12
   831ec:	b929      	cbnz	r1, 831fa <_malloc_r+0x30e>
   831ee:	68ab      	ldr	r3, [r5, #8]
   831f0:	44da      	add	sl, fp
   831f2:	f04a 0201 	orr.w	r2, sl, #1
   831f6:	605a      	str	r2, [r3, #4]
   831f8:	e04d      	b.n	83296 <_malloc_r+0x3aa>
   831fa:	f8d5 1408 	ldr.w	r1, [r5, #1032]	; 0x408
   831fe:	3101      	adds	r1, #1
   83200:	d103      	bne.n	8320a <_malloc_r+0x31e>
   83202:	4b3c      	ldr	r3, [pc, #240]	; (832f4 <_malloc_r+0x408>)
   83204:	f8c3 6408 	str.w	r6, [r3, #1032]	; 0x408
   83208:	e003      	b.n	83212 <_malloc_r+0x326>
   8320a:	1af3      	subs	r3, r6, r3
   8320c:	441a      	add	r2, r3
   8320e:	f8c8 2004 	str.w	r2, [r8, #4]
   83212:	f016 0307 	ands.w	r3, r6, #7
   83216:	bf1c      	itt	ne
   83218:	f1c3 0308 	rsbne	r3, r3, #8
   8321c:	18f6      	addne	r6, r6, r3
   8321e:	44b2      	add	sl, r6
   83220:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   83224:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
   83228:	ebca 0a03 	rsb	sl, sl, r3
   8322c:	4651      	mov	r1, sl
   8322e:	4638      	mov	r0, r7
   83230:	f000 fe4e 	bl	83ed0 <_sbrk_r>
   83234:	1c43      	adds	r3, r0, #1
   83236:	bf04      	itt	eq
   83238:	4630      	moveq	r0, r6
   8323a:	f04f 0a00 	moveq.w	sl, #0
   8323e:	f8d8 3004 	ldr.w	r3, [r8, #4]
   83242:	1b80      	subs	r0, r0, r6
   83244:	4450      	add	r0, sl
   83246:	4453      	add	r3, sl
   83248:	f040 0001 	orr.w	r0, r0, #1
   8324c:	45a9      	cmp	r9, r5
   8324e:	60ae      	str	r6, [r5, #8]
   83250:	f8c8 3004 	str.w	r3, [r8, #4]
   83254:	6070      	str	r0, [r6, #4]
   83256:	d01e      	beq.n	83296 <_malloc_r+0x3aa>
   83258:	f1bb 0f0f 	cmp.w	fp, #15
   8325c:	d802      	bhi.n	83264 <_malloc_r+0x378>
   8325e:	2301      	movs	r3, #1
   83260:	6073      	str	r3, [r6, #4]
   83262:	e026      	b.n	832b2 <_malloc_r+0x3c6>
   83264:	f8d9 3004 	ldr.w	r3, [r9, #4]
   83268:	f1ab 0b0c 	sub.w	fp, fp, #12
   8326c:	f02b 0b07 	bic.w	fp, fp, #7
   83270:	f003 0301 	and.w	r3, r3, #1
   83274:	ea4b 0303 	orr.w	r3, fp, r3
   83278:	f8c9 3004 	str.w	r3, [r9, #4]
   8327c:	2205      	movs	r2, #5
   8327e:	eb09 030b 	add.w	r3, r9, fp
   83282:	f1bb 0f0f 	cmp.w	fp, #15
   83286:	605a      	str	r2, [r3, #4]
   83288:	609a      	str	r2, [r3, #8]
   8328a:	d904      	bls.n	83296 <_malloc_r+0x3aa>
   8328c:	4638      	mov	r0, r7
   8328e:	f109 0108 	add.w	r1, r9, #8
   83292:	f7ff fd31 	bl	82cf8 <_free_r>
   83296:	f8d8 3004 	ldr.w	r3, [r8, #4]
   8329a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
   8329e:	4293      	cmp	r3, r2
   832a0:	bf84      	itt	hi
   832a2:	4a15      	ldrhi	r2, [pc, #84]	; (832f8 <_malloc_r+0x40c>)
   832a4:	62d3      	strhi	r3, [r2, #44]	; 0x2c
   832a6:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
   832aa:	4293      	cmp	r3, r2
   832ac:	bf84      	itt	hi
   832ae:	4a12      	ldrhi	r2, [pc, #72]	; (832f8 <_malloc_r+0x40c>)
   832b0:	6313      	strhi	r3, [r2, #48]	; 0x30
   832b2:	68ab      	ldr	r3, [r5, #8]
   832b4:	685a      	ldr	r2, [r3, #4]
   832b6:	f022 0203 	bic.w	r2, r2, #3
   832ba:	42a2      	cmp	r2, r4
   832bc:	ebc4 0302 	rsb	r3, r4, r2
   832c0:	d301      	bcc.n	832c6 <_malloc_r+0x3da>
   832c2:	2b0f      	cmp	r3, #15
   832c4:	dc04      	bgt.n	832d0 <_malloc_r+0x3e4>
   832c6:	4638      	mov	r0, r7
   832c8:	f000 f84b 	bl	83362 <__malloc_unlock>
   832cc:	2600      	movs	r6, #0
   832ce:	e00c      	b.n	832ea <_malloc_r+0x3fe>
   832d0:	68ae      	ldr	r6, [r5, #8]
   832d2:	f044 0201 	orr.w	r2, r4, #1
   832d6:	f043 0301 	orr.w	r3, r3, #1
   832da:	4434      	add	r4, r6
   832dc:	6072      	str	r2, [r6, #4]
   832de:	60ac      	str	r4, [r5, #8]
   832e0:	6063      	str	r3, [r4, #4]
   832e2:	4638      	mov	r0, r7
   832e4:	f000 f83d 	bl	83362 <__malloc_unlock>
   832e8:	3608      	adds	r6, #8
   832ea:	4630      	mov	r0, r6
   832ec:	b003      	add	sp, #12
   832ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   832f2:	bf00      	nop
   832f4:	200704b4 	.word	0x200704b4
   832f8:	20073068 	.word	0x20073068

000832fc <memchr>:
   832fc:	b510      	push	{r4, lr}
   832fe:	b2c9      	uxtb	r1, r1
   83300:	4402      	add	r2, r0
   83302:	4290      	cmp	r0, r2
   83304:	4603      	mov	r3, r0
   83306:	d005      	beq.n	83314 <memchr+0x18>
   83308:	781c      	ldrb	r4, [r3, #0]
   8330a:	3001      	adds	r0, #1
   8330c:	428c      	cmp	r4, r1
   8330e:	d1f8      	bne.n	83302 <memchr+0x6>
   83310:	4618      	mov	r0, r3
   83312:	bd10      	pop	{r4, pc}
   83314:	2000      	movs	r0, #0
   83316:	bd10      	pop	{r4, pc}

00083318 <memcpy>:
   83318:	b510      	push	{r4, lr}
   8331a:	2300      	movs	r3, #0
   8331c:	4293      	cmp	r3, r2
   8331e:	d003      	beq.n	83328 <memcpy+0x10>
   83320:	5ccc      	ldrb	r4, [r1, r3]
   83322:	54c4      	strb	r4, [r0, r3]
   83324:	3301      	adds	r3, #1
   83326:	e7f9      	b.n	8331c <memcpy+0x4>
   83328:	bd10      	pop	{r4, pc}

0008332a <memmove>:
   8332a:	4281      	cmp	r1, r0
   8332c:	b570      	push	{r4, r5, r6, lr}
   8332e:	d301      	bcc.n	83334 <memmove+0xa>
   83330:	2300      	movs	r3, #0
   83332:	e00e      	b.n	83352 <memmove+0x28>
   83334:	188c      	adds	r4, r1, r2
   83336:	42a0      	cmp	r0, r4
   83338:	d2fa      	bcs.n	83330 <memmove+0x6>
   8333a:	1885      	adds	r5, r0, r2
   8333c:	4613      	mov	r3, r2
   8333e:	f113 33ff 	adds.w	r3, r3, #4294967295
   83342:	d305      	bcc.n	83350 <memmove+0x26>
   83344:	4251      	negs	r1, r2
   83346:	1866      	adds	r6, r4, r1
   83348:	5cf6      	ldrb	r6, [r6, r3]
   8334a:	4429      	add	r1, r5
   8334c:	54ce      	strb	r6, [r1, r3]
   8334e:	e7f6      	b.n	8333e <memmove+0x14>
   83350:	bd70      	pop	{r4, r5, r6, pc}
   83352:	4293      	cmp	r3, r2
   83354:	d003      	beq.n	8335e <memmove+0x34>
   83356:	5ccc      	ldrb	r4, [r1, r3]
   83358:	54c4      	strb	r4, [r0, r3]
   8335a:	3301      	adds	r3, #1
   8335c:	e7f9      	b.n	83352 <memmove+0x28>
   8335e:	bd70      	pop	{r4, r5, r6, pc}

00083360 <__malloc_lock>:
   83360:	4770      	bx	lr

00083362 <__malloc_unlock>:
   83362:	4770      	bx	lr

00083364 <_Balloc>:
   83364:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   83366:	b570      	push	{r4, r5, r6, lr}
   83368:	4605      	mov	r5, r0
   8336a:	460c      	mov	r4, r1
   8336c:	b13b      	cbz	r3, 8337e <_Balloc+0x1a>
   8336e:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   83370:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
   83374:	b160      	cbz	r0, 83390 <_Balloc+0x2c>
   83376:	6801      	ldr	r1, [r0, #0]
   83378:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
   8337c:	e014      	b.n	833a8 <_Balloc+0x44>
   8337e:	2104      	movs	r1, #4
   83380:	2221      	movs	r2, #33	; 0x21
   83382:	f001 fa77 	bl	84874 <_calloc_r>
   83386:	64e8      	str	r0, [r5, #76]	; 0x4c
   83388:	2800      	cmp	r0, #0
   8338a:	d1f0      	bne.n	8336e <_Balloc+0xa>
   8338c:	2000      	movs	r0, #0
   8338e:	bd70      	pop	{r4, r5, r6, pc}
   83390:	2101      	movs	r1, #1
   83392:	fa01 f604 	lsl.w	r6, r1, r4
   83396:	1d72      	adds	r2, r6, #5
   83398:	4628      	mov	r0, r5
   8339a:	0092      	lsls	r2, r2, #2
   8339c:	f001 fa6a 	bl	84874 <_calloc_r>
   833a0:	2800      	cmp	r0, #0
   833a2:	d0f3      	beq.n	8338c <_Balloc+0x28>
   833a4:	6044      	str	r4, [r0, #4]
   833a6:	6086      	str	r6, [r0, #8]
   833a8:	2200      	movs	r2, #0
   833aa:	6102      	str	r2, [r0, #16]
   833ac:	60c2      	str	r2, [r0, #12]
   833ae:	bd70      	pop	{r4, r5, r6, pc}

000833b0 <_Bfree>:
   833b0:	b131      	cbz	r1, 833c0 <_Bfree+0x10>
   833b2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   833b4:	684a      	ldr	r2, [r1, #4]
   833b6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   833ba:	6008      	str	r0, [r1, #0]
   833bc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   833c0:	4770      	bx	lr

000833c2 <__multadd>:
   833c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   833c6:	460c      	mov	r4, r1
   833c8:	461e      	mov	r6, r3
   833ca:	690d      	ldr	r5, [r1, #16]
   833cc:	4607      	mov	r7, r0
   833ce:	3114      	adds	r1, #20
   833d0:	2300      	movs	r3, #0
   833d2:	6808      	ldr	r0, [r1, #0]
   833d4:	3301      	adds	r3, #1
   833d6:	fa1f fc80 	uxth.w	ip, r0
   833da:	0c00      	lsrs	r0, r0, #16
   833dc:	fb02 6c0c 	mla	ip, r2, ip, r6
   833e0:	4350      	muls	r0, r2
   833e2:	eb00 401c 	add.w	r0, r0, ip, lsr #16
   833e6:	fa1f fc8c 	uxth.w	ip, ip
   833ea:	0c06      	lsrs	r6, r0, #16
   833ec:	42ab      	cmp	r3, r5
   833ee:	eb0c 4000 	add.w	r0, ip, r0, lsl #16
   833f2:	f841 0b04 	str.w	r0, [r1], #4
   833f6:	dbec      	blt.n	833d2 <__multadd+0x10>
   833f8:	b1d6      	cbz	r6, 83430 <__multadd+0x6e>
   833fa:	68a3      	ldr	r3, [r4, #8]
   833fc:	429d      	cmp	r5, r3
   833fe:	db12      	blt.n	83426 <__multadd+0x64>
   83400:	6861      	ldr	r1, [r4, #4]
   83402:	4638      	mov	r0, r7
   83404:	3101      	adds	r1, #1
   83406:	f7ff ffad 	bl	83364 <_Balloc>
   8340a:	6922      	ldr	r2, [r4, #16]
   8340c:	f104 010c 	add.w	r1, r4, #12
   83410:	3202      	adds	r2, #2
   83412:	4680      	mov	r8, r0
   83414:	0092      	lsls	r2, r2, #2
   83416:	300c      	adds	r0, #12
   83418:	f7ff ff7e 	bl	83318 <memcpy>
   8341c:	4621      	mov	r1, r4
   8341e:	4638      	mov	r0, r7
   83420:	f7ff ffc6 	bl	833b0 <_Bfree>
   83424:	4644      	mov	r4, r8
   83426:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   8342a:	3501      	adds	r5, #1
   8342c:	615e      	str	r6, [r3, #20]
   8342e:	6125      	str	r5, [r4, #16]
   83430:	4620      	mov	r0, r4
   83432:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00083436 <__s2b>:
   83436:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   8343a:	4614      	mov	r4, r2
   8343c:	4698      	mov	r8, r3
   8343e:	f103 0208 	add.w	r2, r3, #8
   83442:	2309      	movs	r3, #9
   83444:	460d      	mov	r5, r1
   83446:	fb92 f2f3 	sdiv	r2, r2, r3
   8344a:	4606      	mov	r6, r0
   8344c:	2301      	movs	r3, #1
   8344e:	2100      	movs	r1, #0
   83450:	429a      	cmp	r2, r3
   83452:	dd02      	ble.n	8345a <__s2b+0x24>
   83454:	005b      	lsls	r3, r3, #1
   83456:	3101      	adds	r1, #1
   83458:	e7fa      	b.n	83450 <__s2b+0x1a>
   8345a:	4630      	mov	r0, r6
   8345c:	f7ff ff82 	bl	83364 <_Balloc>
   83460:	9b08      	ldr	r3, [sp, #32]
   83462:	2c09      	cmp	r4, #9
   83464:	6143      	str	r3, [r0, #20]
   83466:	f04f 0301 	mov.w	r3, #1
   8346a:	4601      	mov	r1, r0
   8346c:	6103      	str	r3, [r0, #16]
   8346e:	dd11      	ble.n	83494 <__s2b+0x5e>
   83470:	f105 0909 	add.w	r9, r5, #9
   83474:	464f      	mov	r7, r9
   83476:	4425      	add	r5, r4
   83478:	f817 3b01 	ldrb.w	r3, [r7], #1
   8347c:	4630      	mov	r0, r6
   8347e:	220a      	movs	r2, #10
   83480:	3b30      	subs	r3, #48	; 0x30
   83482:	f7ff ff9e 	bl	833c2 <__multadd>
   83486:	42af      	cmp	r7, r5
   83488:	4601      	mov	r1, r0
   8348a:	d1f5      	bne.n	83478 <__s2b+0x42>
   8348c:	eb09 0704 	add.w	r7, r9, r4
   83490:	3f08      	subs	r7, #8
   83492:	e002      	b.n	8349a <__s2b+0x64>
   83494:	f105 070a 	add.w	r7, r5, #10
   83498:	2409      	movs	r4, #9
   8349a:	4625      	mov	r5, r4
   8349c:	4545      	cmp	r5, r8
   8349e:	da09      	bge.n	834b4 <__s2b+0x7e>
   834a0:	1b3b      	subs	r3, r7, r4
   834a2:	5d5b      	ldrb	r3, [r3, r5]
   834a4:	4630      	mov	r0, r6
   834a6:	220a      	movs	r2, #10
   834a8:	3b30      	subs	r3, #48	; 0x30
   834aa:	f7ff ff8a 	bl	833c2 <__multadd>
   834ae:	3501      	adds	r5, #1
   834b0:	4601      	mov	r1, r0
   834b2:	e7f3      	b.n	8349c <__s2b+0x66>
   834b4:	4608      	mov	r0, r1
   834b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

000834ba <__hi0bits>:
   834ba:	0c03      	lsrs	r3, r0, #16
   834bc:	041b      	lsls	r3, r3, #16
   834be:	b913      	cbnz	r3, 834c6 <__hi0bits+0xc>
   834c0:	0400      	lsls	r0, r0, #16
   834c2:	2310      	movs	r3, #16
   834c4:	e000      	b.n	834c8 <__hi0bits+0xe>
   834c6:	2300      	movs	r3, #0
   834c8:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   834cc:	bf04      	itt	eq
   834ce:	0200      	lsleq	r0, r0, #8
   834d0:	3308      	addeq	r3, #8
   834d2:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   834d6:	bf04      	itt	eq
   834d8:	0100      	lsleq	r0, r0, #4
   834da:	3304      	addeq	r3, #4
   834dc:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   834e0:	bf04      	itt	eq
   834e2:	0080      	lsleq	r0, r0, #2
   834e4:	3302      	addeq	r3, #2
   834e6:	2800      	cmp	r0, #0
   834e8:	db03      	blt.n	834f2 <__hi0bits+0x38>
   834ea:	0042      	lsls	r2, r0, #1
   834ec:	d503      	bpl.n	834f6 <__hi0bits+0x3c>
   834ee:	1c58      	adds	r0, r3, #1
   834f0:	4770      	bx	lr
   834f2:	4618      	mov	r0, r3
   834f4:	4770      	bx	lr
   834f6:	2020      	movs	r0, #32
   834f8:	4770      	bx	lr

000834fa <__lo0bits>:
   834fa:	6803      	ldr	r3, [r0, #0]
   834fc:	f013 0207 	ands.w	r2, r3, #7
   83500:	d00b      	beq.n	8351a <__lo0bits+0x20>
   83502:	07d9      	lsls	r1, r3, #31
   83504:	d422      	bmi.n	8354c <__lo0bits+0x52>
   83506:	079a      	lsls	r2, r3, #30
   83508:	d503      	bpl.n	83512 <__lo0bits+0x18>
   8350a:	085b      	lsrs	r3, r3, #1
   8350c:	6003      	str	r3, [r0, #0]
   8350e:	2001      	movs	r0, #1
   83510:	4770      	bx	lr
   83512:	089b      	lsrs	r3, r3, #2
   83514:	6003      	str	r3, [r0, #0]
   83516:	2002      	movs	r0, #2
   83518:	4770      	bx	lr
   8351a:	b299      	uxth	r1, r3
   8351c:	b909      	cbnz	r1, 83522 <__lo0bits+0x28>
   8351e:	0c1b      	lsrs	r3, r3, #16
   83520:	2210      	movs	r2, #16
   83522:	f013 0fff 	tst.w	r3, #255	; 0xff
   83526:	bf04      	itt	eq
   83528:	0a1b      	lsreq	r3, r3, #8
   8352a:	3208      	addeq	r2, #8
   8352c:	0719      	lsls	r1, r3, #28
   8352e:	bf04      	itt	eq
   83530:	091b      	lsreq	r3, r3, #4
   83532:	3204      	addeq	r2, #4
   83534:	0799      	lsls	r1, r3, #30
   83536:	bf04      	itt	eq
   83538:	089b      	lsreq	r3, r3, #2
   8353a:	3202      	addeq	r2, #2
   8353c:	07d9      	lsls	r1, r3, #31
   8353e:	d402      	bmi.n	83546 <__lo0bits+0x4c>
   83540:	085b      	lsrs	r3, r3, #1
   83542:	d005      	beq.n	83550 <__lo0bits+0x56>
   83544:	3201      	adds	r2, #1
   83546:	6003      	str	r3, [r0, #0]
   83548:	4610      	mov	r0, r2
   8354a:	4770      	bx	lr
   8354c:	2000      	movs	r0, #0
   8354e:	4770      	bx	lr
   83550:	2020      	movs	r0, #32
   83552:	4770      	bx	lr

00083554 <__i2b>:
   83554:	b510      	push	{r4, lr}
   83556:	460c      	mov	r4, r1
   83558:	2101      	movs	r1, #1
   8355a:	f7ff ff03 	bl	83364 <_Balloc>
   8355e:	2201      	movs	r2, #1
   83560:	6144      	str	r4, [r0, #20]
   83562:	6102      	str	r2, [r0, #16]
   83564:	bd10      	pop	{r4, pc}

00083566 <__multiply>:
   83566:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8356a:	4616      	mov	r6, r2
   8356c:	6933      	ldr	r3, [r6, #16]
   8356e:	690a      	ldr	r2, [r1, #16]
   83570:	b085      	sub	sp, #20
   83572:	429a      	cmp	r2, r3
   83574:	460d      	mov	r5, r1
   83576:	da01      	bge.n	8357c <__multiply+0x16>
   83578:	4635      	mov	r5, r6
   8357a:	460e      	mov	r6, r1
   8357c:	f8d5 8010 	ldr.w	r8, [r5, #16]
   83580:	6937      	ldr	r7, [r6, #16]
   83582:	68ab      	ldr	r3, [r5, #8]
   83584:	6869      	ldr	r1, [r5, #4]
   83586:	eb08 0407 	add.w	r4, r8, r7
   8358a:	429c      	cmp	r4, r3
   8358c:	bfc8      	it	gt
   8358e:	3101      	addgt	r1, #1
   83590:	f7ff fee8 	bl	83364 <_Balloc>
   83594:	f100 0314 	add.w	r3, r0, #20
   83598:	eb03 0184 	add.w	r1, r3, r4, lsl #2
   8359c:	9101      	str	r1, [sp, #4]
   8359e:	461a      	mov	r2, r3
   835a0:	f8dd a004 	ldr.w	sl, [sp, #4]
   835a4:	4552      	cmp	r2, sl
   835a6:	d203      	bcs.n	835b0 <__multiply+0x4a>
   835a8:	2100      	movs	r1, #0
   835aa:	f842 1b04 	str.w	r1, [r2], #4
   835ae:	e7f7      	b.n	835a0 <__multiply+0x3a>
   835b0:	f105 0114 	add.w	r1, r5, #20
   835b4:	f106 0214 	add.w	r2, r6, #20
   835b8:	eb01 0888 	add.w	r8, r1, r8, lsl #2
   835bc:	eb02 0787 	add.w	r7, r2, r7, lsl #2
   835c0:	f8cd 8008 	str.w	r8, [sp, #8]
   835c4:	9703      	str	r7, [sp, #12]
   835c6:	9e03      	ldr	r6, [sp, #12]
   835c8:	4615      	mov	r5, r2
   835ca:	42b2      	cmp	r2, r6
   835cc:	d256      	bcs.n	8367c <__multiply+0x116>
   835ce:	f8b5 c000 	ldrh.w	ip, [r5]
   835d2:	3204      	adds	r2, #4
   835d4:	f1bc 0f00 	cmp.w	ip, #0
   835d8:	d025      	beq.n	83626 <__multiply+0xc0>
   835da:	460f      	mov	r7, r1
   835dc:	461d      	mov	r5, r3
   835de:	2600      	movs	r6, #0
   835e0:	f857 9b04 	ldr.w	r9, [r7], #4
   835e4:	f8d5 8000 	ldr.w	r8, [r5]
   835e8:	fa1f fb89 	uxth.w	fp, r9
   835ec:	fa1f fa88 	uxth.w	sl, r8
   835f0:	fb0c aa0b 	mla	sl, ip, fp, sl
   835f4:	ea4f 4919 	mov.w	r9, r9, lsr #16
   835f8:	ea4f 4818 	mov.w	r8, r8, lsr #16
   835fc:	fb0c 8809 	mla	r8, ip, r9, r8
   83600:	44b2      	add	sl, r6
   83602:	eb08 481a 	add.w	r8, r8, sl, lsr #16
   83606:	fa1f fa8a 	uxth.w	sl, sl
   8360a:	ea4a 4a08 	orr.w	sl, sl, r8, lsl #16
   8360e:	ea4f 4618 	mov.w	r6, r8, lsr #16
   83612:	f8dd 8008 	ldr.w	r8, [sp, #8]
   83616:	46ab      	mov	fp, r5
   83618:	45b8      	cmp	r8, r7
   8361a:	f84b ab04 	str.w	sl, [fp], #4
   8361e:	d901      	bls.n	83624 <__multiply+0xbe>
   83620:	465d      	mov	r5, fp
   83622:	e7dd      	b.n	835e0 <__multiply+0x7a>
   83624:	606e      	str	r6, [r5, #4]
   83626:	f832 8c02 	ldrh.w	r8, [r2, #-2]
   8362a:	f1b8 0f00 	cmp.w	r8, #0
   8362e:	d023      	beq.n	83678 <__multiply+0x112>
   83630:	681e      	ldr	r6, [r3, #0]
   83632:	460f      	mov	r7, r1
   83634:	461d      	mov	r5, r3
   83636:	f04f 0900 	mov.w	r9, #0
   8363a:	f8b7 a000 	ldrh.w	sl, [r7]
   8363e:	f8b5 c002 	ldrh.w	ip, [r5, #2]
   83642:	b2b6      	uxth	r6, r6
   83644:	fb08 cc0a 	mla	ip, r8, sl, ip
   83648:	44e1      	add	r9, ip
   8364a:	ea46 4609 	orr.w	r6, r6, r9, lsl #16
   8364e:	46ac      	mov	ip, r5
   83650:	f84c 6b04 	str.w	r6, [ip], #4
   83654:	f857 6b04 	ldr.w	r6, [r7], #4
   83658:	f8b5 a004 	ldrh.w	sl, [r5, #4]
   8365c:	0c36      	lsrs	r6, r6, #16
   8365e:	fb08 a606 	mla	r6, r8, r6, sl
   83662:	f8dd a008 	ldr.w	sl, [sp, #8]
   83666:	eb06 4619 	add.w	r6, r6, r9, lsr #16
   8366a:	4557      	cmp	r7, sl
   8366c:	ea4f 4916 	mov.w	r9, r6, lsr #16
   83670:	d201      	bcs.n	83676 <__multiply+0x110>
   83672:	4665      	mov	r5, ip
   83674:	e7e1      	b.n	8363a <__multiply+0xd4>
   83676:	606e      	str	r6, [r5, #4]
   83678:	3304      	adds	r3, #4
   8367a:	e7a4      	b.n	835c6 <__multiply+0x60>
   8367c:	9b01      	ldr	r3, [sp, #4]
   8367e:	2c00      	cmp	r4, #0
   83680:	dc03      	bgt.n	8368a <__multiply+0x124>
   83682:	6104      	str	r4, [r0, #16]
   83684:	b005      	add	sp, #20
   83686:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8368a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   8368e:	2a00      	cmp	r2, #0
   83690:	d1f7      	bne.n	83682 <__multiply+0x11c>
   83692:	3c01      	subs	r4, #1
   83694:	e7f3      	b.n	8367e <__multiply+0x118>

00083696 <__pow5mult>:
   83696:	f012 0303 	ands.w	r3, r2, #3
   8369a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8369e:	4605      	mov	r5, r0
   836a0:	460e      	mov	r6, r1
   836a2:	4617      	mov	r7, r2
   836a4:	d007      	beq.n	836b6 <__pow5mult+0x20>
   836a6:	4a1a      	ldr	r2, [pc, #104]	; (83710 <__pow5mult+0x7a>)
   836a8:	3b01      	subs	r3, #1
   836aa:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   836ae:	2300      	movs	r3, #0
   836b0:	f7ff fe87 	bl	833c2 <__multadd>
   836b4:	4606      	mov	r6, r0
   836b6:	10bf      	asrs	r7, r7, #2
   836b8:	d027      	beq.n	8370a <__pow5mult+0x74>
   836ba:	6cac      	ldr	r4, [r5, #72]	; 0x48
   836bc:	b974      	cbnz	r4, 836dc <__pow5mult+0x46>
   836be:	4628      	mov	r0, r5
   836c0:	f240 2171 	movw	r1, #625	; 0x271
   836c4:	f7ff ff46 	bl	83554 <__i2b>
   836c8:	2300      	movs	r3, #0
   836ca:	64a8      	str	r0, [r5, #72]	; 0x48
   836cc:	4604      	mov	r4, r0
   836ce:	6003      	str	r3, [r0, #0]
   836d0:	e004      	b.n	836dc <__pow5mult+0x46>
   836d2:	107f      	asrs	r7, r7, #1
   836d4:	d019      	beq.n	8370a <__pow5mult+0x74>
   836d6:	6820      	ldr	r0, [r4, #0]
   836d8:	b170      	cbz	r0, 836f8 <__pow5mult+0x62>
   836da:	4604      	mov	r4, r0
   836dc:	07fb      	lsls	r3, r7, #31
   836de:	d5f8      	bpl.n	836d2 <__pow5mult+0x3c>
   836e0:	4631      	mov	r1, r6
   836e2:	4622      	mov	r2, r4
   836e4:	4628      	mov	r0, r5
   836e6:	f7ff ff3e 	bl	83566 <__multiply>
   836ea:	4631      	mov	r1, r6
   836ec:	4680      	mov	r8, r0
   836ee:	4628      	mov	r0, r5
   836f0:	f7ff fe5e 	bl	833b0 <_Bfree>
   836f4:	4646      	mov	r6, r8
   836f6:	e7ec      	b.n	836d2 <__pow5mult+0x3c>
   836f8:	4628      	mov	r0, r5
   836fa:	4621      	mov	r1, r4
   836fc:	4622      	mov	r2, r4
   836fe:	f7ff ff32 	bl	83566 <__multiply>
   83702:	2300      	movs	r3, #0
   83704:	6020      	str	r0, [r4, #0]
   83706:	6003      	str	r3, [r0, #0]
   83708:	e7e7      	b.n	836da <__pow5mult+0x44>
   8370a:	4630      	mov	r0, r6
   8370c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   83710:	00085820 	.word	0x00085820

00083714 <__lshift>:
   83714:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   83718:	460c      	mov	r4, r1
   8371a:	6923      	ldr	r3, [r4, #16]
   8371c:	ea4f 1a62 	mov.w	sl, r2, asr #5
   83720:	eb0a 0903 	add.w	r9, sl, r3
   83724:	6849      	ldr	r1, [r1, #4]
   83726:	68a3      	ldr	r3, [r4, #8]
   83728:	4680      	mov	r8, r0
   8372a:	4615      	mov	r5, r2
   8372c:	f109 0701 	add.w	r7, r9, #1
   83730:	429f      	cmp	r7, r3
   83732:	dd02      	ble.n	8373a <__lshift+0x26>
   83734:	3101      	adds	r1, #1
   83736:	005b      	lsls	r3, r3, #1
   83738:	e7fa      	b.n	83730 <__lshift+0x1c>
   8373a:	4640      	mov	r0, r8
   8373c:	f7ff fe12 	bl	83364 <_Balloc>
   83740:	2300      	movs	r3, #0
   83742:	4606      	mov	r6, r0
   83744:	f100 0214 	add.w	r2, r0, #20
   83748:	4553      	cmp	r3, sl
   8374a:	da04      	bge.n	83756 <__lshift+0x42>
   8374c:	2100      	movs	r1, #0
   8374e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
   83752:	3301      	adds	r3, #1
   83754:	e7f8      	b.n	83748 <__lshift+0x34>
   83756:	6920      	ldr	r0, [r4, #16]
   83758:	ea2a 71ea 	bic.w	r1, sl, sl, asr #31
   8375c:	f104 0314 	add.w	r3, r4, #20
   83760:	f015 0c1f 	ands.w	ip, r5, #31
   83764:	eb02 0181 	add.w	r1, r2, r1, lsl #2
   83768:	eb03 0e80 	add.w	lr, r3, r0, lsl #2
   8376c:	d016      	beq.n	8379c <__lshift+0x88>
   8376e:	f1cc 0a20 	rsb	sl, ip, #32
   83772:	2500      	movs	r5, #0
   83774:	6818      	ldr	r0, [r3, #0]
   83776:	460a      	mov	r2, r1
   83778:	fa00 f00c 	lsl.w	r0, r0, ip
   8377c:	4305      	orrs	r5, r0
   8377e:	f842 5b04 	str.w	r5, [r2], #4
   83782:	f853 5b04 	ldr.w	r5, [r3], #4
   83786:	4573      	cmp	r3, lr
   83788:	fa25 f50a 	lsr.w	r5, r5, sl
   8378c:	d201      	bcs.n	83792 <__lshift+0x7e>
   8378e:	4611      	mov	r1, r2
   83790:	e7f0      	b.n	83774 <__lshift+0x60>
   83792:	604d      	str	r5, [r1, #4]
   83794:	b145      	cbz	r5, 837a8 <__lshift+0x94>
   83796:	f109 0702 	add.w	r7, r9, #2
   8379a:	e005      	b.n	837a8 <__lshift+0x94>
   8379c:	f853 2b04 	ldr.w	r2, [r3], #4
   837a0:	4573      	cmp	r3, lr
   837a2:	f841 2b04 	str.w	r2, [r1], #4
   837a6:	d3f9      	bcc.n	8379c <__lshift+0x88>
   837a8:	3f01      	subs	r7, #1
   837aa:	4640      	mov	r0, r8
   837ac:	6137      	str	r7, [r6, #16]
   837ae:	4621      	mov	r1, r4
   837b0:	f7ff fdfe 	bl	833b0 <_Bfree>
   837b4:	4630      	mov	r0, r6
   837b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

000837ba <__mcmp>:
   837ba:	6902      	ldr	r2, [r0, #16]
   837bc:	690b      	ldr	r3, [r1, #16]
   837be:	b510      	push	{r4, lr}
   837c0:	1ad2      	subs	r2, r2, r3
   837c2:	d113      	bne.n	837ec <__mcmp+0x32>
   837c4:	009c      	lsls	r4, r3, #2
   837c6:	3014      	adds	r0, #20
   837c8:	f101 0214 	add.w	r2, r1, #20
   837cc:	1903      	adds	r3, r0, r4
   837ce:	4422      	add	r2, r4
   837d0:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   837d4:	f852 1d04 	ldr.w	r1, [r2, #-4]!
   837d8:	428c      	cmp	r4, r1
   837da:	d003      	beq.n	837e4 <__mcmp+0x2a>
   837dc:	d208      	bcs.n	837f0 <__mcmp+0x36>
   837de:	f04f 30ff 	mov.w	r0, #4294967295
   837e2:	bd10      	pop	{r4, pc}
   837e4:	4298      	cmp	r0, r3
   837e6:	d3f3      	bcc.n	837d0 <__mcmp+0x16>
   837e8:	2000      	movs	r0, #0
   837ea:	bd10      	pop	{r4, pc}
   837ec:	4610      	mov	r0, r2
   837ee:	bd10      	pop	{r4, pc}
   837f0:	2001      	movs	r0, #1
   837f2:	bd10      	pop	{r4, pc}

000837f4 <__mdiff>:
   837f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   837f8:	4606      	mov	r6, r0
   837fa:	460c      	mov	r4, r1
   837fc:	4608      	mov	r0, r1
   837fe:	4611      	mov	r1, r2
   83800:	4615      	mov	r5, r2
   83802:	f7ff ffda 	bl	837ba <__mcmp>
   83806:	1e07      	subs	r7, r0, #0
   83808:	d108      	bne.n	8381c <__mdiff+0x28>
   8380a:	4630      	mov	r0, r6
   8380c:	4639      	mov	r1, r7
   8380e:	f7ff fda9 	bl	83364 <_Balloc>
   83812:	2301      	movs	r3, #1
   83814:	6103      	str	r3, [r0, #16]
   83816:	6147      	str	r7, [r0, #20]
   83818:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8381c:	db01      	blt.n	83822 <__mdiff+0x2e>
   8381e:	2700      	movs	r7, #0
   83820:	e003      	b.n	8382a <__mdiff+0x36>
   83822:	4623      	mov	r3, r4
   83824:	2701      	movs	r7, #1
   83826:	462c      	mov	r4, r5
   83828:	461d      	mov	r5, r3
   8382a:	6861      	ldr	r1, [r4, #4]
   8382c:	4630      	mov	r0, r6
   8382e:	f7ff fd99 	bl	83364 <_Balloc>
   83832:	6922      	ldr	r2, [r4, #16]
   83834:	692b      	ldr	r3, [r5, #16]
   83836:	3414      	adds	r4, #20
   83838:	f105 0614 	add.w	r6, r5, #20
   8383c:	eb06 0a83 	add.w	sl, r6, r3, lsl #2
   83840:	60c7      	str	r7, [r0, #12]
   83842:	eb04 0c82 	add.w	ip, r4, r2, lsl #2
   83846:	f100 0314 	add.w	r3, r0, #20
   8384a:	2100      	movs	r1, #0
   8384c:	f854 7b04 	ldr.w	r7, [r4], #4
   83850:	f856 9b04 	ldr.w	r9, [r6], #4
   83854:	fa1f f887 	uxth.w	r8, r7
   83858:	fa1f f589 	uxth.w	r5, r9
   8385c:	4441      	add	r1, r8
   8385e:	ea4f 4919 	mov.w	r9, r9, lsr #16
   83862:	ebc5 0801 	rsb	r8, r5, r1
   83866:	ebc9 4717 	rsb	r7, r9, r7, lsr #16
   8386a:	eb07 4728 	add.w	r7, r7, r8, asr #16
   8386e:	fa1f f888 	uxth.w	r8, r8
   83872:	1439      	asrs	r1, r7, #16
   83874:	45b2      	cmp	sl, r6
   83876:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   8387a:	4625      	mov	r5, r4
   8387c:	f843 7b04 	str.w	r7, [r3], #4
   83880:	d8e4      	bhi.n	8384c <__mdiff+0x58>
   83882:	4565      	cmp	r5, ip
   83884:	d20d      	bcs.n	838a2 <__mdiff+0xae>
   83886:	f855 4b04 	ldr.w	r4, [r5], #4
   8388a:	b2a6      	uxth	r6, r4
   8388c:	440e      	add	r6, r1
   8388e:	0c24      	lsrs	r4, r4, #16
   83890:	eb04 4426 	add.w	r4, r4, r6, asr #16
   83894:	b2b6      	uxth	r6, r6
   83896:	1421      	asrs	r1, r4, #16
   83898:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   8389c:	f843 4b04 	str.w	r4, [r3], #4
   838a0:	e7ef      	b.n	83882 <__mdiff+0x8e>
   838a2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   838a6:	b909      	cbnz	r1, 838ac <__mdiff+0xb8>
   838a8:	3a01      	subs	r2, #1
   838aa:	e7fa      	b.n	838a2 <__mdiff+0xae>
   838ac:	6102      	str	r2, [r0, #16]
   838ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

000838b2 <__ulp>:
   838b2:	4b0f      	ldr	r3, [pc, #60]	; (838f0 <__ulp+0x3e>)
   838b4:	400b      	ands	r3, r1
   838b6:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   838ba:	2b00      	cmp	r3, #0
   838bc:	dd01      	ble.n	838c2 <__ulp+0x10>
   838be:	4619      	mov	r1, r3
   838c0:	e009      	b.n	838d6 <__ulp+0x24>
   838c2:	425b      	negs	r3, r3
   838c4:	151b      	asrs	r3, r3, #20
   838c6:	2b13      	cmp	r3, #19
   838c8:	f04f 0100 	mov.w	r1, #0
   838cc:	dc05      	bgt.n	838da <__ulp+0x28>
   838ce:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   838d2:	fa42 f103 	asr.w	r1, r2, r3
   838d6:	2000      	movs	r0, #0
   838d8:	4770      	bx	lr
   838da:	2b32      	cmp	r3, #50	; 0x32
   838dc:	f04f 0201 	mov.w	r2, #1
   838e0:	bfda      	itte	le
   838e2:	f1c3 0333 	rsble	r3, r3, #51	; 0x33
   838e6:	fa02 f303 	lslle.w	r3, r2, r3
   838ea:	4613      	movgt	r3, r2
   838ec:	4618      	mov	r0, r3
   838ee:	4770      	bx	lr
   838f0:	7ff00000 	.word	0x7ff00000

000838f4 <__b2d>:
   838f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   838f8:	6906      	ldr	r6, [r0, #16]
   838fa:	f100 0714 	add.w	r7, r0, #20
   838fe:	eb07 0686 	add.w	r6, r7, r6, lsl #2
   83902:	f856 4c04 	ldr.w	r4, [r6, #-4]
   83906:	4688      	mov	r8, r1
   83908:	4620      	mov	r0, r4
   8390a:	f7ff fdd6 	bl	834ba <__hi0bits>
   8390e:	f1c0 0320 	rsb	r3, r0, #32
   83912:	280a      	cmp	r0, #10
   83914:	f1a6 0504 	sub.w	r5, r6, #4
   83918:	f8c8 3000 	str.w	r3, [r8]
   8391c:	dc14      	bgt.n	83948 <__b2d+0x54>
   8391e:	42bd      	cmp	r5, r7
   83920:	f1c0 010b 	rsb	r1, r0, #11
   83924:	bf88      	it	hi
   83926:	f856 5c08 	ldrhi.w	r5, [r6, #-8]
   8392a:	fa24 fc01 	lsr.w	ip, r4, r1
   8392e:	bf98      	it	ls
   83930:	2500      	movls	r5, #0
   83932:	3015      	adds	r0, #21
   83934:	fa25 f101 	lsr.w	r1, r5, r1
   83938:	4084      	lsls	r4, r0
   8393a:	f04c 537f 	orr.w	r3, ip, #1069547520	; 0x3fc00000
   8393e:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
   83942:	ea41 0204 	orr.w	r2, r1, r4
   83946:	e024      	b.n	83992 <__b2d+0x9e>
   83948:	42bd      	cmp	r5, r7
   8394a:	bf86      	itte	hi
   8394c:	f1a6 0508 	subhi.w	r5, r6, #8
   83950:	f856 1c08 	ldrhi.w	r1, [r6, #-8]
   83954:	2100      	movls	r1, #0
   83956:	f1b0 060b 	subs.w	r6, r0, #11
   8395a:	d015      	beq.n	83988 <__b2d+0x94>
   8395c:	40b4      	lsls	r4, r6
   8395e:	f1c0 002b 	rsb	r0, r0, #43	; 0x2b
   83962:	fa21 fc00 	lsr.w	ip, r1, r0
   83966:	f044 547f 	orr.w	r4, r4, #1069547520	; 0x3fc00000
   8396a:	f444 1440 	orr.w	r4, r4, #3145728	; 0x300000
   8396e:	42bd      	cmp	r5, r7
   83970:	ea44 030c 	orr.w	r3, r4, ip
   83974:	bf8c      	ite	hi
   83976:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
   8397a:	2400      	movls	r4, #0
   8397c:	fa24 f000 	lsr.w	r0, r4, r0
   83980:	40b1      	lsls	r1, r6
   83982:	ea40 0201 	orr.w	r2, r0, r1
   83986:	e004      	b.n	83992 <__b2d+0x9e>
   83988:	f044 537f 	orr.w	r3, r4, #1069547520	; 0x3fc00000
   8398c:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
   83990:	460a      	mov	r2, r1
   83992:	4610      	mov	r0, r2
   83994:	4619      	mov	r1, r3
   83996:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0008399a <__d2b>:
   8399a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   8399e:	2101      	movs	r1, #1
   839a0:	461d      	mov	r5, r3
   839a2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   839a6:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   839aa:	4614      	mov	r4, r2
   839ac:	f7ff fcda 	bl	83364 <_Balloc>
   839b0:	f3c5 570a 	ubfx	r7, r5, #20, #11
   839b4:	4606      	mov	r6, r0
   839b6:	f3c5 0313 	ubfx	r3, r5, #0, #20
   839ba:	b10f      	cbz	r7, 839c0 <__d2b+0x26>
   839bc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   839c0:	9301      	str	r3, [sp, #4]
   839c2:	b1d4      	cbz	r4, 839fa <__d2b+0x60>
   839c4:	a802      	add	r0, sp, #8
   839c6:	f840 4d08 	str.w	r4, [r0, #-8]!
   839ca:	4668      	mov	r0, sp
   839cc:	f7ff fd95 	bl	834fa <__lo0bits>
   839d0:	9b00      	ldr	r3, [sp, #0]
   839d2:	b148      	cbz	r0, 839e8 <__d2b+0x4e>
   839d4:	9a01      	ldr	r2, [sp, #4]
   839d6:	f1c0 0120 	rsb	r1, r0, #32
   839da:	fa02 f101 	lsl.w	r1, r2, r1
   839de:	40c2      	lsrs	r2, r0
   839e0:	430b      	orrs	r3, r1
   839e2:	6173      	str	r3, [r6, #20]
   839e4:	9201      	str	r2, [sp, #4]
   839e6:	e000      	b.n	839ea <__d2b+0x50>
   839e8:	6173      	str	r3, [r6, #20]
   839ea:	9b01      	ldr	r3, [sp, #4]
   839ec:	2b00      	cmp	r3, #0
   839ee:	bf0c      	ite	eq
   839f0:	2401      	moveq	r4, #1
   839f2:	2402      	movne	r4, #2
   839f4:	61b3      	str	r3, [r6, #24]
   839f6:	6134      	str	r4, [r6, #16]
   839f8:	e007      	b.n	83a0a <__d2b+0x70>
   839fa:	a801      	add	r0, sp, #4
   839fc:	f7ff fd7d 	bl	834fa <__lo0bits>
   83a00:	9b01      	ldr	r3, [sp, #4]
   83a02:	2401      	movs	r4, #1
   83a04:	6173      	str	r3, [r6, #20]
   83a06:	6134      	str	r4, [r6, #16]
   83a08:	3020      	adds	r0, #32
   83a0a:	b13f      	cbz	r7, 83a1c <__d2b+0x82>
   83a0c:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
   83a10:	4407      	add	r7, r0
   83a12:	f8c9 7000 	str.w	r7, [r9]
   83a16:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   83a1a:	e00a      	b.n	83a32 <__d2b+0x98>
   83a1c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   83a20:	eb06 0384 	add.w	r3, r6, r4, lsl #2
   83a24:	f8c9 0000 	str.w	r0, [r9]
   83a28:	6918      	ldr	r0, [r3, #16]
   83a2a:	f7ff fd46 	bl	834ba <__hi0bits>
   83a2e:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
   83a32:	f8c8 0000 	str.w	r0, [r8]
   83a36:	4630      	mov	r0, r6
   83a38:	b003      	add	sp, #12
   83a3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00083a3e <__ratio>:
   83a3e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   83a42:	460e      	mov	r6, r1
   83a44:	4669      	mov	r1, sp
   83a46:	4680      	mov	r8, r0
   83a48:	f7ff ff54 	bl	838f4 <__b2d>
   83a4c:	460d      	mov	r5, r1
   83a4e:	4604      	mov	r4, r0
   83a50:	a901      	add	r1, sp, #4
   83a52:	4630      	mov	r0, r6
   83a54:	f7ff ff4e 	bl	838f4 <__b2d>
   83a58:	9f00      	ldr	r7, [sp, #0]
   83a5a:	460b      	mov	r3, r1
   83a5c:	9901      	ldr	r1, [sp, #4]
   83a5e:	4602      	mov	r2, r0
   83a60:	1a7f      	subs	r7, r7, r1
   83a62:	f8d8 0010 	ldr.w	r0, [r8, #16]
   83a66:	6931      	ldr	r1, [r6, #16]
   83a68:	1a41      	subs	r1, r0, r1
   83a6a:	eb07 1141 	add.w	r1, r7, r1, lsl #5
   83a6e:	2900      	cmp	r1, #0
   83a70:	bfcc      	ite	gt
   83a72:	eb05 5501 	addgt.w	r5, r5, r1, lsl #20
   83a76:	eba3 5301 	suble.w	r3, r3, r1, lsl #20
   83a7a:	4620      	mov	r0, r4
   83a7c:	4629      	mov	r1, r5
   83a7e:	f001 fa09 	bl	84e94 <__aeabi_ddiv>
   83a82:	b002      	add	sp, #8
   83a84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00083a88 <_mprec_log10>:
   83a88:	2817      	cmp	r0, #23
   83a8a:	b510      	push	{r4, lr}
   83a8c:	4604      	mov	r4, r0
   83a8e:	dc05      	bgt.n	83a9c <_mprec_log10+0x14>
   83a90:	4b07      	ldr	r3, [pc, #28]	; (83ab0 <_mprec_log10+0x28>)
   83a92:	eb03 04c0 	add.w	r4, r3, r0, lsl #3
   83a96:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
   83a9a:	bd10      	pop	{r4, pc}
   83a9c:	4905      	ldr	r1, [pc, #20]	; (83ab4 <_mprec_log10+0x2c>)
   83a9e:	2000      	movs	r0, #0
   83aa0:	2200      	movs	r2, #0
   83aa2:	4b05      	ldr	r3, [pc, #20]	; (83ab8 <_mprec_log10+0x30>)
   83aa4:	f001 f8cc 	bl	84c40 <__aeabi_dmul>
   83aa8:	3c01      	subs	r4, #1
   83aaa:	d1f9      	bne.n	83aa0 <_mprec_log10+0x18>
   83aac:	bd10      	pop	{r4, pc}
   83aae:	bf00      	nop
   83ab0:	00085820 	.word	0x00085820
   83ab4:	3ff00000 	.word	0x3ff00000
   83ab8:	40240000 	.word	0x40240000

00083abc <__copybits>:
   83abc:	b510      	push	{r4, lr}
   83abe:	3901      	subs	r1, #1
   83ac0:	f102 0314 	add.w	r3, r2, #20
   83ac4:	1149      	asrs	r1, r1, #5
   83ac6:	6912      	ldr	r2, [r2, #16]
   83ac8:	3101      	adds	r1, #1
   83aca:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   83ace:	eb03 0282 	add.w	r2, r3, r2, lsl #2
   83ad2:	4293      	cmp	r3, r2
   83ad4:	d204      	bcs.n	83ae0 <__copybits+0x24>
   83ad6:	f853 4b04 	ldr.w	r4, [r3], #4
   83ada:	f840 4b04 	str.w	r4, [r0], #4
   83ade:	e7f8      	b.n	83ad2 <__copybits+0x16>
   83ae0:	4288      	cmp	r0, r1
   83ae2:	d203      	bcs.n	83aec <__copybits+0x30>
   83ae4:	2300      	movs	r3, #0
   83ae6:	f840 3b04 	str.w	r3, [r0], #4
   83aea:	e7f9      	b.n	83ae0 <__copybits+0x24>
   83aec:	bd10      	pop	{r4, pc}

00083aee <__any_on>:
   83aee:	f100 0214 	add.w	r2, r0, #20
   83af2:	6900      	ldr	r0, [r0, #16]
   83af4:	114b      	asrs	r3, r1, #5
   83af6:	4283      	cmp	r3, r0
   83af8:	b510      	push	{r4, lr}
   83afa:	dc0c      	bgt.n	83b16 <__any_on+0x28>
   83afc:	da0c      	bge.n	83b18 <__any_on+0x2a>
   83afe:	f011 011f 	ands.w	r1, r1, #31
   83b02:	d009      	beq.n	83b18 <__any_on+0x2a>
   83b04:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
   83b08:	fa20 f401 	lsr.w	r4, r0, r1
   83b0c:	fa04 f101 	lsl.w	r1, r4, r1
   83b10:	4281      	cmp	r1, r0
   83b12:	d10e      	bne.n	83b32 <__any_on+0x44>
   83b14:	e000      	b.n	83b18 <__any_on+0x2a>
   83b16:	4603      	mov	r3, r0
   83b18:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   83b1c:	4293      	cmp	r3, r2
   83b1e:	4619      	mov	r1, r3
   83b20:	d905      	bls.n	83b2e <__any_on+0x40>
   83b22:	f851 1c04 	ldr.w	r1, [r1, #-4]
   83b26:	3b04      	subs	r3, #4
   83b28:	2900      	cmp	r1, #0
   83b2a:	d0f7      	beq.n	83b1c <__any_on+0x2e>
   83b2c:	e001      	b.n	83b32 <__any_on+0x44>
   83b2e:	2000      	movs	r0, #0
   83b30:	bd10      	pop	{r4, pc}
   83b32:	2001      	movs	r0, #1
   83b34:	bd10      	pop	{r4, pc}
   83b36:	bf00      	nop

00083b38 <_realloc_r>:
   83b38:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83b3c:	4681      	mov	r9, r0
   83b3e:	460c      	mov	r4, r1
   83b40:	b929      	cbnz	r1, 83b4e <_realloc_r+0x16>
   83b42:	4611      	mov	r1, r2
   83b44:	b003      	add	sp, #12
   83b46:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83b4a:	f7ff b9cf 	b.w	82eec <_malloc_r>
   83b4e:	9201      	str	r2, [sp, #4]
   83b50:	f7ff fc06 	bl	83360 <__malloc_lock>
   83b54:	9a01      	ldr	r2, [sp, #4]
   83b56:	f854 5c04 	ldr.w	r5, [r4, #-4]
   83b5a:	f102 070b 	add.w	r7, r2, #11
   83b5e:	2f16      	cmp	r7, #22
   83b60:	f1a4 0808 	sub.w	r8, r4, #8
   83b64:	f025 0603 	bic.w	r6, r5, #3
   83b68:	d903      	bls.n	83b72 <_realloc_r+0x3a>
   83b6a:	f037 0707 	bics.w	r7, r7, #7
   83b6e:	d501      	bpl.n	83b74 <_realloc_r+0x3c>
   83b70:	e002      	b.n	83b78 <_realloc_r+0x40>
   83b72:	2710      	movs	r7, #16
   83b74:	4297      	cmp	r7, r2
   83b76:	d204      	bcs.n	83b82 <_realloc_r+0x4a>
   83b78:	230c      	movs	r3, #12
   83b7a:	f8c9 3000 	str.w	r3, [r9]
   83b7e:	2000      	movs	r0, #0
   83b80:	e180      	b.n	83e84 <_realloc_r+0x34c>
   83b82:	42be      	cmp	r6, r7
   83b84:	f280 8156 	bge.w	83e34 <_realloc_r+0x2fc>
   83b88:	49a3      	ldr	r1, [pc, #652]	; (83e18 <_realloc_r+0x2e0>)
   83b8a:	eb08 0306 	add.w	r3, r8, r6
   83b8e:	f8d1 e008 	ldr.w	lr, [r1, #8]
   83b92:	468b      	mov	fp, r1
   83b94:	4573      	cmp	r3, lr
   83b96:	6858      	ldr	r0, [r3, #4]
   83b98:	d005      	beq.n	83ba6 <_realloc_r+0x6e>
   83b9a:	f020 0101 	bic.w	r1, r0, #1
   83b9e:	4419      	add	r1, r3
   83ba0:	6849      	ldr	r1, [r1, #4]
   83ba2:	07c9      	lsls	r1, r1, #31
   83ba4:	d425      	bmi.n	83bf2 <_realloc_r+0xba>
   83ba6:	f020 0003 	bic.w	r0, r0, #3
   83baa:	4573      	cmp	r3, lr
   83bac:	eb00 0106 	add.w	r1, r0, r6
   83bb0:	d117      	bne.n	83be2 <_realloc_r+0xaa>
   83bb2:	f107 0c10 	add.w	ip, r7, #16
   83bb6:	4561      	cmp	r1, ip
   83bb8:	db1d      	blt.n	83bf6 <_realloc_r+0xbe>
   83bba:	1bc9      	subs	r1, r1, r7
   83bbc:	eb08 0507 	add.w	r5, r8, r7
   83bc0:	f041 0101 	orr.w	r1, r1, #1
   83bc4:	f8cb 5008 	str.w	r5, [fp, #8]
   83bc8:	6069      	str	r1, [r5, #4]
   83bca:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83bce:	4648      	mov	r0, r9
   83bd0:	f003 0301 	and.w	r3, r3, #1
   83bd4:	431f      	orrs	r7, r3
   83bd6:	f844 7c04 	str.w	r7, [r4, #-4]
   83bda:	f7ff fbc2 	bl	83362 <__malloc_unlock>
   83bde:	4620      	mov	r0, r4
   83be0:	e150      	b.n	83e84 <_realloc_r+0x34c>
   83be2:	42b9      	cmp	r1, r7
   83be4:	db07      	blt.n	83bf6 <_realloc_r+0xbe>
   83be6:	68da      	ldr	r2, [r3, #12]
   83be8:	689b      	ldr	r3, [r3, #8]
   83bea:	460e      	mov	r6, r1
   83bec:	60da      	str	r2, [r3, #12]
   83bee:	6093      	str	r3, [r2, #8]
   83bf0:	e120      	b.n	83e34 <_realloc_r+0x2fc>
   83bf2:	2000      	movs	r0, #0
   83bf4:	4603      	mov	r3, r0
   83bf6:	07e9      	lsls	r1, r5, #31
   83bf8:	f100 80cb 	bmi.w	83d92 <_realloc_r+0x25a>
   83bfc:	f854 5c08 	ldr.w	r5, [r4, #-8]
   83c00:	ebc5 0508 	rsb	r5, r5, r8
   83c04:	6869      	ldr	r1, [r5, #4]
   83c06:	f021 0103 	bic.w	r1, r1, #3
   83c0a:	eb01 0a06 	add.w	sl, r1, r6
   83c0e:	2b00      	cmp	r3, #0
   83c10:	f000 808a 	beq.w	83d28 <_realloc_r+0x1f0>
   83c14:	4573      	cmp	r3, lr
   83c16:	d14d      	bne.n	83cb4 <_realloc_r+0x17c>
   83c18:	eb0a 0300 	add.w	r3, sl, r0
   83c1c:	f107 0110 	add.w	r1, r7, #16
   83c20:	428b      	cmp	r3, r1
   83c22:	f2c0 8081 	blt.w	83d28 <_realloc_r+0x1f0>
   83c26:	46a8      	mov	r8, r5
   83c28:	68ea      	ldr	r2, [r5, #12]
   83c2a:	f858 1f08 	ldr.w	r1, [r8, #8]!
   83c2e:	60ca      	str	r2, [r1, #12]
   83c30:	6091      	str	r1, [r2, #8]
   83c32:	1f32      	subs	r2, r6, #4
   83c34:	2a24      	cmp	r2, #36	; 0x24
   83c36:	d826      	bhi.n	83c86 <_realloc_r+0x14e>
   83c38:	2a13      	cmp	r2, #19
   83c3a:	d91c      	bls.n	83c76 <_realloc_r+0x13e>
   83c3c:	6821      	ldr	r1, [r4, #0]
   83c3e:	2a1b      	cmp	r2, #27
   83c40:	60a9      	str	r1, [r5, #8]
   83c42:	6861      	ldr	r1, [r4, #4]
   83c44:	60e9      	str	r1, [r5, #12]
   83c46:	d803      	bhi.n	83c50 <_realloc_r+0x118>
   83c48:	f105 0210 	add.w	r2, r5, #16
   83c4c:	3408      	adds	r4, #8
   83c4e:	e013      	b.n	83c78 <_realloc_r+0x140>
   83c50:	68a1      	ldr	r1, [r4, #8]
   83c52:	2a24      	cmp	r2, #36	; 0x24
   83c54:	6129      	str	r1, [r5, #16]
   83c56:	68e1      	ldr	r1, [r4, #12]
   83c58:	6169      	str	r1, [r5, #20]
   83c5a:	d003      	beq.n	83c64 <_realloc_r+0x12c>
   83c5c:	f105 0218 	add.w	r2, r5, #24
   83c60:	3410      	adds	r4, #16
   83c62:	e009      	b.n	83c78 <_realloc_r+0x140>
   83c64:	6922      	ldr	r2, [r4, #16]
   83c66:	3418      	adds	r4, #24
   83c68:	61aa      	str	r2, [r5, #24]
   83c6a:	f854 1c04 	ldr.w	r1, [r4, #-4]
   83c6e:	f105 0220 	add.w	r2, r5, #32
   83c72:	61e9      	str	r1, [r5, #28]
   83c74:	e000      	b.n	83c78 <_realloc_r+0x140>
   83c76:	4642      	mov	r2, r8
   83c78:	6821      	ldr	r1, [r4, #0]
   83c7a:	6011      	str	r1, [r2, #0]
   83c7c:	6861      	ldr	r1, [r4, #4]
   83c7e:	6051      	str	r1, [r2, #4]
   83c80:	68a1      	ldr	r1, [r4, #8]
   83c82:	6091      	str	r1, [r2, #8]
   83c84:	e005      	b.n	83c92 <_realloc_r+0x15a>
   83c86:	4640      	mov	r0, r8
   83c88:	4621      	mov	r1, r4
   83c8a:	9301      	str	r3, [sp, #4]
   83c8c:	f7ff fb4d 	bl	8332a <memmove>
   83c90:	9b01      	ldr	r3, [sp, #4]
   83c92:	1bdb      	subs	r3, r3, r7
   83c94:	19ea      	adds	r2, r5, r7
   83c96:	f043 0301 	orr.w	r3, r3, #1
   83c9a:	f8cb 2008 	str.w	r2, [fp, #8]
   83c9e:	6053      	str	r3, [r2, #4]
   83ca0:	686b      	ldr	r3, [r5, #4]
   83ca2:	4648      	mov	r0, r9
   83ca4:	f003 0301 	and.w	r3, r3, #1
   83ca8:	431f      	orrs	r7, r3
   83caa:	606f      	str	r7, [r5, #4]
   83cac:	f7ff fb59 	bl	83362 <__malloc_unlock>
   83cb0:	4640      	mov	r0, r8
   83cb2:	e0e7      	b.n	83e84 <_realloc_r+0x34c>
   83cb4:	eb0a 0b00 	add.w	fp, sl, r0
   83cb8:	45bb      	cmp	fp, r7
   83cba:	db35      	blt.n	83d28 <_realloc_r+0x1f0>
   83cbc:	68da      	ldr	r2, [r3, #12]
   83cbe:	689b      	ldr	r3, [r3, #8]
   83cc0:	4628      	mov	r0, r5
   83cc2:	60da      	str	r2, [r3, #12]
   83cc4:	6093      	str	r3, [r2, #8]
   83cc6:	f850 2f08 	ldr.w	r2, [r0, #8]!
   83cca:	68eb      	ldr	r3, [r5, #12]
   83ccc:	60d3      	str	r3, [r2, #12]
   83cce:	609a      	str	r2, [r3, #8]
   83cd0:	1f32      	subs	r2, r6, #4
   83cd2:	2a24      	cmp	r2, #36	; 0x24
   83cd4:	d823      	bhi.n	83d1e <_realloc_r+0x1e6>
   83cd6:	2a13      	cmp	r2, #19
   83cd8:	d91a      	bls.n	83d10 <_realloc_r+0x1d8>
   83cda:	6823      	ldr	r3, [r4, #0]
   83cdc:	2a1b      	cmp	r2, #27
   83cde:	60ab      	str	r3, [r5, #8]
   83ce0:	6863      	ldr	r3, [r4, #4]
   83ce2:	60eb      	str	r3, [r5, #12]
   83ce4:	d803      	bhi.n	83cee <_realloc_r+0x1b6>
   83ce6:	f105 0010 	add.w	r0, r5, #16
   83cea:	3408      	adds	r4, #8
   83cec:	e010      	b.n	83d10 <_realloc_r+0x1d8>
   83cee:	68a3      	ldr	r3, [r4, #8]
   83cf0:	2a24      	cmp	r2, #36	; 0x24
   83cf2:	612b      	str	r3, [r5, #16]
   83cf4:	68e3      	ldr	r3, [r4, #12]
   83cf6:	616b      	str	r3, [r5, #20]
   83cf8:	d003      	beq.n	83d02 <_realloc_r+0x1ca>
   83cfa:	f105 0018 	add.w	r0, r5, #24
   83cfe:	3410      	adds	r4, #16
   83d00:	e006      	b.n	83d10 <_realloc_r+0x1d8>
   83d02:	6923      	ldr	r3, [r4, #16]
   83d04:	f105 0020 	add.w	r0, r5, #32
   83d08:	61ab      	str	r3, [r5, #24]
   83d0a:	6963      	ldr	r3, [r4, #20]
   83d0c:	3418      	adds	r4, #24
   83d0e:	61eb      	str	r3, [r5, #28]
   83d10:	6823      	ldr	r3, [r4, #0]
   83d12:	6003      	str	r3, [r0, #0]
   83d14:	6863      	ldr	r3, [r4, #4]
   83d16:	6043      	str	r3, [r0, #4]
   83d18:	68a3      	ldr	r3, [r4, #8]
   83d1a:	6083      	str	r3, [r0, #8]
   83d1c:	e002      	b.n	83d24 <_realloc_r+0x1ec>
   83d1e:	4621      	mov	r1, r4
   83d20:	f7ff fb03 	bl	8332a <memmove>
   83d24:	465e      	mov	r6, fp
   83d26:	e02e      	b.n	83d86 <_realloc_r+0x24e>
   83d28:	45ba      	cmp	sl, r7
   83d2a:	db32      	blt.n	83d92 <_realloc_r+0x25a>
   83d2c:	4628      	mov	r0, r5
   83d2e:	f850 2f08 	ldr.w	r2, [r0, #8]!
   83d32:	68eb      	ldr	r3, [r5, #12]
   83d34:	60d3      	str	r3, [r2, #12]
   83d36:	609a      	str	r2, [r3, #8]
   83d38:	1f32      	subs	r2, r6, #4
   83d3a:	2a24      	cmp	r2, #36	; 0x24
   83d3c:	d825      	bhi.n	83d8a <_realloc_r+0x252>
   83d3e:	2a13      	cmp	r2, #19
   83d40:	d91a      	bls.n	83d78 <_realloc_r+0x240>
   83d42:	6823      	ldr	r3, [r4, #0]
   83d44:	2a1b      	cmp	r2, #27
   83d46:	60ab      	str	r3, [r5, #8]
   83d48:	6863      	ldr	r3, [r4, #4]
   83d4a:	60eb      	str	r3, [r5, #12]
   83d4c:	d803      	bhi.n	83d56 <_realloc_r+0x21e>
   83d4e:	f105 0010 	add.w	r0, r5, #16
   83d52:	3408      	adds	r4, #8
   83d54:	e010      	b.n	83d78 <_realloc_r+0x240>
   83d56:	68a3      	ldr	r3, [r4, #8]
   83d58:	2a24      	cmp	r2, #36	; 0x24
   83d5a:	612b      	str	r3, [r5, #16]
   83d5c:	68e3      	ldr	r3, [r4, #12]
   83d5e:	616b      	str	r3, [r5, #20]
   83d60:	d003      	beq.n	83d6a <_realloc_r+0x232>
   83d62:	f105 0018 	add.w	r0, r5, #24
   83d66:	3410      	adds	r4, #16
   83d68:	e006      	b.n	83d78 <_realloc_r+0x240>
   83d6a:	6923      	ldr	r3, [r4, #16]
   83d6c:	f105 0020 	add.w	r0, r5, #32
   83d70:	61ab      	str	r3, [r5, #24]
   83d72:	6963      	ldr	r3, [r4, #20]
   83d74:	3418      	adds	r4, #24
   83d76:	61eb      	str	r3, [r5, #28]
   83d78:	6823      	ldr	r3, [r4, #0]
   83d7a:	6003      	str	r3, [r0, #0]
   83d7c:	6863      	ldr	r3, [r4, #4]
   83d7e:	6043      	str	r3, [r0, #4]
   83d80:	68a3      	ldr	r3, [r4, #8]
   83d82:	6083      	str	r3, [r0, #8]
   83d84:	4656      	mov	r6, sl
   83d86:	46a8      	mov	r8, r5
   83d88:	e054      	b.n	83e34 <_realloc_r+0x2fc>
   83d8a:	4621      	mov	r1, r4
   83d8c:	f7ff facd 	bl	8332a <memmove>
   83d90:	e7f8      	b.n	83d84 <_realloc_r+0x24c>
   83d92:	4648      	mov	r0, r9
   83d94:	4611      	mov	r1, r2
   83d96:	f7ff f8a9 	bl	82eec <_malloc_r>
   83d9a:	4605      	mov	r5, r0
   83d9c:	2800      	cmp	r0, #0
   83d9e:	d044      	beq.n	83e2a <_realloc_r+0x2f2>
   83da0:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83da4:	f1a0 0208 	sub.w	r2, r0, #8
   83da8:	f023 0301 	bic.w	r3, r3, #1
   83dac:	4443      	add	r3, r8
   83dae:	429a      	cmp	r2, r3
   83db0:	d105      	bne.n	83dbe <_realloc_r+0x286>
   83db2:	f850 3c04 	ldr.w	r3, [r0, #-4]
   83db6:	f023 0303 	bic.w	r3, r3, #3
   83dba:	441e      	add	r6, r3
   83dbc:	e03a      	b.n	83e34 <_realloc_r+0x2fc>
   83dbe:	1f32      	subs	r2, r6, #4
   83dc0:	2a24      	cmp	r2, #36	; 0x24
   83dc2:	d82b      	bhi.n	83e1c <_realloc_r+0x2e4>
   83dc4:	2a13      	cmp	r2, #19
   83dc6:	d91e      	bls.n	83e06 <_realloc_r+0x2ce>
   83dc8:	6823      	ldr	r3, [r4, #0]
   83dca:	2a1b      	cmp	r2, #27
   83dcc:	6003      	str	r3, [r0, #0]
   83dce:	6863      	ldr	r3, [r4, #4]
   83dd0:	6043      	str	r3, [r0, #4]
   83dd2:	d804      	bhi.n	83dde <_realloc_r+0x2a6>
   83dd4:	f100 0308 	add.w	r3, r0, #8
   83dd8:	f104 0208 	add.w	r2, r4, #8
   83ddc:	e015      	b.n	83e0a <_realloc_r+0x2d2>
   83dde:	68a3      	ldr	r3, [r4, #8]
   83de0:	2a24      	cmp	r2, #36	; 0x24
   83de2:	6083      	str	r3, [r0, #8]
   83de4:	68e3      	ldr	r3, [r4, #12]
   83de6:	60c3      	str	r3, [r0, #12]
   83de8:	d004      	beq.n	83df4 <_realloc_r+0x2bc>
   83dea:	f100 0310 	add.w	r3, r0, #16
   83dee:	f104 0210 	add.w	r2, r4, #16
   83df2:	e00a      	b.n	83e0a <_realloc_r+0x2d2>
   83df4:	6923      	ldr	r3, [r4, #16]
   83df6:	f104 0218 	add.w	r2, r4, #24
   83dfa:	6103      	str	r3, [r0, #16]
   83dfc:	6961      	ldr	r1, [r4, #20]
   83dfe:	f100 0318 	add.w	r3, r0, #24
   83e02:	6141      	str	r1, [r0, #20]
   83e04:	e001      	b.n	83e0a <_realloc_r+0x2d2>
   83e06:	4603      	mov	r3, r0
   83e08:	4622      	mov	r2, r4
   83e0a:	6811      	ldr	r1, [r2, #0]
   83e0c:	6019      	str	r1, [r3, #0]
   83e0e:	6851      	ldr	r1, [r2, #4]
   83e10:	6059      	str	r1, [r3, #4]
   83e12:	6892      	ldr	r2, [r2, #8]
   83e14:	609a      	str	r2, [r3, #8]
   83e16:	e004      	b.n	83e22 <_realloc_r+0x2ea>
   83e18:	200704b4 	.word	0x200704b4
   83e1c:	4621      	mov	r1, r4
   83e1e:	f7ff fa84 	bl	8332a <memmove>
   83e22:	4648      	mov	r0, r9
   83e24:	4621      	mov	r1, r4
   83e26:	f7fe ff67 	bl	82cf8 <_free_r>
   83e2a:	4648      	mov	r0, r9
   83e2c:	f7ff fa99 	bl	83362 <__malloc_unlock>
   83e30:	4628      	mov	r0, r5
   83e32:	e027      	b.n	83e84 <_realloc_r+0x34c>
   83e34:	1bf3      	subs	r3, r6, r7
   83e36:	2b0f      	cmp	r3, #15
   83e38:	f8d8 2004 	ldr.w	r2, [r8, #4]
   83e3c:	d913      	bls.n	83e66 <_realloc_r+0x32e>
   83e3e:	f002 0201 	and.w	r2, r2, #1
   83e42:	eb08 0107 	add.w	r1, r8, r7
   83e46:	4317      	orrs	r7, r2
   83e48:	f043 0201 	orr.w	r2, r3, #1
   83e4c:	f8c8 7004 	str.w	r7, [r8, #4]
   83e50:	440b      	add	r3, r1
   83e52:	604a      	str	r2, [r1, #4]
   83e54:	685a      	ldr	r2, [r3, #4]
   83e56:	4648      	mov	r0, r9
   83e58:	f042 0201 	orr.w	r2, r2, #1
   83e5c:	605a      	str	r2, [r3, #4]
   83e5e:	3108      	adds	r1, #8
   83e60:	f7fe ff4a 	bl	82cf8 <_free_r>
   83e64:	e009      	b.n	83e7a <_realloc_r+0x342>
   83e66:	f002 0201 	and.w	r2, r2, #1
   83e6a:	4332      	orrs	r2, r6
   83e6c:	f8c8 2004 	str.w	r2, [r8, #4]
   83e70:	4446      	add	r6, r8
   83e72:	6873      	ldr	r3, [r6, #4]
   83e74:	f043 0301 	orr.w	r3, r3, #1
   83e78:	6073      	str	r3, [r6, #4]
   83e7a:	4648      	mov	r0, r9
   83e7c:	f7ff fa71 	bl	83362 <__malloc_unlock>
   83e80:	f108 0008 	add.w	r0, r8, #8
   83e84:	b003      	add	sp, #12
   83e86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83e8a:	bf00      	nop

00083e8c <__fpclassifyd>:
   83e8c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   83e90:	b510      	push	{r4, lr}
   83e92:	d100      	bne.n	83e96 <__fpclassifyd+0xa>
   83e94:	b178      	cbz	r0, 83eb6 <__fpclassifyd+0x2a>
   83e96:	4a0c      	ldr	r2, [pc, #48]	; (83ec8 <__fpclassifyd+0x3c>)
   83e98:	f5a3 1480 	sub.w	r4, r3, #1048576	; 0x100000
   83e9c:	4294      	cmp	r4, r2
   83e9e:	d90c      	bls.n	83eba <__fpclassifyd+0x2e>
   83ea0:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   83ea4:	d30b      	bcc.n	83ebe <__fpclassifyd+0x32>
   83ea6:	4a09      	ldr	r2, [pc, #36]	; (83ecc <__fpclassifyd+0x40>)
   83ea8:	4293      	cmp	r3, r2
   83eaa:	d10a      	bne.n	83ec2 <__fpclassifyd+0x36>
   83eac:	f1d0 0001 	rsbs	r0, r0, #1
   83eb0:	bf38      	it	cc
   83eb2:	2000      	movcc	r0, #0
   83eb4:	bd10      	pop	{r4, pc}
   83eb6:	2002      	movs	r0, #2
   83eb8:	bd10      	pop	{r4, pc}
   83eba:	2004      	movs	r0, #4
   83ebc:	bd10      	pop	{r4, pc}
   83ebe:	2003      	movs	r0, #3
   83ec0:	bd10      	pop	{r4, pc}
   83ec2:	2000      	movs	r0, #0
   83ec4:	bd10      	pop	{r4, pc}
   83ec6:	bf00      	nop
   83ec8:	7fdfffff 	.word	0x7fdfffff
   83ecc:	7ff00000 	.word	0x7ff00000

00083ed0 <_sbrk_r>:
   83ed0:	b538      	push	{r3, r4, r5, lr}
   83ed2:	4c06      	ldr	r4, [pc, #24]	; (83eec <_sbrk_r+0x1c>)
   83ed4:	2300      	movs	r3, #0
   83ed6:	4605      	mov	r5, r0
   83ed8:	4608      	mov	r0, r1
   83eda:	6023      	str	r3, [r4, #0]
   83edc:	f7fd f82a 	bl	80f34 <_sbrk>
   83ee0:	1c43      	adds	r3, r0, #1
   83ee2:	d102      	bne.n	83eea <_sbrk_r+0x1a>
   83ee4:	6823      	ldr	r3, [r4, #0]
   83ee6:	b103      	cbz	r3, 83eea <_sbrk_r+0x1a>
   83ee8:	602b      	str	r3, [r5, #0]
   83eea:	bd38      	pop	{r3, r4, r5, pc}
   83eec:	2007309c 	.word	0x2007309c

00083ef0 <strcmp>:
   83ef0:	f810 2b01 	ldrb.w	r2, [r0], #1
   83ef4:	f811 3b01 	ldrb.w	r3, [r1], #1
   83ef8:	2a01      	cmp	r2, #1
   83efa:	bf28      	it	cs
   83efc:	429a      	cmpcs	r2, r3
   83efe:	d0f7      	beq.n	83ef0 <strcmp>
   83f00:	1ad0      	subs	r0, r2, r3
   83f02:	4770      	bx	lr

00083f04 <__ssprint_r>:
   83f04:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83f08:	4680      	mov	r8, r0
   83f0a:	6890      	ldr	r0, [r2, #8]
   83f0c:	460c      	mov	r4, r1
   83f0e:	4615      	mov	r5, r2
   83f10:	f8d2 9000 	ldr.w	r9, [r2]
   83f14:	b118      	cbz	r0, 83f1e <__ssprint_r+0x1a>
   83f16:	2300      	movs	r3, #0
   83f18:	9301      	str	r3, [sp, #4]
   83f1a:	461e      	mov	r6, r3
   83f1c:	e008      	b.n	83f30 <__ssprint_r+0x2c>
   83f1e:	6050      	str	r0, [r2, #4]
   83f20:	e066      	b.n	83ff0 <__ssprint_r+0xec>
   83f22:	f8d9 3000 	ldr.w	r3, [r9]
   83f26:	f8d9 6004 	ldr.w	r6, [r9, #4]
   83f2a:	9301      	str	r3, [sp, #4]
   83f2c:	f109 0908 	add.w	r9, r9, #8
   83f30:	2e00      	cmp	r6, #0
   83f32:	d0f6      	beq.n	83f22 <__ssprint_r+0x1e>
   83f34:	68a7      	ldr	r7, [r4, #8]
   83f36:	42be      	cmp	r6, r7
   83f38:	d347      	bcc.n	83fca <__ssprint_r+0xc6>
   83f3a:	89a2      	ldrh	r2, [r4, #12]
   83f3c:	f412 6f90 	tst.w	r2, #1152	; 0x480
   83f40:	d041      	beq.n	83fc6 <__ssprint_r+0xc2>
   83f42:	6823      	ldr	r3, [r4, #0]
   83f44:	6921      	ldr	r1, [r4, #16]
   83f46:	2002      	movs	r0, #2
   83f48:	ebc1 0a03 	rsb	sl, r1, r3
   83f4c:	6963      	ldr	r3, [r4, #20]
   83f4e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   83f52:	fb93 fbf0 	sdiv	fp, r3, r0
   83f56:	f10a 0001 	add.w	r0, sl, #1
   83f5a:	4430      	add	r0, r6
   83f5c:	4583      	cmp	fp, r0
   83f5e:	bf38      	it	cc
   83f60:	4683      	movcc	fp, r0
   83f62:	0553      	lsls	r3, r2, #21
   83f64:	4640      	mov	r0, r8
   83f66:	d50f      	bpl.n	83f88 <__ssprint_r+0x84>
   83f68:	4659      	mov	r1, fp
   83f6a:	f7fe ffbf 	bl	82eec <_malloc_r>
   83f6e:	4607      	mov	r7, r0
   83f70:	b198      	cbz	r0, 83f9a <__ssprint_r+0x96>
   83f72:	4652      	mov	r2, sl
   83f74:	6921      	ldr	r1, [r4, #16]
   83f76:	f7ff f9cf 	bl	83318 <memcpy>
   83f7a:	89a2      	ldrh	r2, [r4, #12]
   83f7c:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   83f80:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   83f84:	81a2      	strh	r2, [r4, #12]
   83f86:	e015      	b.n	83fb4 <__ssprint_r+0xb0>
   83f88:	465a      	mov	r2, fp
   83f8a:	f7ff fdd5 	bl	83b38 <_realloc_r>
   83f8e:	4607      	mov	r7, r0
   83f90:	b980      	cbnz	r0, 83fb4 <__ssprint_r+0xb0>
   83f92:	4640      	mov	r0, r8
   83f94:	6921      	ldr	r1, [r4, #16]
   83f96:	f7fe feaf 	bl	82cf8 <_free_r>
   83f9a:	230c      	movs	r3, #12
   83f9c:	f8c8 3000 	str.w	r3, [r8]
   83fa0:	89a3      	ldrh	r3, [r4, #12]
   83fa2:	f04f 30ff 	mov.w	r0, #4294967295
   83fa6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   83faa:	81a3      	strh	r3, [r4, #12]
   83fac:	2300      	movs	r3, #0
   83fae:	60ab      	str	r3, [r5, #8]
   83fb0:	606b      	str	r3, [r5, #4]
   83fb2:	e01d      	b.n	83ff0 <__ssprint_r+0xec>
   83fb4:	6127      	str	r7, [r4, #16]
   83fb6:	ebca 030b 	rsb	r3, sl, fp
   83fba:	4457      	add	r7, sl
   83fbc:	6027      	str	r7, [r4, #0]
   83fbe:	f8c4 b014 	str.w	fp, [r4, #20]
   83fc2:	4637      	mov	r7, r6
   83fc4:	60a3      	str	r3, [r4, #8]
   83fc6:	42be      	cmp	r6, r7
   83fc8:	d200      	bcs.n	83fcc <__ssprint_r+0xc8>
   83fca:	4637      	mov	r7, r6
   83fcc:	463a      	mov	r2, r7
   83fce:	6820      	ldr	r0, [r4, #0]
   83fd0:	9901      	ldr	r1, [sp, #4]
   83fd2:	f7ff f9aa 	bl	8332a <memmove>
   83fd6:	68a3      	ldr	r3, [r4, #8]
   83fd8:	1bdb      	subs	r3, r3, r7
   83fda:	60a3      	str	r3, [r4, #8]
   83fdc:	6823      	ldr	r3, [r4, #0]
   83fde:	441f      	add	r7, r3
   83fe0:	68ab      	ldr	r3, [r5, #8]
   83fe2:	6027      	str	r7, [r4, #0]
   83fe4:	1b9e      	subs	r6, r3, r6
   83fe6:	60ae      	str	r6, [r5, #8]
   83fe8:	2e00      	cmp	r6, #0
   83fea:	d19a      	bne.n	83f22 <__ssprint_r+0x1e>
   83fec:	606e      	str	r6, [r5, #4]
   83fee:	4630      	mov	r0, r6
   83ff0:	b003      	add	sp, #12
   83ff2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00083ff6 <_svfiprintf_r>:
   83ff6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83ffa:	461e      	mov	r6, r3
   83ffc:	898b      	ldrh	r3, [r1, #12]
   83ffe:	b0ad      	sub	sp, #180	; 0xb4
   84000:	4688      	mov	r8, r1
   84002:	0619      	lsls	r1, r3, #24
   84004:	4683      	mov	fp, r0
   84006:	9202      	str	r2, [sp, #8]
   84008:	d513      	bpl.n	84032 <_svfiprintf_r+0x3c>
   8400a:	f8d8 3010 	ldr.w	r3, [r8, #16]
   8400e:	b983      	cbnz	r3, 84032 <_svfiprintf_r+0x3c>
   84010:	2140      	movs	r1, #64	; 0x40
   84012:	f7fe ff6b 	bl	82eec <_malloc_r>
   84016:	f8c8 0000 	str.w	r0, [r8]
   8401a:	f8c8 0010 	str.w	r0, [r8, #16]
   8401e:	b928      	cbnz	r0, 8402c <_svfiprintf_r+0x36>
   84020:	230c      	movs	r3, #12
   84022:	f8cb 3000 	str.w	r3, [fp]
   84026:	f04f 30ff 	mov.w	r0, #4294967295
   8402a:	e3d4      	b.n	847d6 <_svfiprintf_r+0x7e0>
   8402c:	2340      	movs	r3, #64	; 0x40
   8402e:	f8c8 3014 	str.w	r3, [r8, #20]
   84032:	2300      	movs	r3, #0
   84034:	aa1c      	add	r2, sp, #112	; 0x70
   84036:	920f      	str	r2, [sp, #60]	; 0x3c
   84038:	9311      	str	r3, [sp, #68]	; 0x44
   8403a:	9310      	str	r3, [sp, #64]	; 0x40
   8403c:	4694      	mov	ip, r2
   8403e:	930a      	str	r3, [sp, #40]	; 0x28
   84040:	9305      	str	r3, [sp, #20]
   84042:	9b02      	ldr	r3, [sp, #8]
   84044:	461c      	mov	r4, r3
   84046:	f813 2b01 	ldrb.w	r2, [r3], #1
   8404a:	b91a      	cbnz	r2, 84054 <_svfiprintf_r+0x5e>
   8404c:	9802      	ldr	r0, [sp, #8]
   8404e:	1a25      	subs	r5, r4, r0
   84050:	d103      	bne.n	8405a <_svfiprintf_r+0x64>
   84052:	e01d      	b.n	84090 <_svfiprintf_r+0x9a>
   84054:	2a25      	cmp	r2, #37	; 0x25
   84056:	d1f5      	bne.n	84044 <_svfiprintf_r+0x4e>
   84058:	e7f8      	b.n	8404c <_svfiprintf_r+0x56>
   8405a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8405c:	9902      	ldr	r1, [sp, #8]
   8405e:	442b      	add	r3, r5
   84060:	9311      	str	r3, [sp, #68]	; 0x44
   84062:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84064:	e88c 0022 	stmia.w	ip, {r1, r5}
   84068:	3301      	adds	r3, #1
   8406a:	2b07      	cmp	r3, #7
   8406c:	9310      	str	r3, [sp, #64]	; 0x40
   8406e:	dc02      	bgt.n	84076 <_svfiprintf_r+0x80>
   84070:	f10c 0c08 	add.w	ip, ip, #8
   84074:	e009      	b.n	8408a <_svfiprintf_r+0x94>
   84076:	4658      	mov	r0, fp
   84078:	4641      	mov	r1, r8
   8407a:	aa0f      	add	r2, sp, #60	; 0x3c
   8407c:	f7ff ff42 	bl	83f04 <__ssprint_r>
   84080:	2800      	cmp	r0, #0
   84082:	f040 83a0 	bne.w	847c6 <_svfiprintf_r+0x7d0>
   84086:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   8408a:	9a05      	ldr	r2, [sp, #20]
   8408c:	442a      	add	r2, r5
   8408e:	9205      	str	r2, [sp, #20]
   84090:	7823      	ldrb	r3, [r4, #0]
   84092:	2b00      	cmp	r3, #0
   84094:	f000 8390 	beq.w	847b8 <_svfiprintf_r+0x7c2>
   84098:	2200      	movs	r2, #0
   8409a:	3401      	adds	r4, #1
   8409c:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   840a0:	f04f 3aff 	mov.w	sl, #4294967295
   840a4:	9204      	str	r2, [sp, #16]
   840a6:	4617      	mov	r7, r2
   840a8:	1c65      	adds	r5, r4, #1
   840aa:	7823      	ldrb	r3, [r4, #0]
   840ac:	9502      	str	r5, [sp, #8]
   840ae:	2b58      	cmp	r3, #88	; 0x58
   840b0:	d064      	beq.n	8417c <_svfiprintf_r+0x186>
   840b2:	dc2d      	bgt.n	84110 <_svfiprintf_r+0x11a>
   840b4:	2b2e      	cmp	r3, #46	; 0x2e
   840b6:	d076      	beq.n	841a6 <_svfiprintf_r+0x1b0>
   840b8:	dc12      	bgt.n	840e0 <_svfiprintf_r+0xea>
   840ba:	2b2a      	cmp	r3, #42	; 0x2a
   840bc:	d066      	beq.n	8418c <_svfiprintf_r+0x196>
   840be:	dc08      	bgt.n	840d2 <_svfiprintf_r+0xdc>
   840c0:	2b20      	cmp	r3, #32
   840c2:	d05f      	beq.n	84184 <_svfiprintf_r+0x18e>
   840c4:	2b23      	cmp	r3, #35	; 0x23
   840c6:	f040 8201 	bne.w	844cc <_svfiprintf_r+0x4d6>
   840ca:	f047 0701 	orr.w	r7, r7, #1
   840ce:	9c02      	ldr	r4, [sp, #8]
   840d0:	e7ea      	b.n	840a8 <_svfiprintf_r+0xb2>
   840d2:	2b2b      	cmp	r3, #43	; 0x2b
   840d4:	d101      	bne.n	840da <_svfiprintf_r+0xe4>
   840d6:	461a      	mov	r2, r3
   840d8:	e7f9      	b.n	840ce <_svfiprintf_r+0xd8>
   840da:	2b2d      	cmp	r3, #45	; 0x2d
   840dc:	d060      	beq.n	841a0 <_svfiprintf_r+0x1aa>
   840de:	e1f5      	b.n	844cc <_svfiprintf_r+0x4d6>
   840e0:	2b39      	cmp	r3, #57	; 0x39
   840e2:	dc07      	bgt.n	840f4 <_svfiprintf_r+0xfe>
   840e4:	2b31      	cmp	r3, #49	; 0x31
   840e6:	da7f      	bge.n	841e8 <_svfiprintf_r+0x1f2>
   840e8:	2b30      	cmp	r3, #48	; 0x30
   840ea:	f040 81ef 	bne.w	844cc <_svfiprintf_r+0x4d6>
   840ee:	f047 0780 	orr.w	r7, r7, #128	; 0x80
   840f2:	e7ec      	b.n	840ce <_svfiprintf_r+0xd8>
   840f4:	2b4f      	cmp	r3, #79	; 0x4f
   840f6:	f000 80e0 	beq.w	842ba <_svfiprintf_r+0x2c4>
   840fa:	2b55      	cmp	r3, #85	; 0x55
   840fc:	f000 8120 	beq.w	84340 <_svfiprintf_r+0x34a>
   84100:	2b44      	cmp	r3, #68	; 0x44
   84102:	f040 81e3 	bne.w	844cc <_svfiprintf_r+0x4d6>
   84106:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   8410a:	f047 0710 	orr.w	r7, r7, #16
   8410e:	e094      	b.n	8423a <_svfiprintf_r+0x244>
   84110:	2b6e      	cmp	r3, #110	; 0x6e
   84112:	f000 80b6 	beq.w	84282 <_svfiprintf_r+0x28c>
   84116:	dc0d      	bgt.n	84134 <_svfiprintf_r+0x13e>
   84118:	2b68      	cmp	r3, #104	; 0x68
   8411a:	d076      	beq.n	8420a <_svfiprintf_r+0x214>
   8411c:	dc05      	bgt.n	8412a <_svfiprintf_r+0x134>
   8411e:	2b63      	cmp	r3, #99	; 0x63
   84120:	f000 8083 	beq.w	8422a <_svfiprintf_r+0x234>
   84124:	2b64      	cmp	r3, #100	; 0x64
   84126:	d026      	beq.n	84176 <_svfiprintf_r+0x180>
   84128:	e1d0      	b.n	844cc <_svfiprintf_r+0x4d6>
   8412a:	2b69      	cmp	r3, #105	; 0x69
   8412c:	d023      	beq.n	84176 <_svfiprintf_r+0x180>
   8412e:	2b6c      	cmp	r3, #108	; 0x6c
   84130:	d06e      	beq.n	84210 <_svfiprintf_r+0x21a>
   84132:	e1cb      	b.n	844cc <_svfiprintf_r+0x4d6>
   84134:	2b71      	cmp	r3, #113	; 0x71
   84136:	d075      	beq.n	84224 <_svfiprintf_r+0x22e>
   84138:	dc13      	bgt.n	84162 <_svfiprintf_r+0x16c>
   8413a:	2b6f      	cmp	r3, #111	; 0x6f
   8413c:	f000 80bf 	beq.w	842be <_svfiprintf_r+0x2c8>
   84140:	2b70      	cmp	r3, #112	; 0x70
   84142:	f040 81c3 	bne.w	844cc <_svfiprintf_r+0x4d6>
   84146:	2330      	movs	r3, #48	; 0x30
   84148:	48a0      	ldr	r0, [pc, #640]	; (843cc <_svfiprintf_r+0x3d6>)
   8414a:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
   8414e:	2378      	movs	r3, #120	; 0x78
   84150:	6834      	ldr	r4, [r6, #0]
   84152:	2500      	movs	r5, #0
   84154:	f047 0702 	orr.w	r7, r7, #2
   84158:	f88d 3039 	strb.w	r3, [sp, #57]	; 0x39
   8415c:	3604      	adds	r6, #4
   8415e:	900a      	str	r0, [sp, #40]	; 0x28
   84160:	e12e      	b.n	843c0 <_svfiprintf_r+0x3ca>
   84162:	2b75      	cmp	r3, #117	; 0x75
   84164:	f000 80ee 	beq.w	84344 <_svfiprintf_r+0x34e>
   84168:	2b78      	cmp	r3, #120	; 0x78
   8416a:	f000 8103 	beq.w	84374 <_svfiprintf_r+0x37e>
   8416e:	2b73      	cmp	r3, #115	; 0x73
   84170:	f040 81ac 	bne.w	844cc <_svfiprintf_r+0x4d6>
   84174:	e0bf      	b.n	842f6 <_svfiprintf_r+0x300>
   84176:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   8417a:	e05e      	b.n	8423a <_svfiprintf_r+0x244>
   8417c:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   84180:	4c93      	ldr	r4, [pc, #588]	; (843d0 <_svfiprintf_r+0x3da>)
   84182:	e0fa      	b.n	8437a <_svfiprintf_r+0x384>
   84184:	2a00      	cmp	r2, #0
   84186:	bf08      	it	eq
   84188:	2220      	moveq	r2, #32
   8418a:	e7a0      	b.n	840ce <_svfiprintf_r+0xd8>
   8418c:	1d33      	adds	r3, r6, #4
   8418e:	6836      	ldr	r6, [r6, #0]
   84190:	2e00      	cmp	r6, #0
   84192:	9604      	str	r6, [sp, #16]
   84194:	db01      	blt.n	8419a <_svfiprintf_r+0x1a4>
   84196:	461e      	mov	r6, r3
   84198:	e799      	b.n	840ce <_svfiprintf_r+0xd8>
   8419a:	4275      	negs	r5, r6
   8419c:	9504      	str	r5, [sp, #16]
   8419e:	461e      	mov	r6, r3
   841a0:	f047 0704 	orr.w	r7, r7, #4
   841a4:	e793      	b.n	840ce <_svfiprintf_r+0xd8>
   841a6:	9c02      	ldr	r4, [sp, #8]
   841a8:	7823      	ldrb	r3, [r4, #0]
   841aa:	1c61      	adds	r1, r4, #1
   841ac:	2b2a      	cmp	r3, #42	; 0x2a
   841ae:	d002      	beq.n	841b6 <_svfiprintf_r+0x1c0>
   841b0:	f04f 0a00 	mov.w	sl, #0
   841b4:	e00a      	b.n	841cc <_svfiprintf_r+0x1d6>
   841b6:	f8d6 a000 	ldr.w	sl, [r6]
   841ba:	1d33      	adds	r3, r6, #4
   841bc:	f1ba 0f00 	cmp.w	sl, #0
   841c0:	461e      	mov	r6, r3
   841c2:	9102      	str	r1, [sp, #8]
   841c4:	da83      	bge.n	840ce <_svfiprintf_r+0xd8>
   841c6:	f04f 3aff 	mov.w	sl, #4294967295
   841ca:	e780      	b.n	840ce <_svfiprintf_r+0xd8>
   841cc:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   841d0:	2809      	cmp	r0, #9
   841d2:	d805      	bhi.n	841e0 <_svfiprintf_r+0x1ea>
   841d4:	230a      	movs	r3, #10
   841d6:	fb03 0a0a 	mla	sl, r3, sl, r0
   841da:	f811 3b01 	ldrb.w	r3, [r1], #1
   841de:	e7f5      	b.n	841cc <_svfiprintf_r+0x1d6>
   841e0:	ea4a 7aea 	orr.w	sl, sl, sl, asr #31
   841e4:	9102      	str	r1, [sp, #8]
   841e6:	e762      	b.n	840ae <_svfiprintf_r+0xb8>
   841e8:	2500      	movs	r5, #0
   841ea:	9504      	str	r5, [sp, #16]
   841ec:	9c04      	ldr	r4, [sp, #16]
   841ee:	3b30      	subs	r3, #48	; 0x30
   841f0:	210a      	movs	r1, #10
   841f2:	fb01 3404 	mla	r4, r1, r4, r3
   841f6:	9902      	ldr	r1, [sp, #8]
   841f8:	9404      	str	r4, [sp, #16]
   841fa:	f811 3b01 	ldrb.w	r3, [r1], #1
   841fe:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   84202:	2809      	cmp	r0, #9
   84204:	d8ee      	bhi.n	841e4 <_svfiprintf_r+0x1ee>
   84206:	9102      	str	r1, [sp, #8]
   84208:	e7f0      	b.n	841ec <_svfiprintf_r+0x1f6>
   8420a:	f047 0740 	orr.w	r7, r7, #64	; 0x40
   8420e:	e75e      	b.n	840ce <_svfiprintf_r+0xd8>
   84210:	9d02      	ldr	r5, [sp, #8]
   84212:	782b      	ldrb	r3, [r5, #0]
   84214:	2b6c      	cmp	r3, #108	; 0x6c
   84216:	d102      	bne.n	8421e <_svfiprintf_r+0x228>
   84218:	3501      	adds	r5, #1
   8421a:	9502      	str	r5, [sp, #8]
   8421c:	e002      	b.n	84224 <_svfiprintf_r+0x22e>
   8421e:	f047 0710 	orr.w	r7, r7, #16
   84222:	e754      	b.n	840ce <_svfiprintf_r+0xd8>
   84224:	f047 0720 	orr.w	r7, r7, #32
   84228:	e751      	b.n	840ce <_svfiprintf_r+0xd8>
   8422a:	6833      	ldr	r3, [r6, #0]
   8422c:	2500      	movs	r5, #0
   8422e:	f88d 3048 	strb.w	r3, [sp, #72]	; 0x48
   84232:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
   84236:	3604      	adds	r6, #4
   84238:	e152      	b.n	844e0 <_svfiprintf_r+0x4ea>
   8423a:	06ba      	lsls	r2, r7, #26
   8423c:	d507      	bpl.n	8424e <_svfiprintf_r+0x258>
   8423e:	3607      	adds	r6, #7
   84240:	f026 0307 	bic.w	r3, r6, #7
   84244:	f103 0608 	add.w	r6, r3, #8
   84248:	e9d3 4500 	ldrd	r4, r5, [r3]
   8424c:	e00d      	b.n	8426a <_svfiprintf_r+0x274>
   8424e:	f017 0f10 	tst.w	r7, #16
   84252:	f106 0304 	add.w	r3, r6, #4
   84256:	d001      	beq.n	8425c <_svfiprintf_r+0x266>
   84258:	6834      	ldr	r4, [r6, #0]
   8425a:	e004      	b.n	84266 <_svfiprintf_r+0x270>
   8425c:	6834      	ldr	r4, [r6, #0]
   8425e:	f017 0f40 	tst.w	r7, #64	; 0x40
   84262:	bf18      	it	ne
   84264:	b224      	sxthne	r4, r4
   84266:	17e5      	asrs	r5, r4, #31
   84268:	461e      	mov	r6, r3
   8426a:	2c00      	cmp	r4, #0
   8426c:	f175 0000 	sbcs.w	r0, r5, #0
   84270:	f280 80b0 	bge.w	843d4 <_svfiprintf_r+0x3de>
   84274:	232d      	movs	r3, #45	; 0x2d
   84276:	4264      	negs	r4, r4
   84278:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   8427c:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   84280:	e0a8      	b.n	843d4 <_svfiprintf_r+0x3de>
   84282:	f017 0f20 	tst.w	r7, #32
   84286:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   8428a:	f106 0104 	add.w	r1, r6, #4
   8428e:	d007      	beq.n	842a0 <_svfiprintf_r+0x2aa>
   84290:	9c05      	ldr	r4, [sp, #20]
   84292:	6830      	ldr	r0, [r6, #0]
   84294:	17e5      	asrs	r5, r4, #31
   84296:	4622      	mov	r2, r4
   84298:	462b      	mov	r3, r5
   8429a:	e9c0 2300 	strd	r2, r3, [r0]
   8429e:	e00a      	b.n	842b6 <_svfiprintf_r+0x2c0>
   842a0:	06fb      	lsls	r3, r7, #27
   842a2:	d405      	bmi.n	842b0 <_svfiprintf_r+0x2ba>
   842a4:	067f      	lsls	r7, r7, #25
   842a6:	d503      	bpl.n	842b0 <_svfiprintf_r+0x2ba>
   842a8:	6833      	ldr	r3, [r6, #0]
   842aa:	9c05      	ldr	r4, [sp, #20]
   842ac:	801c      	strh	r4, [r3, #0]
   842ae:	e002      	b.n	842b6 <_svfiprintf_r+0x2c0>
   842b0:	6833      	ldr	r3, [r6, #0]
   842b2:	9d05      	ldr	r5, [sp, #20]
   842b4:	601d      	str	r5, [r3, #0]
   842b6:	460e      	mov	r6, r1
   842b8:	e6c3      	b.n	84042 <_svfiprintf_r+0x4c>
   842ba:	f047 0710 	orr.w	r7, r7, #16
   842be:	f017 0320 	ands.w	r3, r7, #32
   842c2:	d008      	beq.n	842d6 <_svfiprintf_r+0x2e0>
   842c4:	3607      	adds	r6, #7
   842c6:	f026 0307 	bic.w	r3, r6, #7
   842ca:	f103 0608 	add.w	r6, r3, #8
   842ce:	e9d3 4500 	ldrd	r4, r5, [r3]
   842d2:	2300      	movs	r3, #0
   842d4:	e075      	b.n	843c2 <_svfiprintf_r+0x3cc>
   842d6:	f017 0110 	ands.w	r1, r7, #16
   842da:	f106 0204 	add.w	r2, r6, #4
   842de:	d106      	bne.n	842ee <_svfiprintf_r+0x2f8>
   842e0:	f017 0340 	ands.w	r3, r7, #64	; 0x40
   842e4:	d003      	beq.n	842ee <_svfiprintf_r+0x2f8>
   842e6:	8834      	ldrh	r4, [r6, #0]
   842e8:	2500      	movs	r5, #0
   842ea:	4616      	mov	r6, r2
   842ec:	e7f1      	b.n	842d2 <_svfiprintf_r+0x2dc>
   842ee:	6834      	ldr	r4, [r6, #0]
   842f0:	2500      	movs	r5, #0
   842f2:	4616      	mov	r6, r2
   842f4:	e065      	b.n	843c2 <_svfiprintf_r+0x3cc>
   842f6:	f8d6 9000 	ldr.w	r9, [r6]
   842fa:	2300      	movs	r3, #0
   842fc:	459a      	cmp	sl, r3
   842fe:	f106 0604 	add.w	r6, r6, #4
   84302:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   84306:	4648      	mov	r0, r9
   84308:	db11      	blt.n	8432e <_svfiprintf_r+0x338>
   8430a:	4619      	mov	r1, r3
   8430c:	4652      	mov	r2, sl
   8430e:	f8cd c004 	str.w	ip, [sp, #4]
   84312:	f7fe fff3 	bl	832fc <memchr>
   84316:	f8dd c004 	ldr.w	ip, [sp, #4]
   8431a:	2800      	cmp	r0, #0
   8431c:	f000 80e5 	beq.w	844ea <_svfiprintf_r+0x4f4>
   84320:	ebc9 0000 	rsb	r0, r9, r0
   84324:	4550      	cmp	r0, sl
   84326:	bfb8      	it	lt
   84328:	4682      	movlt	sl, r0
   8432a:	2500      	movs	r5, #0
   8432c:	e0de      	b.n	844ec <_svfiprintf_r+0x4f6>
   8432e:	f8cd c004 	str.w	ip, [sp, #4]
   84332:	f7fc fe8b 	bl	8104c <strlen>
   84336:	2500      	movs	r5, #0
   84338:	4682      	mov	sl, r0
   8433a:	f8dd c004 	ldr.w	ip, [sp, #4]
   8433e:	e0d5      	b.n	844ec <_svfiprintf_r+0x4f6>
   84340:	f047 0710 	orr.w	r7, r7, #16
   84344:	06bd      	lsls	r5, r7, #26
   84346:	d507      	bpl.n	84358 <_svfiprintf_r+0x362>
   84348:	3607      	adds	r6, #7
   8434a:	f026 0307 	bic.w	r3, r6, #7
   8434e:	f103 0608 	add.w	r6, r3, #8
   84352:	e9d3 4500 	ldrd	r4, r5, [r3]
   84356:	e00b      	b.n	84370 <_svfiprintf_r+0x37a>
   84358:	f017 0f10 	tst.w	r7, #16
   8435c:	f106 0304 	add.w	r3, r6, #4
   84360:	d103      	bne.n	8436a <_svfiprintf_r+0x374>
   84362:	067c      	lsls	r4, r7, #25
   84364:	d501      	bpl.n	8436a <_svfiprintf_r+0x374>
   84366:	8834      	ldrh	r4, [r6, #0]
   84368:	e000      	b.n	8436c <_svfiprintf_r+0x376>
   8436a:	6834      	ldr	r4, [r6, #0]
   8436c:	2500      	movs	r5, #0
   8436e:	461e      	mov	r6, r3
   84370:	2301      	movs	r3, #1
   84372:	e026      	b.n	843c2 <_svfiprintf_r+0x3cc>
   84374:	4c15      	ldr	r4, [pc, #84]	; (843cc <_svfiprintf_r+0x3d6>)
   84376:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   8437a:	06b8      	lsls	r0, r7, #26
   8437c:	940a      	str	r4, [sp, #40]	; 0x28
   8437e:	d507      	bpl.n	84390 <_svfiprintf_r+0x39a>
   84380:	3607      	adds	r6, #7
   84382:	f026 0207 	bic.w	r2, r6, #7
   84386:	f102 0608 	add.w	r6, r2, #8
   8438a:	e9d2 4500 	ldrd	r4, r5, [r2]
   8438e:	e00b      	b.n	843a8 <_svfiprintf_r+0x3b2>
   84390:	f017 0f10 	tst.w	r7, #16
   84394:	f106 0204 	add.w	r2, r6, #4
   84398:	d103      	bne.n	843a2 <_svfiprintf_r+0x3ac>
   8439a:	0679      	lsls	r1, r7, #25
   8439c:	d501      	bpl.n	843a2 <_svfiprintf_r+0x3ac>
   8439e:	8834      	ldrh	r4, [r6, #0]
   843a0:	e000      	b.n	843a4 <_svfiprintf_r+0x3ae>
   843a2:	6834      	ldr	r4, [r6, #0]
   843a4:	2500      	movs	r5, #0
   843a6:	4616      	mov	r6, r2
   843a8:	07fa      	lsls	r2, r7, #31
   843aa:	d509      	bpl.n	843c0 <_svfiprintf_r+0x3ca>
   843ac:	ea54 0005 	orrs.w	r0, r4, r5
   843b0:	d006      	beq.n	843c0 <_svfiprintf_r+0x3ca>
   843b2:	2230      	movs	r2, #48	; 0x30
   843b4:	f88d 2038 	strb.w	r2, [sp, #56]	; 0x38
   843b8:	f88d 3039 	strb.w	r3, [sp, #57]	; 0x39
   843bc:	f047 0702 	orr.w	r7, r7, #2
   843c0:	2302      	movs	r3, #2
   843c2:	2200      	movs	r2, #0
   843c4:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   843c8:	e005      	b.n	843d6 <_svfiprintf_r+0x3e0>
   843ca:	bf00      	nop
   843cc:	000857f7 	.word	0x000857f7
   843d0:	000857e6 	.word	0x000857e6
   843d4:	2301      	movs	r3, #1
   843d6:	f1ba 0f00 	cmp.w	sl, #0
   843da:	bfa8      	it	ge
   843dc:	f027 0780 	bicge.w	r7, r7, #128	; 0x80
   843e0:	ea54 0105 	orrs.w	r1, r4, r5
   843e4:	d102      	bne.n	843ec <_svfiprintf_r+0x3f6>
   843e6:	f1ba 0f00 	cmp.w	sl, #0
   843ea:	d05e      	beq.n	844aa <_svfiprintf_r+0x4b4>
   843ec:	2b01      	cmp	r3, #1
   843ee:	d01f      	beq.n	84430 <_svfiprintf_r+0x43a>
   843f0:	2b02      	cmp	r3, #2
   843f2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
   843f6:	d045      	beq.n	84484 <_svfiprintf_r+0x48e>
   843f8:	08e0      	lsrs	r0, r4, #3
   843fa:	ea40 7145 	orr.w	r1, r0, r5, lsl #29
   843fe:	08e8      	lsrs	r0, r5, #3
   84400:	f004 0207 	and.w	r2, r4, #7
   84404:	9106      	str	r1, [sp, #24]
   84406:	9007      	str	r0, [sp, #28]
   84408:	3230      	adds	r2, #48	; 0x30
   8440a:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
   8440e:	ea54 0105 	orrs.w	r1, r4, r5
   84412:	4699      	mov	r9, r3
   84414:	701a      	strb	r2, [r3, #0]
   84416:	f103 33ff 	add.w	r3, r3, #4294967295
   8441a:	d1ed      	bne.n	843f8 <_svfiprintf_r+0x402>
   8441c:	07f8      	lsls	r0, r7, #31
   8441e:	4649      	mov	r1, r9
   84420:	d54e      	bpl.n	844c0 <_svfiprintf_r+0x4ca>
   84422:	2a30      	cmp	r2, #48	; 0x30
   84424:	d04c      	beq.n	844c0 <_svfiprintf_r+0x4ca>
   84426:	4699      	mov	r9, r3
   84428:	2330      	movs	r3, #48	; 0x30
   8442a:	f801 3c01 	strb.w	r3, [r1, #-1]
   8442e:	e047      	b.n	844c0 <_svfiprintf_r+0x4ca>
   84430:	2d00      	cmp	r5, #0
   84432:	bf08      	it	eq
   84434:	2c0a      	cmpeq	r4, #10
   84436:	d205      	bcs.n	84444 <_svfiprintf_r+0x44e>
   84438:	3430      	adds	r4, #48	; 0x30
   8443a:	f88d 406f 	strb.w	r4, [sp, #111]	; 0x6f
   8443e:	f10d 096f 	add.w	r9, sp, #111	; 0x6f
   84442:	e03d      	b.n	844c0 <_svfiprintf_r+0x4ca>
   84444:	f10d 026f 	add.w	r2, sp, #111	; 0x6f
   84448:	9203      	str	r2, [sp, #12]
   8444a:	4620      	mov	r0, r4
   8444c:	4629      	mov	r1, r5
   8444e:	220a      	movs	r2, #10
   84450:	2300      	movs	r3, #0
   84452:	f8cd c004 	str.w	ip, [sp, #4]
   84456:	f000 feb5 	bl	851c4 <__aeabi_uldivmod>
   8445a:	9b03      	ldr	r3, [sp, #12]
   8445c:	3230      	adds	r2, #48	; 0x30
   8445e:	f803 2901 	strb.w	r2, [r3], #-1
   84462:	4620      	mov	r0, r4
   84464:	4629      	mov	r1, r5
   84466:	f8dd 900c 	ldr.w	r9, [sp, #12]
   8446a:	220a      	movs	r2, #10
   8446c:	9303      	str	r3, [sp, #12]
   8446e:	2300      	movs	r3, #0
   84470:	f000 fea8 	bl	851c4 <__aeabi_uldivmod>
   84474:	4604      	mov	r4, r0
   84476:	460d      	mov	r5, r1
   84478:	ea54 0005 	orrs.w	r0, r4, r5
   8447c:	f8dd c004 	ldr.w	ip, [sp, #4]
   84480:	d1e3      	bne.n	8444a <_svfiprintf_r+0x454>
   84482:	e01d      	b.n	844c0 <_svfiprintf_r+0x4ca>
   84484:	990a      	ldr	r1, [sp, #40]	; 0x28
   84486:	f004 020f 	and.w	r2, r4, #15
   8448a:	5c8a      	ldrb	r2, [r1, r2]
   8448c:	4699      	mov	r9, r3
   8448e:	f803 2901 	strb.w	r2, [r3], #-1
   84492:	0922      	lsrs	r2, r4, #4
   84494:	ea42 7005 	orr.w	r0, r2, r5, lsl #28
   84498:	0929      	lsrs	r1, r5, #4
   8449a:	9008      	str	r0, [sp, #32]
   8449c:	9109      	str	r1, [sp, #36]	; 0x24
   8449e:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
   844a2:	ea54 0205 	orrs.w	r2, r4, r5
   844a6:	d1ed      	bne.n	84484 <_svfiprintf_r+0x48e>
   844a8:	e00a      	b.n	844c0 <_svfiprintf_r+0x4ca>
   844aa:	b93b      	cbnz	r3, 844bc <_svfiprintf_r+0x4c6>
   844ac:	07f9      	lsls	r1, r7, #31
   844ae:	d505      	bpl.n	844bc <_svfiprintf_r+0x4c6>
   844b0:	f10d 09b0 	add.w	r9, sp, #176	; 0xb0
   844b4:	2330      	movs	r3, #48	; 0x30
   844b6:	f809 3d41 	strb.w	r3, [r9, #-65]!
   844ba:	e001      	b.n	844c0 <_svfiprintf_r+0x4ca>
   844bc:	f10d 0970 	add.w	r9, sp, #112	; 0x70
   844c0:	4655      	mov	r5, sl
   844c2:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
   844c6:	ebc9 0a0a 	rsb	sl, r9, sl
   844ca:	e00f      	b.n	844ec <_svfiprintf_r+0x4f6>
   844cc:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   844d0:	2b00      	cmp	r3, #0
   844d2:	f000 8171 	beq.w	847b8 <_svfiprintf_r+0x7c2>
   844d6:	2500      	movs	r5, #0
   844d8:	f88d 3048 	strb.w	r3, [sp, #72]	; 0x48
   844dc:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
   844e0:	f04f 0a01 	mov.w	sl, #1
   844e4:	f10d 0948 	add.w	r9, sp, #72	; 0x48
   844e8:	e000      	b.n	844ec <_svfiprintf_r+0x4f6>
   844ea:	4605      	mov	r5, r0
   844ec:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
   844f0:	45aa      	cmp	sl, r5
   844f2:	bfac      	ite	ge
   844f4:	4654      	movge	r4, sl
   844f6:	462c      	movlt	r4, r5
   844f8:	b103      	cbz	r3, 844fc <_svfiprintf_r+0x506>
   844fa:	3401      	adds	r4, #1
   844fc:	f017 0302 	ands.w	r3, r7, #2
   84500:	9303      	str	r3, [sp, #12]
   84502:	bf18      	it	ne
   84504:	3402      	addne	r4, #2
   84506:	f017 0384 	ands.w	r3, r7, #132	; 0x84
   8450a:	930b      	str	r3, [sp, #44]	; 0x2c
   8450c:	d13b      	bne.n	84586 <_svfiprintf_r+0x590>
   8450e:	9804      	ldr	r0, [sp, #16]
   84510:	1b03      	subs	r3, r0, r4
   84512:	2b00      	cmp	r3, #0
   84514:	dd37      	ble.n	84586 <_svfiprintf_r+0x590>
   84516:	4aa6      	ldr	r2, [pc, #664]	; (847b0 <_svfiprintf_r+0x7ba>)
   84518:	2b10      	cmp	r3, #16
   8451a:	f8cc 2000 	str.w	r2, [ip]
   8451e:	dd1b      	ble.n	84558 <_svfiprintf_r+0x562>
   84520:	2210      	movs	r2, #16
   84522:	f8cc 2004 	str.w	r2, [ip, #4]
   84526:	9a11      	ldr	r2, [sp, #68]	; 0x44
   84528:	3210      	adds	r2, #16
   8452a:	9211      	str	r2, [sp, #68]	; 0x44
   8452c:	9a10      	ldr	r2, [sp, #64]	; 0x40
   8452e:	3201      	adds	r2, #1
   84530:	2a07      	cmp	r2, #7
   84532:	9210      	str	r2, [sp, #64]	; 0x40
   84534:	dc02      	bgt.n	8453c <_svfiprintf_r+0x546>
   84536:	f10c 0c08 	add.w	ip, ip, #8
   8453a:	e00b      	b.n	84554 <_svfiprintf_r+0x55e>
   8453c:	4658      	mov	r0, fp
   8453e:	4641      	mov	r1, r8
   84540:	aa0f      	add	r2, sp, #60	; 0x3c
   84542:	9301      	str	r3, [sp, #4]
   84544:	f7ff fcde 	bl	83f04 <__ssprint_r>
   84548:	9b01      	ldr	r3, [sp, #4]
   8454a:	2800      	cmp	r0, #0
   8454c:	f040 813b 	bne.w	847c6 <_svfiprintf_r+0x7d0>
   84550:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   84554:	3b10      	subs	r3, #16
   84556:	e7de      	b.n	84516 <_svfiprintf_r+0x520>
   84558:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8455a:	f8cc 3004 	str.w	r3, [ip, #4]
   8455e:	4413      	add	r3, r2
   84560:	9311      	str	r3, [sp, #68]	; 0x44
   84562:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84564:	3301      	adds	r3, #1
   84566:	2b07      	cmp	r3, #7
   84568:	9310      	str	r3, [sp, #64]	; 0x40
   8456a:	dc02      	bgt.n	84572 <_svfiprintf_r+0x57c>
   8456c:	f10c 0c08 	add.w	ip, ip, #8
   84570:	e009      	b.n	84586 <_svfiprintf_r+0x590>
   84572:	4658      	mov	r0, fp
   84574:	4641      	mov	r1, r8
   84576:	aa0f      	add	r2, sp, #60	; 0x3c
   84578:	f7ff fcc4 	bl	83f04 <__ssprint_r>
   8457c:	2800      	cmp	r0, #0
   8457e:	f040 8122 	bne.w	847c6 <_svfiprintf_r+0x7d0>
   84582:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   84586:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
   8458a:	b1db      	cbz	r3, 845c4 <_svfiprintf_r+0x5ce>
   8458c:	f10d 0337 	add.w	r3, sp, #55	; 0x37
   84590:	f8cc 3000 	str.w	r3, [ip]
   84594:	2301      	movs	r3, #1
   84596:	f8cc 3004 	str.w	r3, [ip, #4]
   8459a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8459c:	3301      	adds	r3, #1
   8459e:	9311      	str	r3, [sp, #68]	; 0x44
   845a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
   845a2:	3301      	adds	r3, #1
   845a4:	2b07      	cmp	r3, #7
   845a6:	9310      	str	r3, [sp, #64]	; 0x40
   845a8:	dc02      	bgt.n	845b0 <_svfiprintf_r+0x5ba>
   845aa:	f10c 0c08 	add.w	ip, ip, #8
   845ae:	e009      	b.n	845c4 <_svfiprintf_r+0x5ce>
   845b0:	4658      	mov	r0, fp
   845b2:	4641      	mov	r1, r8
   845b4:	aa0f      	add	r2, sp, #60	; 0x3c
   845b6:	f7ff fca5 	bl	83f04 <__ssprint_r>
   845ba:	2800      	cmp	r0, #0
   845bc:	f040 8103 	bne.w	847c6 <_svfiprintf_r+0x7d0>
   845c0:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   845c4:	9b03      	ldr	r3, [sp, #12]
   845c6:	b1d3      	cbz	r3, 845fe <_svfiprintf_r+0x608>
   845c8:	ab0e      	add	r3, sp, #56	; 0x38
   845ca:	f8cc 3000 	str.w	r3, [ip]
   845ce:	2302      	movs	r3, #2
   845d0:	f8cc 3004 	str.w	r3, [ip, #4]
   845d4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   845d6:	3302      	adds	r3, #2
   845d8:	9311      	str	r3, [sp, #68]	; 0x44
   845da:	9b10      	ldr	r3, [sp, #64]	; 0x40
   845dc:	3301      	adds	r3, #1
   845de:	2b07      	cmp	r3, #7
   845e0:	9310      	str	r3, [sp, #64]	; 0x40
   845e2:	dc02      	bgt.n	845ea <_svfiprintf_r+0x5f4>
   845e4:	f10c 0c08 	add.w	ip, ip, #8
   845e8:	e009      	b.n	845fe <_svfiprintf_r+0x608>
   845ea:	4658      	mov	r0, fp
   845ec:	4641      	mov	r1, r8
   845ee:	aa0f      	add	r2, sp, #60	; 0x3c
   845f0:	f7ff fc88 	bl	83f04 <__ssprint_r>
   845f4:	2800      	cmp	r0, #0
   845f6:	f040 80e6 	bne.w	847c6 <_svfiprintf_r+0x7d0>
   845fa:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   845fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84600:	2b80      	cmp	r3, #128	; 0x80
   84602:	d13f      	bne.n	84684 <_svfiprintf_r+0x68e>
   84604:	9b04      	ldr	r3, [sp, #16]
   84606:	1b1b      	subs	r3, r3, r4
   84608:	2b00      	cmp	r3, #0
   8460a:	9303      	str	r3, [sp, #12]
   8460c:	dd3a      	ble.n	84684 <_svfiprintf_r+0x68e>
   8460e:	9b03      	ldr	r3, [sp, #12]
   84610:	2b10      	cmp	r3, #16
   84612:	4b68      	ldr	r3, [pc, #416]	; (847b4 <_svfiprintf_r+0x7be>)
   84614:	f8cc 3000 	str.w	r3, [ip]
   84618:	dd1b      	ble.n	84652 <_svfiprintf_r+0x65c>
   8461a:	2310      	movs	r3, #16
   8461c:	f8cc 3004 	str.w	r3, [ip, #4]
   84620:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84622:	3310      	adds	r3, #16
   84624:	9311      	str	r3, [sp, #68]	; 0x44
   84626:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84628:	3301      	adds	r3, #1
   8462a:	2b07      	cmp	r3, #7
   8462c:	9310      	str	r3, [sp, #64]	; 0x40
   8462e:	dc02      	bgt.n	84636 <_svfiprintf_r+0x640>
   84630:	f10c 0c08 	add.w	ip, ip, #8
   84634:	e009      	b.n	8464a <_svfiprintf_r+0x654>
   84636:	4658      	mov	r0, fp
   84638:	4641      	mov	r1, r8
   8463a:	aa0f      	add	r2, sp, #60	; 0x3c
   8463c:	f7ff fc62 	bl	83f04 <__ssprint_r>
   84640:	2800      	cmp	r0, #0
   84642:	f040 80c0 	bne.w	847c6 <_svfiprintf_r+0x7d0>
   84646:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   8464a:	9b03      	ldr	r3, [sp, #12]
   8464c:	3b10      	subs	r3, #16
   8464e:	9303      	str	r3, [sp, #12]
   84650:	e7dd      	b.n	8460e <_svfiprintf_r+0x618>
   84652:	9b03      	ldr	r3, [sp, #12]
   84654:	9803      	ldr	r0, [sp, #12]
   84656:	f8cc 3004 	str.w	r3, [ip, #4]
   8465a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8465c:	4403      	add	r3, r0
   8465e:	9311      	str	r3, [sp, #68]	; 0x44
   84660:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84662:	3301      	adds	r3, #1
   84664:	2b07      	cmp	r3, #7
   84666:	9310      	str	r3, [sp, #64]	; 0x40
   84668:	dc02      	bgt.n	84670 <_svfiprintf_r+0x67a>
   8466a:	f10c 0c08 	add.w	ip, ip, #8
   8466e:	e009      	b.n	84684 <_svfiprintf_r+0x68e>
   84670:	4658      	mov	r0, fp
   84672:	4641      	mov	r1, r8
   84674:	aa0f      	add	r2, sp, #60	; 0x3c
   84676:	f7ff fc45 	bl	83f04 <__ssprint_r>
   8467a:	2800      	cmp	r0, #0
   8467c:	f040 80a3 	bne.w	847c6 <_svfiprintf_r+0x7d0>
   84680:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   84684:	ebca 0505 	rsb	r5, sl, r5
   84688:	2d00      	cmp	r5, #0
   8468a:	dd34      	ble.n	846f6 <_svfiprintf_r+0x700>
   8468c:	4b49      	ldr	r3, [pc, #292]	; (847b4 <_svfiprintf_r+0x7be>)
   8468e:	2d10      	cmp	r5, #16
   84690:	f8cc 3000 	str.w	r3, [ip]
   84694:	dd19      	ble.n	846ca <_svfiprintf_r+0x6d4>
   84696:	2310      	movs	r3, #16
   84698:	f8cc 3004 	str.w	r3, [ip, #4]
   8469c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8469e:	3310      	adds	r3, #16
   846a0:	9311      	str	r3, [sp, #68]	; 0x44
   846a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   846a4:	3301      	adds	r3, #1
   846a6:	2b07      	cmp	r3, #7
   846a8:	9310      	str	r3, [sp, #64]	; 0x40
   846aa:	dc02      	bgt.n	846b2 <_svfiprintf_r+0x6bc>
   846ac:	f10c 0c08 	add.w	ip, ip, #8
   846b0:	e009      	b.n	846c6 <_svfiprintf_r+0x6d0>
   846b2:	4658      	mov	r0, fp
   846b4:	4641      	mov	r1, r8
   846b6:	aa0f      	add	r2, sp, #60	; 0x3c
   846b8:	f7ff fc24 	bl	83f04 <__ssprint_r>
   846bc:	2800      	cmp	r0, #0
   846be:	f040 8082 	bne.w	847c6 <_svfiprintf_r+0x7d0>
   846c2:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   846c6:	3d10      	subs	r5, #16
   846c8:	e7e0      	b.n	8468c <_svfiprintf_r+0x696>
   846ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
   846cc:	f8cc 5004 	str.w	r5, [ip, #4]
   846d0:	441d      	add	r5, r3
   846d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   846d4:	9511      	str	r5, [sp, #68]	; 0x44
   846d6:	3301      	adds	r3, #1
   846d8:	2b07      	cmp	r3, #7
   846da:	9310      	str	r3, [sp, #64]	; 0x40
   846dc:	dc02      	bgt.n	846e4 <_svfiprintf_r+0x6ee>
   846de:	f10c 0c08 	add.w	ip, ip, #8
   846e2:	e008      	b.n	846f6 <_svfiprintf_r+0x700>
   846e4:	4658      	mov	r0, fp
   846e6:	4641      	mov	r1, r8
   846e8:	aa0f      	add	r2, sp, #60	; 0x3c
   846ea:	f7ff fc0b 	bl	83f04 <__ssprint_r>
   846ee:	2800      	cmp	r0, #0
   846f0:	d169      	bne.n	847c6 <_svfiprintf_r+0x7d0>
   846f2:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   846f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
   846f8:	e88c 0600 	stmia.w	ip, {r9, sl}
   846fc:	4453      	add	r3, sl
   846fe:	9311      	str	r3, [sp, #68]	; 0x44
   84700:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84702:	3301      	adds	r3, #1
   84704:	2b07      	cmp	r3, #7
   84706:	9310      	str	r3, [sp, #64]	; 0x40
   84708:	dc02      	bgt.n	84710 <_svfiprintf_r+0x71a>
   8470a:	f10c 0308 	add.w	r3, ip, #8
   8470e:	e007      	b.n	84720 <_svfiprintf_r+0x72a>
   84710:	4658      	mov	r0, fp
   84712:	4641      	mov	r1, r8
   84714:	aa0f      	add	r2, sp, #60	; 0x3c
   84716:	f7ff fbf5 	bl	83f04 <__ssprint_r>
   8471a:	2800      	cmp	r0, #0
   8471c:	d153      	bne.n	847c6 <_svfiprintf_r+0x7d0>
   8471e:	ab1c      	add	r3, sp, #112	; 0x70
   84720:	077a      	lsls	r2, r7, #29
   84722:	d40a      	bmi.n	8473a <_svfiprintf_r+0x744>
   84724:	9d05      	ldr	r5, [sp, #20]
   84726:	9804      	ldr	r0, [sp, #16]
   84728:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8472a:	4284      	cmp	r4, r0
   8472c:	bfac      	ite	ge
   8472e:	192d      	addge	r5, r5, r4
   84730:	182d      	addlt	r5, r5, r0
   84732:	9505      	str	r5, [sp, #20]
   84734:	2b00      	cmp	r3, #0
   84736:	d035      	beq.n	847a4 <_svfiprintf_r+0x7ae>
   84738:	e02e      	b.n	84798 <_svfiprintf_r+0x7a2>
   8473a:	9904      	ldr	r1, [sp, #16]
   8473c:	1b0d      	subs	r5, r1, r4
   8473e:	2d00      	cmp	r5, #0
   84740:	ddf0      	ble.n	84724 <_svfiprintf_r+0x72e>
   84742:	4a1b      	ldr	r2, [pc, #108]	; (847b0 <_svfiprintf_r+0x7ba>)
   84744:	2d10      	cmp	r5, #16
   84746:	601a      	str	r2, [r3, #0]
   84748:	dd15      	ble.n	84776 <_svfiprintf_r+0x780>
   8474a:	2210      	movs	r2, #16
   8474c:	605a      	str	r2, [r3, #4]
   8474e:	9a11      	ldr	r2, [sp, #68]	; 0x44
   84750:	3210      	adds	r2, #16
   84752:	9211      	str	r2, [sp, #68]	; 0x44
   84754:	9a10      	ldr	r2, [sp, #64]	; 0x40
   84756:	3201      	adds	r2, #1
   84758:	2a07      	cmp	r2, #7
   8475a:	9210      	str	r2, [sp, #64]	; 0x40
   8475c:	dc01      	bgt.n	84762 <_svfiprintf_r+0x76c>
   8475e:	3308      	adds	r3, #8
   84760:	e007      	b.n	84772 <_svfiprintf_r+0x77c>
   84762:	4658      	mov	r0, fp
   84764:	4641      	mov	r1, r8
   84766:	aa0f      	add	r2, sp, #60	; 0x3c
   84768:	f7ff fbcc 	bl	83f04 <__ssprint_r>
   8476c:	2800      	cmp	r0, #0
   8476e:	d12a      	bne.n	847c6 <_svfiprintf_r+0x7d0>
   84770:	ab1c      	add	r3, sp, #112	; 0x70
   84772:	3d10      	subs	r5, #16
   84774:	e7e5      	b.n	84742 <_svfiprintf_r+0x74c>
   84776:	605d      	str	r5, [r3, #4]
   84778:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8477a:	441d      	add	r5, r3
   8477c:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8477e:	9511      	str	r5, [sp, #68]	; 0x44
   84780:	3301      	adds	r3, #1
   84782:	2b07      	cmp	r3, #7
   84784:	9310      	str	r3, [sp, #64]	; 0x40
   84786:	ddcd      	ble.n	84724 <_svfiprintf_r+0x72e>
   84788:	4658      	mov	r0, fp
   8478a:	4641      	mov	r1, r8
   8478c:	aa0f      	add	r2, sp, #60	; 0x3c
   8478e:	f7ff fbb9 	bl	83f04 <__ssprint_r>
   84792:	2800      	cmp	r0, #0
   84794:	d0c6      	beq.n	84724 <_svfiprintf_r+0x72e>
   84796:	e016      	b.n	847c6 <_svfiprintf_r+0x7d0>
   84798:	4658      	mov	r0, fp
   8479a:	4641      	mov	r1, r8
   8479c:	aa0f      	add	r2, sp, #60	; 0x3c
   8479e:	f7ff fbb1 	bl	83f04 <__ssprint_r>
   847a2:	b980      	cbnz	r0, 847c6 <_svfiprintf_r+0x7d0>
   847a4:	2300      	movs	r3, #0
   847a6:	9310      	str	r3, [sp, #64]	; 0x40
   847a8:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   847ac:	e449      	b.n	84042 <_svfiprintf_r+0x4c>
   847ae:	bf00      	nop
   847b0:	00085948 	.word	0x00085948
   847b4:	00085958 	.word	0x00085958
   847b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
   847ba:	b123      	cbz	r3, 847c6 <_svfiprintf_r+0x7d0>
   847bc:	4658      	mov	r0, fp
   847be:	4641      	mov	r1, r8
   847c0:	aa0f      	add	r2, sp, #60	; 0x3c
   847c2:	f7ff fb9f 	bl	83f04 <__ssprint_r>
   847c6:	f8b8 300c 	ldrh.w	r3, [r8, #12]
   847ca:	9805      	ldr	r0, [sp, #20]
   847cc:	f013 0f40 	tst.w	r3, #64	; 0x40
   847d0:	bf18      	it	ne
   847d2:	f04f 30ff 	movne.w	r0, #4294967295
   847d6:	b02d      	add	sp, #180	; 0xb4
   847d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000847dc <__register_exitproc>:
   847dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   847e0:	4698      	mov	r8, r3
   847e2:	4b22      	ldr	r3, [pc, #136]	; (8486c <__register_exitproc+0x90>)
   847e4:	4606      	mov	r6, r0
   847e6:	681c      	ldr	r4, [r3, #0]
   847e8:	460f      	mov	r7, r1
   847ea:	f8d4 0148 	ldr.w	r0, [r4, #328]	; 0x148
   847ee:	4691      	mov	r9, r2
   847f0:	b918      	cbnz	r0, 847fa <__register_exitproc+0x1e>
   847f2:	f504 70a6 	add.w	r0, r4, #332	; 0x14c
   847f6:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
   847fa:	6843      	ldr	r3, [r0, #4]
   847fc:	2b1f      	cmp	r3, #31
   847fe:	dd16      	ble.n	8482e <__register_exitproc+0x52>
   84800:	4b1b      	ldr	r3, [pc, #108]	; (84870 <__register_exitproc+0x94>)
   84802:	b91b      	cbnz	r3, 8480c <__register_exitproc+0x30>
   84804:	f04f 30ff 	mov.w	r0, #4294967295
   84808:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8480c:	f44f 70c8 	mov.w	r0, #400	; 0x190
   84810:	f3af 8000 	nop.w
   84814:	2800      	cmp	r0, #0
   84816:	d0f5      	beq.n	84804 <__register_exitproc+0x28>
   84818:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   8481c:	2500      	movs	r5, #0
   8481e:	6045      	str	r5, [r0, #4]
   84820:	6001      	str	r1, [r0, #0]
   84822:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
   84826:	f8c0 5188 	str.w	r5, [r0, #392]	; 0x188
   8482a:	f8c0 518c 	str.w	r5, [r0, #396]	; 0x18c
   8482e:	6844      	ldr	r4, [r0, #4]
   84830:	b1a6      	cbz	r6, 8485c <__register_exitproc+0x80>
   84832:	2201      	movs	r2, #1
   84834:	40a2      	lsls	r2, r4
   84836:	eb00 0584 	add.w	r5, r0, r4, lsl #2
   8483a:	f8c5 9088 	str.w	r9, [r5, #136]	; 0x88
   8483e:	f8d0 1188 	ldr.w	r1, [r0, #392]	; 0x188
   84842:	2e02      	cmp	r6, #2
   84844:	ea41 0102 	orr.w	r1, r1, r2
   84848:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
   8484c:	f8c5 8108 	str.w	r8, [r5, #264]	; 0x108
   84850:	d104      	bne.n	8485c <__register_exitproc+0x80>
   84852:	f8d0 318c 	ldr.w	r3, [r0, #396]	; 0x18c
   84856:	431a      	orrs	r2, r3
   84858:	f8c0 218c 	str.w	r2, [r0, #396]	; 0x18c
   8485c:	1c63      	adds	r3, r4, #1
   8485e:	3402      	adds	r4, #2
   84860:	6043      	str	r3, [r0, #4]
   84862:	f840 7024 	str.w	r7, [r0, r4, lsl #2]
   84866:	2000      	movs	r0, #0
   84868:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8486c:	000857b0 	.word	0x000857b0
   84870:	00000000 	.word	0x00000000

00084874 <_calloc_r>:
   84874:	b510      	push	{r4, lr}
   84876:	4351      	muls	r1, r2
   84878:	f7fe fb38 	bl	82eec <_malloc_r>
   8487c:	4604      	mov	r4, r0
   8487e:	b320      	cbz	r0, 848ca <_calloc_r+0x56>
   84880:	f850 2c04 	ldr.w	r2, [r0, #-4]
   84884:	f022 0203 	bic.w	r2, r2, #3
   84888:	3a04      	subs	r2, #4
   8488a:	2a24      	cmp	r2, #36	; 0x24
   8488c:	d81a      	bhi.n	848c4 <_calloc_r+0x50>
   8488e:	2a13      	cmp	r2, #19
   84890:	d912      	bls.n	848b8 <_calloc_r+0x44>
   84892:	2100      	movs	r1, #0
   84894:	2a1b      	cmp	r2, #27
   84896:	6001      	str	r1, [r0, #0]
   84898:	6041      	str	r1, [r0, #4]
   8489a:	d802      	bhi.n	848a2 <_calloc_r+0x2e>
   8489c:	f100 0308 	add.w	r3, r0, #8
   848a0:	e00b      	b.n	848ba <_calloc_r+0x46>
   848a2:	2a24      	cmp	r2, #36	; 0x24
   848a4:	6081      	str	r1, [r0, #8]
   848a6:	60c1      	str	r1, [r0, #12]
   848a8:	bf11      	iteee	ne
   848aa:	f100 0310 	addne.w	r3, r0, #16
   848ae:	6101      	streq	r1, [r0, #16]
   848b0:	f100 0318 	addeq.w	r3, r0, #24
   848b4:	6141      	streq	r1, [r0, #20]
   848b6:	e000      	b.n	848ba <_calloc_r+0x46>
   848b8:	4603      	mov	r3, r0
   848ba:	2200      	movs	r2, #0
   848bc:	601a      	str	r2, [r3, #0]
   848be:	605a      	str	r2, [r3, #4]
   848c0:	609a      	str	r2, [r3, #8]
   848c2:	e002      	b.n	848ca <_calloc_r+0x56>
   848c4:	2100      	movs	r1, #0
   848c6:	f7fc fb75 	bl	80fb4 <memset>
   848ca:	4620      	mov	r0, r4
   848cc:	bd10      	pop	{r4, pc}
	...

000848d0 <__aeabi_drsub>:
   848d0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   848d4:	e002      	b.n	848dc <__adddf3>
   848d6:	bf00      	nop

000848d8 <__aeabi_dsub>:
   848d8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000848dc <__adddf3>:
   848dc:	b530      	push	{r4, r5, lr}
   848de:	ea4f 0441 	mov.w	r4, r1, lsl #1
   848e2:	ea4f 0543 	mov.w	r5, r3, lsl #1
   848e6:	ea94 0f05 	teq	r4, r5
   848ea:	bf08      	it	eq
   848ec:	ea90 0f02 	teqeq	r0, r2
   848f0:	bf1f      	itttt	ne
   848f2:	ea54 0c00 	orrsne.w	ip, r4, r0
   848f6:	ea55 0c02 	orrsne.w	ip, r5, r2
   848fa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   848fe:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84902:	f000 80e2 	beq.w	84aca <__adddf3+0x1ee>
   84906:	ea4f 5454 	mov.w	r4, r4, lsr #21
   8490a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   8490e:	bfb8      	it	lt
   84910:	426d      	neglt	r5, r5
   84912:	dd0c      	ble.n	8492e <__adddf3+0x52>
   84914:	442c      	add	r4, r5
   84916:	ea80 0202 	eor.w	r2, r0, r2
   8491a:	ea81 0303 	eor.w	r3, r1, r3
   8491e:	ea82 0000 	eor.w	r0, r2, r0
   84922:	ea83 0101 	eor.w	r1, r3, r1
   84926:	ea80 0202 	eor.w	r2, r0, r2
   8492a:	ea81 0303 	eor.w	r3, r1, r3
   8492e:	2d36      	cmp	r5, #54	; 0x36
   84930:	bf88      	it	hi
   84932:	bd30      	pophi	{r4, r5, pc}
   84934:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   84938:	ea4f 3101 	mov.w	r1, r1, lsl #12
   8493c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   84940:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   84944:	d002      	beq.n	8494c <__adddf3+0x70>
   84946:	4240      	negs	r0, r0
   84948:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   8494c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   84950:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84954:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   84958:	d002      	beq.n	84960 <__adddf3+0x84>
   8495a:	4252      	negs	r2, r2
   8495c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   84960:	ea94 0f05 	teq	r4, r5
   84964:	f000 80a7 	beq.w	84ab6 <__adddf3+0x1da>
   84968:	f1a4 0401 	sub.w	r4, r4, #1
   8496c:	f1d5 0e20 	rsbs	lr, r5, #32
   84970:	db0d      	blt.n	8498e <__adddf3+0xb2>
   84972:	fa02 fc0e 	lsl.w	ip, r2, lr
   84976:	fa22 f205 	lsr.w	r2, r2, r5
   8497a:	1880      	adds	r0, r0, r2
   8497c:	f141 0100 	adc.w	r1, r1, #0
   84980:	fa03 f20e 	lsl.w	r2, r3, lr
   84984:	1880      	adds	r0, r0, r2
   84986:	fa43 f305 	asr.w	r3, r3, r5
   8498a:	4159      	adcs	r1, r3
   8498c:	e00e      	b.n	849ac <__adddf3+0xd0>
   8498e:	f1a5 0520 	sub.w	r5, r5, #32
   84992:	f10e 0e20 	add.w	lr, lr, #32
   84996:	2a01      	cmp	r2, #1
   84998:	fa03 fc0e 	lsl.w	ip, r3, lr
   8499c:	bf28      	it	cs
   8499e:	f04c 0c02 	orrcs.w	ip, ip, #2
   849a2:	fa43 f305 	asr.w	r3, r3, r5
   849a6:	18c0      	adds	r0, r0, r3
   849a8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   849ac:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   849b0:	d507      	bpl.n	849c2 <__adddf3+0xe6>
   849b2:	f04f 0e00 	mov.w	lr, #0
   849b6:	f1dc 0c00 	rsbs	ip, ip, #0
   849ba:	eb7e 0000 	sbcs.w	r0, lr, r0
   849be:	eb6e 0101 	sbc.w	r1, lr, r1
   849c2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   849c6:	d31b      	bcc.n	84a00 <__adddf3+0x124>
   849c8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   849cc:	d30c      	bcc.n	849e8 <__adddf3+0x10c>
   849ce:	0849      	lsrs	r1, r1, #1
   849d0:	ea5f 0030 	movs.w	r0, r0, rrx
   849d4:	ea4f 0c3c 	mov.w	ip, ip, rrx
   849d8:	f104 0401 	add.w	r4, r4, #1
   849dc:	ea4f 5244 	mov.w	r2, r4, lsl #21
   849e0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   849e4:	f080 809a 	bcs.w	84b1c <__adddf3+0x240>
   849e8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   849ec:	bf08      	it	eq
   849ee:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   849f2:	f150 0000 	adcs.w	r0, r0, #0
   849f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   849fa:	ea41 0105 	orr.w	r1, r1, r5
   849fe:	bd30      	pop	{r4, r5, pc}
   84a00:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   84a04:	4140      	adcs	r0, r0
   84a06:	eb41 0101 	adc.w	r1, r1, r1
   84a0a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84a0e:	f1a4 0401 	sub.w	r4, r4, #1
   84a12:	d1e9      	bne.n	849e8 <__adddf3+0x10c>
   84a14:	f091 0f00 	teq	r1, #0
   84a18:	bf04      	itt	eq
   84a1a:	4601      	moveq	r1, r0
   84a1c:	2000      	moveq	r0, #0
   84a1e:	fab1 f381 	clz	r3, r1
   84a22:	bf08      	it	eq
   84a24:	3320      	addeq	r3, #32
   84a26:	f1a3 030b 	sub.w	r3, r3, #11
   84a2a:	f1b3 0220 	subs.w	r2, r3, #32
   84a2e:	da0c      	bge.n	84a4a <__adddf3+0x16e>
   84a30:	320c      	adds	r2, #12
   84a32:	dd08      	ble.n	84a46 <__adddf3+0x16a>
   84a34:	f102 0c14 	add.w	ip, r2, #20
   84a38:	f1c2 020c 	rsb	r2, r2, #12
   84a3c:	fa01 f00c 	lsl.w	r0, r1, ip
   84a40:	fa21 f102 	lsr.w	r1, r1, r2
   84a44:	e00c      	b.n	84a60 <__adddf3+0x184>
   84a46:	f102 0214 	add.w	r2, r2, #20
   84a4a:	bfd8      	it	le
   84a4c:	f1c2 0c20 	rsble	ip, r2, #32
   84a50:	fa01 f102 	lsl.w	r1, r1, r2
   84a54:	fa20 fc0c 	lsr.w	ip, r0, ip
   84a58:	bfdc      	itt	le
   84a5a:	ea41 010c 	orrle.w	r1, r1, ip
   84a5e:	4090      	lslle	r0, r2
   84a60:	1ae4      	subs	r4, r4, r3
   84a62:	bfa2      	ittt	ge
   84a64:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   84a68:	4329      	orrge	r1, r5
   84a6a:	bd30      	popge	{r4, r5, pc}
   84a6c:	ea6f 0404 	mvn.w	r4, r4
   84a70:	3c1f      	subs	r4, #31
   84a72:	da1c      	bge.n	84aae <__adddf3+0x1d2>
   84a74:	340c      	adds	r4, #12
   84a76:	dc0e      	bgt.n	84a96 <__adddf3+0x1ba>
   84a78:	f104 0414 	add.w	r4, r4, #20
   84a7c:	f1c4 0220 	rsb	r2, r4, #32
   84a80:	fa20 f004 	lsr.w	r0, r0, r4
   84a84:	fa01 f302 	lsl.w	r3, r1, r2
   84a88:	ea40 0003 	orr.w	r0, r0, r3
   84a8c:	fa21 f304 	lsr.w	r3, r1, r4
   84a90:	ea45 0103 	orr.w	r1, r5, r3
   84a94:	bd30      	pop	{r4, r5, pc}
   84a96:	f1c4 040c 	rsb	r4, r4, #12
   84a9a:	f1c4 0220 	rsb	r2, r4, #32
   84a9e:	fa20 f002 	lsr.w	r0, r0, r2
   84aa2:	fa01 f304 	lsl.w	r3, r1, r4
   84aa6:	ea40 0003 	orr.w	r0, r0, r3
   84aaa:	4629      	mov	r1, r5
   84aac:	bd30      	pop	{r4, r5, pc}
   84aae:	fa21 f004 	lsr.w	r0, r1, r4
   84ab2:	4629      	mov	r1, r5
   84ab4:	bd30      	pop	{r4, r5, pc}
   84ab6:	f094 0f00 	teq	r4, #0
   84aba:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   84abe:	bf06      	itte	eq
   84ac0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   84ac4:	3401      	addeq	r4, #1
   84ac6:	3d01      	subne	r5, #1
   84ac8:	e74e      	b.n	84968 <__adddf3+0x8c>
   84aca:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84ace:	bf18      	it	ne
   84ad0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84ad4:	d029      	beq.n	84b2a <__adddf3+0x24e>
   84ad6:	ea94 0f05 	teq	r4, r5
   84ada:	bf08      	it	eq
   84adc:	ea90 0f02 	teqeq	r0, r2
   84ae0:	d005      	beq.n	84aee <__adddf3+0x212>
   84ae2:	ea54 0c00 	orrs.w	ip, r4, r0
   84ae6:	bf04      	itt	eq
   84ae8:	4619      	moveq	r1, r3
   84aea:	4610      	moveq	r0, r2
   84aec:	bd30      	pop	{r4, r5, pc}
   84aee:	ea91 0f03 	teq	r1, r3
   84af2:	bf1e      	ittt	ne
   84af4:	2100      	movne	r1, #0
   84af6:	2000      	movne	r0, #0
   84af8:	bd30      	popne	{r4, r5, pc}
   84afa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   84afe:	d105      	bne.n	84b0c <__adddf3+0x230>
   84b00:	0040      	lsls	r0, r0, #1
   84b02:	4149      	adcs	r1, r1
   84b04:	bf28      	it	cs
   84b06:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   84b0a:	bd30      	pop	{r4, r5, pc}
   84b0c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   84b10:	bf3c      	itt	cc
   84b12:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   84b16:	bd30      	popcc	{r4, r5, pc}
   84b18:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84b1c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   84b20:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   84b24:	f04f 0000 	mov.w	r0, #0
   84b28:	bd30      	pop	{r4, r5, pc}
   84b2a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84b2e:	bf1a      	itte	ne
   84b30:	4619      	movne	r1, r3
   84b32:	4610      	movne	r0, r2
   84b34:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   84b38:	bf1c      	itt	ne
   84b3a:	460b      	movne	r3, r1
   84b3c:	4602      	movne	r2, r0
   84b3e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   84b42:	bf06      	itte	eq
   84b44:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   84b48:	ea91 0f03 	teqeq	r1, r3
   84b4c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   84b50:	bd30      	pop	{r4, r5, pc}
   84b52:	bf00      	nop

00084b54 <__aeabi_ui2d>:
   84b54:	f090 0f00 	teq	r0, #0
   84b58:	bf04      	itt	eq
   84b5a:	2100      	moveq	r1, #0
   84b5c:	4770      	bxeq	lr
   84b5e:	b530      	push	{r4, r5, lr}
   84b60:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84b64:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84b68:	f04f 0500 	mov.w	r5, #0
   84b6c:	f04f 0100 	mov.w	r1, #0
   84b70:	e750      	b.n	84a14 <__adddf3+0x138>
   84b72:	bf00      	nop

00084b74 <__aeabi_i2d>:
   84b74:	f090 0f00 	teq	r0, #0
   84b78:	bf04      	itt	eq
   84b7a:	2100      	moveq	r1, #0
   84b7c:	4770      	bxeq	lr
   84b7e:	b530      	push	{r4, r5, lr}
   84b80:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84b84:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84b88:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   84b8c:	bf48      	it	mi
   84b8e:	4240      	negmi	r0, r0
   84b90:	f04f 0100 	mov.w	r1, #0
   84b94:	e73e      	b.n	84a14 <__adddf3+0x138>
   84b96:	bf00      	nop

00084b98 <__aeabi_f2d>:
   84b98:	0042      	lsls	r2, r0, #1
   84b9a:	ea4f 01e2 	mov.w	r1, r2, asr #3
   84b9e:	ea4f 0131 	mov.w	r1, r1, rrx
   84ba2:	ea4f 7002 	mov.w	r0, r2, lsl #28
   84ba6:	bf1f      	itttt	ne
   84ba8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   84bac:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84bb0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   84bb4:	4770      	bxne	lr
   84bb6:	f092 0f00 	teq	r2, #0
   84bba:	bf14      	ite	ne
   84bbc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84bc0:	4770      	bxeq	lr
   84bc2:	b530      	push	{r4, r5, lr}
   84bc4:	f44f 7460 	mov.w	r4, #896	; 0x380
   84bc8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84bcc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84bd0:	e720      	b.n	84a14 <__adddf3+0x138>
   84bd2:	bf00      	nop

00084bd4 <__aeabi_ul2d>:
   84bd4:	ea50 0201 	orrs.w	r2, r0, r1
   84bd8:	bf08      	it	eq
   84bda:	4770      	bxeq	lr
   84bdc:	b530      	push	{r4, r5, lr}
   84bde:	f04f 0500 	mov.w	r5, #0
   84be2:	e00a      	b.n	84bfa <__aeabi_l2d+0x16>

00084be4 <__aeabi_l2d>:
   84be4:	ea50 0201 	orrs.w	r2, r0, r1
   84be8:	bf08      	it	eq
   84bea:	4770      	bxeq	lr
   84bec:	b530      	push	{r4, r5, lr}
   84bee:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   84bf2:	d502      	bpl.n	84bfa <__aeabi_l2d+0x16>
   84bf4:	4240      	negs	r0, r0
   84bf6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84bfa:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84bfe:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84c02:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   84c06:	f43f aedc 	beq.w	849c2 <__adddf3+0xe6>
   84c0a:	f04f 0203 	mov.w	r2, #3
   84c0e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84c12:	bf18      	it	ne
   84c14:	3203      	addne	r2, #3
   84c16:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84c1a:	bf18      	it	ne
   84c1c:	3203      	addne	r2, #3
   84c1e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   84c22:	f1c2 0320 	rsb	r3, r2, #32
   84c26:	fa00 fc03 	lsl.w	ip, r0, r3
   84c2a:	fa20 f002 	lsr.w	r0, r0, r2
   84c2e:	fa01 fe03 	lsl.w	lr, r1, r3
   84c32:	ea40 000e 	orr.w	r0, r0, lr
   84c36:	fa21 f102 	lsr.w	r1, r1, r2
   84c3a:	4414      	add	r4, r2
   84c3c:	e6c1      	b.n	849c2 <__adddf3+0xe6>
   84c3e:	bf00      	nop

00084c40 <__aeabi_dmul>:
   84c40:	b570      	push	{r4, r5, r6, lr}
   84c42:	f04f 0cff 	mov.w	ip, #255	; 0xff
   84c46:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   84c4a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   84c4e:	bf1d      	ittte	ne
   84c50:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   84c54:	ea94 0f0c 	teqne	r4, ip
   84c58:	ea95 0f0c 	teqne	r5, ip
   84c5c:	f000 f8de 	bleq	84e1c <__aeabi_dmul+0x1dc>
   84c60:	442c      	add	r4, r5
   84c62:	ea81 0603 	eor.w	r6, r1, r3
   84c66:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   84c6a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   84c6e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   84c72:	bf18      	it	ne
   84c74:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   84c78:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84c7c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   84c80:	d038      	beq.n	84cf4 <__aeabi_dmul+0xb4>
   84c82:	fba0 ce02 	umull	ip, lr, r0, r2
   84c86:	f04f 0500 	mov.w	r5, #0
   84c8a:	fbe1 e502 	umlal	lr, r5, r1, r2
   84c8e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   84c92:	fbe0 e503 	umlal	lr, r5, r0, r3
   84c96:	f04f 0600 	mov.w	r6, #0
   84c9a:	fbe1 5603 	umlal	r5, r6, r1, r3
   84c9e:	f09c 0f00 	teq	ip, #0
   84ca2:	bf18      	it	ne
   84ca4:	f04e 0e01 	orrne.w	lr, lr, #1
   84ca8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   84cac:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   84cb0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   84cb4:	d204      	bcs.n	84cc0 <__aeabi_dmul+0x80>
   84cb6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   84cba:	416d      	adcs	r5, r5
   84cbc:	eb46 0606 	adc.w	r6, r6, r6
   84cc0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   84cc4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   84cc8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   84ccc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   84cd0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   84cd4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   84cd8:	bf88      	it	hi
   84cda:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   84cde:	d81e      	bhi.n	84d1e <__aeabi_dmul+0xde>
   84ce0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   84ce4:	bf08      	it	eq
   84ce6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   84cea:	f150 0000 	adcs.w	r0, r0, #0
   84cee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84cf2:	bd70      	pop	{r4, r5, r6, pc}
   84cf4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   84cf8:	ea46 0101 	orr.w	r1, r6, r1
   84cfc:	ea40 0002 	orr.w	r0, r0, r2
   84d00:	ea81 0103 	eor.w	r1, r1, r3
   84d04:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   84d08:	bfc2      	ittt	gt
   84d0a:	ebd4 050c 	rsbsgt	r5, r4, ip
   84d0e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   84d12:	bd70      	popgt	{r4, r5, r6, pc}
   84d14:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84d18:	f04f 0e00 	mov.w	lr, #0
   84d1c:	3c01      	subs	r4, #1
   84d1e:	f300 80ab 	bgt.w	84e78 <__aeabi_dmul+0x238>
   84d22:	f114 0f36 	cmn.w	r4, #54	; 0x36
   84d26:	bfde      	ittt	le
   84d28:	2000      	movle	r0, #0
   84d2a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   84d2e:	bd70      	pople	{r4, r5, r6, pc}
   84d30:	f1c4 0400 	rsb	r4, r4, #0
   84d34:	3c20      	subs	r4, #32
   84d36:	da35      	bge.n	84da4 <__aeabi_dmul+0x164>
   84d38:	340c      	adds	r4, #12
   84d3a:	dc1b      	bgt.n	84d74 <__aeabi_dmul+0x134>
   84d3c:	f104 0414 	add.w	r4, r4, #20
   84d40:	f1c4 0520 	rsb	r5, r4, #32
   84d44:	fa00 f305 	lsl.w	r3, r0, r5
   84d48:	fa20 f004 	lsr.w	r0, r0, r4
   84d4c:	fa01 f205 	lsl.w	r2, r1, r5
   84d50:	ea40 0002 	orr.w	r0, r0, r2
   84d54:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   84d58:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84d5c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   84d60:	fa21 f604 	lsr.w	r6, r1, r4
   84d64:	eb42 0106 	adc.w	r1, r2, r6
   84d68:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   84d6c:	bf08      	it	eq
   84d6e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   84d72:	bd70      	pop	{r4, r5, r6, pc}
   84d74:	f1c4 040c 	rsb	r4, r4, #12
   84d78:	f1c4 0520 	rsb	r5, r4, #32
   84d7c:	fa00 f304 	lsl.w	r3, r0, r4
   84d80:	fa20 f005 	lsr.w	r0, r0, r5
   84d84:	fa01 f204 	lsl.w	r2, r1, r4
   84d88:	ea40 0002 	orr.w	r0, r0, r2
   84d8c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84d90:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   84d94:	f141 0100 	adc.w	r1, r1, #0
   84d98:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   84d9c:	bf08      	it	eq
   84d9e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   84da2:	bd70      	pop	{r4, r5, r6, pc}
   84da4:	f1c4 0520 	rsb	r5, r4, #32
   84da8:	fa00 f205 	lsl.w	r2, r0, r5
   84dac:	ea4e 0e02 	orr.w	lr, lr, r2
   84db0:	fa20 f304 	lsr.w	r3, r0, r4
   84db4:	fa01 f205 	lsl.w	r2, r1, r5
   84db8:	ea43 0302 	orr.w	r3, r3, r2
   84dbc:	fa21 f004 	lsr.w	r0, r1, r4
   84dc0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84dc4:	fa21 f204 	lsr.w	r2, r1, r4
   84dc8:	ea20 0002 	bic.w	r0, r0, r2
   84dcc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   84dd0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   84dd4:	bf08      	it	eq
   84dd6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   84dda:	bd70      	pop	{r4, r5, r6, pc}
   84ddc:	f094 0f00 	teq	r4, #0
   84de0:	d10f      	bne.n	84e02 <__aeabi_dmul+0x1c2>
   84de2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   84de6:	0040      	lsls	r0, r0, #1
   84de8:	eb41 0101 	adc.w	r1, r1, r1
   84dec:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84df0:	bf08      	it	eq
   84df2:	3c01      	subeq	r4, #1
   84df4:	d0f7      	beq.n	84de6 <__aeabi_dmul+0x1a6>
   84df6:	ea41 0106 	orr.w	r1, r1, r6
   84dfa:	f095 0f00 	teq	r5, #0
   84dfe:	bf18      	it	ne
   84e00:	4770      	bxne	lr
   84e02:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   84e06:	0052      	lsls	r2, r2, #1
   84e08:	eb43 0303 	adc.w	r3, r3, r3
   84e0c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   84e10:	bf08      	it	eq
   84e12:	3d01      	subeq	r5, #1
   84e14:	d0f7      	beq.n	84e06 <__aeabi_dmul+0x1c6>
   84e16:	ea43 0306 	orr.w	r3, r3, r6
   84e1a:	4770      	bx	lr
   84e1c:	ea94 0f0c 	teq	r4, ip
   84e20:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   84e24:	bf18      	it	ne
   84e26:	ea95 0f0c 	teqne	r5, ip
   84e2a:	d00c      	beq.n	84e46 <__aeabi_dmul+0x206>
   84e2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   84e30:	bf18      	it	ne
   84e32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   84e36:	d1d1      	bne.n	84ddc <__aeabi_dmul+0x19c>
   84e38:	ea81 0103 	eor.w	r1, r1, r3
   84e3c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84e40:	f04f 0000 	mov.w	r0, #0
   84e44:	bd70      	pop	{r4, r5, r6, pc}
   84e46:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   84e4a:	bf06      	itte	eq
   84e4c:	4610      	moveq	r0, r2
   84e4e:	4619      	moveq	r1, r3
   84e50:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   84e54:	d019      	beq.n	84e8a <__aeabi_dmul+0x24a>
   84e56:	ea94 0f0c 	teq	r4, ip
   84e5a:	d102      	bne.n	84e62 <__aeabi_dmul+0x222>
   84e5c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   84e60:	d113      	bne.n	84e8a <__aeabi_dmul+0x24a>
   84e62:	ea95 0f0c 	teq	r5, ip
   84e66:	d105      	bne.n	84e74 <__aeabi_dmul+0x234>
   84e68:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   84e6c:	bf1c      	itt	ne
   84e6e:	4610      	movne	r0, r2
   84e70:	4619      	movne	r1, r3
   84e72:	d10a      	bne.n	84e8a <__aeabi_dmul+0x24a>
   84e74:	ea81 0103 	eor.w	r1, r1, r3
   84e78:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84e7c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   84e80:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   84e84:	f04f 0000 	mov.w	r0, #0
   84e88:	bd70      	pop	{r4, r5, r6, pc}
   84e8a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   84e8e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   84e92:	bd70      	pop	{r4, r5, r6, pc}

00084e94 <__aeabi_ddiv>:
   84e94:	b570      	push	{r4, r5, r6, lr}
   84e96:	f04f 0cff 	mov.w	ip, #255	; 0xff
   84e9a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   84e9e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   84ea2:	bf1d      	ittte	ne
   84ea4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   84ea8:	ea94 0f0c 	teqne	r4, ip
   84eac:	ea95 0f0c 	teqne	r5, ip
   84eb0:	f000 f8a7 	bleq	85002 <__aeabi_ddiv+0x16e>
   84eb4:	eba4 0405 	sub.w	r4, r4, r5
   84eb8:	ea81 0e03 	eor.w	lr, r1, r3
   84ebc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   84ec0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   84ec4:	f000 8088 	beq.w	84fd8 <__aeabi_ddiv+0x144>
   84ec8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84ecc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   84ed0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   84ed4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   84ed8:	ea4f 2202 	mov.w	r2, r2, lsl #8
   84edc:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   84ee0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   84ee4:	ea4f 2600 	mov.w	r6, r0, lsl #8
   84ee8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   84eec:	429d      	cmp	r5, r3
   84eee:	bf08      	it	eq
   84ef0:	4296      	cmpeq	r6, r2
   84ef2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   84ef6:	f504 7440 	add.w	r4, r4, #768	; 0x300
   84efa:	d202      	bcs.n	84f02 <__aeabi_ddiv+0x6e>
   84efc:	085b      	lsrs	r3, r3, #1
   84efe:	ea4f 0232 	mov.w	r2, r2, rrx
   84f02:	1ab6      	subs	r6, r6, r2
   84f04:	eb65 0503 	sbc.w	r5, r5, r3
   84f08:	085b      	lsrs	r3, r3, #1
   84f0a:	ea4f 0232 	mov.w	r2, r2, rrx
   84f0e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   84f12:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   84f16:	ebb6 0e02 	subs.w	lr, r6, r2
   84f1a:	eb75 0e03 	sbcs.w	lr, r5, r3
   84f1e:	bf22      	ittt	cs
   84f20:	1ab6      	subcs	r6, r6, r2
   84f22:	4675      	movcs	r5, lr
   84f24:	ea40 000c 	orrcs.w	r0, r0, ip
   84f28:	085b      	lsrs	r3, r3, #1
   84f2a:	ea4f 0232 	mov.w	r2, r2, rrx
   84f2e:	ebb6 0e02 	subs.w	lr, r6, r2
   84f32:	eb75 0e03 	sbcs.w	lr, r5, r3
   84f36:	bf22      	ittt	cs
   84f38:	1ab6      	subcs	r6, r6, r2
   84f3a:	4675      	movcs	r5, lr
   84f3c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   84f40:	085b      	lsrs	r3, r3, #1
   84f42:	ea4f 0232 	mov.w	r2, r2, rrx
   84f46:	ebb6 0e02 	subs.w	lr, r6, r2
   84f4a:	eb75 0e03 	sbcs.w	lr, r5, r3
   84f4e:	bf22      	ittt	cs
   84f50:	1ab6      	subcs	r6, r6, r2
   84f52:	4675      	movcs	r5, lr
   84f54:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   84f58:	085b      	lsrs	r3, r3, #1
   84f5a:	ea4f 0232 	mov.w	r2, r2, rrx
   84f5e:	ebb6 0e02 	subs.w	lr, r6, r2
   84f62:	eb75 0e03 	sbcs.w	lr, r5, r3
   84f66:	bf22      	ittt	cs
   84f68:	1ab6      	subcs	r6, r6, r2
   84f6a:	4675      	movcs	r5, lr
   84f6c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   84f70:	ea55 0e06 	orrs.w	lr, r5, r6
   84f74:	d018      	beq.n	84fa8 <__aeabi_ddiv+0x114>
   84f76:	ea4f 1505 	mov.w	r5, r5, lsl #4
   84f7a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   84f7e:	ea4f 1606 	mov.w	r6, r6, lsl #4
   84f82:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   84f86:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   84f8a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   84f8e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   84f92:	d1c0      	bne.n	84f16 <__aeabi_ddiv+0x82>
   84f94:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84f98:	d10b      	bne.n	84fb2 <__aeabi_ddiv+0x11e>
   84f9a:	ea41 0100 	orr.w	r1, r1, r0
   84f9e:	f04f 0000 	mov.w	r0, #0
   84fa2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   84fa6:	e7b6      	b.n	84f16 <__aeabi_ddiv+0x82>
   84fa8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84fac:	bf04      	itt	eq
   84fae:	4301      	orreq	r1, r0
   84fb0:	2000      	moveq	r0, #0
   84fb2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   84fb6:	bf88      	it	hi
   84fb8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   84fbc:	f63f aeaf 	bhi.w	84d1e <__aeabi_dmul+0xde>
   84fc0:	ebb5 0c03 	subs.w	ip, r5, r3
   84fc4:	bf04      	itt	eq
   84fc6:	ebb6 0c02 	subseq.w	ip, r6, r2
   84fca:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   84fce:	f150 0000 	adcs.w	r0, r0, #0
   84fd2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84fd6:	bd70      	pop	{r4, r5, r6, pc}
   84fd8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   84fdc:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   84fe0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   84fe4:	bfc2      	ittt	gt
   84fe6:	ebd4 050c 	rsbsgt	r5, r4, ip
   84fea:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   84fee:	bd70      	popgt	{r4, r5, r6, pc}
   84ff0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84ff4:	f04f 0e00 	mov.w	lr, #0
   84ff8:	3c01      	subs	r4, #1
   84ffa:	e690      	b.n	84d1e <__aeabi_dmul+0xde>
   84ffc:	ea45 0e06 	orr.w	lr, r5, r6
   85000:	e68d      	b.n	84d1e <__aeabi_dmul+0xde>
   85002:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   85006:	ea94 0f0c 	teq	r4, ip
   8500a:	bf08      	it	eq
   8500c:	ea95 0f0c 	teqeq	r5, ip
   85010:	f43f af3b 	beq.w	84e8a <__aeabi_dmul+0x24a>
   85014:	ea94 0f0c 	teq	r4, ip
   85018:	d10a      	bne.n	85030 <__aeabi_ddiv+0x19c>
   8501a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8501e:	f47f af34 	bne.w	84e8a <__aeabi_dmul+0x24a>
   85022:	ea95 0f0c 	teq	r5, ip
   85026:	f47f af25 	bne.w	84e74 <__aeabi_dmul+0x234>
   8502a:	4610      	mov	r0, r2
   8502c:	4619      	mov	r1, r3
   8502e:	e72c      	b.n	84e8a <__aeabi_dmul+0x24a>
   85030:	ea95 0f0c 	teq	r5, ip
   85034:	d106      	bne.n	85044 <__aeabi_ddiv+0x1b0>
   85036:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   8503a:	f43f aefd 	beq.w	84e38 <__aeabi_dmul+0x1f8>
   8503e:	4610      	mov	r0, r2
   85040:	4619      	mov	r1, r3
   85042:	e722      	b.n	84e8a <__aeabi_dmul+0x24a>
   85044:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85048:	bf18      	it	ne
   8504a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8504e:	f47f aec5 	bne.w	84ddc <__aeabi_dmul+0x19c>
   85052:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   85056:	f47f af0d 	bne.w	84e74 <__aeabi_dmul+0x234>
   8505a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   8505e:	f47f aeeb 	bne.w	84e38 <__aeabi_dmul+0x1f8>
   85062:	e712      	b.n	84e8a <__aeabi_dmul+0x24a>

00085064 <__gedf2>:
   85064:	f04f 3cff 	mov.w	ip, #4294967295
   85068:	e006      	b.n	85078 <__cmpdf2+0x4>
   8506a:	bf00      	nop

0008506c <__ledf2>:
   8506c:	f04f 0c01 	mov.w	ip, #1
   85070:	e002      	b.n	85078 <__cmpdf2+0x4>
   85072:	bf00      	nop

00085074 <__cmpdf2>:
   85074:	f04f 0c01 	mov.w	ip, #1
   85078:	f84d cd04 	str.w	ip, [sp, #-4]!
   8507c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85080:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85084:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85088:	bf18      	it	ne
   8508a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   8508e:	d01b      	beq.n	850c8 <__cmpdf2+0x54>
   85090:	b001      	add	sp, #4
   85092:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   85096:	bf0c      	ite	eq
   85098:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   8509c:	ea91 0f03 	teqne	r1, r3
   850a0:	bf02      	ittt	eq
   850a2:	ea90 0f02 	teqeq	r0, r2
   850a6:	2000      	moveq	r0, #0
   850a8:	4770      	bxeq	lr
   850aa:	f110 0f00 	cmn.w	r0, #0
   850ae:	ea91 0f03 	teq	r1, r3
   850b2:	bf58      	it	pl
   850b4:	4299      	cmppl	r1, r3
   850b6:	bf08      	it	eq
   850b8:	4290      	cmpeq	r0, r2
   850ba:	bf2c      	ite	cs
   850bc:	17d8      	asrcs	r0, r3, #31
   850be:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   850c2:	f040 0001 	orr.w	r0, r0, #1
   850c6:	4770      	bx	lr
   850c8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   850cc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   850d0:	d102      	bne.n	850d8 <__cmpdf2+0x64>
   850d2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   850d6:	d107      	bne.n	850e8 <__cmpdf2+0x74>
   850d8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   850dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   850e0:	d1d6      	bne.n	85090 <__cmpdf2+0x1c>
   850e2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   850e6:	d0d3      	beq.n	85090 <__cmpdf2+0x1c>
   850e8:	f85d 0b04 	ldr.w	r0, [sp], #4
   850ec:	4770      	bx	lr
   850ee:	bf00      	nop

000850f0 <__aeabi_cdrcmple>:
   850f0:	4684      	mov	ip, r0
   850f2:	4610      	mov	r0, r2
   850f4:	4662      	mov	r2, ip
   850f6:	468c      	mov	ip, r1
   850f8:	4619      	mov	r1, r3
   850fa:	4663      	mov	r3, ip
   850fc:	e000      	b.n	85100 <__aeabi_cdcmpeq>
   850fe:	bf00      	nop

00085100 <__aeabi_cdcmpeq>:
   85100:	b501      	push	{r0, lr}
   85102:	f7ff ffb7 	bl	85074 <__cmpdf2>
   85106:	2800      	cmp	r0, #0
   85108:	bf48      	it	mi
   8510a:	f110 0f00 	cmnmi.w	r0, #0
   8510e:	bd01      	pop	{r0, pc}

00085110 <__aeabi_dcmpeq>:
   85110:	f84d ed08 	str.w	lr, [sp, #-8]!
   85114:	f7ff fff4 	bl	85100 <__aeabi_cdcmpeq>
   85118:	bf0c      	ite	eq
   8511a:	2001      	moveq	r0, #1
   8511c:	2000      	movne	r0, #0
   8511e:	f85d fb08 	ldr.w	pc, [sp], #8
   85122:	bf00      	nop

00085124 <__aeabi_dcmplt>:
   85124:	f84d ed08 	str.w	lr, [sp, #-8]!
   85128:	f7ff ffea 	bl	85100 <__aeabi_cdcmpeq>
   8512c:	bf34      	ite	cc
   8512e:	2001      	movcc	r0, #1
   85130:	2000      	movcs	r0, #0
   85132:	f85d fb08 	ldr.w	pc, [sp], #8
   85136:	bf00      	nop

00085138 <__aeabi_dcmple>:
   85138:	f84d ed08 	str.w	lr, [sp, #-8]!
   8513c:	f7ff ffe0 	bl	85100 <__aeabi_cdcmpeq>
   85140:	bf94      	ite	ls
   85142:	2001      	movls	r0, #1
   85144:	2000      	movhi	r0, #0
   85146:	f85d fb08 	ldr.w	pc, [sp], #8
   8514a:	bf00      	nop

0008514c <__aeabi_dcmpge>:
   8514c:	f84d ed08 	str.w	lr, [sp, #-8]!
   85150:	f7ff ffce 	bl	850f0 <__aeabi_cdrcmple>
   85154:	bf94      	ite	ls
   85156:	2001      	movls	r0, #1
   85158:	2000      	movhi	r0, #0
   8515a:	f85d fb08 	ldr.w	pc, [sp], #8
   8515e:	bf00      	nop

00085160 <__aeabi_dcmpgt>:
   85160:	f84d ed08 	str.w	lr, [sp, #-8]!
   85164:	f7ff ffc4 	bl	850f0 <__aeabi_cdrcmple>
   85168:	bf34      	ite	cc
   8516a:	2001      	movcc	r0, #1
   8516c:	2000      	movcs	r0, #0
   8516e:	f85d fb08 	ldr.w	pc, [sp], #8
   85172:	bf00      	nop

00085174 <__aeabi_d2iz>:
   85174:	ea4f 0241 	mov.w	r2, r1, lsl #1
   85178:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   8517c:	d215      	bcs.n	851aa <__aeabi_d2iz+0x36>
   8517e:	d511      	bpl.n	851a4 <__aeabi_d2iz+0x30>
   85180:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   85184:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   85188:	d912      	bls.n	851b0 <__aeabi_d2iz+0x3c>
   8518a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   8518e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   85192:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   85196:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   8519a:	fa23 f002 	lsr.w	r0, r3, r2
   8519e:	bf18      	it	ne
   851a0:	4240      	negne	r0, r0
   851a2:	4770      	bx	lr
   851a4:	f04f 0000 	mov.w	r0, #0
   851a8:	4770      	bx	lr
   851aa:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   851ae:	d105      	bne.n	851bc <__aeabi_d2iz+0x48>
   851b0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   851b4:	bf08      	it	eq
   851b6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   851ba:	4770      	bx	lr
   851bc:	f04f 0000 	mov.w	r0, #0
   851c0:	4770      	bx	lr
   851c2:	bf00      	nop

000851c4 <__aeabi_uldivmod>:
   851c4:	b94b      	cbnz	r3, 851da <__aeabi_uldivmod+0x16>
   851c6:	b942      	cbnz	r2, 851da <__aeabi_uldivmod+0x16>
   851c8:	2900      	cmp	r1, #0
   851ca:	bf08      	it	eq
   851cc:	2800      	cmpeq	r0, #0
   851ce:	d002      	beq.n	851d6 <__aeabi_uldivmod+0x12>
   851d0:	f04f 31ff 	mov.w	r1, #4294967295
   851d4:	4608      	mov	r0, r1
   851d6:	f000 b83b 	b.w	85250 <__aeabi_idiv0>
   851da:	b082      	sub	sp, #8
   851dc:	46ec      	mov	ip, sp
   851de:	e92d 5000 	stmdb	sp!, {ip, lr}
   851e2:	f000 f81d 	bl	85220 <__gnu_uldivmod_helper>
   851e6:	f8dd e004 	ldr.w	lr, [sp, #4]
   851ea:	b002      	add	sp, #8
   851ec:	bc0c      	pop	{r2, r3}
   851ee:	4770      	bx	lr

000851f0 <__gnu_ldivmod_helper>:
   851f0:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   851f4:	9e08      	ldr	r6, [sp, #32]
   851f6:	4614      	mov	r4, r2
   851f8:	461d      	mov	r5, r3
   851fa:	4680      	mov	r8, r0
   851fc:	4689      	mov	r9, r1
   851fe:	f000 f829 	bl	85254 <__divdi3>
   85202:	fb04 f301 	mul.w	r3, r4, r1
   85206:	fba4 ab00 	umull	sl, fp, r4, r0
   8520a:	fb00 3205 	mla	r2, r0, r5, r3
   8520e:	4493      	add	fp, r2
   85210:	ebb8 080a 	subs.w	r8, r8, sl
   85214:	eb69 090b 	sbc.w	r9, r9, fp
   85218:	e9c6 8900 	strd	r8, r9, [r6]
   8521c:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

00085220 <__gnu_uldivmod_helper>:
   85220:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   85224:	9e08      	ldr	r6, [sp, #32]
   85226:	4614      	mov	r4, r2
   85228:	461d      	mov	r5, r3
   8522a:	4680      	mov	r8, r0
   8522c:	4689      	mov	r9, r1
   8522e:	f000 f961 	bl	854f4 <__udivdi3>
   85232:	fb00 f505 	mul.w	r5, r0, r5
   85236:	fba0 ab04 	umull	sl, fp, r0, r4
   8523a:	fb04 5401 	mla	r4, r4, r1, r5
   8523e:	44a3      	add	fp, r4
   85240:	ebb8 080a 	subs.w	r8, r8, sl
   85244:	eb69 090b 	sbc.w	r9, r9, fp
   85248:	e9c6 8900 	strd	r8, r9, [r6]
   8524c:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

00085250 <__aeabi_idiv0>:
   85250:	4770      	bx	lr
   85252:	bf00      	nop

00085254 <__divdi3>:
   85254:	2900      	cmp	r1, #0
   85256:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8525a:	f2c0 80a1 	blt.w	853a0 <__divdi3+0x14c>
   8525e:	2400      	movs	r4, #0
   85260:	2b00      	cmp	r3, #0
   85262:	f2c0 8098 	blt.w	85396 <__divdi3+0x142>
   85266:	4615      	mov	r5, r2
   85268:	4606      	mov	r6, r0
   8526a:	460f      	mov	r7, r1
   8526c:	2b00      	cmp	r3, #0
   8526e:	d13f      	bne.n	852f0 <__divdi3+0x9c>
   85270:	428a      	cmp	r2, r1
   85272:	d958      	bls.n	85326 <__divdi3+0xd2>
   85274:	fab2 f382 	clz	r3, r2
   85278:	b14b      	cbz	r3, 8528e <__divdi3+0x3a>
   8527a:	f1c3 0220 	rsb	r2, r3, #32
   8527e:	fa01 f703 	lsl.w	r7, r1, r3
   85282:	fa20 f202 	lsr.w	r2, r0, r2
   85286:	409d      	lsls	r5, r3
   85288:	fa00 f603 	lsl.w	r6, r0, r3
   8528c:	4317      	orrs	r7, r2
   8528e:	0c29      	lsrs	r1, r5, #16
   85290:	fbb7 f2f1 	udiv	r2, r7, r1
   85294:	fb01 7712 	mls	r7, r1, r2, r7
   85298:	b2a8      	uxth	r0, r5
   8529a:	fb00 f302 	mul.w	r3, r0, r2
   8529e:	ea4f 4c16 	mov.w	ip, r6, lsr #16
   852a2:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
   852a6:	42bb      	cmp	r3, r7
   852a8:	d909      	bls.n	852be <__divdi3+0x6a>
   852aa:	197f      	adds	r7, r7, r5
   852ac:	f102 3cff 	add.w	ip, r2, #4294967295
   852b0:	f080 8105 	bcs.w	854be <__divdi3+0x26a>
   852b4:	42bb      	cmp	r3, r7
   852b6:	f240 8102 	bls.w	854be <__divdi3+0x26a>
   852ba:	3a02      	subs	r2, #2
   852bc:	442f      	add	r7, r5
   852be:	1aff      	subs	r7, r7, r3
   852c0:	fbb7 f3f1 	udiv	r3, r7, r1
   852c4:	fb01 7113 	mls	r1, r1, r3, r7
   852c8:	fb00 f003 	mul.w	r0, r0, r3
   852cc:	b2b6      	uxth	r6, r6
   852ce:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
   852d2:	4288      	cmp	r0, r1
   852d4:	d908      	bls.n	852e8 <__divdi3+0x94>
   852d6:	1949      	adds	r1, r1, r5
   852d8:	f103 37ff 	add.w	r7, r3, #4294967295
   852dc:	f080 80f1 	bcs.w	854c2 <__divdi3+0x26e>
   852e0:	4288      	cmp	r0, r1
   852e2:	f240 80ee 	bls.w	854c2 <__divdi3+0x26e>
   852e6:	3b02      	subs	r3, #2
   852e8:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   852ec:	2300      	movs	r3, #0
   852ee:	e003      	b.n	852f8 <__divdi3+0xa4>
   852f0:	428b      	cmp	r3, r1
   852f2:	d90a      	bls.n	8530a <__divdi3+0xb6>
   852f4:	2300      	movs	r3, #0
   852f6:	461a      	mov	r2, r3
   852f8:	4610      	mov	r0, r2
   852fa:	4619      	mov	r1, r3
   852fc:	b114      	cbz	r4, 85304 <__divdi3+0xb0>
   852fe:	4240      	negs	r0, r0
   85300:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   85304:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85308:	4770      	bx	lr
   8530a:	fab3 f883 	clz	r8, r3
   8530e:	f1b8 0f00 	cmp.w	r8, #0
   85312:	f040 8088 	bne.w	85426 <__divdi3+0x1d2>
   85316:	428b      	cmp	r3, r1
   85318:	d302      	bcc.n	85320 <__divdi3+0xcc>
   8531a:	4282      	cmp	r2, r0
   8531c:	f200 80e2 	bhi.w	854e4 <__divdi3+0x290>
   85320:	2300      	movs	r3, #0
   85322:	2201      	movs	r2, #1
   85324:	e7e8      	b.n	852f8 <__divdi3+0xa4>
   85326:	b912      	cbnz	r2, 8532e <__divdi3+0xda>
   85328:	2301      	movs	r3, #1
   8532a:	fbb3 f5f2 	udiv	r5, r3, r2
   8532e:	fab5 f285 	clz	r2, r5
   85332:	2a00      	cmp	r2, #0
   85334:	d13a      	bne.n	853ac <__divdi3+0x158>
   85336:	1b7f      	subs	r7, r7, r5
   85338:	0c28      	lsrs	r0, r5, #16
   8533a:	fa1f fc85 	uxth.w	ip, r5
   8533e:	2301      	movs	r3, #1
   85340:	fbb7 f1f0 	udiv	r1, r7, r0
   85344:	fb00 7711 	mls	r7, r0, r1, r7
   85348:	fb0c f201 	mul.w	r2, ip, r1
   8534c:	ea4f 4816 	mov.w	r8, r6, lsr #16
   85350:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   85354:	42ba      	cmp	r2, r7
   85356:	d907      	bls.n	85368 <__divdi3+0x114>
   85358:	197f      	adds	r7, r7, r5
   8535a:	f101 38ff 	add.w	r8, r1, #4294967295
   8535e:	d202      	bcs.n	85366 <__divdi3+0x112>
   85360:	42ba      	cmp	r2, r7
   85362:	f200 80c4 	bhi.w	854ee <__divdi3+0x29a>
   85366:	4641      	mov	r1, r8
   85368:	1abf      	subs	r7, r7, r2
   8536a:	fbb7 f2f0 	udiv	r2, r7, r0
   8536e:	fb00 7012 	mls	r0, r0, r2, r7
   85372:	fb0c fc02 	mul.w	ip, ip, r2
   85376:	b2b6      	uxth	r6, r6
   85378:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
   8537c:	4584      	cmp	ip, r0
   8537e:	d907      	bls.n	85390 <__divdi3+0x13c>
   85380:	1940      	adds	r0, r0, r5
   85382:	f102 37ff 	add.w	r7, r2, #4294967295
   85386:	d202      	bcs.n	8538e <__divdi3+0x13a>
   85388:	4584      	cmp	ip, r0
   8538a:	f200 80ae 	bhi.w	854ea <__divdi3+0x296>
   8538e:	463a      	mov	r2, r7
   85390:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   85394:	e7b0      	b.n	852f8 <__divdi3+0xa4>
   85396:	43e4      	mvns	r4, r4
   85398:	4252      	negs	r2, r2
   8539a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   8539e:	e762      	b.n	85266 <__divdi3+0x12>
   853a0:	4240      	negs	r0, r0
   853a2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   853a6:	f04f 34ff 	mov.w	r4, #4294967295
   853aa:	e759      	b.n	85260 <__divdi3+0xc>
   853ac:	4095      	lsls	r5, r2
   853ae:	f1c2 0920 	rsb	r9, r2, #32
   853b2:	fa27 f109 	lsr.w	r1, r7, r9
   853b6:	fa26 f909 	lsr.w	r9, r6, r9
   853ba:	4097      	lsls	r7, r2
   853bc:	0c28      	lsrs	r0, r5, #16
   853be:	fbb1 f8f0 	udiv	r8, r1, r0
   853c2:	fb00 1118 	mls	r1, r0, r8, r1
   853c6:	fa1f fc85 	uxth.w	ip, r5
   853ca:	fb0c f308 	mul.w	r3, ip, r8
   853ce:	ea49 0907 	orr.w	r9, r9, r7
   853d2:	ea4f 4719 	mov.w	r7, r9, lsr #16
   853d6:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
   853da:	428b      	cmp	r3, r1
   853dc:	fa06 f602 	lsl.w	r6, r6, r2
   853e0:	d908      	bls.n	853f4 <__divdi3+0x1a0>
   853e2:	1949      	adds	r1, r1, r5
   853e4:	f108 32ff 	add.w	r2, r8, #4294967295
   853e8:	d27a      	bcs.n	854e0 <__divdi3+0x28c>
   853ea:	428b      	cmp	r3, r1
   853ec:	d978      	bls.n	854e0 <__divdi3+0x28c>
   853ee:	f1a8 0802 	sub.w	r8, r8, #2
   853f2:	4429      	add	r1, r5
   853f4:	1ac9      	subs	r1, r1, r3
   853f6:	fbb1 f3f0 	udiv	r3, r1, r0
   853fa:	fb00 1713 	mls	r7, r0, r3, r1
   853fe:	fb0c f203 	mul.w	r2, ip, r3
   85402:	fa1f f989 	uxth.w	r9, r9
   85406:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
   8540a:	42ba      	cmp	r2, r7
   8540c:	d907      	bls.n	8541e <__divdi3+0x1ca>
   8540e:	197f      	adds	r7, r7, r5
   85410:	f103 31ff 	add.w	r1, r3, #4294967295
   85414:	d260      	bcs.n	854d8 <__divdi3+0x284>
   85416:	42ba      	cmp	r2, r7
   85418:	d95e      	bls.n	854d8 <__divdi3+0x284>
   8541a:	3b02      	subs	r3, #2
   8541c:	442f      	add	r7, r5
   8541e:	1abf      	subs	r7, r7, r2
   85420:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   85424:	e78c      	b.n	85340 <__divdi3+0xec>
   85426:	f1c8 0220 	rsb	r2, r8, #32
   8542a:	fa25 f102 	lsr.w	r1, r5, r2
   8542e:	fa03 fc08 	lsl.w	ip, r3, r8
   85432:	fa27 f302 	lsr.w	r3, r7, r2
   85436:	fa20 f202 	lsr.w	r2, r0, r2
   8543a:	fa07 f708 	lsl.w	r7, r7, r8
   8543e:	ea41 0c0c 	orr.w	ip, r1, ip
   85442:	ea4f 491c 	mov.w	r9, ip, lsr #16
   85446:	fbb3 f1f9 	udiv	r1, r3, r9
   8544a:	fb09 3311 	mls	r3, r9, r1, r3
   8544e:	fa1f fa8c 	uxth.w	sl, ip
   85452:	fb0a fb01 	mul.w	fp, sl, r1
   85456:	4317      	orrs	r7, r2
   85458:	0c3a      	lsrs	r2, r7, #16
   8545a:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   8545e:	459b      	cmp	fp, r3
   85460:	fa05 f008 	lsl.w	r0, r5, r8
   85464:	d908      	bls.n	85478 <__divdi3+0x224>
   85466:	eb13 030c 	adds.w	r3, r3, ip
   8546a:	f101 32ff 	add.w	r2, r1, #4294967295
   8546e:	d235      	bcs.n	854dc <__divdi3+0x288>
   85470:	459b      	cmp	fp, r3
   85472:	d933      	bls.n	854dc <__divdi3+0x288>
   85474:	3902      	subs	r1, #2
   85476:	4463      	add	r3, ip
   85478:	ebcb 0303 	rsb	r3, fp, r3
   8547c:	fbb3 f2f9 	udiv	r2, r3, r9
   85480:	fb09 3312 	mls	r3, r9, r2, r3
   85484:	fb0a fa02 	mul.w	sl, sl, r2
   85488:	b2bf      	uxth	r7, r7
   8548a:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
   8548e:	45ba      	cmp	sl, r7
   85490:	d908      	bls.n	854a4 <__divdi3+0x250>
   85492:	eb17 070c 	adds.w	r7, r7, ip
   85496:	f102 33ff 	add.w	r3, r2, #4294967295
   8549a:	d21b      	bcs.n	854d4 <__divdi3+0x280>
   8549c:	45ba      	cmp	sl, r7
   8549e:	d919      	bls.n	854d4 <__divdi3+0x280>
   854a0:	3a02      	subs	r2, #2
   854a2:	4467      	add	r7, ip
   854a4:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
   854a8:	fba5 0100 	umull	r0, r1, r5, r0
   854ac:	ebca 0707 	rsb	r7, sl, r7
   854b0:	428f      	cmp	r7, r1
   854b2:	f04f 0300 	mov.w	r3, #0
   854b6:	d30a      	bcc.n	854ce <__divdi3+0x27a>
   854b8:	d005      	beq.n	854c6 <__divdi3+0x272>
   854ba:	462a      	mov	r2, r5
   854bc:	e71c      	b.n	852f8 <__divdi3+0xa4>
   854be:	4662      	mov	r2, ip
   854c0:	e6fd      	b.n	852be <__divdi3+0x6a>
   854c2:	463b      	mov	r3, r7
   854c4:	e710      	b.n	852e8 <__divdi3+0x94>
   854c6:	fa06 f608 	lsl.w	r6, r6, r8
   854ca:	4286      	cmp	r6, r0
   854cc:	d2f5      	bcs.n	854ba <__divdi3+0x266>
   854ce:	1e6a      	subs	r2, r5, #1
   854d0:	2300      	movs	r3, #0
   854d2:	e711      	b.n	852f8 <__divdi3+0xa4>
   854d4:	461a      	mov	r2, r3
   854d6:	e7e5      	b.n	854a4 <__divdi3+0x250>
   854d8:	460b      	mov	r3, r1
   854da:	e7a0      	b.n	8541e <__divdi3+0x1ca>
   854dc:	4611      	mov	r1, r2
   854de:	e7cb      	b.n	85478 <__divdi3+0x224>
   854e0:	4690      	mov	r8, r2
   854e2:	e787      	b.n	853f4 <__divdi3+0x1a0>
   854e4:	4643      	mov	r3, r8
   854e6:	4642      	mov	r2, r8
   854e8:	e706      	b.n	852f8 <__divdi3+0xa4>
   854ea:	3a02      	subs	r2, #2
   854ec:	e750      	b.n	85390 <__divdi3+0x13c>
   854ee:	3902      	subs	r1, #2
   854f0:	442f      	add	r7, r5
   854f2:	e739      	b.n	85368 <__divdi3+0x114>

000854f4 <__udivdi3>:
   854f4:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   854f8:	4614      	mov	r4, r2
   854fa:	4605      	mov	r5, r0
   854fc:	460e      	mov	r6, r1
   854fe:	2b00      	cmp	r3, #0
   85500:	d143      	bne.n	8558a <__udivdi3+0x96>
   85502:	428a      	cmp	r2, r1
   85504:	d953      	bls.n	855ae <__udivdi3+0xba>
   85506:	fab2 f782 	clz	r7, r2
   8550a:	b157      	cbz	r7, 85522 <__udivdi3+0x2e>
   8550c:	f1c7 0620 	rsb	r6, r7, #32
   85510:	fa20 f606 	lsr.w	r6, r0, r6
   85514:	fa01 f307 	lsl.w	r3, r1, r7
   85518:	fa02 f407 	lsl.w	r4, r2, r7
   8551c:	fa00 f507 	lsl.w	r5, r0, r7
   85520:	431e      	orrs	r6, r3
   85522:	0c21      	lsrs	r1, r4, #16
   85524:	fbb6 f2f1 	udiv	r2, r6, r1
   85528:	fb01 6612 	mls	r6, r1, r2, r6
   8552c:	b2a0      	uxth	r0, r4
   8552e:	fb00 f302 	mul.w	r3, r0, r2
   85532:	0c2f      	lsrs	r7, r5, #16
   85534:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
   85538:	42b3      	cmp	r3, r6
   8553a:	d909      	bls.n	85550 <__udivdi3+0x5c>
   8553c:	1936      	adds	r6, r6, r4
   8553e:	f102 37ff 	add.w	r7, r2, #4294967295
   85542:	f080 80fd 	bcs.w	85740 <__udivdi3+0x24c>
   85546:	42b3      	cmp	r3, r6
   85548:	f240 80fa 	bls.w	85740 <__udivdi3+0x24c>
   8554c:	3a02      	subs	r2, #2
   8554e:	4426      	add	r6, r4
   85550:	1af6      	subs	r6, r6, r3
   85552:	fbb6 f3f1 	udiv	r3, r6, r1
   85556:	fb01 6113 	mls	r1, r1, r3, r6
   8555a:	fb00 f003 	mul.w	r0, r0, r3
   8555e:	b2ad      	uxth	r5, r5
   85560:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
   85564:	4288      	cmp	r0, r1
   85566:	d908      	bls.n	8557a <__udivdi3+0x86>
   85568:	1909      	adds	r1, r1, r4
   8556a:	f103 36ff 	add.w	r6, r3, #4294967295
   8556e:	f080 80e9 	bcs.w	85744 <__udivdi3+0x250>
   85572:	4288      	cmp	r0, r1
   85574:	f240 80e6 	bls.w	85744 <__udivdi3+0x250>
   85578:	3b02      	subs	r3, #2
   8557a:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   8557e:	2300      	movs	r3, #0
   85580:	4610      	mov	r0, r2
   85582:	4619      	mov	r1, r3
   85584:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85588:	4770      	bx	lr
   8558a:	428b      	cmp	r3, r1
   8558c:	d84c      	bhi.n	85628 <__udivdi3+0x134>
   8558e:	fab3 f683 	clz	r6, r3
   85592:	2e00      	cmp	r6, #0
   85594:	d14f      	bne.n	85636 <__udivdi3+0x142>
   85596:	428b      	cmp	r3, r1
   85598:	d302      	bcc.n	855a0 <__udivdi3+0xac>
   8559a:	4282      	cmp	r2, r0
   8559c:	f200 80dd 	bhi.w	8575a <__udivdi3+0x266>
   855a0:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   855a4:	2300      	movs	r3, #0
   855a6:	2201      	movs	r2, #1
   855a8:	4610      	mov	r0, r2
   855aa:	4619      	mov	r1, r3
   855ac:	4770      	bx	lr
   855ae:	b912      	cbnz	r2, 855b6 <__udivdi3+0xc2>
   855b0:	2401      	movs	r4, #1
   855b2:	fbb4 f4f2 	udiv	r4, r4, r2
   855b6:	fab4 f284 	clz	r2, r4
   855ba:	2a00      	cmp	r2, #0
   855bc:	f040 8082 	bne.w	856c4 <__udivdi3+0x1d0>
   855c0:	1b09      	subs	r1, r1, r4
   855c2:	0c26      	lsrs	r6, r4, #16
   855c4:	b2a7      	uxth	r7, r4
   855c6:	2301      	movs	r3, #1
   855c8:	fbb1 f0f6 	udiv	r0, r1, r6
   855cc:	fb06 1110 	mls	r1, r6, r0, r1
   855d0:	fb07 f200 	mul.w	r2, r7, r0
   855d4:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   855d8:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
   855dc:	428a      	cmp	r2, r1
   855de:	d907      	bls.n	855f0 <__udivdi3+0xfc>
   855e0:	1909      	adds	r1, r1, r4
   855e2:	f100 3cff 	add.w	ip, r0, #4294967295
   855e6:	d202      	bcs.n	855ee <__udivdi3+0xfa>
   855e8:	428a      	cmp	r2, r1
   855ea:	f200 80c8 	bhi.w	8577e <__udivdi3+0x28a>
   855ee:	4660      	mov	r0, ip
   855f0:	1a89      	subs	r1, r1, r2
   855f2:	fbb1 f2f6 	udiv	r2, r1, r6
   855f6:	fb06 1112 	mls	r1, r6, r2, r1
   855fa:	fb07 f702 	mul.w	r7, r7, r2
   855fe:	b2ad      	uxth	r5, r5
   85600:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
   85604:	42af      	cmp	r7, r5
   85606:	d908      	bls.n	8561a <__udivdi3+0x126>
   85608:	192c      	adds	r4, r5, r4
   8560a:	f102 31ff 	add.w	r1, r2, #4294967295
   8560e:	f080 809b 	bcs.w	85748 <__udivdi3+0x254>
   85612:	42a7      	cmp	r7, r4
   85614:	f240 8098 	bls.w	85748 <__udivdi3+0x254>
   85618:	3a02      	subs	r2, #2
   8561a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   8561e:	4610      	mov	r0, r2
   85620:	4619      	mov	r1, r3
   85622:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85626:	4770      	bx	lr
   85628:	2300      	movs	r3, #0
   8562a:	461a      	mov	r2, r3
   8562c:	4610      	mov	r0, r2
   8562e:	4619      	mov	r1, r3
   85630:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85634:	4770      	bx	lr
   85636:	f1c6 0520 	rsb	r5, r6, #32
   8563a:	fa22 f705 	lsr.w	r7, r2, r5
   8563e:	fa03 f406 	lsl.w	r4, r3, r6
   85642:	fa21 f305 	lsr.w	r3, r1, r5
   85646:	fa01 fb06 	lsl.w	fp, r1, r6
   8564a:	fa20 f505 	lsr.w	r5, r0, r5
   8564e:	433c      	orrs	r4, r7
   85650:	ea4f 4814 	mov.w	r8, r4, lsr #16
   85654:	fbb3 fcf8 	udiv	ip, r3, r8
   85658:	fb08 331c 	mls	r3, r8, ip, r3
   8565c:	fa1f f984 	uxth.w	r9, r4
   85660:	fb09 fa0c 	mul.w	sl, r9, ip
   85664:	ea45 0b0b 	orr.w	fp, r5, fp
   85668:	ea4f 451b 	mov.w	r5, fp, lsr #16
   8566c:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
   85670:	459a      	cmp	sl, r3
   85672:	fa02 f206 	lsl.w	r2, r2, r6
   85676:	d904      	bls.n	85682 <__udivdi3+0x18e>
   85678:	191b      	adds	r3, r3, r4
   8567a:	f10c 35ff 	add.w	r5, ip, #4294967295
   8567e:	d36f      	bcc.n	85760 <__udivdi3+0x26c>
   85680:	46ac      	mov	ip, r5
   85682:	ebca 0303 	rsb	r3, sl, r3
   85686:	fbb3 f5f8 	udiv	r5, r3, r8
   8568a:	fb08 3315 	mls	r3, r8, r5, r3
   8568e:	fb09 f905 	mul.w	r9, r9, r5
   85692:	fa1f fb8b 	uxth.w	fp, fp
   85696:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
   8569a:	45b9      	cmp	r9, r7
   8569c:	d904      	bls.n	856a8 <__udivdi3+0x1b4>
   8569e:	193f      	adds	r7, r7, r4
   856a0:	f105 33ff 	add.w	r3, r5, #4294967295
   856a4:	d362      	bcc.n	8576c <__udivdi3+0x278>
   856a6:	461d      	mov	r5, r3
   856a8:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
   856ac:	fbac 2302 	umull	r2, r3, ip, r2
   856b0:	ebc9 0707 	rsb	r7, r9, r7
   856b4:	429f      	cmp	r7, r3
   856b6:	f04f 0500 	mov.w	r5, #0
   856ba:	d34a      	bcc.n	85752 <__udivdi3+0x25e>
   856bc:	d046      	beq.n	8574c <__udivdi3+0x258>
   856be:	4662      	mov	r2, ip
   856c0:	462b      	mov	r3, r5
   856c2:	e75d      	b.n	85580 <__udivdi3+0x8c>
   856c4:	4094      	lsls	r4, r2
   856c6:	f1c2 0920 	rsb	r9, r2, #32
   856ca:	fa21 fc09 	lsr.w	ip, r1, r9
   856ce:	4091      	lsls	r1, r2
   856d0:	fa20 f909 	lsr.w	r9, r0, r9
   856d4:	0c26      	lsrs	r6, r4, #16
   856d6:	fbbc f8f6 	udiv	r8, ip, r6
   856da:	fb06 cc18 	mls	ip, r6, r8, ip
   856de:	b2a7      	uxth	r7, r4
   856e0:	fb07 f308 	mul.w	r3, r7, r8
   856e4:	ea49 0901 	orr.w	r9, r9, r1
   856e8:	ea4f 4119 	mov.w	r1, r9, lsr #16
   856ec:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
   856f0:	4563      	cmp	r3, ip
   856f2:	fa00 f502 	lsl.w	r5, r0, r2
   856f6:	d909      	bls.n	8570c <__udivdi3+0x218>
   856f8:	eb1c 0c04 	adds.w	ip, ip, r4
   856fc:	f108 32ff 	add.w	r2, r8, #4294967295
   85700:	d23b      	bcs.n	8577a <__udivdi3+0x286>
   85702:	4563      	cmp	r3, ip
   85704:	d939      	bls.n	8577a <__udivdi3+0x286>
   85706:	f1a8 0802 	sub.w	r8, r8, #2
   8570a:	44a4      	add	ip, r4
   8570c:	ebc3 0c0c 	rsb	ip, r3, ip
   85710:	fbbc f3f6 	udiv	r3, ip, r6
   85714:	fb06 c113 	mls	r1, r6, r3, ip
   85718:	fb07 f203 	mul.w	r2, r7, r3
   8571c:	fa1f f989 	uxth.w	r9, r9
   85720:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
   85724:	428a      	cmp	r2, r1
   85726:	d907      	bls.n	85738 <__udivdi3+0x244>
   85728:	1909      	adds	r1, r1, r4
   8572a:	f103 30ff 	add.w	r0, r3, #4294967295
   8572e:	d222      	bcs.n	85776 <__udivdi3+0x282>
   85730:	428a      	cmp	r2, r1
   85732:	d920      	bls.n	85776 <__udivdi3+0x282>
   85734:	3b02      	subs	r3, #2
   85736:	4421      	add	r1, r4
   85738:	1a89      	subs	r1, r1, r2
   8573a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   8573e:	e743      	b.n	855c8 <__udivdi3+0xd4>
   85740:	463a      	mov	r2, r7
   85742:	e705      	b.n	85550 <__udivdi3+0x5c>
   85744:	4633      	mov	r3, r6
   85746:	e718      	b.n	8557a <__udivdi3+0x86>
   85748:	460a      	mov	r2, r1
   8574a:	e766      	b.n	8561a <__udivdi3+0x126>
   8574c:	40b0      	lsls	r0, r6
   8574e:	4290      	cmp	r0, r2
   85750:	d2b5      	bcs.n	856be <__udivdi3+0x1ca>
   85752:	f10c 32ff 	add.w	r2, ip, #4294967295
   85756:	2300      	movs	r3, #0
   85758:	e712      	b.n	85580 <__udivdi3+0x8c>
   8575a:	4633      	mov	r3, r6
   8575c:	4632      	mov	r2, r6
   8575e:	e70f      	b.n	85580 <__udivdi3+0x8c>
   85760:	459a      	cmp	sl, r3
   85762:	d98d      	bls.n	85680 <__udivdi3+0x18c>
   85764:	f1ac 0c02 	sub.w	ip, ip, #2
   85768:	4423      	add	r3, r4
   8576a:	e78a      	b.n	85682 <__udivdi3+0x18e>
   8576c:	45b9      	cmp	r9, r7
   8576e:	d99a      	bls.n	856a6 <__udivdi3+0x1b2>
   85770:	3d02      	subs	r5, #2
   85772:	4427      	add	r7, r4
   85774:	e798      	b.n	856a8 <__udivdi3+0x1b4>
   85776:	4603      	mov	r3, r0
   85778:	e7de      	b.n	85738 <__udivdi3+0x244>
   8577a:	4690      	mov	r8, r2
   8577c:	e7c6      	b.n	8570c <__udivdi3+0x218>
   8577e:	3802      	subs	r0, #2
   85780:	4421      	add	r1, r4
   85782:	e735      	b.n	855f0 <__udivdi3+0xfc>
   85784:	0c040800 	.word	0x0c040800
   85788:	0e060a02 	.word	0x0e060a02
   8578c:	0d050901 	.word	0x0d050901
   85790:	0f070b03 	.word	0x0f070b03
   85794:	414c4544 	.word	0x414c4544
   85798:	45202059 	.word	0x45202059
   8579c:	004f4843 	.word	0x004f4843
   857a0:	0000736d 	.word	0x0000736d
   857a4:	00000025 	.word	0x00000025
   857a8:	73256425 	.word	0x73256425
   857ac:	00000020 	.word	0x00000020

000857b0 <_global_impure_ptr>:
   857b0:	20070010 20200043                                ... C.

000857b6 <blanks.6743>:
   857b6:	20202020 20202020 20202020 20202020                     

000857c6 <zeroes.6744>:
   857c6:	30303030 30303030 30303030 30303030     0000000000000000
   857d6:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   857e6:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   857f6:	32313000 36353433 61393837 65646362     .0123456789abcde
   85806:	00300066 69666e49 7974696e 4e614e00     f.0.Infinity.NaN
   85816:	534f5000 2e005849 00050000                       .POSIX....

00085820 <p05.5289>:
   85820:	00000005 00000019 0000007d 00000000     ........}.......

00085830 <__mprec_tens>:
   85830:	00000000 3ff00000 00000000 40240000     .......?......$@
   85840:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   85850:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   85860:	00000000 412e8480 00000000 416312d0     .......A......cA
   85870:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   85880:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   85890:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   858a0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   858b0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   858c0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   858d0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   858e0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   858f0:	79d99db4 44ea7843                       ...yCx.D

000858f8 <__mprec_tinytens>:
   858f8:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   85908:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   85918:	64ac6f43 0ac80628                       Co.d(...

00085920 <__mprec_bigtens>:
   85920:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   85930:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   85940:	7f73bf3c 75154fdd                       <.s..O.u

00085948 <blanks.6687>:
   85948:	20202020 20202020 20202020 20202020                     

00085958 <zeroes.6688>:
   85958:	30303030 30303030 30303030 30303030     0000000000000000

00085968 <_init>:
   85968:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8596a:	bf00      	nop
   8596c:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8596e:	bc08      	pop	{r3}
   85970:	469e      	mov	lr, r3
   85972:	4770      	bx	lr

00085974 <__init_array_start>:
   85974:	00081f8d 	.word	0x00081f8d

00085978 <__frame_dummy_init_array_entry>:
   85978:	0008016d                                m...

0008597c <_fini>:
   8597c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8597e:	bf00      	nop
   85980:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85982:	bc08      	pop	{r3}
   85984:	469e      	mov	lr, r3
   85986:	4770      	bx	lr

00085988 <__fini_array_start>:
   85988:	00080145 	.word	0x00080145
