
Inlamningsuppgift_2_v02.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000059cc  00080000  00080000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  000859cc  000859cc  0000d9cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000008c4  20070000  000859d4  00010000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000027dc  200708c4  00086298  000108c4  2**2
                  ALLOC
  4 .stack        00002000  200730a0  00088a74  000108c4  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  000108c4  2**0
                  CONTENTS, READONLY
  6 .comment      00000071  00000000  00000000  000108ed  2**0
                  CONTENTS, READONLY
  7 .debug_info   00018a07  00000000  00000000  0001095e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000047ac  00000000  00000000  00029365  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000bcaa  00000000  00000000  0002db11  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000c10  00000000  00000000  000397c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000888  00000000  00000000  0003a3d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00017bd3  00000000  00000000  0003ac58  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0001206a  00000000  00000000  0005282b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00062484  00000000  00000000  00064895  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000019b0  00000000  00000000  000c6d1c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	200750a0 	.word	0x200750a0
   80004:	00080d25 	.word	0x00080d25
   80008:	00080d21 	.word	0x00080d21
   8000c:	00080d21 	.word	0x00080d21
   80010:	00080d21 	.word	0x00080d21
   80014:	00080d21 	.word	0x00080d21
   80018:	00080d21 	.word	0x00080d21
	...
   8002c:	00080d21 	.word	0x00080d21
   80030:	00080d21 	.word	0x00080d21
   80034:	00000000 	.word	0x00000000
   80038:	00080d21 	.word	0x00080d21
   8003c:	00080d21 	.word	0x00080d21
   80040:	00080d21 	.word	0x00080d21
   80044:	00080d21 	.word	0x00080d21
   80048:	00080d21 	.word	0x00080d21
   8004c:	00080d21 	.word	0x00080d21
   80050:	00080d21 	.word	0x00080d21
   80054:	00080d21 	.word	0x00080d21
   80058:	00080d21 	.word	0x00080d21
   8005c:	00080d21 	.word	0x00080d21
   80060:	00080d21 	.word	0x00080d21
   80064:	00080d21 	.word	0x00080d21
   80068:	00000000 	.word	0x00000000
   8006c:	00080b3d 	.word	0x00080b3d
   80070:	00080b51 	.word	0x00080b51
   80074:	00080b65 	.word	0x00080b65
   80078:	00080b79 	.word	0x00080b79
	...
   80084:	00080d21 	.word	0x00080d21
   80088:	00080d21 	.word	0x00080d21
   8008c:	00080d21 	.word	0x00080d21
   80090:	00080d21 	.word	0x00080d21
   80094:	00080d21 	.word	0x00080d21
   80098:	00080d21 	.word	0x00080d21
   8009c:	00080d21 	.word	0x00080d21
   800a0:	00080d21 	.word	0x00080d21
   800a4:	00000000 	.word	0x00000000
   800a8:	00080d21 	.word	0x00080d21
   800ac:	000805c1 	.word	0x000805c1
   800b0:	00080d21 	.word	0x00080d21
   800b4:	00080d21 	.word	0x00080d21
   800b8:	00080d21 	.word	0x00080d21
   800bc:	00080d21 	.word	0x00080d21
   800c0:	00080d21 	.word	0x00080d21
   800c4:	00080d21 	.word	0x00080d21
   800c8:	00080d21 	.word	0x00080d21
   800cc:	00080d21 	.word	0x00080d21
   800d0:	00080d21 	.word	0x00080d21
   800d4:	00080d21 	.word	0x00080d21
   800d8:	00080d21 	.word	0x00080d21
   800dc:	00080d21 	.word	0x00080d21
   800e0:	00080d21 	.word	0x00080d21
   800e4:	00080d21 	.word	0x00080d21
   800e8:	00080d21 	.word	0x00080d21
   800ec:	00080d21 	.word	0x00080d21
   800f0:	00080d21 	.word	0x00080d21

000800f4 <deregister_tm_clones>:
   800f4:	b508      	push	{r3, lr}
   800f6:	4805      	ldr	r0, [pc, #20]	; (8010c <deregister_tm_clones+0x18>)
   800f8:	4b05      	ldr	r3, [pc, #20]	; (80110 <deregister_tm_clones+0x1c>)
   800fa:	1a1b      	subs	r3, r3, r0
   800fc:	2b06      	cmp	r3, #6
   800fe:	d800      	bhi.n	80102 <deregister_tm_clones+0xe>
   80100:	bd08      	pop	{r3, pc}
   80102:	4b04      	ldr	r3, [pc, #16]	; (80114 <deregister_tm_clones+0x20>)
   80104:	2b00      	cmp	r3, #0
   80106:	d0fb      	beq.n	80100 <deregister_tm_clones+0xc>
   80108:	4798      	blx	r3
   8010a:	e7f9      	b.n	80100 <deregister_tm_clones+0xc>
   8010c:	000859d4 	.word	0x000859d4
   80110:	000859d7 	.word	0x000859d7
   80114:	00000000 	.word	0x00000000

00080118 <register_tm_clones>:
   80118:	b508      	push	{r3, lr}
   8011a:	4807      	ldr	r0, [pc, #28]	; (80138 <register_tm_clones+0x20>)
   8011c:	4b07      	ldr	r3, [pc, #28]	; (8013c <register_tm_clones+0x24>)
   8011e:	1a1b      	subs	r3, r3, r0
   80120:	109b      	asrs	r3, r3, #2
   80122:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
   80126:	1059      	asrs	r1, r3, #1
   80128:	d100      	bne.n	8012c <register_tm_clones+0x14>
   8012a:	bd08      	pop	{r3, pc}
   8012c:	4a04      	ldr	r2, [pc, #16]	; (80140 <register_tm_clones+0x28>)
   8012e:	2a00      	cmp	r2, #0
   80130:	d0fb      	beq.n	8012a <register_tm_clones+0x12>
   80132:	4790      	blx	r2
   80134:	e7f9      	b.n	8012a <register_tm_clones+0x12>
   80136:	bf00      	nop
   80138:	000859d4 	.word	0x000859d4
   8013c:	000859d4 	.word	0x000859d4
   80140:	00000000 	.word	0x00000000

00080144 <__do_global_dtors_aux>:
   80144:	b510      	push	{r4, lr}
   80146:	4c06      	ldr	r4, [pc, #24]	; (80160 <__do_global_dtors_aux+0x1c>)
   80148:	7823      	ldrb	r3, [r4, #0]
   8014a:	b943      	cbnz	r3, 8015e <__do_global_dtors_aux+0x1a>
   8014c:	f7ff ffd2 	bl	800f4 <deregister_tm_clones>
   80150:	4b04      	ldr	r3, [pc, #16]	; (80164 <__do_global_dtors_aux+0x20>)
   80152:	b113      	cbz	r3, 8015a <__do_global_dtors_aux+0x16>
   80154:	4804      	ldr	r0, [pc, #16]	; (80168 <__do_global_dtors_aux+0x24>)
   80156:	f3af 8000 	nop.w
   8015a:	2301      	movs	r3, #1
   8015c:	7023      	strb	r3, [r4, #0]
   8015e:	bd10      	pop	{r4, pc}
   80160:	200708c4 	.word	0x200708c4
   80164:	00000000 	.word	0x00000000
   80168:	000859d4 	.word	0x000859d4

0008016c <frame_dummy>:
   8016c:	b508      	push	{r3, lr}
   8016e:	4b08      	ldr	r3, [pc, #32]	; (80190 <frame_dummy+0x24>)
   80170:	b11b      	cbz	r3, 8017a <frame_dummy+0xe>
   80172:	4808      	ldr	r0, [pc, #32]	; (80194 <frame_dummy+0x28>)
   80174:	4908      	ldr	r1, [pc, #32]	; (80198 <frame_dummy+0x2c>)
   80176:	f3af 8000 	nop.w
   8017a:	4808      	ldr	r0, [pc, #32]	; (8019c <frame_dummy+0x30>)
   8017c:	6803      	ldr	r3, [r0, #0]
   8017e:	b113      	cbz	r3, 80186 <frame_dummy+0x1a>
   80180:	4b07      	ldr	r3, [pc, #28]	; (801a0 <frame_dummy+0x34>)
   80182:	b103      	cbz	r3, 80186 <frame_dummy+0x1a>
   80184:	4798      	blx	r3
   80186:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   8018a:	f7ff bfc5 	b.w	80118 <register_tm_clones>
   8018e:	bf00      	nop
   80190:	00000000 	.word	0x00000000
   80194:	000859d4 	.word	0x000859d4
   80198:	200708c8 	.word	0x200708c8
   8019c:	000859d4 	.word	0x000859d4
   801a0:	00000000 	.word	0x00000000

000801a4 <adc_setup>:
*/

#include <asf.h>
#include "adc_dac.h"

void adc_setup() {
   801a4:	b538      	push	{r3, r4, r5, lr}
	
	pmc_enable_periph_clk(ID_ADC);
   801a6:	2025      	movs	r0, #37	; 0x25
   801a8:	4b0f      	ldr	r3, [pc, #60]	; (801e8 <adc_setup+0x44>)
   801aa:	4798      	blx	r3
	adc_init(ADC, sysclk_get_main_hz(), 20000000, 0);	//Configure for maximum frequency @ 84 MHz, CHECK THIS!!
   801ac:	4c0f      	ldr	r4, [pc, #60]	; (801ec <adc_setup+0x48>)
   801ae:	4620      	mov	r0, r4
   801b0:	490f      	ldr	r1, [pc, #60]	; (801f0 <adc_setup+0x4c>)
   801b2:	4a10      	ldr	r2, [pc, #64]	; (801f4 <adc_setup+0x50>)
   801b4:	2300      	movs	r3, #0
   801b6:	4d10      	ldr	r5, [pc, #64]	; (801f8 <adc_setup+0x54>)
   801b8:	47a8      	blx	r5
	adc_configure_timing(ADC, 0, 0, 0);					//
   801ba:	4620      	mov	r0, r4
   801bc:	2100      	movs	r1, #0
   801be:	460a      	mov	r2, r1
   801c0:	460b      	mov	r3, r1
   801c2:	4d0e      	ldr	r5, [pc, #56]	; (801fc <adc_setup+0x58>)
   801c4:	47a8      	blx	r5
	adc_set_resolution(ADC, ADC_MR_LOWRES_BITS_12);		//
   801c6:	4620      	mov	r0, r4
   801c8:	2100      	movs	r1, #0
   801ca:	4b0d      	ldr	r3, [pc, #52]	; (80200 <adc_setup+0x5c>)
   801cc:	4798      	blx	r3
	adc_enable_channel(ADC, ADC_CHANNEL_10);			//Analog Input 8 on Arduino Due, used for Sampling
   801ce:	4620      	mov	r0, r4
   801d0:	210a      	movs	r1, #10
   801d2:	4d0c      	ldr	r5, [pc, #48]	; (80204 <adc_setup+0x60>)
   801d4:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL_7);				//Analog Input 0 on Arduino Due, used for Buttons
   801d6:	4620      	mov	r0, r4
   801d8:	2107      	movs	r1, #7
   801da:	47a8      	blx	r5
	adc_configure_trigger(ADC, ADC_TRIG_SW, 0);			//Trigger by Software
   801dc:	4620      	mov	r0, r4
   801de:	2100      	movs	r1, #0
   801e0:	460a      	mov	r2, r1
   801e2:	4b09      	ldr	r3, [pc, #36]	; (80208 <adc_setup+0x64>)
   801e4:	4798      	blx	r3
   801e6:	bd38      	pop	{r3, r4, r5, pc}
   801e8:	00080c75 	.word	0x00080c75
   801ec:	400c0000 	.word	0x400c0000
   801f0:	0a037a00 	.word	0x0a037a00
   801f4:	01312d00 	.word	0x01312d00
   801f8:	000807b1 	.word	0x000807b1
   801fc:	00080805 	.word	0x00080805
   80200:	000807e5 	.word	0x000807e5
   80204:	0008082d 	.word	0x0008082d
   80208:	000807f5 	.word	0x000807f5

0008020c <dac_setup>:
}

void dac_setup() {
   8020c:	b538      	push	{r3, r4, r5, lr}
	
	pmc_enable_periph_clk(ID_DACC);
   8020e:	2026      	movs	r0, #38	; 0x26
   80210:	4b0c      	ldr	r3, [pc, #48]	; (80244 <dac_setup+0x38>)
   80212:	4798      	blx	r3
	dacc_reset(DACC);
   80214:	4c0c      	ldr	r4, [pc, #48]	; (80248 <dac_setup+0x3c>)
   80216:	4620      	mov	r0, r4
   80218:	4b0c      	ldr	r3, [pc, #48]	; (8024c <dac_setup+0x40>)
   8021a:	4798      	blx	r3
	dacc_set_transfer_mode(DACC, 0);
   8021c:	4620      	mov	r0, r4
   8021e:	2100      	movs	r1, #0
   80220:	4b0b      	ldr	r3, [pc, #44]	; (80250 <dac_setup+0x44>)
   80222:	4798      	blx	r3
	dacc_set_timing(DACC,1,1,0);						//1 is shortest refresh period, 1 max. speed, 0 startup time
   80224:	4620      	mov	r0, r4
   80226:	2101      	movs	r1, #1
   80228:	460a      	mov	r2, r1
   8022a:	2300      	movs	r3, #0
   8022c:	4d09      	ldr	r5, [pc, #36]	; (80254 <dac_setup+0x48>)
   8022e:	47a8      	blx	r5
	dacc_set_channel_selection(DACC,0);					//Channel DAC0
   80230:	4620      	mov	r0, r4
   80232:	2100      	movs	r1, #0
   80234:	4b08      	ldr	r3, [pc, #32]	; (80258 <dac_setup+0x4c>)
   80236:	4798      	blx	r3
	dacc_enable_channel(DACC, 0);						//enable DAC0
   80238:	4620      	mov	r0, r4
   8023a:	2100      	movs	r1, #0
   8023c:	4b07      	ldr	r3, [pc, #28]	; (8025c <dac_setup+0x50>)
   8023e:	4798      	blx	r3
   80240:	bd38      	pop	{r3, r4, r5, pc}
   80242:	bf00      	nop
   80244:	00080c75 	.word	0x00080c75
   80248:	400c8000 	.word	0x400c8000
   8024c:	0008084d 	.word	0x0008084d
   80250:	00080855 	.word	0x00080855
   80254:	00080889 	.word	0x00080889
   80258:	00080871 	.word	0x00080871
   8025c:	000808b9 	.word	0x000808b9

00080260 <configure_tc>:
*/

#include <asf.h>
#include "conf_tc.h"

void configure_tc(void) {
   80260:	b510      	push	{r4, lr}

	/* Configure PMC */
	pmc_enable_periph_clk(ID_TC0);
   80262:	201b      	movs	r0, #27
   80264:	4b0e      	ldr	r3, [pc, #56]	; (802a0 <configure_tc+0x40>)
   80266:	4798      	blx	r3

	/** Configure TC for a 10 kHz frequency and trigger on RC compare. */
	tc_init(TC0, 0, 0 | TC_CMR_CPCTRG);			//Timer_clock_1 - MCK/2 - 42 MHz
   80268:	4c0e      	ldr	r4, [pc, #56]	; (802a4 <configure_tc+0x44>)
   8026a:	4620      	mov	r0, r4
   8026c:	2100      	movs	r1, #0
   8026e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   80272:	4b0d      	ldr	r3, [pc, #52]	; (802a8 <configure_tc+0x48>)
   80274:	4798      	blx	r3
	tc_write_rc(TC0, 0, 4200);					//4200 corresponds to fs = 10 kHz
   80276:	4620      	mov	r0, r4
   80278:	2100      	movs	r1, #0
   8027a:	f241 0268 	movw	r2, #4200	; 0x1068
   8027e:	4b0b      	ldr	r3, [pc, #44]	; (802ac <configure_tc+0x4c>)
   80280:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   80282:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   80286:	4b0a      	ldr	r3, [pc, #40]	; (802b0 <configure_tc+0x50>)
   80288:	601a      	str	r2, [r3, #0]

	/* Configure and enable interrupt on RC compare */
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
   8028a:	4620      	mov	r0, r4
   8028c:	2100      	movs	r1, #0
   8028e:	2210      	movs	r2, #16
   80290:	4b08      	ldr	r3, [pc, #32]	; (802b4 <configure_tc+0x54>)
   80292:	4798      	blx	r3

	tc_start(TC0, 0);
   80294:	4620      	mov	r0, r4
   80296:	2100      	movs	r1, #0
   80298:	4b07      	ldr	r3, [pc, #28]	; (802b8 <configure_tc+0x58>)
   8029a:	4798      	blx	r3
   8029c:	bd10      	pop	{r4, pc}
   8029e:	bf00      	nop
   802a0:	00080c75 	.word	0x00080c75
   802a4:	40080000 	.word	0x40080000
   802a8:	00080ccd 	.word	0x00080ccd
   802ac:	00080d09 	.word	0x00080d09
   802b0:	e000e100 	.word	0xe000e100
   802b4:	00080d11 	.word	0x00080d11
   802b8:	00080cf1 	.word	0x00080cf1

000802bc <delay_init>:
*/

#include "delay.h"

void delay_init(void)
{
   802bc:	b510      	push	{r4, lr}
	pmc_enable_periph_clk(ID_TC3);
   802be:	201e      	movs	r0, #30
   802c0:	4b08      	ldr	r3, [pc, #32]	; (802e4 <delay_init+0x28>)
   802c2:	4798      	blx	r3
	tc_init(TC1,0,0);	/*TC0, channel 0, TCLK1 och capturemode */
   802c4:	4c08      	ldr	r4, [pc, #32]	; (802e8 <delay_init+0x2c>)
   802c6:	4620      	mov	r0, r4
   802c8:	2100      	movs	r1, #0
   802ca:	460a      	mov	r2, r1
   802cc:	4b07      	ldr	r3, [pc, #28]	; (802ec <delay_init+0x30>)
   802ce:	4798      	blx	r3
	tc_set_block_mode(TC1,0);
   802d0:	4620      	mov	r0, r4
   802d2:	2100      	movs	r1, #0
   802d4:	4b06      	ldr	r3, [pc, #24]	; (802f0 <delay_init+0x34>)
   802d6:	4798      	blx	r3
	tc_stop(TC1,0);		/* Making sure the timer is not running */
   802d8:	4620      	mov	r0, r4
   802da:	2100      	movs	r1, #0
   802dc:	4b05      	ldr	r3, [pc, #20]	; (802f4 <delay_init+0x38>)
   802de:	4798      	blx	r3
   802e0:	bd10      	pop	{r4, pc}
   802e2:	bf00      	nop
   802e4:	00080c75 	.word	0x00080c75
   802e8:	40084000 	.word	0x40084000
   802ec:	00080ccd 	.word	0x00080ccd
   802f0:	00080ce9 	.word	0x00080ce9
   802f4:	00080cf9 	.word	0x00080cf9

000802f8 <delay>:
}

void delay(uint32_t us)
/* A Delay of us microseconds */
{
   802f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   802fa:	4604      	mov	r4, r0
	tc_start(TC1,0);
   802fc:	4809      	ldr	r0, [pc, #36]	; (80324 <delay+0x2c>)
   802fe:	2100      	movs	r1, #0
   80300:	4b09      	ldr	r3, [pc, #36]	; (80328 <delay+0x30>)
   80302:	4798      	blx	r3
	while (tc_read_cv(TC1,0) < us*42);	/* TIMER_CLOCK1 runs on MCK/2 */
   80304:	272a      	movs	r7, #42	; 0x2a
   80306:	fb07 f704 	mul.w	r7, r7, r4
   8030a:	4e06      	ldr	r6, [pc, #24]	; (80324 <delay+0x2c>)
   8030c:	2500      	movs	r5, #0
   8030e:	4c07      	ldr	r4, [pc, #28]	; (8032c <delay+0x34>)
   80310:	4630      	mov	r0, r6
   80312:	4629      	mov	r1, r5
   80314:	47a0      	blx	r4
   80316:	42b8      	cmp	r0, r7
   80318:	d3fa      	bcc.n	80310 <delay+0x18>
	tc_stop(TC1,0);
   8031a:	4802      	ldr	r0, [pc, #8]	; (80324 <delay+0x2c>)
   8031c:	2100      	movs	r1, #0
   8031e:	4b04      	ldr	r3, [pc, #16]	; (80330 <delay+0x38>)
   80320:	4798      	blx	r3
   80322:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80324:	40084000 	.word	0x40084000
   80328:	00080cf1 	.word	0x00080cf1
   8032c:	00080d01 	.word	0x00080d01
   80330:	00080cf9 	.word	0x00080cf9

00080334 <lcd_write>:
*	type = 0 controls the display
*	type = 1 writes the content of the byte (usually interpreted as ASCII-code) to the display
*
*	LCDwrite returns the actual pinout value on PIOC 26-23, which is the reverse order compared to the Due pin order of D4-D7
*/
{
   80334:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80338:	b084      	sub	sp, #16
   8033a:	4607      	mov	r7, r0
   8033c:	460d      	mov	r5, r1
	/* In it's infinite wisdom the shield has the data pins in mirrored order compared to the Due board */
	uint8_t mirror_pin[16]={0b0000,0b1000,0b0100,0b1100,0b0010,0b1010,0b0110,0b1110,0b0001,0b1001,0b0101,0b1101,0b0011,0b1011,0b0111,0b1111};
   8033e:	4b22      	ldr	r3, [pc, #136]	; (803c8 <lcd_write+0x94>)
   80340:	466c      	mov	r4, sp
   80342:	6818      	ldr	r0, [r3, #0]
   80344:	6859      	ldr	r1, [r3, #4]
   80346:	689a      	ldr	r2, [r3, #8]
   80348:	68db      	ldr	r3, [r3, #12]
   8034a:	c40f      	stmia	r4!, {r0, r1, r2, r3}

	byte_orig = byte;

	/* write the first 4 bits to the shield. */
	byte = byte>>4;
	byte = mirror_pin[byte];
   8034c:	eb04 1317 	add.w	r3, r4, r7, lsr #4
   80350:	f813 2c10 	ldrb.w	r2, [r3, #-16]
	byte32 = (uint32_t)byte << 23;
   80354:	05d3      	lsls	r3, r2, #23
	mirrored_output = byte<<4;
   80356:	0112      	lsls	r2, r2, #4
   80358:	fa5f f882 	uxtb.w	r8, r2
__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
   8035c:	b125      	cbz	r5, 80368 <lcd_write+0x34>
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   8035e:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
   80362:	4a1a      	ldr	r2, [pc, #104]	; (803cc <lcd_write+0x98>)
   80364:	6311      	str	r1, [r2, #48]	; 0x30
   80366:	e003      	b.n	80370 <lcd_write+0x3c>
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80368:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
   8036c:	4a17      	ldr	r2, [pc, #92]	; (803cc <lcd_write+0x98>)
   8036e:	6351      	str	r1, [r2, #52]	; 0x34
__always_inline static void arch_ioport_set_port_level(ioport_port_t port,
		ioport_port_mask_t mask, ioport_port_mask_t level)
{
	Pio *base = arch_ioport_port_to_base(port);

	base->PIO_SODR = mask & level;
   80370:	f003 62f0 	and.w	r2, r3, #125829120	; 0x7800000
   80374:	4c15      	ldr	r4, [pc, #84]	; (803cc <lcd_write+0x98>)
   80376:	6322      	str	r2, [r4, #48]	; 0x30
	base->PIO_CODR = mask & ~level;
   80378:	43db      	mvns	r3, r3
   8037a:	f003 63f0 	and.w	r3, r3, #125829120	; 0x7800000
   8037e:	6363      	str	r3, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80380:	f44f 1600 	mov.w	r6, #2097152	; 0x200000
   80384:	6326      	str	r6, [r4, #48]	; 0x30
	
	ioport_set_pin_level(LCD_RS, type);
	ioport_set_port_level(IOPORT_PIOC, LCD_mask_D4_D7, byte32);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);
   80386:	2001      	movs	r0, #1
   80388:	4d11      	ldr	r5, [pc, #68]	; (803d0 <lcd_write+0x9c>)
   8038a:	47a8      	blx	r5
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   8038c:	6366      	str	r6, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(100);
   8038e:	2064      	movs	r0, #100	; 0x64
   80390:	47a8      	blx	r5
	
	/* write the second 4 bits to the shield. */
	byte = byte_orig;
	byte = byte & 0x0f;
	byte = mirror_pin[byte];
   80392:	f007 070f 	and.w	r7, r7, #15
   80396:	ab04      	add	r3, sp, #16
   80398:	441f      	add	r7, r3
   8039a:	f817 2c10 	ldrb.w	r2, [r7, #-16]
	byte32 = (uint32_t)byte<<23;
   8039e:	05d3      	lsls	r3, r2, #23
	mirrored_output = mirrored_output + byte;
   803a0:	4442      	add	r2, r8
   803a2:	b2d7      	uxtb	r7, r2
__always_inline static void arch_ioport_set_port_level(ioport_port_t port,
		ioport_port_mask_t mask, ioport_port_mask_t level)
{
	Pio *base = arch_ioport_port_to_base(port);

	base->PIO_SODR = mask & level;
   803a4:	f003 62f0 	and.w	r2, r3, #125829120	; 0x7800000
   803a8:	6322      	str	r2, [r4, #48]	; 0x30
	base->PIO_CODR = mask & ~level;
   803aa:	43db      	mvns	r3, r3
   803ac:	f003 63f0 	and.w	r3, r3, #125829120	; 0x7800000
   803b0:	6363      	str	r3, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   803b2:	6326      	str	r6, [r4, #48]	; 0x30

	ioport_set_port_level(IOPORT_PIOC, LCD_mask_D4_D7, byte32);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);
   803b4:	2001      	movs	r0, #1
   803b6:	47a8      	blx	r5
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   803b8:	6366      	str	r6, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	delay(100);
   803ba:	2064      	movs	r0, #100	; 0x64
   803bc:	47a8      	blx	r5
	
	return mirrored_output;
}
   803be:	4638      	mov	r0, r7
   803c0:	b004      	add	sp, #16
   803c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   803c6:	bf00      	nop
   803c8:	000857c4 	.word	0x000857c4
   803cc:	400e1200 	.word	0x400e1200
   803d0:	000802f9 	.word	0x000802f9

000803d4 <lcd_init>:
*/

#include "LCDShield.h"

int lcd_init(void)		/* Initializes the display on the LCD shield, returns 1 if everything is ok */
{
   803d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   803d8:	4c34      	ldr	r4, [pc, #208]	; (804ac <lcd_init+0xd8>)
   803da:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
   803de:	6127      	str	r7, [r4, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   803e0:	f8c4 70a0 	str.w	r7, [r4, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   803e4:	f44f 1500 	mov.w	r5, #2097152	; 0x200000
   803e8:	6125      	str	r5, [r4, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   803ea:	f8c4 50a0 	str.w	r5, [r4, #160]	; 0xa0
		ioport_port_mask_t mask, enum ioport_direction group_direction)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (group_direction == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = mask;
   803ee:	f04f 63f0 	mov.w	r3, #125829120	; 0x7800000
   803f2:	6123      	str	r3, [r4, #16]
	} else if (group_direction == IOPORT_DIR_INPUT) {
		base->PIO_ODR = mask;
	}

	base->PIO_OWER = mask;
   803f4:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   803f8:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_dir(LCD_Enable, IOPORT_DIR_OUTPUT);
	ioport_set_port_dir(IOPORT_PIOC, LCD_mask_D4_D7, IOPORT_DIR_OUTPUT);
	
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(30000);		/* wait > 15 ms */
   803fa:	f247 5030 	movw	r0, #30000	; 0x7530
   803fe:	4e2c      	ldr	r6, [pc, #176]	; (804b0 <lcd_init+0xdc>)
   80400:	47b0      	blx	r6
   80402:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80404:	f04f 6a80 	mov.w	sl, #67108864	; 0x4000000
   80408:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
   8040c:	f04f 7900 	mov.w	r9, #33554432	; 0x2000000
   80410:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80414:	f04f 7880 	mov.w	r8, #16777216	; 0x1000000
   80418:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   8041c:	f44f 0700 	mov.w	r7, #8388608	; 0x800000
   80420:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80422:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, HIGH);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);		/* delay 1 us */
   80424:	2001      	movs	r0, #1
   80426:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80428:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(4100);	/* wait for more than 4,1 ms */
   8042a:	f241 0004 	movw	r0, #4100	; 0x1004
   8042e:	47b0      	blx	r6
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80430:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
   80434:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80438:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   8043c:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   8043e:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, HIGH);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);		/* delay 1 us */
   80440:	2001      	movs	r0, #1
   80442:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80444:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);

	delay(100);	/* wait 100 us */
   80446:	2064      	movs	r0, #100	; 0x64
   80448:	47b0      	blx	r6
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   8044a:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
   8044e:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80452:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   80456:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80458:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, HIGH);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);		/* delay 1 us */
   8045a:	2001      	movs	r0, #1
   8045c:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   8045e:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(100);	/* wait 100 us */
   80460:	2064      	movs	r0, #100	; 0x64
   80462:	47b0      	blx	r6
   80464:	f8c4 a034 	str.w	sl, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80468:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   8046c:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   80470:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80472:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, LOW);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);
   80474:	2001      	movs	r0, #1
   80476:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80478:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(100);
   8047a:	2064      	movs	r0, #100	; 0x64
   8047c:	47b0      	blx	r6

	lcd_write(0b00101000, LOW);		/* Two rows, small font */
   8047e:	2028      	movs	r0, #40	; 0x28
   80480:	2100      	movs	r1, #0
   80482:	4c0c      	ldr	r4, [pc, #48]	; (804b4 <lcd_init+0xe0>)
   80484:	47a0      	blx	r4
	lcd_write(0b00001000, LOW);		/* Display off */
   80486:	2008      	movs	r0, #8
   80488:	2100      	movs	r1, #0
   8048a:	47a0      	blx	r4
	lcd_write(0b00000001, LOW);		/* Display clear */
   8048c:	2001      	movs	r0, #1
   8048e:	2100      	movs	r1, #0
   80490:	47a0      	blx	r4
	
	delay(3000);
   80492:	f640 30b8 	movw	r0, #3000	; 0xbb8
   80496:	47b0      	blx	r6
	
	lcd_write(0b00000110, LOW);		/* Entry mode set: move cursor right, no display shift */
   80498:	2006      	movs	r0, #6
   8049a:	2100      	movs	r1, #0
   8049c:	47a0      	blx	r4
	lcd_write(0b00001111 ,LOW);		/* Display on, cursor on, blinking on */
   8049e:	200f      	movs	r0, #15
   804a0:	2100      	movs	r1, #0
   804a2:	47a0      	blx	r4

	all_ok = 1;					/* simple return statement showing that the initialization of the LCD has completed */
	return all_ok;
}
   804a4:	2001      	movs	r0, #1
   804a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   804aa:	bf00      	nop
   804ac:	400e1200 	.word	0x400e1200
   804b0:	000802f9 	.word	0x000802f9
   804b4:	00080335 	.word	0x00080335

000804b8 <lcd_clear>:
	
	return mirrored_output;
}

int lcd_clear(void)
{
   804b8:	b508      	push	{r3, lr}
	int all_Ok = 0;
	lcd_write(0b00000001, LOW);
   804ba:	2001      	movs	r0, #1
   804bc:	2100      	movs	r1, #0
   804be:	4b04      	ldr	r3, [pc, #16]	; (804d0 <lcd_clear+0x18>)
   804c0:	4798      	blx	r3
	delay(1600);
   804c2:	f44f 60c8 	mov.w	r0, #1600	; 0x640
   804c6:	4b03      	ldr	r3, [pc, #12]	; (804d4 <lcd_clear+0x1c>)
   804c8:	4798      	blx	r3
	all_Ok = 1;
	return all_Ok;
}
   804ca:	2001      	movs	r0, #1
   804cc:	bd08      	pop	{r3, pc}
   804ce:	bf00      	nop
   804d0:	00080335 	.word	0x00080335
   804d4:	000802f9 	.word	0x000802f9

000804d8 <lcd_write_str>:

/*
* Displays strings on the Arduino Shield Display
*/
int lcd_write_str(const char* str)
{
   804d8:	b570      	push	{r4, r5, r6, lr}
   804da:	4604      	mov	r4, r0
	int all_ok = 0;
	
	/*
	* Loops until break
	*/
	while (*str != '\0')
   804dc:	7800      	ldrb	r0, [r0, #0]
   804de:	b138      	cbz	r0, 804f0 <lcd_write_str+0x18>
	{
		lcd_write(*str, HIGH);
   804e0:	2601      	movs	r6, #1
   804e2:	4d04      	ldr	r5, [pc, #16]	; (804f4 <lcd_write_str+0x1c>)
   804e4:	4631      	mov	r1, r6
   804e6:	47a8      	blx	r5
	int all_ok = 0;
	
	/*
	* Loops until break
	*/
	while (*str != '\0')
   804e8:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   804ec:	2800      	cmp	r0, #0
   804ee:	d1f9      	bne.n	804e4 <lcd_write_str+0xc>
		str++;
	}
	
	all_ok = 1;
	return all_ok;
}
   804f0:	2001      	movs	r0, #1
   804f2:	bd70      	pop	{r4, r5, r6, pc}
   804f4:	00080335 	.word	0x00080335

000804f8 <main>:
#include "conf_tc.h"
#include "LCDShield.h"
#include "sample_int.h"
#include "delay.h"

int main(void) {
   804f8:	b508      	push	{r3, lr}
	
	sysclk_init();
   804fa:	4b13      	ldr	r3, [pc, #76]	; (80548 <main+0x50>)
   804fc:	4798      	blx	r3
 	board_init();
   804fe:	4b13      	ldr	r3, [pc, #76]	; (8054c <main+0x54>)
   80500:	4798      	blx	r3
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   80502:	200b      	movs	r0, #11
   80504:	4c12      	ldr	r4, [pc, #72]	; (80550 <main+0x58>)
   80506:	47a0      	blx	r4
   80508:	200c      	movs	r0, #12
   8050a:	47a0      	blx	r4
   8050c:	200d      	movs	r0, #13
   8050e:	47a0      	blx	r4
   80510:	200e      	movs	r0, #14
   80512:	47a0      	blx	r4
 	ioport_init();
 	adc_setup();
   80514:	4b0f      	ldr	r3, [pc, #60]	; (80554 <main+0x5c>)
   80516:	4798      	blx	r3
 	dac_setup();
   80518:	4b0f      	ldr	r3, [pc, #60]	; (80558 <main+0x60>)
   8051a:	4798      	blx	r3
 	delay_init();
   8051c:	4b0f      	ldr	r3, [pc, #60]	; (8055c <main+0x64>)
   8051e:	4798      	blx	r3
 	configure_tc();
   80520:	4b0f      	ldr	r3, [pc, #60]	; (80560 <main+0x68>)
   80522:	4798      	blx	r3
	lcd_init();
   80524:	4b0f      	ldr	r3, [pc, #60]	; (80564 <main+0x6c>)
   80526:	4798      	blx	r3
	
	/*
	* Start the program
	*/
	lcd_clear();
   80528:	4b0f      	ldr	r3, [pc, #60]	; (80568 <main+0x70>)
   8052a:	4798      	blx	r3
	lcd_write_str(("DELAY  ECHO"));
   8052c:	480f      	ldr	r0, [pc, #60]	; (8056c <main+0x74>)
   8052e:	4b10      	ldr	r3, [pc, #64]	; (80570 <main+0x78>)
   80530:	4798      	blx	r3
	LCDupdate(0b11000000, ((4999 + 1) / 10), "ms");
   80532:	20c0      	movs	r0, #192	; 0xc0
   80534:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
   80538:	4a0e      	ldr	r2, [pc, #56]	; (80574 <main+0x7c>)
   8053a:	4c0f      	ldr	r4, [pc, #60]	; (80578 <main+0x80>)
   8053c:	47a0      	blx	r4
	LCDupdate(0b11001010, 50, "%");
   8053e:	20ca      	movs	r0, #202	; 0xca
   80540:	2132      	movs	r1, #50	; 0x32
   80542:	4a0e      	ldr	r2, [pc, #56]	; (8057c <main+0x84>)
   80544:	47a0      	blx	r4
   80546:	e7fe      	b.n	80546 <main+0x4e>
   80548:	000806dd 	.word	0x000806dd
   8054c:	00080741 	.word	0x00080741
   80550:	00080c75 	.word	0x00080c75
   80554:	000801a5 	.word	0x000801a5
   80558:	0008020d 	.word	0x0008020d
   8055c:	000802bd 	.word	0x000802bd
   80560:	00080261 	.word	0x00080261
   80564:	000803d5 	.word	0x000803d5
   80568:	000804b9 	.word	0x000804b9
   8056c:	000857d4 	.word	0x000857d4
   80570:	000804d9 	.word	0x000804d9
   80574:	000857e0 	.word	0x000857e0
   80578:	00080581 	.word	0x00080581
   8057c:	000857e4 	.word	0x000857e4

00080580 <LCDupdate>:
#include "delay.h"

/************************************************************************/
/*	Updating information on the LCD                                     */
/************************************************************************/
void LCDupdate(uint8_t pos, uint16_t val, const char *unit) {
   80580:	b530      	push	{r4, r5, lr}
   80582:	b083      	sub	sp, #12
   80584:	460d      	mov	r5, r1
   80586:	4614      	mov	r4, r2
	
	char update[7];
	lcd_write(pos, LOW);	//Cursor positioning
   80588:	2100      	movs	r1, #0
   8058a:	4b08      	ldr	r3, [pc, #32]	; (805ac <LCDupdate+0x2c>)
   8058c:	4798      	blx	r3
	delay(40);
   8058e:	2028      	movs	r0, #40	; 0x28
   80590:	4b07      	ldr	r3, [pc, #28]	; (805b0 <LCDupdate+0x30>)
   80592:	4798      	blx	r3
	sprintf(update, "%d%s ", val, unit);	//Format
   80594:	4668      	mov	r0, sp
   80596:	4907      	ldr	r1, [pc, #28]	; (805b4 <LCDupdate+0x34>)
   80598:	462a      	mov	r2, r5
   8059a:	4623      	mov	r3, r4
   8059c:	4c06      	ldr	r4, [pc, #24]	; (805b8 <LCDupdate+0x38>)
   8059e:	47a0      	blx	r4
	lcd_write_str(update); //To display
   805a0:	4668      	mov	r0, sp
   805a2:	4b06      	ldr	r3, [pc, #24]	; (805bc <LCDupdate+0x3c>)
   805a4:	4798      	blx	r3
}
   805a6:	b003      	add	sp, #12
   805a8:	bd30      	pop	{r4, r5, pc}
   805aa:	bf00      	nop
   805ac:	00080335 	.word	0x00080335
   805b0:	000802f9 	.word	0x000802f9
   805b4:	000857e8 	.word	0x000857e8
   805b8:	00081049 	.word	0x00081049
   805bc:	000804d9 	.word	0x000804d9

000805c0 <TC0_Handler>:

/************************************************************************/
/*	Interrupt handler for TC0 interrupt.                                */
/************************************************************************/
void TC0_Handler(void) {
   805c0:	b538      	push	{r3, r4, r5, lr}
	static uint16_t i = 0;
	static uint16_t buffer[5000] = {0};
	uint32_t invalue, outvalue;
	uint16_t echo = 50, delay = 4999, steps = 10;
	
	tc_get_status(TC0, 0);
   805c2:	4838      	ldr	r0, [pc, #224]	; (806a4 <TC0_Handler+0xe4>)
   805c4:	2100      	movs	r1, #0
   805c6:	4b38      	ldr	r3, [pc, #224]	; (806a8 <TC0_Handler+0xe8>)
   805c8:	4798      	blx	r3
	adc_start(ADC);
   805ca:	4838      	ldr	r0, [pc, #224]	; (806ac <TC0_Handler+0xec>)
   805cc:	4b38      	ldr	r3, [pc, #224]	; (806b0 <TC0_Handler+0xf0>)
   805ce:	4798      	blx	r3
	
	while ((adc_get_status(ADC) & 0x01000000) == 0);
   805d0:	4d36      	ldr	r5, [pc, #216]	; (806ac <TC0_Handler+0xec>)
   805d2:	4c38      	ldr	r4, [pc, #224]	; (806b4 <TC0_Handler+0xf4>)
   805d4:	4628      	mov	r0, r5
   805d6:	47a0      	blx	r4
   805d8:	f010 7f80 	tst.w	r0, #16777216	; 0x1000000
   805dc:	d0fa      	beq.n	805d4 <TC0_Handler+0x14>
	invalue = adc_get_channel_value(ADC, ADC_CHANNEL_10);	// Channel 10 used for Sampling
   805de:	4c33      	ldr	r4, [pc, #204]	; (806ac <TC0_Handler+0xec>)
   805e0:	4620      	mov	r0, r4
   805e2:	210a      	movs	r1, #10
   805e4:	4b34      	ldr	r3, [pc, #208]	; (806b8 <TC0_Handler+0xf8>)
   805e6:	4798      	blx	r3
   805e8:	4605      	mov	r5, r0
	adc_start(ADC);
   805ea:	4620      	mov	r0, r4
   805ec:	4b30      	ldr	r3, [pc, #192]	; (806b0 <TC0_Handler+0xf0>)
   805ee:	4798      	blx	r3
	
	/*
	* Delay function
	*/
	buffer[i] = ((buffer[i] + invalue) * echo) / 100;
   805f0:	4b32      	ldr	r3, [pc, #200]	; (806bc <TC0_Handler+0xfc>)
   805f2:	881b      	ldrh	r3, [r3, #0]
   805f4:	4a32      	ldr	r2, [pc, #200]	; (806c0 <TC0_Handler+0x100>)
   805f6:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
   805fa:	4429      	add	r1, r5
   805fc:	2032      	movs	r0, #50	; 0x32
   805fe:	fb00 f101 	mul.w	r1, r0, r1
   80602:	4830      	ldr	r0, [pc, #192]	; (806c4 <TC0_Handler+0x104>)
   80604:	fba0 4101 	umull	r4, r1, r0, r1
   80608:	0949      	lsrs	r1, r1, #5
   8060a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	i++;
   8060e:	3301      	adds	r3, #1
   80610:	b29b      	uxth	r3, r3
	if (i >= delay) {
   80612:	f241 3286 	movw	r2, #4998	; 0x1386
   80616:	4293      	cmp	r3, r2
   80618:	d802      	bhi.n	80620 <TC0_Handler+0x60>
	
	/*
	* Delay function
	*/
	buffer[i] = ((buffer[i] + invalue) * echo) / 100;
	i++;
   8061a:	4a28      	ldr	r2, [pc, #160]	; (806bc <TC0_Handler+0xfc>)
   8061c:	8013      	strh	r3, [r2, #0]
   8061e:	e002      	b.n	80626 <TC0_Handler+0x66>
	if (i >= delay) {
		i = 0;
   80620:	2200      	movs	r2, #0
   80622:	4b26      	ldr	r3, [pc, #152]	; (806bc <TC0_Handler+0xfc>)
   80624:	801a      	strh	r2, [r3, #0]
	}
	outvalue = invalue + buffer[i];
   80626:	4c25      	ldr	r4, [pc, #148]	; (806bc <TC0_Handler+0xfc>)
   80628:	8822      	ldrh	r2, [r4, #0]
   8062a:	4b25      	ldr	r3, [pc, #148]	; (806c0 <TC0_Handler+0x100>)
   8062c:	f833 1012 	ldrh.w	r1, [r3, r2, lsl #1]
	dacc_write_conversion_data(DACC, outvalue);
   80630:	4825      	ldr	r0, [pc, #148]	; (806c8 <TC0_Handler+0x108>)
   80632:	4429      	add	r1, r5
   80634:	4b25      	ldr	r3, [pc, #148]	; (806cc <TC0_Handler+0x10c>)
   80636:	4798      	blx	r3
		
		/*
		* Button function
		*/
	if ((i % 200) == 0) {
   80638:	8823      	ldrh	r3, [r4, #0]
   8063a:	4a22      	ldr	r2, [pc, #136]	; (806c4 <TC0_Handler+0x104>)
   8063c:	fba2 1203 	umull	r1, r2, r2, r3
   80640:	0992      	lsrs	r2, r2, #6
   80642:	21c8      	movs	r1, #200	; 0xc8
   80644:	fb01 3312 	mls	r3, r1, r2, r3
   80648:	b29b      	uxth	r3, r3
   8064a:	bb4b      	cbnz	r3, 806a0 <TC0_Handler+0xe0>
		invalue = adc_get_channel_value(ADC, ADC_CHANNEL_7);	//Channel 11 used for buttons
   8064c:	4817      	ldr	r0, [pc, #92]	; (806ac <TC0_Handler+0xec>)
   8064e:	2107      	movs	r1, #7
   80650:	4b19      	ldr	r3, [pc, #100]	; (806b8 <TC0_Handler+0xf8>)
   80652:	4798      	blx	r3
		if (invalue < 50) {	//Right button on the LCD Shield, set to increase the echo
   80654:	2831      	cmp	r0, #49	; 0x31
   80656:	d805      	bhi.n	80664 <TC0_Handler+0xa4>
			if (echo < 100) {	//Max value for the delay is 100
				echo++;
				LCDupdate(0b11001010, echo, "%");	//Update display with the new value for the echo
   80658:	20ca      	movs	r0, #202	; 0xca
   8065a:	2133      	movs	r1, #51	; 0x33
   8065c:	4a1c      	ldr	r2, [pc, #112]	; (806d0 <TC0_Handler+0x110>)
   8065e:	4b1d      	ldr	r3, [pc, #116]	; (806d4 <TC0_Handler+0x114>)
   80660:	4798      	blx	r3
   80662:	bd38      	pop	{r3, r4, r5, pc}
			}
			} else if (invalue < 1900) {	//Left button on the LCD Shield, set to decrease the echo
   80664:	f240 736b 	movw	r3, #1899	; 0x76b
   80668:	4298      	cmp	r0, r3
   8066a:	d805      	bhi.n	80678 <TC0_Handler+0xb8>
			if (echo > 0) {
				echo--;
				LCDupdate(0b11001010, echo, "%");	//Update display with the new value for the echo
   8066c:	20ca      	movs	r0, #202	; 0xca
   8066e:	2131      	movs	r1, #49	; 0x31
   80670:	4a17      	ldr	r2, [pc, #92]	; (806d0 <TC0_Handler+0x110>)
   80672:	4b18      	ldr	r3, [pc, #96]	; (806d4 <TC0_Handler+0x114>)
   80674:	4798      	blx	r3
   80676:	bd38      	pop	{r3, r4, r5, pc}
			}
			} else if (invalue < 700) {	//Up button on the LCD Shield, set to increase the delay
   80678:	f5b0 7f2f 	cmp.w	r0, #700	; 0x2bc
   8067c:	d206      	bcs.n	8068c <TC0_Handler+0xcc>
			if (delay < 5000) {
				delay += steps;
				if (delay > 5000) {
					delay = 5000;
				}
				LCDupdate(0b11000000, ((delay + 1) / 10), "ms");	//Update display with the new value for the delay
   8067e:	20c0      	movs	r0, #192	; 0xc0
   80680:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
   80684:	4a14      	ldr	r2, [pc, #80]	; (806d8 <TC0_Handler+0x118>)
   80686:	4b13      	ldr	r3, [pc, #76]	; (806d4 <TC0_Handler+0x114>)
   80688:	4798      	blx	r3
   8068a:	bd38      	pop	{r3, r4, r5, pc}
			}
			} else if (invalue < 1500) {	//Down button on the LCD Shield, set to increase the echo
   8068c:	f240 53db 	movw	r3, #1499	; 0x5db
   80690:	4298      	cmp	r0, r3
   80692:	d805      	bhi.n	806a0 <TC0_Handler+0xe0>
			if (delay > 0) {
				delay -= steps;
				if (delay < 0) {
					delay = 0;
				}
				LCDupdate(0b11000000, ((delay + 1) / 10), "ms");	//Update display with the new value for the delay
   80694:	20c0      	movs	r0, #192	; 0xc0
   80696:	f240 11f3 	movw	r1, #499	; 0x1f3
   8069a:	4a0f      	ldr	r2, [pc, #60]	; (806d8 <TC0_Handler+0x118>)
   8069c:	4b0d      	ldr	r3, [pc, #52]	; (806d4 <TC0_Handler+0x114>)
   8069e:	4798      	blx	r3
   806a0:	bd38      	pop	{r3, r4, r5, pc}
   806a2:	bf00      	nop
   806a4:	40080000 	.word	0x40080000
   806a8:	00080d19 	.word	0x00080d19
   806ac:	400c0000 	.word	0x400c0000
   806b0:	00080825 	.word	0x00080825
   806b4:	00080849 	.word	0x00080849
   806b8:	00080839 	.word	0x00080839
   806bc:	200708e0 	.word	0x200708e0
   806c0:	200708e4 	.word	0x200708e4
   806c4:	51eb851f 	.word	0x51eb851f
   806c8:	400c8000 	.word	0x400c8000
   806cc:	0008086d 	.word	0x0008086d
   806d0:	000857e4 	.word	0x000857e4
   806d4:	00080581 	.word	0x00080581
   806d8:	000857e0 	.word	0x000857e0

000806dc <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   806dc:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   806de:	480e      	ldr	r0, [pc, #56]	; (80718 <sysclk_init+0x3c>)
   806e0:	4b0e      	ldr	r3, [pc, #56]	; (8071c <sysclk_init+0x40>)
   806e2:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   806e4:	2000      	movs	r0, #0
   806e6:	213e      	movs	r1, #62	; 0x3e
   806e8:	4b0d      	ldr	r3, [pc, #52]	; (80720 <sysclk_init+0x44>)
   806ea:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   806ec:	4c0d      	ldr	r4, [pc, #52]	; (80724 <sysclk_init+0x48>)
   806ee:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   806f0:	2800      	cmp	r0, #0
   806f2:	d0fc      	beq.n	806ee <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   806f4:	4b0c      	ldr	r3, [pc, #48]	; (80728 <sysclk_init+0x4c>)
   806f6:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   806f8:	4a0c      	ldr	r2, [pc, #48]	; (8072c <sysclk_init+0x50>)
   806fa:	4b0d      	ldr	r3, [pc, #52]	; (80730 <sysclk_init+0x54>)
   806fc:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   806fe:	4c0d      	ldr	r4, [pc, #52]	; (80734 <sysclk_init+0x58>)
   80700:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   80702:	2800      	cmp	r0, #0
   80704:	d0fc      	beq.n	80700 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80706:	2010      	movs	r0, #16
   80708:	4b0b      	ldr	r3, [pc, #44]	; (80738 <sysclk_init+0x5c>)
   8070a:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   8070c:	4b0b      	ldr	r3, [pc, #44]	; (8073c <sysclk_init+0x60>)
   8070e:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   80710:	4801      	ldr	r0, [pc, #4]	; (80718 <sysclk_init+0x3c>)
   80712:	4b02      	ldr	r3, [pc, #8]	; (8071c <sysclk_init+0x40>)
   80714:	4798      	blx	r3
   80716:	bd10      	pop	{r4, pc}
   80718:	0501bd00 	.word	0x0501bd00
   8071c:	00080ef1 	.word	0x00080ef1
   80720:	00080bf1 	.word	0x00080bf1
   80724:	00080c45 	.word	0x00080c45
   80728:	00080c55 	.word	0x00080c55
   8072c:	200d3f01 	.word	0x200d3f01
   80730:	400e0600 	.word	0x400e0600
   80734:	00080c65 	.word	0x00080c65
   80738:	00080b8d 	.word	0x00080b8d
   8073c:	00080dd5 	.word	0x00080dd5

00080740 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   80740:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   80742:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80746:	4b13      	ldr	r3, [pc, #76]	; (80794 <board_init+0x54>)
   80748:	605a      	str	r2, [r3, #4]
   8074a:	200b      	movs	r0, #11
   8074c:	4c12      	ldr	r4, [pc, #72]	; (80798 <board_init+0x58>)
   8074e:	47a0      	blx	r4
   80750:	200c      	movs	r0, #12
   80752:	47a0      	blx	r4
   80754:	200d      	movs	r0, #13
   80756:	47a0      	blx	r4
   80758:	200e      	movs	r0, #14
   8075a:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   8075c:	203b      	movs	r0, #59	; 0x3b
   8075e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80762:	4c0e      	ldr	r4, [pc, #56]	; (8079c <board_init+0x5c>)
   80764:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   80766:	2055      	movs	r0, #85	; 0x55
   80768:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8076c:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   8076e:	2056      	movs	r0, #86	; 0x56
   80770:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80774:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   80776:	2068      	movs	r0, #104	; 0x68
   80778:	4909      	ldr	r1, [pc, #36]	; (807a0 <board_init+0x60>)
   8077a:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   8077c:	205c      	movs	r0, #92	; 0x5c
   8077e:	4909      	ldr	r1, [pc, #36]	; (807a4 <board_init+0x64>)
   80780:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   80782:	4809      	ldr	r0, [pc, #36]	; (807a8 <board_init+0x68>)
   80784:	f44f 7140 	mov.w	r1, #768	; 0x300
   80788:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   8078c:	4b07      	ldr	r3, [pc, #28]	; (807ac <board_init+0x6c>)
   8078e:	4798      	blx	r3
   80790:	bd10      	pop	{r4, pc}
   80792:	bf00      	nop
   80794:	400e1a50 	.word	0x400e1a50
   80798:	00080c75 	.word	0x00080c75
   8079c:	00080971 	.word	0x00080971
   807a0:	28000079 	.word	0x28000079
   807a4:	28000001 	.word	0x28000001
   807a8:	400e0e00 	.word	0x400e0e00
   807ac:	00080a45 	.word	0x00080a45

000807b0 <adc_init>:
 *
 * \return 0 on success.
 */
uint32_t adc_init(Adc *p_adc, const uint32_t ul_mck,
		const uint32_t ul_adc_clock, const enum adc_startup_time startup)
{
   807b0:	b430      	push	{r4, r5}
	uint32_t ul_prescal;

	/*  Reset the controller. */
	p_adc->ADC_CR = ADC_CR_SWRST;
   807b2:	2401      	movs	r4, #1
   807b4:	6004      	str	r4, [r0, #0]

	/* Reset Mode Register. */
	p_adc->ADC_MR = 0;
   807b6:	2400      	movs	r4, #0
   807b8:	6044      	str	r4, [r0, #4]

	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
   807ba:	f240 2502 	movw	r5, #514	; 0x202
   807be:	f8c0 5120 	str.w	r5, [r0, #288]	; 0x120
	p_adc->ADC_RCR = 0;
   807c2:	f8c0 4104 	str.w	r4, [r0, #260]	; 0x104
	p_adc->ADC_RNCR = 0;
   807c6:	f8c0 4114 	str.w	r4, [r0, #276]	; 0x114

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   807ca:	6845      	ldr	r5, [r0, #4]
   807cc:	432b      	orrs	r3, r5
	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
	p_adc->ADC_RCR = 0;
	p_adc->ADC_RNCR = 0;

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
   807ce:	0052      	lsls	r2, r2, #1
   807d0:	fbb1 f1f2 	udiv	r1, r1, r2
   807d4:	1e4d      	subs	r5, r1, #1
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   807d6:	022d      	lsls	r5, r5, #8
   807d8:	b2ad      	uxth	r5, r5
   807da:	432b      	orrs	r3, r5
   807dc:	6043      	str	r3, [r0, #4]
	return 0;
}
   807de:	4620      	mov	r0, r4
   807e0:	bc30      	pop	{r4, r5}
   807e2:	4770      	bx	lr

000807e4 <adc_set_resolution>:
		p_adc->ADC_MR &= ~ADC_MR_LOWRES;
		p_adc->ADC_EMR |= resolution;
		break;
	}
#else
	p_adc->ADC_MR &= ~ADC_MR_LOWRES;
   807e4:	6843      	ldr	r3, [r0, #4]
   807e6:	f023 0310 	bic.w	r3, r3, #16
   807ea:	6043      	str	r3, [r0, #4]
	p_adc->ADC_MR |= resolution;
   807ec:	6843      	ldr	r3, [r0, #4]
   807ee:	4319      	orrs	r1, r3
   807f0:	6041      	str	r1, [r0, #4]
   807f2:	4770      	bx	lr

000807f4 <adc_configure_trigger>:
 *
 */
void adc_configure_trigger(Adc *p_adc, const enum adc_trigger_t trigger,
		uint8_t uc_freerun)
{
	p_adc->ADC_MR |= trigger | ((uc_freerun << 7) & ADC_MR_FREERUN);
   807f4:	6843      	ldr	r3, [r0, #4]
   807f6:	4319      	orrs	r1, r3
   807f8:	01d2      	lsls	r2, r2, #7
   807fa:	b2d3      	uxtb	r3, r2
   807fc:	4319      	orrs	r1, r3
   807fe:	6041      	str	r1, [r0, #4]
   80800:	4770      	bx	lr
   80802:	bf00      	nop

00080804 <adc_configure_timing>:
 * \param uc_settling Analog settling time = (uc_settling + 1) / ADC clock.
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
   80804:	b410      	push	{r4}
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   80806:	6844      	ldr	r4, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
   80808:	4322      	orrs	r2, r4
   8080a:	0609      	lsls	r1, r1, #24
   8080c:	f001 6470 	and.w	r4, r1, #251658240	; 0xf000000
   80810:	4322      	orrs	r2, r4
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   80812:	071b      	lsls	r3, r3, #28
   80814:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
   80818:	431a      	orrs	r2, r3
   8081a:	6042      	str	r2, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
}
   8081c:	f85d 4b04 	ldr.w	r4, [sp], #4
   80820:	4770      	bx	lr
   80822:	bf00      	nop

00080824 <adc_start>:
 * \param p_adc Pointer to an ADC instance.
 */

void adc_start(Adc *p_adc)
{
	p_adc->ADC_CR = ADC_CR_START;
   80824:	2302      	movs	r3, #2
   80826:	6003      	str	r3, [r0, #0]
   80828:	4770      	bx	lr
   8082a:	bf00      	nop

0008082c <adc_enable_channel>:
 * \param p_adc Pointer to an ADC instance.
 * \param adc_ch ADC channel number.
 */
void adc_enable_channel(Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	p_adc->ADC_CHER = 1 << adc_ch;
   8082c:	2301      	movs	r3, #1
   8082e:	fa03 f101 	lsl.w	r1, r3, r1
   80832:	6101      	str	r1, [r0, #16]
   80834:	4770      	bx	lr
   80836:	bf00      	nop

00080838 <adc_get_channel_value>:
 */
uint32_t adc_get_channel_value(const Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	uint32_t ul_data = 0;

	if (15 >= adc_ch) {
   80838:	290f      	cmp	r1, #15
   8083a:	d803      	bhi.n	80844 <adc_get_channel_value+0xc>
		ul_data = *(p_adc->ADC_CDR + adc_ch);
   8083c:	3114      	adds	r1, #20
   8083e:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
   80842:	4770      	bx	lr
 *
 * \return ADC value of the specified channel.
 */
uint32_t adc_get_channel_value(const Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	uint32_t ul_data = 0;
   80844:	2000      	movs	r0, #0
	if (15 >= adc_ch) {
		ul_data = *(p_adc->ADC_CDR + adc_ch);
	}

	return ul_data;
}
   80846:	4770      	bx	lr

00080848 <adc_get_status>:
 *
 * \return ADC status structure.
 */
uint32_t adc_get_status(const Adc *p_adc)
{
	return p_adc->ADC_ISR;
   80848:	6b00      	ldr	r0, [r0, #48]	; 0x30
}
   8084a:	4770      	bx	lr

0008084c <dacc_reset>:
 *
 * \param p_dacc Pointer to a DACC instance. 
 */
void dacc_reset(Dacc *p_dacc)
{
	p_dacc->DACC_CR = DACC_CR_SWRST;
   8084c:	2301      	movs	r3, #1
   8084e:	6003      	str	r3, [r0, #0]
   80850:	4770      	bx	lr
   80852:	bf00      	nop

00080854 <dacc_set_transfer_mode>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_transfer_mode(Dacc *p_dacc, uint32_t ul_mode)
{
	if (ul_mode) {
   80854:	b121      	cbz	r1, 80860 <dacc_set_transfer_mode+0xc>
#if (SAM3N) || (SAM4L) || (SAM4N)
		p_dacc->DACC_MR |= DACC_MR_WORD;
#else
		p_dacc->DACC_MR |= DACC_MR_WORD_WORD;
   80856:	6843      	ldr	r3, [r0, #4]
   80858:	f043 0310 	orr.w	r3, r3, #16
   8085c:	6043      	str	r3, [r0, #4]
   8085e:	e003      	b.n	80868 <dacc_set_transfer_mode+0x14>
#endif
	} else {
#if (SAM3N) || (SAM4L) || (SAM4N)
		p_dacc->DACC_MR &= (~DACC_MR_WORD);
#else
		p_dacc->DACC_MR &= (~DACC_MR_WORD_WORD);
   80860:	6843      	ldr	r3, [r0, #4]
   80862:	f023 0310 	bic.w	r3, r3, #16
   80866:	6043      	str	r3, [r0, #4]
#endif
	}
	return DACC_RC_OK;
}
   80868:	2000      	movs	r0, #0
   8086a:	4770      	bx	lr

0008086c <dacc_write_conversion_data>:
 * \param p_dacc Pointer to a DACC instance. 
 * \param ul_data The data to be transferred to analog value. 
 */
void dacc_write_conversion_data(Dacc *p_dacc, uint32_t ul_data)
{
	p_dacc->DACC_CDR = ul_data;
   8086c:	6201      	str	r1, [r0, #32]
   8086e:	4770      	bx	lr

00080870 <dacc_set_channel_selection>:
 *
 * \return \ref DACC_RC_OK if successful.
 */
uint32_t dacc_set_channel_selection(Dacc *p_dacc, uint32_t ul_channel)
{
	uint32_t mr = p_dacc->DACC_MR & (~DACC_MR_USER_SEL_Msk);
   80870:	6843      	ldr	r3, [r0, #4]
	if (ul_channel > MAX_CH_NB) {
   80872:	2901      	cmp	r1, #1
   80874:	d806      	bhi.n	80884 <dacc_set_channel_selection+0x14>
		return DACC_RC_INVALID_PARAM;
	}
	mr &= ~(DACC_MR_TAG);
   80876:	f423 1398 	bic.w	r3, r3, #1245184	; 0x130000
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
   8087a:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
	p_dacc->DACC_MR = mr;
   8087e:	6041      	str	r1, [r0, #4]
	return DACC_RC_OK;
   80880:	2000      	movs	r0, #0
   80882:	4770      	bx	lr
 */
uint32_t dacc_set_channel_selection(Dacc *p_dacc, uint32_t ul_channel)
{
	uint32_t mr = p_dacc->DACC_MR & (~DACC_MR_USER_SEL_Msk);
	if (ul_channel > MAX_CH_NB) {
		return DACC_RC_INVALID_PARAM;
   80884:	2001      	movs	r0, #1
	}
	mr &= ~(DACC_MR_TAG);
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
	p_dacc->DACC_MR = mr;
	return DACC_RC_OK;
}
   80886:	4770      	bx	lr

00080888 <dacc_set_timing>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_timing(Dacc *p_dacc,
		uint32_t ul_refresh, uint32_t ul_maxs, uint32_t ul_startup)
{
   80888:	b410      	push	{r4}
	uint32_t mr = p_dacc->DACC_MR
   8088a:	6844      	ldr	r4, [r0, #4]
   8088c:	f024 547c 	bic.w	r4, r4, #1056964608	; 0x3f000000
   80890:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
		& (~(DACC_MR_REFRESH_Msk | DACC_MR_STARTUP_Msk));
	mr |= DACC_MR_REFRESH(ul_refresh);
   80894:	0209      	lsls	r1, r1, #8
   80896:	b289      	uxth	r1, r1
   80898:	430c      	orrs	r4, r1
	if (ul_maxs) {
   8089a:	b112      	cbz	r2, 808a2 <dacc_set_timing+0x1a>
		mr |= DACC_MR_MAXS;
   8089c:	f444 1400 	orr.w	r4, r4, #2097152	; 0x200000
   808a0:	e001      	b.n	808a6 <dacc_set_timing+0x1e>
	} else {
		mr &= ~DACC_MR_MAXS;
   808a2:	f424 1400 	bic.w	r4, r4, #2097152	; 0x200000
	}
	mr |= (DACC_MR_STARTUP_Msk & ((ul_startup) << DACC_MR_STARTUP_Pos));
   808a6:	061b      	lsls	r3, r3, #24
   808a8:	f003 537c 	and.w	r3, r3, #1056964608	; 0x3f000000
   808ac:	431c      	orrs	r4, r3
	p_dacc->DACC_MR = mr;
   808ae:	6044      	str	r4, [r0, #4]
	return DACC_RC_OK;
}
   808b0:	2000      	movs	r0, #0
   808b2:	f85d 4b04 	ldr.w	r4, [sp], #4
   808b6:	4770      	bx	lr

000808b8 <dacc_enable_channel>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_enable_channel(Dacc *p_dacc, uint32_t ul_channel)
{
	if (ul_channel > MAX_CH_NB)
   808b8:	2901      	cmp	r1, #1
   808ba:	d805      	bhi.n	808c8 <dacc_enable_channel+0x10>
		return DACC_RC_INVALID_PARAM;

	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
   808bc:	2301      	movs	r3, #1
   808be:	fa03 f101 	lsl.w	r1, r3, r1
   808c2:	6101      	str	r1, [r0, #16]
	return DACC_RC_OK;
   808c4:	2000      	movs	r0, #0
   808c6:	4770      	bx	lr
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_enable_channel(Dacc *p_dacc, uint32_t ul_channel)
{
	if (ul_channel > MAX_CH_NB)
		return DACC_RC_INVALID_PARAM;
   808c8:	2001      	movs	r0, #1

	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
	return DACC_RC_OK;
}
   808ca:	4770      	bx	lr

000808cc <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   808cc:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   808ce:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   808d2:	d016      	beq.n	80902 <pio_set_peripheral+0x36>
   808d4:	d804      	bhi.n	808e0 <pio_set_peripheral+0x14>
   808d6:	b1c1      	cbz	r1, 8090a <pio_set_peripheral+0x3e>
   808d8:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   808dc:	d00a      	beq.n	808f4 <pio_set_peripheral+0x28>
   808de:	e013      	b.n	80908 <pio_set_peripheral+0x3c>
   808e0:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   808e4:	d011      	beq.n	8090a <pio_set_peripheral+0x3e>
   808e6:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   808ea:	d00e      	beq.n	8090a <pio_set_peripheral+0x3e>
   808ec:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   808f0:	d10a      	bne.n	80908 <pio_set_peripheral+0x3c>
   808f2:	4770      	bx	lr
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   808f4:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   808f6:	6f01      	ldr	r1, [r0, #112]	; 0x70
   808f8:	400b      	ands	r3, r1
   808fa:	ea23 0302 	bic.w	r3, r3, r2
   808fe:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   80900:	e002      	b.n	80908 <pio_set_peripheral+0x3c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   80902:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   80904:	4313      	orrs	r3, r2
   80906:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   80908:	6042      	str	r2, [r0, #4]
   8090a:	4770      	bx	lr

0008090c <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   8090c:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   8090e:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80912:	bf14      	ite	ne
   80914:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80916:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   80918:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   8091c:	bf14      	ite	ne
   8091e:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
   80920:	6241      	streq	r1, [r0, #36]	; 0x24
			p_pio->PIO_IFSCER = ul_mask;
		}
	}
#elif (SAM3XA|| SAM3U)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
   80922:	f012 0f02 	tst.w	r2, #2
   80926:	d002      	beq.n	8092e <pio_set_input+0x22>
		p_pio->PIO_SCIFSR = ul_mask;
   80928:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   8092c:	e004      	b.n	80938 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
   8092e:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   80932:	bf18      	it	ne
   80934:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
   80938:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   8093a:	6001      	str	r1, [r0, #0]
   8093c:	4770      	bx	lr
   8093e:	bf00      	nop

00080940 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
   80940:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80942:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80944:	9c01      	ldr	r4, [sp, #4]
   80946:	b10c      	cbz	r4, 8094c <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
   80948:	6641      	str	r1, [r0, #100]	; 0x64
   8094a:	e000      	b.n	8094e <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
   8094c:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
   8094e:	b10b      	cbz	r3, 80954 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
   80950:	6501      	str	r1, [r0, #80]	; 0x50
   80952:	e000      	b.n	80956 <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
   80954:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
   80956:	b10a      	cbz	r2, 8095c <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
   80958:	6301      	str	r1, [r0, #48]	; 0x30
   8095a:	e000      	b.n	8095e <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
   8095c:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
   8095e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80960:	6001      	str	r1, [r0, #0]
}
   80962:	f85d 4b04 	ldr.w	r4, [sp], #4
   80966:	4770      	bx	lr

00080968 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80968:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   8096a:	4770      	bx	lr

0008096c <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   8096c:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   8096e:	4770      	bx	lr

00080970 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   80970:	b570      	push	{r4, r5, r6, lr}
   80972:	b082      	sub	sp, #8
   80974:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80976:	0944      	lsrs	r4, r0, #5
   80978:	f504 1400 	add.w	r4, r4, #2097152	; 0x200000
   8097c:	f204 7407 	addw	r4, r4, #1799	; 0x707
   80980:	0266      	lsls	r6, r4, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80982:	f001 44f0 	and.w	r4, r1, #2013265920	; 0x78000000
   80986:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   8098a:	d030      	beq.n	809ee <pio_configure_pin+0x7e>
   8098c:	d806      	bhi.n	8099c <pio_configure_pin+0x2c>
   8098e:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80992:	d00a      	beq.n	809aa <pio_configure_pin+0x3a>
   80994:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80998:	d018      	beq.n	809cc <pio_configure_pin+0x5c>
   8099a:	e049      	b.n	80a30 <pio_configure_pin+0xc0>
   8099c:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   809a0:	d030      	beq.n	80a04 <pio_configure_pin+0x94>
   809a2:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   809a6:	d02d      	beq.n	80a04 <pio_configure_pin+0x94>
   809a8:	e042      	b.n	80a30 <pio_configure_pin+0xc0>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   809aa:	f000 001f 	and.w	r0, r0, #31
   809ae:	2401      	movs	r4, #1
   809b0:	4084      	lsls	r4, r0
   809b2:	4630      	mov	r0, r6
   809b4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   809b8:	4622      	mov	r2, r4
   809ba:	4b1f      	ldr	r3, [pc, #124]	; (80a38 <pio_configure_pin+0xc8>)
   809bc:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   809be:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   809c2:	bf14      	ite	ne
   809c4:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   809c6:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   809c8:	2001      	movs	r0, #1
   809ca:	e032      	b.n	80a32 <pio_configure_pin+0xc2>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   809cc:	f000 001f 	and.w	r0, r0, #31
   809d0:	2401      	movs	r4, #1
   809d2:	4084      	lsls	r4, r0
   809d4:	4630      	mov	r0, r6
   809d6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   809da:	4622      	mov	r2, r4
   809dc:	4b16      	ldr	r3, [pc, #88]	; (80a38 <pio_configure_pin+0xc8>)
   809de:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   809e0:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   809e4:	bf14      	ite	ne
   809e6:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   809e8:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   809ea:	2001      	movs	r0, #1
   809ec:	e021      	b.n	80a32 <pio_configure_pin+0xc2>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   809ee:	f000 011f 	and.w	r1, r0, #31
   809f2:	2401      	movs	r4, #1
   809f4:	4630      	mov	r0, r6
   809f6:	fa04 f101 	lsl.w	r1, r4, r1
   809fa:	462a      	mov	r2, r5
   809fc:	4b0f      	ldr	r3, [pc, #60]	; (80a3c <pio_configure_pin+0xcc>)
   809fe:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80a00:	4620      	mov	r0, r4
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
   80a02:	e016      	b.n	80a32 <pio_configure_pin+0xc2>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80a04:	f000 011f 	and.w	r1, r0, #31
   80a08:	2401      	movs	r4, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80a0a:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80a0e:	ea05 0304 	and.w	r3, r5, r4
   80a12:	9300      	str	r3, [sp, #0]
   80a14:	4630      	mov	r0, r6
   80a16:	fa04 f101 	lsl.w	r1, r4, r1
   80a1a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80a1e:	bf14      	ite	ne
   80a20:	2200      	movne	r2, #0
   80a22:	2201      	moveq	r2, #1
   80a24:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80a28:	4d05      	ldr	r5, [pc, #20]	; (80a40 <pio_configure_pin+0xd0>)
   80a2a:	47a8      	blx	r5

	default:
		return 0;
	}

	return 1;
   80a2c:	4620      	mov	r0, r4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80a2e:	e000      	b.n	80a32 <pio_configure_pin+0xc2>

	default:
		return 0;
   80a30:	2000      	movs	r0, #0
	}

	return 1;
}
   80a32:	b002      	add	sp, #8
   80a34:	bd70      	pop	{r4, r5, r6, pc}
   80a36:	bf00      	nop
   80a38:	000808cd 	.word	0x000808cd
   80a3c:	0008090d 	.word	0x0008090d
   80a40:	00080941 	.word	0x00080941

00080a44 <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
   80a44:	b5f0      	push	{r4, r5, r6, r7, lr}
   80a46:	b083      	sub	sp, #12
   80a48:	4607      	mov	r7, r0
   80a4a:	460e      	mov	r6, r1
   80a4c:	4615      	mov	r5, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80a4e:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
   80a52:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80a56:	d026      	beq.n	80aa6 <pio_configure_pin_group+0x62>
   80a58:	d806      	bhi.n	80a68 <pio_configure_pin_group+0x24>
   80a5a:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80a5e:	d00a      	beq.n	80a76 <pio_configure_pin_group+0x32>
   80a60:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80a64:	d013      	beq.n	80a8e <pio_configure_pin_group+0x4a>
   80a66:	e034      	b.n	80ad2 <pio_configure_pin_group+0x8e>
   80a68:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80a6c:	d01f      	beq.n	80aae <pio_configure_pin_group+0x6a>
   80a6e:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80a72:	d01c      	beq.n	80aae <pio_configure_pin_group+0x6a>
   80a74:	e02d      	b.n	80ad2 <pio_configure_pin_group+0x8e>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   80a76:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80a7a:	4632      	mov	r2, r6
   80a7c:	4b16      	ldr	r3, [pc, #88]	; (80ad8 <pio_configure_pin_group+0x94>)
   80a7e:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a80:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80a84:	bf14      	ite	ne
   80a86:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80a88:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80a8a:	2001      	movs	r0, #1
   80a8c:	e022      	b.n	80ad4 <pio_configure_pin_group+0x90>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80a8e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80a92:	4632      	mov	r2, r6
   80a94:	4b10      	ldr	r3, [pc, #64]	; (80ad8 <pio_configure_pin_group+0x94>)
   80a96:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a98:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80a9c:	bf14      	ite	ne
   80a9e:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80aa0:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80aa2:	2001      	movs	r0, #1
   80aa4:	e016      	b.n	80ad4 <pio_configure_pin_group+0x90>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
   80aa6:	4b0d      	ldr	r3, [pc, #52]	; (80adc <pio_configure_pin_group+0x98>)
   80aa8:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80aaa:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
   80aac:	e012      	b.n	80ad4 <pio_configure_pin_group+0x90>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80aae:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
   80ab2:	f005 0301 	and.w	r3, r5, #1
   80ab6:	9300      	str	r3, [sp, #0]
   80ab8:	4638      	mov	r0, r7
   80aba:	4631      	mov	r1, r6
   80abc:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80ac0:	bf14      	ite	ne
   80ac2:	2200      	movne	r2, #0
   80ac4:	2201      	moveq	r2, #1
   80ac6:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80aca:	4c05      	ldr	r4, [pc, #20]	; (80ae0 <pio_configure_pin_group+0x9c>)
   80acc:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   80ace:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80ad0:	e000      	b.n	80ad4 <pio_configure_pin_group+0x90>

	default:
		return 0;
   80ad2:	2000      	movs	r0, #0
	}

	return 1;
}
   80ad4:	b003      	add	sp, #12
   80ad6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80ad8:	000808cd 	.word	0x000808cd
   80adc:	0008090d 	.word	0x0008090d
   80ae0:	00080941 	.word	0x00080941

00080ae4 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80ae4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80ae8:	4604      	mov	r4, r0
   80aea:	460e      	mov	r6, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80aec:	4b10      	ldr	r3, [pc, #64]	; (80b30 <pio_handler_process+0x4c>)
   80aee:	4798      	blx	r3
   80af0:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80af2:	4620      	mov	r0, r4
   80af4:	4b0f      	ldr	r3, [pc, #60]	; (80b34 <pio_handler_process+0x50>)
   80af6:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80af8:	4005      	ands	r5, r0
   80afa:	d017      	beq.n	80b2c <pio_handler_process+0x48>
   80afc:	4f0e      	ldr	r7, [pc, #56]	; (80b38 <pio_handler_process+0x54>)
   80afe:	f107 040c 	add.w	r4, r7, #12
   80b02:	376c      	adds	r7, #108	; 0x6c
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   80b04:	f854 3c0c 	ldr.w	r3, [r4, #-12]
   80b08:	42b3      	cmp	r3, r6
   80b0a:	d10a      	bne.n	80b22 <pio_handler_process+0x3e>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80b0c:	f854 1c08 	ldr.w	r1, [r4, #-8]
   80b10:	4229      	tst	r1, r5
   80b12:	d006      	beq.n	80b22 <pio_handler_process+0x3e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80b14:	6823      	ldr	r3, [r4, #0]
   80b16:	4630      	mov	r0, r6
   80b18:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
   80b1a:	f854 3c08 	ldr.w	r3, [r4, #-8]
   80b1e:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80b22:	42bc      	cmp	r4, r7
   80b24:	d002      	beq.n	80b2c <pio_handler_process+0x48>
   80b26:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
   80b28:	2d00      	cmp	r5, #0
   80b2a:	d1eb      	bne.n	80b04 <pio_handler_process+0x20>
   80b2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80b30:	00080969 	.word	0x00080969
   80b34:	0008096d 	.word	0x0008096d
   80b38:	20072ff4 	.word	0x20072ff4

00080b3c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80b3c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80b3e:	4802      	ldr	r0, [pc, #8]	; (80b48 <PIOA_Handler+0xc>)
   80b40:	210b      	movs	r1, #11
   80b42:	4b02      	ldr	r3, [pc, #8]	; (80b4c <PIOA_Handler+0x10>)
   80b44:	4798      	blx	r3
   80b46:	bd08      	pop	{r3, pc}
   80b48:	400e0e00 	.word	0x400e0e00
   80b4c:	00080ae5 	.word	0x00080ae5

00080b50 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80b50:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80b52:	4802      	ldr	r0, [pc, #8]	; (80b5c <PIOB_Handler+0xc>)
   80b54:	210c      	movs	r1, #12
   80b56:	4b02      	ldr	r3, [pc, #8]	; (80b60 <PIOB_Handler+0x10>)
   80b58:	4798      	blx	r3
   80b5a:	bd08      	pop	{r3, pc}
   80b5c:	400e1000 	.word	0x400e1000
   80b60:	00080ae5 	.word	0x00080ae5

00080b64 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80b64:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80b66:	4802      	ldr	r0, [pc, #8]	; (80b70 <PIOC_Handler+0xc>)
   80b68:	210d      	movs	r1, #13
   80b6a:	4b02      	ldr	r3, [pc, #8]	; (80b74 <PIOC_Handler+0x10>)
   80b6c:	4798      	blx	r3
   80b6e:	bd08      	pop	{r3, pc}
   80b70:	400e1200 	.word	0x400e1200
   80b74:	00080ae5 	.word	0x00080ae5

00080b78 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   80b78:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   80b7a:	4802      	ldr	r0, [pc, #8]	; (80b84 <PIOD_Handler+0xc>)
   80b7c:	210e      	movs	r1, #14
   80b7e:	4b02      	ldr	r3, [pc, #8]	; (80b88 <PIOD_Handler+0x10>)
   80b80:	4798      	blx	r3
   80b82:	bd08      	pop	{r3, pc}
   80b84:	400e1400 	.word	0x400e1400
   80b88:	00080ae5 	.word	0x00080ae5

00080b8c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   80b8c:	4b17      	ldr	r3, [pc, #92]	; (80bec <pmc_switch_mck_to_pllack+0x60>)
   80b8e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80b90:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   80b94:	4310      	orrs	r0, r2
   80b96:	6318      	str	r0, [r3, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80b98:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80b9a:	f013 0f08 	tst.w	r3, #8
   80b9e:	d109      	bne.n	80bb4 <pmc_switch_mck_to_pllack+0x28>
   80ba0:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80ba4:	4911      	ldr	r1, [pc, #68]	; (80bec <pmc_switch_mck_to_pllack+0x60>)
   80ba6:	e001      	b.n	80bac <pmc_switch_mck_to_pllack+0x20>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80ba8:	3b01      	subs	r3, #1
   80baa:	d019      	beq.n	80be0 <pmc_switch_mck_to_pllack+0x54>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80bac:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80bae:	f012 0f08 	tst.w	r2, #8
   80bb2:	d0f9      	beq.n	80ba8 <pmc_switch_mck_to_pllack+0x1c>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   80bb4:	4b0d      	ldr	r3, [pc, #52]	; (80bec <pmc_switch_mck_to_pllack+0x60>)
   80bb6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80bb8:	f022 0203 	bic.w	r2, r2, #3
   80bbc:	f042 0202 	orr.w	r2, r2, #2
   80bc0:	631a      	str	r2, [r3, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80bc2:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80bc4:	f010 0008 	ands.w	r0, r0, #8
   80bc8:	d10c      	bne.n	80be4 <pmc_switch_mck_to_pllack+0x58>
   80bca:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80bce:	4907      	ldr	r1, [pc, #28]	; (80bec <pmc_switch_mck_to_pllack+0x60>)
   80bd0:	e001      	b.n	80bd6 <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80bd2:	3b01      	subs	r3, #1
   80bd4:	d008      	beq.n	80be8 <pmc_switch_mck_to_pllack+0x5c>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80bd6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80bd8:	f012 0f08 	tst.w	r2, #8
   80bdc:	d0f9      	beq.n	80bd2 <pmc_switch_mck_to_pllack+0x46>
   80bde:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80be0:	2001      	movs	r0, #1
   80be2:	4770      	bx	lr
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
   80be4:	2000      	movs	r0, #0
   80be6:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80be8:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   80bea:	4770      	bx	lr
   80bec:	400e0600 	.word	0x400e0600

00080bf0 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   80bf0:	b138      	cbz	r0, 80c02 <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80bf2:	4911      	ldr	r1, [pc, #68]	; (80c38 <pmc_switch_mainck_to_xtal+0x48>)
   80bf4:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   80bf6:	4a11      	ldr	r2, [pc, #68]	; (80c3c <pmc_switch_mainck_to_xtal+0x4c>)
   80bf8:	401a      	ands	r2, r3
   80bfa:	4b11      	ldr	r3, [pc, #68]	; (80c40 <pmc_switch_mainck_to_xtal+0x50>)
   80bfc:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80bfe:	620b      	str	r3, [r1, #32]
   80c00:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80c02:	4a0d      	ldr	r2, [pc, #52]	; (80c38 <pmc_switch_mainck_to_xtal+0x48>)
   80c04:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80c06:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   80c0a:	f023 0303 	bic.w	r3, r3, #3
   80c0e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80c12:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   80c16:	0209      	lsls	r1, r1, #8
   80c18:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80c1a:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80c1c:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   80c1e:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80c20:	f013 0f01 	tst.w	r3, #1
   80c24:	d0fb      	beq.n	80c1e <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   80c26:	4a04      	ldr	r2, [pc, #16]	; (80c38 <pmc_switch_mainck_to_xtal+0x48>)
   80c28:	6a13      	ldr	r3, [r2, #32]
   80c2a:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   80c2e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   80c32:	6213      	str	r3, [r2, #32]
   80c34:	4770      	bx	lr
   80c36:	bf00      	nop
   80c38:	400e0600 	.word	0x400e0600
   80c3c:	fec8fffc 	.word	0xfec8fffc
   80c40:	01370002 	.word	0x01370002

00080c44 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   80c44:	4b02      	ldr	r3, [pc, #8]	; (80c50 <pmc_osc_is_ready_mainck+0xc>)
   80c46:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80c48:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80c4c:	4770      	bx	lr
   80c4e:	bf00      	nop
   80c50:	400e0600 	.word	0x400e0600

00080c54 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   80c54:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80c58:	4b01      	ldr	r3, [pc, #4]	; (80c60 <pmc_disable_pllack+0xc>)
   80c5a:	629a      	str	r2, [r3, #40]	; 0x28
   80c5c:	4770      	bx	lr
   80c5e:	bf00      	nop
   80c60:	400e0600 	.word	0x400e0600

00080c64 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   80c64:	4b02      	ldr	r3, [pc, #8]	; (80c70 <pmc_is_locked_pllack+0xc>)
   80c66:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80c68:	f000 0002 	and.w	r0, r0, #2
   80c6c:	4770      	bx	lr
   80c6e:	bf00      	nop
   80c70:	400e0600 	.word	0x400e0600

00080c74 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   80c74:	282c      	cmp	r0, #44	; 0x2c
   80c76:	d820      	bhi.n	80cba <pmc_enable_periph_clk+0x46>
		return 1;
	}

	if (ul_id < 32) {
   80c78:	281f      	cmp	r0, #31
   80c7a:	d80d      	bhi.n	80c98 <pmc_enable_periph_clk+0x24>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   80c7c:	4b12      	ldr	r3, [pc, #72]	; (80cc8 <pmc_enable_periph_clk+0x54>)
   80c7e:	699a      	ldr	r2, [r3, #24]
   80c80:	2301      	movs	r3, #1
   80c82:	4083      	lsls	r3, r0
   80c84:	401a      	ands	r2, r3
   80c86:	4293      	cmp	r3, r2
   80c88:	d019      	beq.n	80cbe <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER0 = 1 << ul_id;
   80c8a:	2301      	movs	r3, #1
   80c8c:	fa03 f000 	lsl.w	r0, r3, r0
   80c90:	4b0d      	ldr	r3, [pc, #52]	; (80cc8 <pmc_enable_periph_clk+0x54>)
   80c92:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80c94:	2000      	movs	r0, #0
   80c96:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80c98:	4b0b      	ldr	r3, [pc, #44]	; (80cc8 <pmc_enable_periph_clk+0x54>)
   80c9a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP)
	} else {
		ul_id -= 32;
   80c9e:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80ca0:	2301      	movs	r3, #1
   80ca2:	4083      	lsls	r3, r0
   80ca4:	401a      	ands	r2, r3
   80ca6:	4293      	cmp	r3, r2
   80ca8:	d00b      	beq.n	80cc2 <pmc_enable_periph_clk+0x4e>
			PMC->PMC_PCER1 = 1 << ul_id;
   80caa:	2301      	movs	r3, #1
   80cac:	fa03 f000 	lsl.w	r0, r3, r0
   80cb0:	4b05      	ldr	r3, [pc, #20]	; (80cc8 <pmc_enable_periph_clk+0x54>)
   80cb2:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
   80cb6:	2000      	movs	r0, #0
   80cb8:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
   80cba:	2001      	movs	r0, #1
   80cbc:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80cbe:	2000      	movs	r0, #0
   80cc0:	4770      	bx	lr
   80cc2:	2000      	movs	r0, #0
}
   80cc4:	4770      	bx	lr
   80cc6:	bf00      	nop
   80cc8:	400e0600 	.word	0x400e0600

00080ccc <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   80ccc:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80cce:	0189      	lsls	r1, r1, #6
   80cd0:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   80cd2:	2402      	movs	r4, #2
   80cd4:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   80cd6:	f04f 31ff 	mov.w	r1, #4294967295
   80cda:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   80cdc:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   80cde:	605a      	str	r2, [r3, #4]
}
   80ce0:	f85d 4b04 	ldr.w	r4, [sp], #4
   80ce4:	4770      	bx	lr
   80ce6:	bf00      	nop

00080ce8 <tc_set_block_mode>:
		uint32_t ul_blockmode)
{
	/* Validate inputs. */
	Assert(p_tc);
	
	p_tc->TC_BMR = ul_blockmode;
   80ce8:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
   80cec:	4770      	bx	lr
   80cee:	bf00      	nop

00080cf0 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   80cf0:	0189      	lsls	r1, r1, #6
   80cf2:	2305      	movs	r3, #5
   80cf4:	5043      	str	r3, [r0, r1]
   80cf6:	4770      	bx	lr

00080cf8 <tc_stop>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKDIS;
   80cf8:	0189      	lsls	r1, r1, #6
   80cfa:	2302      	movs	r3, #2
   80cfc:	5043      	str	r3, [r0, r1]
   80cfe:	4770      	bx	lr

00080d00 <tc_read_cv>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_CV;
   80d00:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80d04:	6908      	ldr	r0, [r1, #16]
}
   80d06:	4770      	bx	lr

00080d08 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   80d08:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80d0c:	61ca      	str	r2, [r1, #28]
   80d0e:	4770      	bx	lr

00080d10 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80d10:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
   80d14:	624a      	str	r2, [r1, #36]	; 0x24
   80d16:	4770      	bx	lr

00080d18 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80d18:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
   80d1c:	6a08      	ldr	r0, [r1, #32]
}
   80d1e:	4770      	bx	lr

00080d20 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80d20:	e7fe      	b.n	80d20 <Dummy_Handler>
   80d22:	bf00      	nop

00080d24 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80d24:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80d26:	4b1e      	ldr	r3, [pc, #120]	; (80da0 <Reset_Handler+0x7c>)
   80d28:	4a1e      	ldr	r2, [pc, #120]	; (80da4 <Reset_Handler+0x80>)
   80d2a:	429a      	cmp	r2, r3
   80d2c:	d003      	beq.n	80d36 <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
   80d2e:	4b1e      	ldr	r3, [pc, #120]	; (80da8 <Reset_Handler+0x84>)
   80d30:	4a1b      	ldr	r2, [pc, #108]	; (80da0 <Reset_Handler+0x7c>)
   80d32:	429a      	cmp	r2, r3
   80d34:	d304      	bcc.n	80d40 <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80d36:	4b1d      	ldr	r3, [pc, #116]	; (80dac <Reset_Handler+0x88>)
   80d38:	4a1d      	ldr	r2, [pc, #116]	; (80db0 <Reset_Handler+0x8c>)
   80d3a:	429a      	cmp	r2, r3
   80d3c:	d30f      	bcc.n	80d5e <Reset_Handler+0x3a>
   80d3e:	e01a      	b.n	80d76 <Reset_Handler+0x52>
   80d40:	4b1c      	ldr	r3, [pc, #112]	; (80db4 <Reset_Handler+0x90>)
   80d42:	4c1d      	ldr	r4, [pc, #116]	; (80db8 <Reset_Handler+0x94>)
   80d44:	1ae4      	subs	r4, r4, r3
   80d46:	f024 0403 	bic.w	r4, r4, #3
   80d4a:	3404      	adds	r4, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80d4c:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
   80d4e:	4814      	ldr	r0, [pc, #80]	; (80da0 <Reset_Handler+0x7c>)
   80d50:	4914      	ldr	r1, [pc, #80]	; (80da4 <Reset_Handler+0x80>)
   80d52:	585a      	ldr	r2, [r3, r1]
   80d54:	501a      	str	r2, [r3, r0]
   80d56:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80d58:	42a3      	cmp	r3, r4
   80d5a:	d1fa      	bne.n	80d52 <Reset_Handler+0x2e>
   80d5c:	e7eb      	b.n	80d36 <Reset_Handler+0x12>
   80d5e:	4b17      	ldr	r3, [pc, #92]	; (80dbc <Reset_Handler+0x98>)
   80d60:	4917      	ldr	r1, [pc, #92]	; (80dc0 <Reset_Handler+0x9c>)
   80d62:	1ac9      	subs	r1, r1, r3
   80d64:	f021 0103 	bic.w	r1, r1, #3
   80d68:	1d1a      	adds	r2, r3, #4
   80d6a:	4411      	add	r1, r2
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
		*pDest++ = 0;
   80d6c:	2200      	movs	r2, #0
   80d6e:	f843 2f04 	str.w	r2, [r3, #4]!
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80d72:	428b      	cmp	r3, r1
   80d74:	d1fb      	bne.n	80d6e <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80d76:	4a13      	ldr	r2, [pc, #76]	; (80dc4 <Reset_Handler+0xa0>)
   80d78:	f022 4360 	bic.w	r3, r2, #3758096384	; 0xe0000000
   80d7c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   80d80:	4911      	ldr	r1, [pc, #68]	; (80dc8 <Reset_Handler+0xa4>)
   80d82:	608b      	str	r3, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80d84:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
   80d88:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
   80d8c:	d203      	bcs.n	80d96 <Reset_Handler+0x72>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80d8e:	688a      	ldr	r2, [r1, #8]
   80d90:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
   80d94:	608a      	str	r2, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80d96:	4b0d      	ldr	r3, [pc, #52]	; (80dcc <Reset_Handler+0xa8>)
   80d98:	4798      	blx	r3

	/* Branch to main function */
	main();
   80d9a:	4b0d      	ldr	r3, [pc, #52]	; (80dd0 <Reset_Handler+0xac>)
   80d9c:	4798      	blx	r3
   80d9e:	e7fe      	b.n	80d9e <Reset_Handler+0x7a>
   80da0:	20070000 	.word	0x20070000
   80da4:	000859d4 	.word	0x000859d4
   80da8:	200708c4 	.word	0x200708c4
   80dac:	200730a0 	.word	0x200730a0
   80db0:	200708c4 	.word	0x200708c4
   80db4:	20070004 	.word	0x20070004
   80db8:	200708c7 	.word	0x200708c7
   80dbc:	200708c0 	.word	0x200708c0
   80dc0:	2007309b 	.word	0x2007309b
   80dc4:	00080000 	.word	0x00080000
   80dc8:	e000ed00 	.word	0xe000ed00
   80dcc:	00080fad 	.word	0x00080fad
   80dd0:	000804f9 	.word	0x000804f9

00080dd4 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80dd4:	4b3e      	ldr	r3, [pc, #248]	; (80ed0 <SystemCoreClockUpdate+0xfc>)
   80dd6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80dd8:	f003 0303 	and.w	r3, r3, #3
   80ddc:	2b03      	cmp	r3, #3
   80dde:	d85f      	bhi.n	80ea0 <SystemCoreClockUpdate+0xcc>
   80de0:	e8df f003 	tbb	[pc, r3]
   80de4:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80de8:	4b3a      	ldr	r3, [pc, #232]	; (80ed4 <SystemCoreClockUpdate+0x100>)
   80dea:	695b      	ldr	r3, [r3, #20]
   80dec:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80df0:	bf14      	ite	ne
   80df2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80df6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80dfa:	4b37      	ldr	r3, [pc, #220]	; (80ed8 <SystemCoreClockUpdate+0x104>)
   80dfc:	601a      	str	r2, [r3, #0]
   80dfe:	e04f      	b.n	80ea0 <SystemCoreClockUpdate+0xcc>
		}
		break;
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80e00:	4b33      	ldr	r3, [pc, #204]	; (80ed0 <SystemCoreClockUpdate+0xfc>)
   80e02:	6a1b      	ldr	r3, [r3, #32]
   80e04:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80e08:	d003      	beq.n	80e12 <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80e0a:	4a34      	ldr	r2, [pc, #208]	; (80edc <SystemCoreClockUpdate+0x108>)
   80e0c:	4b32      	ldr	r3, [pc, #200]	; (80ed8 <SystemCoreClockUpdate+0x104>)
   80e0e:	601a      	str	r2, [r3, #0]
   80e10:	e046      	b.n	80ea0 <SystemCoreClockUpdate+0xcc>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80e12:	4a33      	ldr	r2, [pc, #204]	; (80ee0 <SystemCoreClockUpdate+0x10c>)
   80e14:	4b30      	ldr	r3, [pc, #192]	; (80ed8 <SystemCoreClockUpdate+0x104>)
   80e16:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80e18:	4b2d      	ldr	r3, [pc, #180]	; (80ed0 <SystemCoreClockUpdate+0xfc>)
   80e1a:	6a1b      	ldr	r3, [r3, #32]
   80e1c:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80e20:	2b10      	cmp	r3, #16
   80e22:	d002      	beq.n	80e2a <SystemCoreClockUpdate+0x56>
   80e24:	2b20      	cmp	r3, #32
   80e26:	d004      	beq.n	80e32 <SystemCoreClockUpdate+0x5e>
   80e28:	e03a      	b.n	80ea0 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80e2a:	4a2e      	ldr	r2, [pc, #184]	; (80ee4 <SystemCoreClockUpdate+0x110>)
   80e2c:	4b2a      	ldr	r3, [pc, #168]	; (80ed8 <SystemCoreClockUpdate+0x104>)
   80e2e:	601a      	str	r2, [r3, #0]
				break;
   80e30:	e036      	b.n	80ea0 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80e32:	4a2a      	ldr	r2, [pc, #168]	; (80edc <SystemCoreClockUpdate+0x108>)
   80e34:	4b28      	ldr	r3, [pc, #160]	; (80ed8 <SystemCoreClockUpdate+0x104>)
   80e36:	601a      	str	r2, [r3, #0]
				break;
   80e38:	e032      	b.n	80ea0 <SystemCoreClockUpdate+0xcc>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80e3a:	4b25      	ldr	r3, [pc, #148]	; (80ed0 <SystemCoreClockUpdate+0xfc>)
   80e3c:	6a1b      	ldr	r3, [r3, #32]
   80e3e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80e42:	d003      	beq.n	80e4c <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80e44:	4a25      	ldr	r2, [pc, #148]	; (80edc <SystemCoreClockUpdate+0x108>)
   80e46:	4b24      	ldr	r3, [pc, #144]	; (80ed8 <SystemCoreClockUpdate+0x104>)
   80e48:	601a      	str	r2, [r3, #0]
   80e4a:	e012      	b.n	80e72 <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80e4c:	4a24      	ldr	r2, [pc, #144]	; (80ee0 <SystemCoreClockUpdate+0x10c>)
   80e4e:	4b22      	ldr	r3, [pc, #136]	; (80ed8 <SystemCoreClockUpdate+0x104>)
   80e50:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80e52:	4b1f      	ldr	r3, [pc, #124]	; (80ed0 <SystemCoreClockUpdate+0xfc>)
   80e54:	6a1b      	ldr	r3, [r3, #32]
   80e56:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80e5a:	2b10      	cmp	r3, #16
   80e5c:	d002      	beq.n	80e64 <SystemCoreClockUpdate+0x90>
   80e5e:	2b20      	cmp	r3, #32
   80e60:	d004      	beq.n	80e6c <SystemCoreClockUpdate+0x98>
   80e62:	e006      	b.n	80e72 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80e64:	4a1f      	ldr	r2, [pc, #124]	; (80ee4 <SystemCoreClockUpdate+0x110>)
   80e66:	4b1c      	ldr	r3, [pc, #112]	; (80ed8 <SystemCoreClockUpdate+0x104>)
   80e68:	601a      	str	r2, [r3, #0]
				break;
   80e6a:	e002      	b.n	80e72 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80e6c:	4a1b      	ldr	r2, [pc, #108]	; (80edc <SystemCoreClockUpdate+0x108>)
   80e6e:	4b1a      	ldr	r3, [pc, #104]	; (80ed8 <SystemCoreClockUpdate+0x104>)
   80e70:	601a      	str	r2, [r3, #0]
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   80e72:	4b17      	ldr	r3, [pc, #92]	; (80ed0 <SystemCoreClockUpdate+0xfc>)
   80e74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80e76:	f003 0303 	and.w	r3, r3, #3
   80e7a:	2b02      	cmp	r3, #2
   80e7c:	d10d      	bne.n	80e9a <SystemCoreClockUpdate+0xc6>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80e7e:	4b14      	ldr	r3, [pc, #80]	; (80ed0 <SystemCoreClockUpdate+0xfc>)
   80e80:	6a98      	ldr	r0, [r3, #40]	; 0x28
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80e82:	6a99      	ldr	r1, [r3, #40]	; 0x28
   80e84:	4b14      	ldr	r3, [pc, #80]	; (80ed8 <SystemCoreClockUpdate+0x104>)
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80e86:	f3c0 400a 	ubfx	r0, r0, #16, #11
   80e8a:	681a      	ldr	r2, [r3, #0]
   80e8c:	fb00 2202 	mla	r2, r0, r2, r2
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80e90:	b2c9      	uxtb	r1, r1
   80e92:	fbb2 f2f1 	udiv	r2, r2, r1
   80e96:	601a      	str	r2, [r3, #0]
   80e98:	e002      	b.n	80ea0 <SystemCoreClockUpdate+0xcc>
				                             CKGR_PLLAR_DIVA_Pos));
		} else {
			SystemCoreClock = SYS_UTMIPLL / 2U;
   80e9a:	4a13      	ldr	r2, [pc, #76]	; (80ee8 <SystemCoreClockUpdate+0x114>)
   80e9c:	4b0e      	ldr	r3, [pc, #56]	; (80ed8 <SystemCoreClockUpdate+0x104>)
   80e9e:	601a      	str	r2, [r3, #0]
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   80ea0:	4b0b      	ldr	r3, [pc, #44]	; (80ed0 <SystemCoreClockUpdate+0xfc>)
   80ea2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80ea4:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80ea8:	2b70      	cmp	r3, #112	; 0x70
   80eaa:	d107      	bne.n	80ebc <SystemCoreClockUpdate+0xe8>
		SystemCoreClock /= 3U;
   80eac:	4b0a      	ldr	r3, [pc, #40]	; (80ed8 <SystemCoreClockUpdate+0x104>)
   80eae:	681a      	ldr	r2, [r3, #0]
   80eb0:	490e      	ldr	r1, [pc, #56]	; (80eec <SystemCoreClockUpdate+0x118>)
   80eb2:	fba1 0202 	umull	r0, r2, r1, r2
   80eb6:	0852      	lsrs	r2, r2, #1
   80eb8:	601a      	str	r2, [r3, #0]
   80eba:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   80ebc:	4b04      	ldr	r3, [pc, #16]	; (80ed0 <SystemCoreClockUpdate+0xfc>)
   80ebe:	6b19      	ldr	r1, [r3, #48]	; 0x30
   80ec0:	4b05      	ldr	r3, [pc, #20]	; (80ed8 <SystemCoreClockUpdate+0x104>)
   80ec2:	f3c1 1102 	ubfx	r1, r1, #4, #3
   80ec6:	681a      	ldr	r2, [r3, #0]
   80ec8:	40ca      	lsrs	r2, r1
   80eca:	601a      	str	r2, [r3, #0]
   80ecc:	4770      	bx	lr
   80ece:	bf00      	nop
   80ed0:	400e0600 	.word	0x400e0600
   80ed4:	400e1a10 	.word	0x400e1a10
   80ed8:	20070000 	.word	0x20070000
   80edc:	00b71b00 	.word	0x00b71b00
   80ee0:	003d0900 	.word	0x003d0900
   80ee4:	007a1200 	.word	0x007a1200
   80ee8:	0e4e1c00 	.word	0x0e4e1c00
   80eec:	aaaaaaab 	.word	0xaaaaaaab

00080ef0 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
   80ef0:	4b1b      	ldr	r3, [pc, #108]	; (80f60 <system_init_flash+0x70>)
   80ef2:	4298      	cmp	r0, r3
   80ef4:	d806      	bhi.n	80f04 <system_init_flash+0x14>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
   80ef6:	2300      	movs	r3, #0
   80ef8:	4a1a      	ldr	r2, [pc, #104]	; (80f64 <system_init_flash+0x74>)
   80efa:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
   80efc:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80f00:	6013      	str	r3, [r2, #0]
   80f02:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
   80f04:	4b18      	ldr	r3, [pc, #96]	; (80f68 <system_init_flash+0x78>)
   80f06:	4298      	cmp	r0, r3
   80f08:	d807      	bhi.n	80f1a <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
   80f0a:	f44f 7380 	mov.w	r3, #256	; 0x100
   80f0e:	4a15      	ldr	r2, [pc, #84]	; (80f64 <system_init_flash+0x74>)
   80f10:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
   80f12:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80f16:	6013      	str	r3, [r2, #0]
   80f18:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
   80f1a:	4b14      	ldr	r3, [pc, #80]	; (80f6c <system_init_flash+0x7c>)
   80f1c:	4298      	cmp	r0, r3
   80f1e:	d807      	bhi.n	80f30 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
   80f20:	f44f 7300 	mov.w	r3, #512	; 0x200
   80f24:	4a0f      	ldr	r2, [pc, #60]	; (80f64 <system_init_flash+0x74>)
   80f26:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
   80f28:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80f2c:	6013      	str	r3, [r2, #0]
   80f2e:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
   80f30:	4b0f      	ldr	r3, [pc, #60]	; (80f70 <system_init_flash+0x80>)
   80f32:	4298      	cmp	r0, r3
   80f34:	d807      	bhi.n	80f46 <system_init_flash+0x56>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
   80f36:	f44f 7340 	mov.w	r3, #768	; 0x300
   80f3a:	4a0a      	ldr	r2, [pc, #40]	; (80f64 <system_init_flash+0x74>)
   80f3c:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
   80f3e:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80f42:	6013      	str	r3, [r2, #0]
   80f44:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
   80f46:	4b0b      	ldr	r3, [pc, #44]	; (80f74 <system_init_flash+0x84>)
   80f48:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
   80f4a:	bf94      	ite	ls
   80f4c:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
   80f50:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
   80f54:	4a03      	ldr	r2, [pc, #12]	; (80f64 <system_init_flash+0x74>)
   80f56:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
   80f58:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80f5c:	6013      	str	r3, [r2, #0]
   80f5e:	4770      	bx	lr
   80f60:	0121eabf 	.word	0x0121eabf
   80f64:	400e0a00 	.word	0x400e0a00
   80f68:	02faf07f 	.word	0x02faf07f
   80f6c:	03d08fff 	.word	0x03d08fff
   80f70:	04c4b3ff 	.word	0x04c4b3ff
   80f74:	055d4a7f 	.word	0x055d4a7f

00080f78 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   80f78:	4b09      	ldr	r3, [pc, #36]	; (80fa0 <_sbrk+0x28>)
   80f7a:	681b      	ldr	r3, [r3, #0]
   80f7c:	b913      	cbnz	r3, 80f84 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
   80f7e:	4a09      	ldr	r2, [pc, #36]	; (80fa4 <_sbrk+0x2c>)
   80f80:	4b07      	ldr	r3, [pc, #28]	; (80fa0 <_sbrk+0x28>)
   80f82:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   80f84:	4b06      	ldr	r3, [pc, #24]	; (80fa0 <_sbrk+0x28>)
   80f86:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   80f88:	181a      	adds	r2, r3, r0
   80f8a:	4907      	ldr	r1, [pc, #28]	; (80fa8 <_sbrk+0x30>)
   80f8c:	4291      	cmp	r1, r2
   80f8e:	db04      	blt.n	80f9a <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
   80f90:	4610      	mov	r0, r2
   80f92:	4a03      	ldr	r2, [pc, #12]	; (80fa0 <_sbrk+0x28>)
   80f94:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   80f96:	4618      	mov	r0, r3
   80f98:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
   80f9a:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
   80f9e:	4770      	bx	lr
   80fa0:	20073064 	.word	0x20073064
   80fa4:	200750a0 	.word	0x200750a0
   80fa8:	20087ffc 	.word	0x20087ffc

00080fac <__libc_init_array>:
   80fac:	b570      	push	{r4, r5, r6, lr}
   80fae:	4b0e      	ldr	r3, [pc, #56]	; (80fe8 <__libc_init_array+0x3c>)
   80fb0:	4d0e      	ldr	r5, [pc, #56]	; (80fec <__libc_init_array+0x40>)
   80fb2:	2400      	movs	r4, #0
   80fb4:	1aed      	subs	r5, r5, r3
   80fb6:	10ad      	asrs	r5, r5, #2
   80fb8:	461e      	mov	r6, r3
   80fba:	42ac      	cmp	r4, r5
   80fbc:	d004      	beq.n	80fc8 <__libc_init_array+0x1c>
   80fbe:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   80fc2:	4790      	blx	r2
   80fc4:	3401      	adds	r4, #1
   80fc6:	e7f8      	b.n	80fba <__libc_init_array+0xe>
   80fc8:	f004 fcee 	bl	859a8 <_init>
   80fcc:	4d08      	ldr	r5, [pc, #32]	; (80ff0 <__libc_init_array+0x44>)
   80fce:	4b09      	ldr	r3, [pc, #36]	; (80ff4 <__libc_init_array+0x48>)
   80fd0:	2400      	movs	r4, #0
   80fd2:	1aed      	subs	r5, r5, r3
   80fd4:	10ad      	asrs	r5, r5, #2
   80fd6:	461e      	mov	r6, r3
   80fd8:	42ac      	cmp	r4, r5
   80fda:	d004      	beq.n	80fe6 <__libc_init_array+0x3a>
   80fdc:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   80fe0:	4790      	blx	r2
   80fe2:	3401      	adds	r4, #1
   80fe4:	e7f8      	b.n	80fd8 <__libc_init_array+0x2c>
   80fe6:	bd70      	pop	{r4, r5, r6, pc}
   80fe8:	000859b4 	.word	0x000859b4
   80fec:	000859b4 	.word	0x000859b4
   80ff0:	000859bc 	.word	0x000859bc
   80ff4:	000859b4 	.word	0x000859b4

00080ff8 <memset>:
   80ff8:	4402      	add	r2, r0
   80ffa:	4603      	mov	r3, r0
   80ffc:	4293      	cmp	r3, r2
   80ffe:	d002      	beq.n	81006 <memset+0xe>
   81000:	f803 1b01 	strb.w	r1, [r3], #1
   81004:	e7fa      	b.n	80ffc <memset+0x4>
   81006:	4770      	bx	lr

00081008 <_sprintf_r>:
   81008:	b40c      	push	{r2, r3}
   8100a:	b510      	push	{r4, lr}
   8100c:	b09c      	sub	sp, #112	; 0x70
   8100e:	ab1e      	add	r3, sp, #120	; 0x78
   81010:	9102      	str	r1, [sp, #8]
   81012:	9106      	str	r1, [sp, #24]
   81014:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   81018:	f853 2b04 	ldr.w	r2, [r3], #4
   8101c:	9104      	str	r1, [sp, #16]
   8101e:	9107      	str	r1, [sp, #28]
   81020:	f64f 71ff 	movw	r1, #65535	; 0xffff
   81024:	f8ad 1016 	strh.w	r1, [sp, #22]
   81028:	f44f 7402 	mov.w	r4, #520	; 0x208
   8102c:	a902      	add	r1, sp, #8
   8102e:	9301      	str	r3, [sp, #4]
   81030:	f8ad 4014 	strh.w	r4, [sp, #20]
   81034:	f000 f834 	bl	810a0 <_svfprintf_r>
   81038:	9b02      	ldr	r3, [sp, #8]
   8103a:	2200      	movs	r2, #0
   8103c:	701a      	strb	r2, [r3, #0]
   8103e:	b01c      	add	sp, #112	; 0x70
   81040:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   81044:	b002      	add	sp, #8
   81046:	4770      	bx	lr

00081048 <sprintf>:
   81048:	b40e      	push	{r1, r2, r3}
   8104a:	b500      	push	{lr}
   8104c:	f44f 7102 	mov.w	r1, #520	; 0x208
   81050:	b09c      	sub	sp, #112	; 0x70
   81052:	f8ad 1014 	strh.w	r1, [sp, #20]
   81056:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   8105a:	9104      	str	r1, [sp, #16]
   8105c:	9107      	str	r1, [sp, #28]
   8105e:	f64f 71ff 	movw	r1, #65535	; 0xffff
   81062:	ab1d      	add	r3, sp, #116	; 0x74
   81064:	f8ad 1016 	strh.w	r1, [sp, #22]
   81068:	4908      	ldr	r1, [pc, #32]	; (8108c <sprintf+0x44>)
   8106a:	f853 2b04 	ldr.w	r2, [r3], #4
   8106e:	9002      	str	r0, [sp, #8]
   81070:	9006      	str	r0, [sp, #24]
   81072:	6808      	ldr	r0, [r1, #0]
   81074:	a902      	add	r1, sp, #8
   81076:	9301      	str	r3, [sp, #4]
   81078:	f000 f812 	bl	810a0 <_svfprintf_r>
   8107c:	9b02      	ldr	r3, [sp, #8]
   8107e:	2200      	movs	r2, #0
   81080:	701a      	strb	r2, [r3, #0]
   81082:	b01c      	add	sp, #112	; 0x70
   81084:	f85d eb04 	ldr.w	lr, [sp], #4
   81088:	b003      	add	sp, #12
   8108a:	4770      	bx	lr
   8108c:	20070008 	.word	0x20070008

00081090 <strlen>:
   81090:	4603      	mov	r3, r0
   81092:	f813 2b01 	ldrb.w	r2, [r3], #1
   81096:	2a00      	cmp	r2, #0
   81098:	d1fb      	bne.n	81092 <strlen+0x2>
   8109a:	1a18      	subs	r0, r3, r0
   8109c:	3801      	subs	r0, #1
   8109e:	4770      	bx	lr

000810a0 <_svfprintf_r>:
   810a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   810a4:	b0c3      	sub	sp, #268	; 0x10c
   810a6:	468b      	mov	fp, r1
   810a8:	4698      	mov	r8, r3
   810aa:	920b      	str	r2, [sp, #44]	; 0x2c
   810ac:	4682      	mov	sl, r0
   810ae:	f001 ff2b 	bl	82f08 <_localeconv_r>
   810b2:	6800      	ldr	r0, [r0, #0]
   810b4:	9018      	str	r0, [sp, #96]	; 0x60
   810b6:	f7ff ffeb 	bl	81090 <strlen>
   810ba:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   810be:	9010      	str	r0, [sp, #64]	; 0x40
   810c0:	0619      	lsls	r1, r3, #24
   810c2:	d515      	bpl.n	810f0 <_svfprintf_r+0x50>
   810c4:	f8db 3010 	ldr.w	r3, [fp, #16]
   810c8:	b993      	cbnz	r3, 810f0 <_svfprintf_r+0x50>
   810ca:	4650      	mov	r0, sl
   810cc:	2140      	movs	r1, #64	; 0x40
   810ce:	f001 ff2d 	bl	82f2c <_malloc_r>
   810d2:	f8cb 0000 	str.w	r0, [fp]
   810d6:	f8cb 0010 	str.w	r0, [fp, #16]
   810da:	b930      	cbnz	r0, 810ea <_svfprintf_r+0x4a>
   810dc:	230c      	movs	r3, #12
   810de:	f8ca 3000 	str.w	r3, [sl]
   810e2:	f04f 30ff 	mov.w	r0, #4294967295
   810e6:	f000 bf6e 	b.w	81fc6 <_svfprintf_r+0xf26>
   810ea:	2340      	movs	r3, #64	; 0x40
   810ec:	f8cb 3014 	str.w	r3, [fp, #20]
   810f0:	2400      	movs	r4, #0
   810f2:	2500      	movs	r5, #0
   810f4:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
   810f8:	2300      	movs	r3, #0
   810fa:	ae32      	add	r6, sp, #200	; 0xc8
   810fc:	9625      	str	r6, [sp, #148]	; 0x94
   810fe:	9327      	str	r3, [sp, #156]	; 0x9c
   81100:	9326      	str	r3, [sp, #152]	; 0x98
   81102:	9309      	str	r3, [sp, #36]	; 0x24
   81104:	931b      	str	r3, [sp, #108]	; 0x6c
   81106:	931a      	str	r3, [sp, #104]	; 0x68
   81108:	930f      	str	r3, [sp, #60]	; 0x3c
   8110a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8110c:	461c      	mov	r4, r3
   8110e:	f813 2b01 	ldrb.w	r2, [r3], #1
   81112:	b91a      	cbnz	r2, 8111c <_svfprintf_r+0x7c>
   81114:	980b      	ldr	r0, [sp, #44]	; 0x2c
   81116:	1a25      	subs	r5, r4, r0
   81118:	d103      	bne.n	81122 <_svfprintf_r+0x82>
   8111a:	e01b      	b.n	81154 <_svfprintf_r+0xb4>
   8111c:	2a25      	cmp	r2, #37	; 0x25
   8111e:	d1f5      	bne.n	8110c <_svfprintf_r+0x6c>
   81120:	e7f8      	b.n	81114 <_svfprintf_r+0x74>
   81122:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81124:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81126:	442b      	add	r3, r5
   81128:	9327      	str	r3, [sp, #156]	; 0x9c
   8112a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8112c:	e886 0022 	stmia.w	r6, {r1, r5}
   81130:	3301      	adds	r3, #1
   81132:	2b07      	cmp	r3, #7
   81134:	9326      	str	r3, [sp, #152]	; 0x98
   81136:	dc01      	bgt.n	8113c <_svfprintf_r+0x9c>
   81138:	3608      	adds	r6, #8
   8113a:	e008      	b.n	8114e <_svfprintf_r+0xae>
   8113c:	4650      	mov	r0, sl
   8113e:	4659      	mov	r1, fp
   81140:	aa25      	add	r2, sp, #148	; 0x94
   81142:	f002 feff 	bl	83f44 <__ssprint_r>
   81146:	2800      	cmp	r0, #0
   81148:	f040 8735 	bne.w	81fb6 <_svfprintf_r+0xf16>
   8114c:	ae32      	add	r6, sp, #200	; 0xc8
   8114e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81150:	442a      	add	r2, r5
   81152:	920f      	str	r2, [sp, #60]	; 0x3c
   81154:	7823      	ldrb	r3, [r4, #0]
   81156:	2b00      	cmp	r3, #0
   81158:	f000 8726 	beq.w	81fa8 <_svfprintf_r+0xf08>
   8115c:	2300      	movs	r3, #0
   8115e:	3401      	adds	r4, #1
   81160:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81164:	f04f 39ff 	mov.w	r9, #4294967295
   81168:	930e      	str	r3, [sp, #56]	; 0x38
   8116a:	461f      	mov	r7, r3
   8116c:	1c65      	adds	r5, r4, #1
   8116e:	7824      	ldrb	r4, [r4, #0]
   81170:	950b      	str	r5, [sp, #44]	; 0x2c
   81172:	9408      	str	r4, [sp, #32]
   81174:	9c08      	ldr	r4, [sp, #32]
   81176:	f1a4 0220 	sub.w	r2, r4, #32
   8117a:	2a58      	cmp	r2, #88	; 0x58
   8117c:	f200 8385 	bhi.w	8188a <_svfprintf_r+0x7ea>
   81180:	e8df f012 	tbh	[pc, r2, lsl #1]
   81184:	0383006d 	.word	0x0383006d
   81188:	00710383 	.word	0x00710383
   8118c:	03830383 	.word	0x03830383
   81190:	03830383 	.word	0x03830383
   81194:	03830383 	.word	0x03830383
   81198:	0059005b 	.word	0x0059005b
   8119c:	00770383 	.word	0x00770383
   811a0:	0383007a 	.word	0x0383007a
   811a4:	00a2009f 	.word	0x00a2009f
   811a8:	00a200a2 	.word	0x00a200a2
   811ac:	00a200a2 	.word	0x00a200a2
   811b0:	00a200a2 	.word	0x00a200a2
   811b4:	00a200a2 	.word	0x00a200a2
   811b8:	03830383 	.word	0x03830383
   811bc:	03830383 	.word	0x03830383
   811c0:	03830383 	.word	0x03830383
   811c4:	03830383 	.word	0x03830383
   811c8:	03830383 	.word	0x03830383
   811cc:	00fe00d3 	.word	0x00fe00d3
   811d0:	00fe0383 	.word	0x00fe0383
   811d4:	03830383 	.word	0x03830383
   811d8:	03830383 	.word	0x03830383
   811dc:	038300b6 	.word	0x038300b6
   811e0:	026b0383 	.word	0x026b0383
   811e4:	03830383 	.word	0x03830383
   811e8:	03830383 	.word	0x03830383
   811ec:	02bb0383 	.word	0x02bb0383
   811f0:	03830383 	.word	0x03830383
   811f4:	03830068 	.word	0x03830068
   811f8:	03830383 	.word	0x03830383
   811fc:	03830383 	.word	0x03830383
   81200:	03830383 	.word	0x03830383
   81204:	03830383 	.word	0x03830383
   81208:	00c90383 	.word	0x00c90383
   8120c:	00fe0065 	.word	0x00fe0065
   81210:	00fe00fe 	.word	0x00fe00fe
   81214:	006500b9 	.word	0x006500b9
   81218:	03830383 	.word	0x03830383
   8121c:	038300bc 	.word	0x038300bc
   81220:	026d024c 	.word	0x026d024c
   81224:	00c6028c 	.word	0x00c6028c
   81228:	029e0383 	.word	0x029e0383
   8122c:	02bd0383 	.word	0x02bd0383
   81230:	03830383 	.word	0x03830383
   81234:	02d8      	.short	0x02d8
   81236:	232b      	movs	r3, #43	; 0x2b
   81238:	e007      	b.n	8124a <_svfprintf_r+0x1aa>
   8123a:	f8d8 5000 	ldr.w	r5, [r8]
   8123e:	f108 0204 	add.w	r2, r8, #4
   81242:	2d00      	cmp	r5, #0
   81244:	950e      	str	r5, [sp, #56]	; 0x38
   81246:	db11      	blt.n	8126c <_svfprintf_r+0x1cc>
   81248:	4690      	mov	r8, r2
   8124a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   8124c:	e78e      	b.n	8116c <_svfprintf_r+0xcc>
   8124e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81252:	e06e      	b.n	81332 <_svfprintf_r+0x292>
   81254:	4cab      	ldr	r4, [pc, #684]	; (81504 <_svfprintf_r+0x464>)
   81256:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8125a:	941b      	str	r4, [sp, #108]	; 0x6c
   8125c:	e26e      	b.n	8173c <_svfprintf_r+0x69c>
   8125e:	2b00      	cmp	r3, #0
   81260:	bf08      	it	eq
   81262:	2320      	moveq	r3, #32
   81264:	e7f1      	b.n	8124a <_svfprintf_r+0x1aa>
   81266:	f047 0701 	orr.w	r7, r7, #1
   8126a:	e7ee      	b.n	8124a <_svfprintf_r+0x1aa>
   8126c:	426d      	negs	r5, r5
   8126e:	950e      	str	r5, [sp, #56]	; 0x38
   81270:	4690      	mov	r8, r2
   81272:	f047 0704 	orr.w	r7, r7, #4
   81276:	e7e8      	b.n	8124a <_svfprintf_r+0x1aa>
   81278:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   8127a:	7825      	ldrb	r5, [r4, #0]
   8127c:	1c62      	adds	r2, r4, #1
   8127e:	2d2a      	cmp	r5, #42	; 0x2a
   81280:	9508      	str	r5, [sp, #32]
   81282:	d002      	beq.n	8128a <_svfprintf_r+0x1ea>
   81284:	f04f 0900 	mov.w	r9, #0
   81288:	e00b      	b.n	812a2 <_svfprintf_r+0x202>
   8128a:	f8d8 9000 	ldr.w	r9, [r8]
   8128e:	f108 0104 	add.w	r1, r8, #4
   81292:	f1b9 0f00 	cmp.w	r9, #0
   81296:	4688      	mov	r8, r1
   81298:	920b      	str	r2, [sp, #44]	; 0x2c
   8129a:	dad6      	bge.n	8124a <_svfprintf_r+0x1aa>
   8129c:	f04f 39ff 	mov.w	r9, #4294967295
   812a0:	e7d3      	b.n	8124a <_svfprintf_r+0x1aa>
   812a2:	9d08      	ldr	r5, [sp, #32]
   812a4:	f1a5 0130 	sub.w	r1, r5, #48	; 0x30
   812a8:	2909      	cmp	r1, #9
   812aa:	d806      	bhi.n	812ba <_svfprintf_r+0x21a>
   812ac:	f812 4b01 	ldrb.w	r4, [r2], #1
   812b0:	200a      	movs	r0, #10
   812b2:	fb00 1909 	mla	r9, r0, r9, r1
   812b6:	9408      	str	r4, [sp, #32]
   812b8:	e7f3      	b.n	812a2 <_svfprintf_r+0x202>
   812ba:	ea49 79e9 	orr.w	r9, r9, r9, asr #31
   812be:	920b      	str	r2, [sp, #44]	; 0x2c
   812c0:	e758      	b.n	81174 <_svfprintf_r+0xd4>
   812c2:	f047 0780 	orr.w	r7, r7, #128	; 0x80
   812c6:	e7c0      	b.n	8124a <_svfprintf_r+0x1aa>
   812c8:	2400      	movs	r4, #0
   812ca:	940e      	str	r4, [sp, #56]	; 0x38
   812cc:	9d08      	ldr	r5, [sp, #32]
   812ce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   812d0:	f1a5 0230 	sub.w	r2, r5, #48	; 0x30
   812d4:	210a      	movs	r1, #10
   812d6:	fb01 2404 	mla	r4, r1, r4, r2
   812da:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   812dc:	940e      	str	r4, [sp, #56]	; 0x38
   812de:	f812 5b01 	ldrb.w	r5, [r2], #1
   812e2:	f1a5 0130 	sub.w	r1, r5, #48	; 0x30
   812e6:	2909      	cmp	r1, #9
   812e8:	9508      	str	r5, [sp, #32]
   812ea:	d8e8      	bhi.n	812be <_svfprintf_r+0x21e>
   812ec:	920b      	str	r2, [sp, #44]	; 0x2c
   812ee:	e7ed      	b.n	812cc <_svfprintf_r+0x22c>
   812f0:	f047 0708 	orr.w	r7, r7, #8
   812f4:	e7a9      	b.n	8124a <_svfprintf_r+0x1aa>
   812f6:	f047 0740 	orr.w	r7, r7, #64	; 0x40
   812fa:	e7a6      	b.n	8124a <_svfprintf_r+0x1aa>
   812fc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   812fe:	7822      	ldrb	r2, [r4, #0]
   81300:	2a6c      	cmp	r2, #108	; 0x6c
   81302:	d102      	bne.n	8130a <_svfprintf_r+0x26a>
   81304:	3401      	adds	r4, #1
   81306:	940b      	str	r4, [sp, #44]	; 0x2c
   81308:	e002      	b.n	81310 <_svfprintf_r+0x270>
   8130a:	f047 0710 	orr.w	r7, r7, #16
   8130e:	e79c      	b.n	8124a <_svfprintf_r+0x1aa>
   81310:	f047 0720 	orr.w	r7, r7, #32
   81314:	e799      	b.n	8124a <_svfprintf_r+0x1aa>
   81316:	f8d8 3000 	ldr.w	r3, [r8]
   8131a:	2500      	movs	r5, #0
   8131c:	f88d 30a0 	strb.w	r3, [sp, #160]	; 0xa0
   81320:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   81324:	f108 0804 	add.w	r8, r8, #4
   81328:	e2ba      	b.n	818a0 <_svfprintf_r+0x800>
   8132a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8132e:	f047 0710 	orr.w	r7, r7, #16
   81332:	06ba      	lsls	r2, r7, #26
   81334:	d508      	bpl.n	81348 <_svfprintf_r+0x2a8>
   81336:	f108 0807 	add.w	r8, r8, #7
   8133a:	f028 0307 	bic.w	r3, r8, #7
   8133e:	f103 0808 	add.w	r8, r3, #8
   81342:	e9d3 4500 	ldrd	r4, r5, [r3]
   81346:	e00f      	b.n	81368 <_svfprintf_r+0x2c8>
   81348:	f017 0f10 	tst.w	r7, #16
   8134c:	f108 0304 	add.w	r3, r8, #4
   81350:	d002      	beq.n	81358 <_svfprintf_r+0x2b8>
   81352:	f8d8 4000 	ldr.w	r4, [r8]
   81356:	e005      	b.n	81364 <_svfprintf_r+0x2c4>
   81358:	f8d8 4000 	ldr.w	r4, [r8]
   8135c:	f017 0f40 	tst.w	r7, #64	; 0x40
   81360:	bf18      	it	ne
   81362:	b224      	sxthne	r4, r4
   81364:	17e5      	asrs	r5, r4, #31
   81366:	4698      	mov	r8, r3
   81368:	2c00      	cmp	r4, #0
   8136a:	f175 0100 	sbcs.w	r1, r5, #0
   8136e:	f280 8210 	bge.w	81792 <_svfprintf_r+0x6f2>
   81372:	232d      	movs	r3, #45	; 0x2d
   81374:	4264      	negs	r4, r4
   81376:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   8137a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8137e:	e208      	b.n	81792 <_svfprintf_r+0x6f2>
   81380:	9c08      	ldr	r4, [sp, #32]
   81382:	f108 0807 	add.w	r8, r8, #7
   81386:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8138a:	970a      	str	r7, [sp, #40]	; 0x28
   8138c:	f028 0307 	bic.w	r3, r8, #7
   81390:	9411      	str	r4, [sp, #68]	; 0x44
   81392:	e9d3 4500 	ldrd	r4, r5, [r3]
   81396:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
   8139a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   8139e:	f103 0808 	add.w	r8, r3, #8
   813a2:	f002 fd93 	bl	83ecc <__fpclassifyd>
   813a6:	2801      	cmp	r0, #1
   813a8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   813ac:	d114      	bne.n	813d8 <_svfprintf_r+0x338>
   813ae:	2200      	movs	r2, #0
   813b0:	2300      	movs	r3, #0
   813b2:	f003 fed7 	bl	85164 <__aeabi_dcmplt>
   813b6:	b110      	cbz	r0, 813be <_svfprintf_r+0x31e>
   813b8:	232d      	movs	r3, #45	; 0x2d
   813ba:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   813be:	9d08      	ldr	r5, [sp, #32]
   813c0:	4b51      	ldr	r3, [pc, #324]	; (81508 <_svfprintf_r+0x468>)
   813c2:	4a52      	ldr	r2, [pc, #328]	; (8150c <_svfprintf_r+0x46c>)
   813c4:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   813c8:	2d47      	cmp	r5, #71	; 0x47
   813ca:	bfd8      	it	le
   813cc:	461a      	movle	r2, r3
   813ce:	9207      	str	r2, [sp, #28]
   813d0:	f04f 0903 	mov.w	r9, #3
   813d4:	2500      	movs	r5, #0
   813d6:	e26a      	b.n	818ae <_svfprintf_r+0x80e>
   813d8:	f002 fd78 	bl	83ecc <__fpclassifyd>
   813dc:	b958      	cbnz	r0, 813f6 <_svfprintf_r+0x356>
   813de:	4b4c      	ldr	r3, [pc, #304]	; (81510 <_svfprintf_r+0x470>)
   813e0:	4a4c      	ldr	r2, [pc, #304]	; (81514 <_svfprintf_r+0x474>)
   813e2:	9c08      	ldr	r4, [sp, #32]
   813e4:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   813e8:	2c47      	cmp	r4, #71	; 0x47
   813ea:	bfd8      	it	le
   813ec:	461a      	movle	r2, r3
   813ee:	9207      	str	r2, [sp, #28]
   813f0:	f04f 0903 	mov.w	r9, #3
   813f4:	e25a      	b.n	818ac <_svfprintf_r+0x80c>
   813f6:	f1b9 3fff 	cmp.w	r9, #4294967295
   813fa:	d00a      	beq.n	81412 <_svfprintf_r+0x372>
   813fc:	9d08      	ldr	r5, [sp, #32]
   813fe:	f025 0320 	bic.w	r3, r5, #32
   81402:	2b47      	cmp	r3, #71	; 0x47
   81404:	d107      	bne.n	81416 <_svfprintf_r+0x376>
   81406:	f1b9 0f00 	cmp.w	r9, #0
   8140a:	bf08      	it	eq
   8140c:	f04f 0901 	moveq.w	r9, #1
   81410:	e001      	b.n	81416 <_svfprintf_r+0x376>
   81412:	f04f 0906 	mov.w	r9, #6
   81416:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   8141a:	2b00      	cmp	r3, #0
   8141c:	f447 7780 	orr.w	r7, r7, #256	; 0x100
   81420:	da08      	bge.n	81434 <_svfprintf_r+0x394>
   81422:	990d      	ldr	r1, [sp, #52]	; 0x34
   81424:	980c      	ldr	r0, [sp, #48]	; 0x30
   81426:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
   8142a:	242d      	movs	r4, #45	; 0x2d
   8142c:	9012      	str	r0, [sp, #72]	; 0x48
   8142e:	9113      	str	r1, [sp, #76]	; 0x4c
   81430:	9419      	str	r4, [sp, #100]	; 0x64
   81432:	e005      	b.n	81440 <_svfprintf_r+0x3a0>
   81434:	e9dd 450c 	ldrd	r4, r5, [sp, #48]	; 0x30
   81438:	e9cd 4512 	strd	r4, r5, [sp, #72]	; 0x48
   8143c:	2500      	movs	r5, #0
   8143e:	9519      	str	r5, [sp, #100]	; 0x64
   81440:	9d08      	ldr	r5, [sp, #32]
   81442:	f025 0420 	bic.w	r4, r5, #32
   81446:	2c46      	cmp	r4, #70	; 0x46
   81448:	d004      	beq.n	81454 <_svfprintf_r+0x3b4>
   8144a:	2c45      	cmp	r4, #69	; 0x45
   8144c:	d105      	bne.n	8145a <_svfprintf_r+0x3ba>
   8144e:	f109 0501 	add.w	r5, r9, #1
   81452:	e003      	b.n	8145c <_svfprintf_r+0x3bc>
   81454:	464d      	mov	r5, r9
   81456:	2303      	movs	r3, #3
   81458:	e001      	b.n	8145e <_svfprintf_r+0x3be>
   8145a:	464d      	mov	r5, r9
   8145c:	2302      	movs	r3, #2
   8145e:	e88d 0028 	stmia.w	sp, {r3, r5}
   81462:	ab1f      	add	r3, sp, #124	; 0x7c
   81464:	9302      	str	r3, [sp, #8]
   81466:	ab20      	add	r3, sp, #128	; 0x80
   81468:	9303      	str	r3, [sp, #12]
   8146a:	ab23      	add	r3, sp, #140	; 0x8c
   8146c:	9304      	str	r3, [sp, #16]
   8146e:	4650      	mov	r0, sl
   81470:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
   81474:	f000 fe4b 	bl	8210e <_dtoa_r>
   81478:	2c47      	cmp	r4, #71	; 0x47
   8147a:	9007      	str	r0, [sp, #28]
   8147c:	d10a      	bne.n	81494 <_svfprintf_r+0x3f4>
   8147e:	980a      	ldr	r0, [sp, #40]	; 0x28
   81480:	07c3      	lsls	r3, r0, #31
   81482:	d407      	bmi.n	81494 <_svfprintf_r+0x3f4>
   81484:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   81486:	9d07      	ldr	r5, [sp, #28]
   81488:	2c47      	cmp	r4, #71	; 0x47
   8148a:	ebc5 0303 	rsb	r3, r5, r3
   8148e:	9309      	str	r3, [sp, #36]	; 0x24
   81490:	d142      	bne.n	81518 <_svfprintf_r+0x478>
   81492:	e02d      	b.n	814f0 <_svfprintf_r+0x450>
   81494:	f8dd c01c 	ldr.w	ip, [sp, #28]
   81498:	2c46      	cmp	r4, #70	; 0x46
   8149a:	44ac      	add	ip, r5
   8149c:	d113      	bne.n	814c6 <_svfprintf_r+0x426>
   8149e:	9807      	ldr	r0, [sp, #28]
   814a0:	7803      	ldrb	r3, [r0, #0]
   814a2:	2b30      	cmp	r3, #48	; 0x30
   814a4:	d10d      	bne.n	814c2 <_svfprintf_r+0x422>
   814a6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   814aa:	2200      	movs	r2, #0
   814ac:	2300      	movs	r3, #0
   814ae:	f8cd c018 	str.w	ip, [sp, #24]
   814b2:	f003 fe4d 	bl	85150 <__aeabi_dcmpeq>
   814b6:	f8dd c018 	ldr.w	ip, [sp, #24]
   814ba:	b910      	cbnz	r0, 814c2 <_svfprintf_r+0x422>
   814bc:	f1c5 0501 	rsb	r5, r5, #1
   814c0:	951f      	str	r5, [sp, #124]	; 0x7c
   814c2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   814c4:	449c      	add	ip, r3
   814c6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   814ca:	2200      	movs	r2, #0
   814cc:	2300      	movs	r3, #0
   814ce:	f8cd c018 	str.w	ip, [sp, #24]
   814d2:	f003 fe3d 	bl	85150 <__aeabi_dcmpeq>
   814d6:	f8dd c018 	ldr.w	ip, [sp, #24]
   814da:	b108      	cbz	r0, 814e0 <_svfprintf_r+0x440>
   814dc:	f8cd c08c 	str.w	ip, [sp, #140]	; 0x8c
   814e0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   814e2:	4563      	cmp	r3, ip
   814e4:	d2ce      	bcs.n	81484 <_svfprintf_r+0x3e4>
   814e6:	1c5a      	adds	r2, r3, #1
   814e8:	9223      	str	r2, [sp, #140]	; 0x8c
   814ea:	2230      	movs	r2, #48	; 0x30
   814ec:	701a      	strb	r2, [r3, #0]
   814ee:	e7f7      	b.n	814e0 <_svfprintf_r+0x440>
   814f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   814f2:	1cdc      	adds	r4, r3, #3
   814f4:	db01      	blt.n	814fa <_svfprintf_r+0x45a>
   814f6:	454b      	cmp	r3, r9
   814f8:	dd6e      	ble.n	815d8 <_svfprintf_r+0x538>
   814fa:	9c08      	ldr	r4, [sp, #32]
   814fc:	3c02      	subs	r4, #2
   814fe:	9408      	str	r4, [sp, #32]
   81500:	e00d      	b.n	8151e <_svfprintf_r+0x47e>
   81502:	bf00      	nop
   81504:	00085826 	.word	0x00085826
   81508:	00085816 	.word	0x00085816
   8150c:	0008581a 	.word	0x0008581a
   81510:	0008581e 	.word	0x0008581e
   81514:	00085822 	.word	0x00085822
   81518:	9d08      	ldr	r5, [sp, #32]
   8151a:	2d65      	cmp	r5, #101	; 0x65
   8151c:	dc43      	bgt.n	815a6 <_svfprintf_r+0x506>
   8151e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81520:	9c08      	ldr	r4, [sp, #32]
   81522:	3b01      	subs	r3, #1
   81524:	2b00      	cmp	r3, #0
   81526:	931f      	str	r3, [sp, #124]	; 0x7c
   81528:	bfba      	itte	lt
   8152a:	425b      	neglt	r3, r3
   8152c:	222d      	movlt	r2, #45	; 0x2d
   8152e:	222b      	movge	r2, #43	; 0x2b
   81530:	2b09      	cmp	r3, #9
   81532:	f88d 4084 	strb.w	r4, [sp, #132]	; 0x84
   81536:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   8153a:	dd1d      	ble.n	81578 <_svfprintf_r+0x4d8>
   8153c:	f10d 0292 	add.w	r2, sp, #146	; 0x92
   81540:	200a      	movs	r0, #10
   81542:	fb93 f1f0 	sdiv	r1, r3, r0
   81546:	fb00 3311 	mls	r3, r0, r1, r3
   8154a:	2909      	cmp	r1, #9
   8154c:	f103 0330 	add.w	r3, r3, #48	; 0x30
   81550:	4614      	mov	r4, r2
   81552:	f802 3901 	strb.w	r3, [r2], #-1
   81556:	460b      	mov	r3, r1
   81558:	dcf2      	bgt.n	81540 <_svfprintf_r+0x4a0>
   8155a:	f101 0330 	add.w	r3, r1, #48	; 0x30
   8155e:	f804 3d01 	strb.w	r3, [r4, #-1]!
   81562:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   81566:	f10d 0293 	add.w	r2, sp, #147	; 0x93
   8156a:	4294      	cmp	r4, r2
   8156c:	d20b      	bcs.n	81586 <_svfprintf_r+0x4e6>
   8156e:	f814 2b01 	ldrb.w	r2, [r4], #1
   81572:	f803 2b01 	strb.w	r2, [r3], #1
   81576:	e7f6      	b.n	81566 <_svfprintf_r+0x4c6>
   81578:	2230      	movs	r2, #48	; 0x30
   8157a:	4413      	add	r3, r2
   8157c:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   81580:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   81584:	ab22      	add	r3, sp, #136	; 0x88
   81586:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81588:	aa21      	add	r2, sp, #132	; 0x84
   8158a:	1a9a      	subs	r2, r3, r2
   8158c:	4691      	mov	r9, r2
   8158e:	2d01      	cmp	r5, #1
   81590:	921a      	str	r2, [sp, #104]	; 0x68
   81592:	44a9      	add	r9, r5
   81594:	dc03      	bgt.n	8159e <_svfprintf_r+0x4fe>
   81596:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   81598:	f015 0401 	ands.w	r4, r5, #1
   8159c:	d037      	beq.n	8160e <_svfprintf_r+0x56e>
   8159e:	f109 0901 	add.w	r9, r9, #1
   815a2:	2400      	movs	r4, #0
   815a4:	e033      	b.n	8160e <_svfprintf_r+0x56e>
   815a6:	9c08      	ldr	r4, [sp, #32]
   815a8:	2c66      	cmp	r4, #102	; 0x66
   815aa:	d115      	bne.n	815d8 <_svfprintf_r+0x538>
   815ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   815ae:	2b00      	cmp	r3, #0
   815b0:	dd09      	ble.n	815c6 <_svfprintf_r+0x526>
   815b2:	f1b9 0f00 	cmp.w	r9, #0
   815b6:	d102      	bne.n	815be <_svfprintf_r+0x51e>
   815b8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   815ba:	07e8      	lsls	r0, r5, #31
   815bc:	d523      	bpl.n	81606 <_svfprintf_r+0x566>
   815be:	f109 0901 	add.w	r9, r9, #1
   815c2:	444b      	add	r3, r9
   815c4:	e01f      	b.n	81606 <_svfprintf_r+0x566>
   815c6:	f1b9 0f00 	cmp.w	r9, #0
   815ca:	d102      	bne.n	815d2 <_svfprintf_r+0x532>
   815cc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   815ce:	07e1      	lsls	r1, r4, #31
   815d0:	d515      	bpl.n	815fe <_svfprintf_r+0x55e>
   815d2:	f109 0302 	add.w	r3, r9, #2
   815d6:	e016      	b.n	81606 <_svfprintf_r+0x566>
   815d8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   815da:	9d09      	ldr	r5, [sp, #36]	; 0x24
   815dc:	42ab      	cmp	r3, r5
   815de:	db04      	blt.n	815ea <_svfprintf_r+0x54a>
   815e0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   815e2:	07e2      	lsls	r2, r4, #31
   815e4:	d50d      	bpl.n	81602 <_svfprintf_r+0x562>
   815e6:	3301      	adds	r3, #1
   815e8:	e006      	b.n	815f8 <_svfprintf_r+0x558>
   815ea:	2b00      	cmp	r3, #0
   815ec:	9c09      	ldr	r4, [sp, #36]	; 0x24
   815ee:	bfd4      	ite	le
   815f0:	f1c3 0302 	rsble	r3, r3, #2
   815f4:	2301      	movgt	r3, #1
   815f6:	4423      	add	r3, r4
   815f8:	2567      	movs	r5, #103	; 0x67
   815fa:	9511      	str	r5, [sp, #68]	; 0x44
   815fc:	e003      	b.n	81606 <_svfprintf_r+0x566>
   815fe:	2301      	movs	r3, #1
   81600:	e001      	b.n	81606 <_svfprintf_r+0x566>
   81602:	2467      	movs	r4, #103	; 0x67
   81604:	9411      	str	r4, [sp, #68]	; 0x44
   81606:	9d11      	ldr	r5, [sp, #68]	; 0x44
   81608:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
   8160a:	9508      	str	r5, [sp, #32]
   8160c:	4699      	mov	r9, r3
   8160e:	9d19      	ldr	r5, [sp, #100]	; 0x64
   81610:	b115      	cbz	r5, 81618 <_svfprintf_r+0x578>
   81612:	232d      	movs	r3, #45	; 0x2d
   81614:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81618:	2500      	movs	r5, #0
   8161a:	e149      	b.n	818b0 <_svfprintf_r+0x810>
   8161c:	f017 0f20 	tst.w	r7, #32
   81620:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81624:	f108 0104 	add.w	r1, r8, #4
   81628:	d008      	beq.n	8163c <_svfprintf_r+0x59c>
   8162a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8162c:	f8d8 0000 	ldr.w	r0, [r8]
   81630:	17e5      	asrs	r5, r4, #31
   81632:	4622      	mov	r2, r4
   81634:	462b      	mov	r3, r5
   81636:	e9c0 2300 	strd	r2, r3, [r0]
   8163a:	e00c      	b.n	81656 <_svfprintf_r+0x5b6>
   8163c:	06fb      	lsls	r3, r7, #27
   8163e:	d406      	bmi.n	8164e <_svfprintf_r+0x5ae>
   81640:	067d      	lsls	r5, r7, #25
   81642:	d504      	bpl.n	8164e <_svfprintf_r+0x5ae>
   81644:	f8d8 3000 	ldr.w	r3, [r8]
   81648:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8164a:	801c      	strh	r4, [r3, #0]
   8164c:	e003      	b.n	81656 <_svfprintf_r+0x5b6>
   8164e:	f8d8 3000 	ldr.w	r3, [r8]
   81652:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81654:	601d      	str	r5, [r3, #0]
   81656:	4688      	mov	r8, r1
   81658:	e557      	b.n	8110a <_svfprintf_r+0x6a>
   8165a:	f047 0710 	orr.w	r7, r7, #16
   8165e:	f017 0320 	ands.w	r3, r7, #32
   81662:	d009      	beq.n	81678 <_svfprintf_r+0x5d8>
   81664:	f108 0807 	add.w	r8, r8, #7
   81668:	f028 0307 	bic.w	r3, r8, #7
   8166c:	f103 0808 	add.w	r8, r3, #8
   81670:	e9d3 4500 	ldrd	r4, r5, [r3]
   81674:	2300      	movs	r3, #0
   81676:	e088      	b.n	8178a <_svfprintf_r+0x6ea>
   81678:	f017 0110 	ands.w	r1, r7, #16
   8167c:	f108 0204 	add.w	r2, r8, #4
   81680:	d107      	bne.n	81692 <_svfprintf_r+0x5f2>
   81682:	f017 0340 	ands.w	r3, r7, #64	; 0x40
   81686:	d004      	beq.n	81692 <_svfprintf_r+0x5f2>
   81688:	f8b8 4000 	ldrh.w	r4, [r8]
   8168c:	2500      	movs	r5, #0
   8168e:	4690      	mov	r8, r2
   81690:	e7f0      	b.n	81674 <_svfprintf_r+0x5d4>
   81692:	f8d8 4000 	ldr.w	r4, [r8]
   81696:	2500      	movs	r5, #0
   81698:	4690      	mov	r8, r2
   8169a:	e076      	b.n	8178a <_svfprintf_r+0x6ea>
   8169c:	48a9      	ldr	r0, [pc, #676]	; (81944 <_svfprintf_r+0x8a4>)
   8169e:	2330      	movs	r3, #48	; 0x30
   816a0:	2278      	movs	r2, #120	; 0x78
   816a2:	f8d8 4000 	ldr.w	r4, [r8]
   816a6:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   816aa:	2500      	movs	r5, #0
   816ac:	f047 0702 	orr.w	r7, r7, #2
   816b0:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   816b4:	f108 0804 	add.w	r8, r8, #4
   816b8:	901b      	str	r0, [sp, #108]	; 0x6c
   816ba:	2302      	movs	r3, #2
   816bc:	9208      	str	r2, [sp, #32]
   816be:	e064      	b.n	8178a <_svfprintf_r+0x6ea>
   816c0:	4643      	mov	r3, r8
   816c2:	2500      	movs	r5, #0
   816c4:	681b      	ldr	r3, [r3, #0]
   816c6:	45a9      	cmp	r9, r5
   816c8:	9307      	str	r3, [sp, #28]
   816ca:	f108 0804 	add.w	r8, r8, #4
   816ce:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   816d2:	db0d      	blt.n	816f0 <_svfprintf_r+0x650>
   816d4:	4618      	mov	r0, r3
   816d6:	4629      	mov	r1, r5
   816d8:	464a      	mov	r2, r9
   816da:	f001 fe2f 	bl	8333c <memchr>
   816de:	2800      	cmp	r0, #0
   816e0:	f000 80e4 	beq.w	818ac <_svfprintf_r+0x80c>
   816e4:	9c07      	ldr	r4, [sp, #28]
   816e6:	1b00      	subs	r0, r0, r4
   816e8:	4548      	cmp	r0, r9
   816ea:	bfb8      	it	lt
   816ec:	4681      	movlt	r9, r0
   816ee:	e0de      	b.n	818ae <_svfprintf_r+0x80e>
   816f0:	9807      	ldr	r0, [sp, #28]
   816f2:	f7ff fccd 	bl	81090 <strlen>
   816f6:	4681      	mov	r9, r0
   816f8:	e0d9      	b.n	818ae <_svfprintf_r+0x80e>
   816fa:	f047 0710 	orr.w	r7, r7, #16
   816fe:	06bc      	lsls	r4, r7, #26
   81700:	d508      	bpl.n	81714 <_svfprintf_r+0x674>
   81702:	f108 0807 	add.w	r8, r8, #7
   81706:	f028 0307 	bic.w	r3, r8, #7
   8170a:	f103 0808 	add.w	r8, r3, #8
   8170e:	e9d3 4500 	ldrd	r4, r5, [r3]
   81712:	e00d      	b.n	81730 <_svfprintf_r+0x690>
   81714:	f017 0f10 	tst.w	r7, #16
   81718:	f108 0304 	add.w	r3, r8, #4
   8171c:	d104      	bne.n	81728 <_svfprintf_r+0x688>
   8171e:	0678      	lsls	r0, r7, #25
   81720:	d502      	bpl.n	81728 <_svfprintf_r+0x688>
   81722:	f8b8 4000 	ldrh.w	r4, [r8]
   81726:	e001      	b.n	8172c <_svfprintf_r+0x68c>
   81728:	f8d8 4000 	ldr.w	r4, [r8]
   8172c:	2500      	movs	r5, #0
   8172e:	4698      	mov	r8, r3
   81730:	2301      	movs	r3, #1
   81732:	e02a      	b.n	8178a <_svfprintf_r+0x6ea>
   81734:	4d83      	ldr	r5, [pc, #524]	; (81944 <_svfprintf_r+0x8a4>)
   81736:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8173a:	951b      	str	r5, [sp, #108]	; 0x6c
   8173c:	06b9      	lsls	r1, r7, #26
   8173e:	d508      	bpl.n	81752 <_svfprintf_r+0x6b2>
   81740:	f108 0807 	add.w	r8, r8, #7
   81744:	f028 0307 	bic.w	r3, r8, #7
   81748:	f103 0808 	add.w	r8, r3, #8
   8174c:	e9d3 4500 	ldrd	r4, r5, [r3]
   81750:	e00d      	b.n	8176e <_svfprintf_r+0x6ce>
   81752:	f017 0f10 	tst.w	r7, #16
   81756:	f108 0304 	add.w	r3, r8, #4
   8175a:	d104      	bne.n	81766 <_svfprintf_r+0x6c6>
   8175c:	067a      	lsls	r2, r7, #25
   8175e:	d502      	bpl.n	81766 <_svfprintf_r+0x6c6>
   81760:	f8b8 4000 	ldrh.w	r4, [r8]
   81764:	e001      	b.n	8176a <_svfprintf_r+0x6ca>
   81766:	f8d8 4000 	ldr.w	r4, [r8]
   8176a:	2500      	movs	r5, #0
   8176c:	4698      	mov	r8, r3
   8176e:	07fb      	lsls	r3, r7, #31
   81770:	d50a      	bpl.n	81788 <_svfprintf_r+0x6e8>
   81772:	ea54 0005 	orrs.w	r0, r4, r5
   81776:	d007      	beq.n	81788 <_svfprintf_r+0x6e8>
   81778:	9908      	ldr	r1, [sp, #32]
   8177a:	2330      	movs	r3, #48	; 0x30
   8177c:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   81780:	f88d 1079 	strb.w	r1, [sp, #121]	; 0x79
   81784:	f047 0702 	orr.w	r7, r7, #2
   81788:	2302      	movs	r3, #2
   8178a:	2200      	movs	r2, #0
   8178c:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   81790:	e000      	b.n	81794 <_svfprintf_r+0x6f4>
   81792:	2301      	movs	r3, #1
   81794:	f1b9 0f00 	cmp.w	r9, #0
   81798:	bfa8      	it	ge
   8179a:	f027 0780 	bicge.w	r7, r7, #128	; 0x80
   8179e:	ea54 0205 	orrs.w	r2, r4, r5
   817a2:	d102      	bne.n	817aa <_svfprintf_r+0x70a>
   817a4:	f1b9 0f00 	cmp.w	r9, #0
   817a8:	d05a      	beq.n	81860 <_svfprintf_r+0x7c0>
   817aa:	2b01      	cmp	r3, #1
   817ac:	d01f      	beq.n	817ee <_svfprintf_r+0x74e>
   817ae:	2b02      	cmp	r3, #2
   817b0:	f10d 03c7 	add.w	r3, sp, #199	; 0xc7
   817b4:	d041      	beq.n	8183a <_svfprintf_r+0x79a>
   817b6:	08e1      	lsrs	r1, r4, #3
   817b8:	ea41 7045 	orr.w	r0, r1, r5, lsl #29
   817bc:	08e9      	lsrs	r1, r5, #3
   817be:	f004 0207 	and.w	r2, r4, #7
   817c2:	9014      	str	r0, [sp, #80]	; 0x50
   817c4:	9115      	str	r1, [sp, #84]	; 0x54
   817c6:	3230      	adds	r2, #48	; 0x30
   817c8:	e9dd 4514 	ldrd	r4, r5, [sp, #80]	; 0x50
   817cc:	ea54 0005 	orrs.w	r0, r4, r5
   817d0:	9307      	str	r3, [sp, #28]
   817d2:	701a      	strb	r2, [r3, #0]
   817d4:	f103 33ff 	add.w	r3, r3, #4294967295
   817d8:	d1ed      	bne.n	817b6 <_svfprintf_r+0x716>
   817da:	07f8      	lsls	r0, r7, #31
   817dc:	9907      	ldr	r1, [sp, #28]
   817de:	d54c      	bpl.n	8187a <_svfprintf_r+0x7da>
   817e0:	2a30      	cmp	r2, #48	; 0x30
   817e2:	d04a      	beq.n	8187a <_svfprintf_r+0x7da>
   817e4:	9307      	str	r3, [sp, #28]
   817e6:	2330      	movs	r3, #48	; 0x30
   817e8:	f801 3c01 	strb.w	r3, [r1, #-1]
   817ec:	e045      	b.n	8187a <_svfprintf_r+0x7da>
   817ee:	2d00      	cmp	r5, #0
   817f0:	bf08      	it	eq
   817f2:	2c0a      	cmpeq	r4, #10
   817f4:	d205      	bcs.n	81802 <_svfprintf_r+0x762>
   817f6:	3430      	adds	r4, #48	; 0x30
   817f8:	f88d 40c7 	strb.w	r4, [sp, #199]	; 0xc7
   817fc:	f10d 04c7 	add.w	r4, sp, #199	; 0xc7
   81800:	e03a      	b.n	81878 <_svfprintf_r+0x7d8>
   81802:	f10d 00c7 	add.w	r0, sp, #199	; 0xc7
   81806:	900a      	str	r0, [sp, #40]	; 0x28
   81808:	990a      	ldr	r1, [sp, #40]	; 0x28
   8180a:	4620      	mov	r0, r4
   8180c:	9107      	str	r1, [sp, #28]
   8180e:	220a      	movs	r2, #10
   81810:	4629      	mov	r1, r5
   81812:	2300      	movs	r3, #0
   81814:	f003 fcf6 	bl	85204 <__aeabi_uldivmod>
   81818:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8181a:	3230      	adds	r2, #48	; 0x30
   8181c:	f803 2901 	strb.w	r2, [r3], #-1
   81820:	930a      	str	r3, [sp, #40]	; 0x28
   81822:	4620      	mov	r0, r4
   81824:	4629      	mov	r1, r5
   81826:	220a      	movs	r2, #10
   81828:	2300      	movs	r3, #0
   8182a:	f003 fceb 	bl	85204 <__aeabi_uldivmod>
   8182e:	4604      	mov	r4, r0
   81830:	460d      	mov	r5, r1
   81832:	ea54 0005 	orrs.w	r0, r4, r5
   81836:	d1e7      	bne.n	81808 <_svfprintf_r+0x768>
   81838:	e01f      	b.n	8187a <_svfprintf_r+0x7da>
   8183a:	991b      	ldr	r1, [sp, #108]	; 0x6c
   8183c:	f004 020f 	and.w	r2, r4, #15
   81840:	5c8a      	ldrb	r2, [r1, r2]
   81842:	9307      	str	r3, [sp, #28]
   81844:	f803 2901 	strb.w	r2, [r3], #-1
   81848:	0922      	lsrs	r2, r4, #4
   8184a:	ea42 7005 	orr.w	r0, r2, r5, lsl #28
   8184e:	0929      	lsrs	r1, r5, #4
   81850:	9016      	str	r0, [sp, #88]	; 0x58
   81852:	9117      	str	r1, [sp, #92]	; 0x5c
   81854:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	; 0x58
   81858:	ea54 0205 	orrs.w	r2, r4, r5
   8185c:	d1ed      	bne.n	8183a <_svfprintf_r+0x79a>
   8185e:	e00c      	b.n	8187a <_svfprintf_r+0x7da>
   81860:	b933      	cbnz	r3, 81870 <_svfprintf_r+0x7d0>
   81862:	07fb      	lsls	r3, r7, #31
   81864:	d507      	bpl.n	81876 <_svfprintf_r+0x7d6>
   81866:	ac42      	add	r4, sp, #264	; 0x108
   81868:	2330      	movs	r3, #48	; 0x30
   8186a:	f804 3d41 	strb.w	r3, [r4, #-65]!
   8186e:	e003      	b.n	81878 <_svfprintf_r+0x7d8>
   81870:	ad32      	add	r5, sp, #200	; 0xc8
   81872:	9507      	str	r5, [sp, #28]
   81874:	e001      	b.n	8187a <_svfprintf_r+0x7da>
   81876:	ac32      	add	r4, sp, #200	; 0xc8
   81878:	9407      	str	r4, [sp, #28]
   8187a:	9c07      	ldr	r4, [sp, #28]
   8187c:	464d      	mov	r5, r9
   8187e:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   81882:	ebc4 0909 	rsb	r9, r4, r9
   81886:	2400      	movs	r4, #0
   81888:	e012      	b.n	818b0 <_svfprintf_r+0x810>
   8188a:	9d08      	ldr	r5, [sp, #32]
   8188c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81890:	2d00      	cmp	r5, #0
   81892:	f000 8389 	beq.w	81fa8 <_svfprintf_r+0xf08>
   81896:	f88d 50a0 	strb.w	r5, [sp, #160]	; 0xa0
   8189a:	2500      	movs	r5, #0
   8189c:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   818a0:	a828      	add	r0, sp, #160	; 0xa0
   818a2:	f04f 0901 	mov.w	r9, #1
   818a6:	462c      	mov	r4, r5
   818a8:	9007      	str	r0, [sp, #28]
   818aa:	e001      	b.n	818b0 <_svfprintf_r+0x810>
   818ac:	4605      	mov	r5, r0
   818ae:	462c      	mov	r4, r5
   818b0:	f89d 3077 	ldrb.w	r3, [sp, #119]	; 0x77
   818b4:	45a9      	cmp	r9, r5
   818b6:	bfac      	ite	ge
   818b8:	4649      	movge	r1, r9
   818ba:	4629      	movlt	r1, r5
   818bc:	910a      	str	r1, [sp, #40]	; 0x28
   818be:	b10b      	cbz	r3, 818c4 <_svfprintf_r+0x824>
   818c0:	3101      	adds	r1, #1
   818c2:	910a      	str	r1, [sp, #40]	; 0x28
   818c4:	f017 0302 	ands.w	r3, r7, #2
   818c8:	9311      	str	r3, [sp, #68]	; 0x44
   818ca:	d002      	beq.n	818d2 <_svfprintf_r+0x832>
   818cc:	980a      	ldr	r0, [sp, #40]	; 0x28
   818ce:	3002      	adds	r0, #2
   818d0:	900a      	str	r0, [sp, #40]	; 0x28
   818d2:	f017 0384 	ands.w	r3, r7, #132	; 0x84
   818d6:	9319      	str	r3, [sp, #100]	; 0x64
   818d8:	d141      	bne.n	8195e <_svfprintf_r+0x8be>
   818da:	980e      	ldr	r0, [sp, #56]	; 0x38
   818dc:	990a      	ldr	r1, [sp, #40]	; 0x28
   818de:	ebc1 0c00 	rsb	ip, r1, r0
   818e2:	f1bc 0f00 	cmp.w	ip, #0
   818e6:	dd3a      	ble.n	8195e <_svfprintf_r+0x8be>
   818e8:	4b17      	ldr	r3, [pc, #92]	; (81948 <_svfprintf_r+0x8a8>)
   818ea:	f1bc 0f10 	cmp.w	ip, #16
   818ee:	6033      	str	r3, [r6, #0]
   818f0:	dd1b      	ble.n	8192a <_svfprintf_r+0x88a>
   818f2:	2310      	movs	r3, #16
   818f4:	6073      	str	r3, [r6, #4]
   818f6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   818f8:	3310      	adds	r3, #16
   818fa:	9327      	str	r3, [sp, #156]	; 0x9c
   818fc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   818fe:	3301      	adds	r3, #1
   81900:	2b07      	cmp	r3, #7
   81902:	9326      	str	r3, [sp, #152]	; 0x98
   81904:	dc01      	bgt.n	8190a <_svfprintf_r+0x86a>
   81906:	3608      	adds	r6, #8
   81908:	e00c      	b.n	81924 <_svfprintf_r+0x884>
   8190a:	4650      	mov	r0, sl
   8190c:	4659      	mov	r1, fp
   8190e:	aa25      	add	r2, sp, #148	; 0x94
   81910:	f8cd c018 	str.w	ip, [sp, #24]
   81914:	f002 fb16 	bl	83f44 <__ssprint_r>
   81918:	f8dd c018 	ldr.w	ip, [sp, #24]
   8191c:	2800      	cmp	r0, #0
   8191e:	f040 834a 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81922:	ae32      	add	r6, sp, #200	; 0xc8
   81924:	f1ac 0c10 	sub.w	ip, ip, #16
   81928:	e7de      	b.n	818e8 <_svfprintf_r+0x848>
   8192a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   8192c:	f8c6 c004 	str.w	ip, [r6, #4]
   81930:	4463      	add	r3, ip
   81932:	9327      	str	r3, [sp, #156]	; 0x9c
   81934:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81936:	3301      	adds	r3, #1
   81938:	2b07      	cmp	r3, #7
   8193a:	9326      	str	r3, [sp, #152]	; 0x98
   8193c:	dc06      	bgt.n	8194c <_svfprintf_r+0x8ac>
   8193e:	3608      	adds	r6, #8
   81940:	e00d      	b.n	8195e <_svfprintf_r+0x8be>
   81942:	bf00      	nop
   81944:	00085837 	.word	0x00085837
   81948:	000857f6 	.word	0x000857f6
   8194c:	4650      	mov	r0, sl
   8194e:	4659      	mov	r1, fp
   81950:	aa25      	add	r2, sp, #148	; 0x94
   81952:	f002 faf7 	bl	83f44 <__ssprint_r>
   81956:	2800      	cmp	r0, #0
   81958:	f040 832d 	bne.w	81fb6 <_svfprintf_r+0xf16>
   8195c:	ae32      	add	r6, sp, #200	; 0xc8
   8195e:	f89d 3077 	ldrb.w	r3, [sp, #119]	; 0x77
   81962:	b1bb      	cbz	r3, 81994 <_svfprintf_r+0x8f4>
   81964:	f10d 0377 	add.w	r3, sp, #119	; 0x77
   81968:	6033      	str	r3, [r6, #0]
   8196a:	2301      	movs	r3, #1
   8196c:	6073      	str	r3, [r6, #4]
   8196e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81970:	3301      	adds	r3, #1
   81972:	9327      	str	r3, [sp, #156]	; 0x9c
   81974:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81976:	3301      	adds	r3, #1
   81978:	2b07      	cmp	r3, #7
   8197a:	9326      	str	r3, [sp, #152]	; 0x98
   8197c:	dc01      	bgt.n	81982 <_svfprintf_r+0x8e2>
   8197e:	3608      	adds	r6, #8
   81980:	e008      	b.n	81994 <_svfprintf_r+0x8f4>
   81982:	4650      	mov	r0, sl
   81984:	4659      	mov	r1, fp
   81986:	aa25      	add	r2, sp, #148	; 0x94
   81988:	f002 fadc 	bl	83f44 <__ssprint_r>
   8198c:	2800      	cmp	r0, #0
   8198e:	f040 8312 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81992:	ae32      	add	r6, sp, #200	; 0xc8
   81994:	9b11      	ldr	r3, [sp, #68]	; 0x44
   81996:	b1b3      	cbz	r3, 819c6 <_svfprintf_r+0x926>
   81998:	ab1e      	add	r3, sp, #120	; 0x78
   8199a:	6033      	str	r3, [r6, #0]
   8199c:	2302      	movs	r3, #2
   8199e:	6073      	str	r3, [r6, #4]
   819a0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   819a2:	3302      	adds	r3, #2
   819a4:	9327      	str	r3, [sp, #156]	; 0x9c
   819a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   819a8:	3301      	adds	r3, #1
   819aa:	2b07      	cmp	r3, #7
   819ac:	9326      	str	r3, [sp, #152]	; 0x98
   819ae:	dc01      	bgt.n	819b4 <_svfprintf_r+0x914>
   819b0:	3608      	adds	r6, #8
   819b2:	e008      	b.n	819c6 <_svfprintf_r+0x926>
   819b4:	4650      	mov	r0, sl
   819b6:	4659      	mov	r1, fp
   819b8:	aa25      	add	r2, sp, #148	; 0x94
   819ba:	f002 fac3 	bl	83f44 <__ssprint_r>
   819be:	2800      	cmp	r0, #0
   819c0:	f040 82f9 	bne.w	81fb6 <_svfprintf_r+0xf16>
   819c4:	ae32      	add	r6, sp, #200	; 0xc8
   819c6:	9b19      	ldr	r3, [sp, #100]	; 0x64
   819c8:	2b80      	cmp	r3, #128	; 0x80
   819ca:	d13c      	bne.n	81a46 <_svfprintf_r+0x9a6>
   819cc:	980e      	ldr	r0, [sp, #56]	; 0x38
   819ce:	990a      	ldr	r1, [sp, #40]	; 0x28
   819d0:	ebc1 0c00 	rsb	ip, r1, r0
   819d4:	f1bc 0f00 	cmp.w	ip, #0
   819d8:	dd35      	ble.n	81a46 <_svfprintf_r+0x9a6>
   819da:	4b9c      	ldr	r3, [pc, #624]	; (81c4c <_svfprintf_r+0xbac>)
   819dc:	f1bc 0f10 	cmp.w	ip, #16
   819e0:	6033      	str	r3, [r6, #0]
   819e2:	dd1b      	ble.n	81a1c <_svfprintf_r+0x97c>
   819e4:	2310      	movs	r3, #16
   819e6:	6073      	str	r3, [r6, #4]
   819e8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   819ea:	3310      	adds	r3, #16
   819ec:	9327      	str	r3, [sp, #156]	; 0x9c
   819ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
   819f0:	3301      	adds	r3, #1
   819f2:	2b07      	cmp	r3, #7
   819f4:	9326      	str	r3, [sp, #152]	; 0x98
   819f6:	dc01      	bgt.n	819fc <_svfprintf_r+0x95c>
   819f8:	3608      	adds	r6, #8
   819fa:	e00c      	b.n	81a16 <_svfprintf_r+0x976>
   819fc:	4650      	mov	r0, sl
   819fe:	4659      	mov	r1, fp
   81a00:	aa25      	add	r2, sp, #148	; 0x94
   81a02:	f8cd c018 	str.w	ip, [sp, #24]
   81a06:	f002 fa9d 	bl	83f44 <__ssprint_r>
   81a0a:	f8dd c018 	ldr.w	ip, [sp, #24]
   81a0e:	2800      	cmp	r0, #0
   81a10:	f040 82d1 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81a14:	ae32      	add	r6, sp, #200	; 0xc8
   81a16:	f1ac 0c10 	sub.w	ip, ip, #16
   81a1a:	e7de      	b.n	819da <_svfprintf_r+0x93a>
   81a1c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81a1e:	f8c6 c004 	str.w	ip, [r6, #4]
   81a22:	4463      	add	r3, ip
   81a24:	9327      	str	r3, [sp, #156]	; 0x9c
   81a26:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81a28:	3301      	adds	r3, #1
   81a2a:	2b07      	cmp	r3, #7
   81a2c:	9326      	str	r3, [sp, #152]	; 0x98
   81a2e:	dc01      	bgt.n	81a34 <_svfprintf_r+0x994>
   81a30:	3608      	adds	r6, #8
   81a32:	e008      	b.n	81a46 <_svfprintf_r+0x9a6>
   81a34:	4650      	mov	r0, sl
   81a36:	4659      	mov	r1, fp
   81a38:	aa25      	add	r2, sp, #148	; 0x94
   81a3a:	f002 fa83 	bl	83f44 <__ssprint_r>
   81a3e:	2800      	cmp	r0, #0
   81a40:	f040 82b9 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81a44:	ae32      	add	r6, sp, #200	; 0xc8
   81a46:	ebc9 0505 	rsb	r5, r9, r5
   81a4a:	2d00      	cmp	r5, #0
   81a4c:	dd2e      	ble.n	81aac <_svfprintf_r+0xa0c>
   81a4e:	4b7f      	ldr	r3, [pc, #508]	; (81c4c <_svfprintf_r+0xbac>)
   81a50:	2d10      	cmp	r5, #16
   81a52:	6033      	str	r3, [r6, #0]
   81a54:	dd16      	ble.n	81a84 <_svfprintf_r+0x9e4>
   81a56:	2310      	movs	r3, #16
   81a58:	6073      	str	r3, [r6, #4]
   81a5a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81a5c:	3310      	adds	r3, #16
   81a5e:	9327      	str	r3, [sp, #156]	; 0x9c
   81a60:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81a62:	3301      	adds	r3, #1
   81a64:	2b07      	cmp	r3, #7
   81a66:	9326      	str	r3, [sp, #152]	; 0x98
   81a68:	dc01      	bgt.n	81a6e <_svfprintf_r+0x9ce>
   81a6a:	3608      	adds	r6, #8
   81a6c:	e008      	b.n	81a80 <_svfprintf_r+0x9e0>
   81a6e:	4650      	mov	r0, sl
   81a70:	4659      	mov	r1, fp
   81a72:	aa25      	add	r2, sp, #148	; 0x94
   81a74:	f002 fa66 	bl	83f44 <__ssprint_r>
   81a78:	2800      	cmp	r0, #0
   81a7a:	f040 829c 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81a7e:	ae32      	add	r6, sp, #200	; 0xc8
   81a80:	3d10      	subs	r5, #16
   81a82:	e7e4      	b.n	81a4e <_svfprintf_r+0x9ae>
   81a84:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81a86:	6075      	str	r5, [r6, #4]
   81a88:	441d      	add	r5, r3
   81a8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81a8c:	9527      	str	r5, [sp, #156]	; 0x9c
   81a8e:	3301      	adds	r3, #1
   81a90:	2b07      	cmp	r3, #7
   81a92:	9326      	str	r3, [sp, #152]	; 0x98
   81a94:	dc01      	bgt.n	81a9a <_svfprintf_r+0x9fa>
   81a96:	3608      	adds	r6, #8
   81a98:	e008      	b.n	81aac <_svfprintf_r+0xa0c>
   81a9a:	4650      	mov	r0, sl
   81a9c:	4659      	mov	r1, fp
   81a9e:	aa25      	add	r2, sp, #148	; 0x94
   81aa0:	f002 fa50 	bl	83f44 <__ssprint_r>
   81aa4:	2800      	cmp	r0, #0
   81aa6:	f040 8286 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81aaa:	ae32      	add	r6, sp, #200	; 0xc8
   81aac:	05fd      	lsls	r5, r7, #23
   81aae:	d405      	bmi.n	81abc <_svfprintf_r+0xa1c>
   81ab0:	9c07      	ldr	r4, [sp, #28]
   81ab2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81ab4:	e886 0210 	stmia.w	r6, {r4, r9}
   81ab8:	444b      	add	r3, r9
   81aba:	e0da      	b.n	81c72 <_svfprintf_r+0xbd2>
   81abc:	9d08      	ldr	r5, [sp, #32]
   81abe:	2d65      	cmp	r5, #101	; 0x65
   81ac0:	f340 81a7 	ble.w	81e12 <_svfprintf_r+0xd72>
   81ac4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   81ac8:	2200      	movs	r2, #0
   81aca:	2300      	movs	r3, #0
   81acc:	f003 fb40 	bl	85150 <__aeabi_dcmpeq>
   81ad0:	2800      	cmp	r0, #0
   81ad2:	d059      	beq.n	81b88 <_svfprintf_r+0xae8>
   81ad4:	4b5e      	ldr	r3, [pc, #376]	; (81c50 <_svfprintf_r+0xbb0>)
   81ad6:	6033      	str	r3, [r6, #0]
   81ad8:	2301      	movs	r3, #1
   81ada:	6073      	str	r3, [r6, #4]
   81adc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81ade:	3301      	adds	r3, #1
   81ae0:	9327      	str	r3, [sp, #156]	; 0x9c
   81ae2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81ae4:	3301      	adds	r3, #1
   81ae6:	2b07      	cmp	r3, #7
   81ae8:	9326      	str	r3, [sp, #152]	; 0x98
   81aea:	dc01      	bgt.n	81af0 <_svfprintf_r+0xa50>
   81aec:	3608      	adds	r6, #8
   81aee:	e008      	b.n	81b02 <_svfprintf_r+0xa62>
   81af0:	4650      	mov	r0, sl
   81af2:	4659      	mov	r1, fp
   81af4:	aa25      	add	r2, sp, #148	; 0x94
   81af6:	f002 fa25 	bl	83f44 <__ssprint_r>
   81afa:	2800      	cmp	r0, #0
   81afc:	f040 825b 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81b00:	ae32      	add	r6, sp, #200	; 0xc8
   81b02:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81b04:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81b06:	42a3      	cmp	r3, r4
   81b08:	db02      	blt.n	81b10 <_svfprintf_r+0xa70>
   81b0a:	07fc      	lsls	r4, r7, #31
   81b0c:	f140 8202 	bpl.w	81f14 <_svfprintf_r+0xe74>
   81b10:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81b12:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81b14:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81b16:	4423      	add	r3, r4
   81b18:	9327      	str	r3, [sp, #156]	; 0x9c
   81b1a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81b1c:	6035      	str	r5, [r6, #0]
   81b1e:	3301      	adds	r3, #1
   81b20:	2b07      	cmp	r3, #7
   81b22:	6074      	str	r4, [r6, #4]
   81b24:	9326      	str	r3, [sp, #152]	; 0x98
   81b26:	dc01      	bgt.n	81b2c <_svfprintf_r+0xa8c>
   81b28:	3608      	adds	r6, #8
   81b2a:	e008      	b.n	81b3e <_svfprintf_r+0xa9e>
   81b2c:	4650      	mov	r0, sl
   81b2e:	4659      	mov	r1, fp
   81b30:	aa25      	add	r2, sp, #148	; 0x94
   81b32:	f002 fa07 	bl	83f44 <__ssprint_r>
   81b36:	2800      	cmp	r0, #0
   81b38:	f040 823d 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81b3c:	ae32      	add	r6, sp, #200	; 0xc8
   81b3e:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81b40:	1e6c      	subs	r4, r5, #1
   81b42:	2c00      	cmp	r4, #0
   81b44:	f340 81e6 	ble.w	81f14 <_svfprintf_r+0xe74>
   81b48:	4b40      	ldr	r3, [pc, #256]	; (81c4c <_svfprintf_r+0xbac>)
   81b4a:	2c10      	cmp	r4, #16
   81b4c:	6033      	str	r3, [r6, #0]
   81b4e:	dd16      	ble.n	81b7e <_svfprintf_r+0xade>
   81b50:	2310      	movs	r3, #16
   81b52:	6073      	str	r3, [r6, #4]
   81b54:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81b56:	3310      	adds	r3, #16
   81b58:	9327      	str	r3, [sp, #156]	; 0x9c
   81b5a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81b5c:	3301      	adds	r3, #1
   81b5e:	2b07      	cmp	r3, #7
   81b60:	9326      	str	r3, [sp, #152]	; 0x98
   81b62:	dc01      	bgt.n	81b68 <_svfprintf_r+0xac8>
   81b64:	3608      	adds	r6, #8
   81b66:	e008      	b.n	81b7a <_svfprintf_r+0xada>
   81b68:	4650      	mov	r0, sl
   81b6a:	4659      	mov	r1, fp
   81b6c:	aa25      	add	r2, sp, #148	; 0x94
   81b6e:	f002 f9e9 	bl	83f44 <__ssprint_r>
   81b72:	2800      	cmp	r0, #0
   81b74:	f040 821f 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81b78:	ae32      	add	r6, sp, #200	; 0xc8
   81b7a:	3c10      	subs	r4, #16
   81b7c:	e7e4      	b.n	81b48 <_svfprintf_r+0xaa8>
   81b7e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81b80:	6074      	str	r4, [r6, #4]
   81b82:	441c      	add	r4, r3
   81b84:	9427      	str	r4, [sp, #156]	; 0x9c
   81b86:	e134      	b.n	81df2 <_svfprintf_r+0xd52>
   81b88:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81b8a:	2b00      	cmp	r3, #0
   81b8c:	dc73      	bgt.n	81c76 <_svfprintf_r+0xbd6>
   81b8e:	4b30      	ldr	r3, [pc, #192]	; (81c50 <_svfprintf_r+0xbb0>)
   81b90:	6033      	str	r3, [r6, #0]
   81b92:	2301      	movs	r3, #1
   81b94:	6073      	str	r3, [r6, #4]
   81b96:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81b98:	3301      	adds	r3, #1
   81b9a:	9327      	str	r3, [sp, #156]	; 0x9c
   81b9c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81b9e:	3301      	adds	r3, #1
   81ba0:	2b07      	cmp	r3, #7
   81ba2:	9326      	str	r3, [sp, #152]	; 0x98
   81ba4:	dc01      	bgt.n	81baa <_svfprintf_r+0xb0a>
   81ba6:	3608      	adds	r6, #8
   81ba8:	e008      	b.n	81bbc <_svfprintf_r+0xb1c>
   81baa:	4650      	mov	r0, sl
   81bac:	4659      	mov	r1, fp
   81bae:	aa25      	add	r2, sp, #148	; 0x94
   81bb0:	f002 f9c8 	bl	83f44 <__ssprint_r>
   81bb4:	2800      	cmp	r0, #0
   81bb6:	f040 81fe 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81bba:	ae32      	add	r6, sp, #200	; 0xc8
   81bbc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81bbe:	b923      	cbnz	r3, 81bca <_svfprintf_r+0xb2a>
   81bc0:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81bc2:	b914      	cbnz	r4, 81bca <_svfprintf_r+0xb2a>
   81bc4:	07f8      	lsls	r0, r7, #31
   81bc6:	f140 81a5 	bpl.w	81f14 <_svfprintf_r+0xe74>
   81bca:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81bcc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81bce:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81bd0:	4423      	add	r3, r4
   81bd2:	9327      	str	r3, [sp, #156]	; 0x9c
   81bd4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81bd6:	6035      	str	r5, [r6, #0]
   81bd8:	3301      	adds	r3, #1
   81bda:	2b07      	cmp	r3, #7
   81bdc:	6074      	str	r4, [r6, #4]
   81bde:	9326      	str	r3, [sp, #152]	; 0x98
   81be0:	dc01      	bgt.n	81be6 <_svfprintf_r+0xb46>
   81be2:	3608      	adds	r6, #8
   81be4:	e008      	b.n	81bf8 <_svfprintf_r+0xb58>
   81be6:	4650      	mov	r0, sl
   81be8:	4659      	mov	r1, fp
   81bea:	aa25      	add	r2, sp, #148	; 0x94
   81bec:	f002 f9aa 	bl	83f44 <__ssprint_r>
   81bf0:	2800      	cmp	r0, #0
   81bf2:	f040 81e0 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81bf6:	ae32      	add	r6, sp, #200	; 0xc8
   81bf8:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
   81bfa:	4264      	negs	r4, r4
   81bfc:	2c00      	cmp	r4, #0
   81bfe:	dd32      	ble.n	81c66 <_svfprintf_r+0xbc6>
   81c00:	4b12      	ldr	r3, [pc, #72]	; (81c4c <_svfprintf_r+0xbac>)
   81c02:	2c10      	cmp	r4, #16
   81c04:	6033      	str	r3, [r6, #0]
   81c06:	dd16      	ble.n	81c36 <_svfprintf_r+0xb96>
   81c08:	2310      	movs	r3, #16
   81c0a:	6073      	str	r3, [r6, #4]
   81c0c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81c0e:	3310      	adds	r3, #16
   81c10:	9327      	str	r3, [sp, #156]	; 0x9c
   81c12:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81c14:	3301      	adds	r3, #1
   81c16:	2b07      	cmp	r3, #7
   81c18:	9326      	str	r3, [sp, #152]	; 0x98
   81c1a:	dc01      	bgt.n	81c20 <_svfprintf_r+0xb80>
   81c1c:	3608      	adds	r6, #8
   81c1e:	e008      	b.n	81c32 <_svfprintf_r+0xb92>
   81c20:	4650      	mov	r0, sl
   81c22:	4659      	mov	r1, fp
   81c24:	aa25      	add	r2, sp, #148	; 0x94
   81c26:	f002 f98d 	bl	83f44 <__ssprint_r>
   81c2a:	2800      	cmp	r0, #0
   81c2c:	f040 81c3 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81c30:	ae32      	add	r6, sp, #200	; 0xc8
   81c32:	3c10      	subs	r4, #16
   81c34:	e7e4      	b.n	81c00 <_svfprintf_r+0xb60>
   81c36:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81c38:	6074      	str	r4, [r6, #4]
   81c3a:	441c      	add	r4, r3
   81c3c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81c3e:	9427      	str	r4, [sp, #156]	; 0x9c
   81c40:	3301      	adds	r3, #1
   81c42:	2b07      	cmp	r3, #7
   81c44:	9326      	str	r3, [sp, #152]	; 0x98
   81c46:	dc05      	bgt.n	81c54 <_svfprintf_r+0xbb4>
   81c48:	3608      	adds	r6, #8
   81c4a:	e00c      	b.n	81c66 <_svfprintf_r+0xbc6>
   81c4c:	00085806 	.word	0x00085806
   81c50:	00085848 	.word	0x00085848
   81c54:	4650      	mov	r0, sl
   81c56:	4659      	mov	r1, fp
   81c58:	aa25      	add	r2, sp, #148	; 0x94
   81c5a:	f002 f973 	bl	83f44 <__ssprint_r>
   81c5e:	2800      	cmp	r0, #0
   81c60:	f040 81a9 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81c64:	ae32      	add	r6, sp, #200	; 0xc8
   81c66:	9d07      	ldr	r5, [sp, #28]
   81c68:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81c6a:	6035      	str	r5, [r6, #0]
   81c6c:	6074      	str	r4, [r6, #4]
   81c6e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81c70:	4423      	add	r3, r4
   81c72:	9327      	str	r3, [sp, #156]	; 0x9c
   81c74:	e0bd      	b.n	81df2 <_svfprintf_r+0xd52>
   81c76:	9809      	ldr	r0, [sp, #36]	; 0x24
   81c78:	9d07      	ldr	r5, [sp, #28]
   81c7a:	4681      	mov	r9, r0
   81c7c:	45a1      	cmp	r9, r4
   81c7e:	bfa8      	it	ge
   81c80:	46a1      	movge	r9, r4
   81c82:	f1b9 0f00 	cmp.w	r9, #0
   81c86:	4405      	add	r5, r0
   81c88:	dd15      	ble.n	81cb6 <_svfprintf_r+0xc16>
   81c8a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81c8c:	9907      	ldr	r1, [sp, #28]
   81c8e:	444b      	add	r3, r9
   81c90:	9327      	str	r3, [sp, #156]	; 0x9c
   81c92:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81c94:	e886 0202 	stmia.w	r6, {r1, r9}
   81c98:	3301      	adds	r3, #1
   81c9a:	2b07      	cmp	r3, #7
   81c9c:	9326      	str	r3, [sp, #152]	; 0x98
   81c9e:	dc01      	bgt.n	81ca4 <_svfprintf_r+0xc04>
   81ca0:	3608      	adds	r6, #8
   81ca2:	e008      	b.n	81cb6 <_svfprintf_r+0xc16>
   81ca4:	4650      	mov	r0, sl
   81ca6:	4659      	mov	r1, fp
   81ca8:	aa25      	add	r2, sp, #148	; 0x94
   81caa:	f002 f94b 	bl	83f44 <__ssprint_r>
   81cae:	2800      	cmp	r0, #0
   81cb0:	f040 8181 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81cb4:	ae32      	add	r6, sp, #200	; 0xc8
   81cb6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
   81cba:	ebc9 0904 	rsb	r9, r9, r4
   81cbe:	f1b9 0f00 	cmp.w	r9, #0
   81cc2:	dd31      	ble.n	81d28 <_svfprintf_r+0xc88>
   81cc4:	4b9a      	ldr	r3, [pc, #616]	; (81f30 <_svfprintf_r+0xe90>)
   81cc6:	f1b9 0f10 	cmp.w	r9, #16
   81cca:	6033      	str	r3, [r6, #0]
   81ccc:	dd17      	ble.n	81cfe <_svfprintf_r+0xc5e>
   81cce:	2310      	movs	r3, #16
   81cd0:	6073      	str	r3, [r6, #4]
   81cd2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81cd4:	3310      	adds	r3, #16
   81cd6:	9327      	str	r3, [sp, #156]	; 0x9c
   81cd8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81cda:	3301      	adds	r3, #1
   81cdc:	2b07      	cmp	r3, #7
   81cde:	9326      	str	r3, [sp, #152]	; 0x98
   81ce0:	dc01      	bgt.n	81ce6 <_svfprintf_r+0xc46>
   81ce2:	3608      	adds	r6, #8
   81ce4:	e008      	b.n	81cf8 <_svfprintf_r+0xc58>
   81ce6:	4650      	mov	r0, sl
   81ce8:	4659      	mov	r1, fp
   81cea:	aa25      	add	r2, sp, #148	; 0x94
   81cec:	f002 f92a 	bl	83f44 <__ssprint_r>
   81cf0:	2800      	cmp	r0, #0
   81cf2:	f040 8160 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81cf6:	ae32      	add	r6, sp, #200	; 0xc8
   81cf8:	f1a9 0910 	sub.w	r9, r9, #16
   81cfc:	e7e2      	b.n	81cc4 <_svfprintf_r+0xc24>
   81cfe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81d00:	f8c6 9004 	str.w	r9, [r6, #4]
   81d04:	444b      	add	r3, r9
   81d06:	9327      	str	r3, [sp, #156]	; 0x9c
   81d08:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81d0a:	3301      	adds	r3, #1
   81d0c:	2b07      	cmp	r3, #7
   81d0e:	9326      	str	r3, [sp, #152]	; 0x98
   81d10:	dc01      	bgt.n	81d16 <_svfprintf_r+0xc76>
   81d12:	3608      	adds	r6, #8
   81d14:	e008      	b.n	81d28 <_svfprintf_r+0xc88>
   81d16:	4650      	mov	r0, sl
   81d18:	4659      	mov	r1, fp
   81d1a:	aa25      	add	r2, sp, #148	; 0x94
   81d1c:	f002 f912 	bl	83f44 <__ssprint_r>
   81d20:	2800      	cmp	r0, #0
   81d22:	f040 8148 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81d26:	ae32      	add	r6, sp, #200	; 0xc8
   81d28:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81d2a:	9809      	ldr	r0, [sp, #36]	; 0x24
   81d2c:	9a07      	ldr	r2, [sp, #28]
   81d2e:	4283      	cmp	r3, r0
   81d30:	4414      	add	r4, r2
   81d32:	db01      	blt.n	81d38 <_svfprintf_r+0xc98>
   81d34:	07f9      	lsls	r1, r7, #31
   81d36:	d516      	bpl.n	81d66 <_svfprintf_r+0xcc6>
   81d38:	9a10      	ldr	r2, [sp, #64]	; 0x40
   81d3a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81d3c:	9918      	ldr	r1, [sp, #96]	; 0x60
   81d3e:	4413      	add	r3, r2
   81d40:	9327      	str	r3, [sp, #156]	; 0x9c
   81d42:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81d44:	6031      	str	r1, [r6, #0]
   81d46:	3301      	adds	r3, #1
   81d48:	2b07      	cmp	r3, #7
   81d4a:	6072      	str	r2, [r6, #4]
   81d4c:	9326      	str	r3, [sp, #152]	; 0x98
   81d4e:	dc01      	bgt.n	81d54 <_svfprintf_r+0xcb4>
   81d50:	3608      	adds	r6, #8
   81d52:	e008      	b.n	81d66 <_svfprintf_r+0xcc6>
   81d54:	4650      	mov	r0, sl
   81d56:	4659      	mov	r1, fp
   81d58:	aa25      	add	r2, sp, #148	; 0x94
   81d5a:	f002 f8f3 	bl	83f44 <__ssprint_r>
   81d5e:	2800      	cmp	r0, #0
   81d60:	f040 8129 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81d64:	ae32      	add	r6, sp, #200	; 0xc8
   81d66:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81d68:	9809      	ldr	r0, [sp, #36]	; 0x24
   81d6a:	1b2d      	subs	r5, r5, r4
   81d6c:	1ac3      	subs	r3, r0, r3
   81d6e:	429d      	cmp	r5, r3
   81d70:	bfa8      	it	ge
   81d72:	461d      	movge	r5, r3
   81d74:	2d00      	cmp	r5, #0
   81d76:	dd14      	ble.n	81da2 <_svfprintf_r+0xd02>
   81d78:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81d7a:	e886 0030 	stmia.w	r6, {r4, r5}
   81d7e:	442b      	add	r3, r5
   81d80:	9327      	str	r3, [sp, #156]	; 0x9c
   81d82:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81d84:	3301      	adds	r3, #1
   81d86:	2b07      	cmp	r3, #7
   81d88:	9326      	str	r3, [sp, #152]	; 0x98
   81d8a:	dc01      	bgt.n	81d90 <_svfprintf_r+0xcf0>
   81d8c:	3608      	adds	r6, #8
   81d8e:	e008      	b.n	81da2 <_svfprintf_r+0xd02>
   81d90:	4650      	mov	r0, sl
   81d92:	4659      	mov	r1, fp
   81d94:	aa25      	add	r2, sp, #148	; 0x94
   81d96:	f002 f8d5 	bl	83f44 <__ssprint_r>
   81d9a:	2800      	cmp	r0, #0
   81d9c:	f040 810b 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81da0:	ae32      	add	r6, sp, #200	; 0xc8
   81da2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81da4:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81da6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
   81daa:	1ae3      	subs	r3, r4, r3
   81dac:	1b5d      	subs	r5, r3, r5
   81dae:	2d00      	cmp	r5, #0
   81db0:	f340 80b0 	ble.w	81f14 <_svfprintf_r+0xe74>
   81db4:	4b5e      	ldr	r3, [pc, #376]	; (81f30 <_svfprintf_r+0xe90>)
   81db6:	2d10      	cmp	r5, #16
   81db8:	6033      	str	r3, [r6, #0]
   81dba:	dd16      	ble.n	81dea <_svfprintf_r+0xd4a>
   81dbc:	2310      	movs	r3, #16
   81dbe:	6073      	str	r3, [r6, #4]
   81dc0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81dc2:	3310      	adds	r3, #16
   81dc4:	9327      	str	r3, [sp, #156]	; 0x9c
   81dc6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81dc8:	3301      	adds	r3, #1
   81dca:	2b07      	cmp	r3, #7
   81dcc:	9326      	str	r3, [sp, #152]	; 0x98
   81dce:	dc01      	bgt.n	81dd4 <_svfprintf_r+0xd34>
   81dd0:	3608      	adds	r6, #8
   81dd2:	e008      	b.n	81de6 <_svfprintf_r+0xd46>
   81dd4:	4650      	mov	r0, sl
   81dd6:	4659      	mov	r1, fp
   81dd8:	aa25      	add	r2, sp, #148	; 0x94
   81dda:	f002 f8b3 	bl	83f44 <__ssprint_r>
   81dde:	2800      	cmp	r0, #0
   81de0:	f040 80e9 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81de4:	ae32      	add	r6, sp, #200	; 0xc8
   81de6:	3d10      	subs	r5, #16
   81de8:	e7e4      	b.n	81db4 <_svfprintf_r+0xd14>
   81dea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81dec:	6075      	str	r5, [r6, #4]
   81dee:	441d      	add	r5, r3
   81df0:	9527      	str	r5, [sp, #156]	; 0x9c
   81df2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81df4:	3301      	adds	r3, #1
   81df6:	2b07      	cmp	r3, #7
   81df8:	9326      	str	r3, [sp, #152]	; 0x98
   81dfa:	f340 808a 	ble.w	81f12 <_svfprintf_r+0xe72>
   81dfe:	4650      	mov	r0, sl
   81e00:	4659      	mov	r1, fp
   81e02:	aa25      	add	r2, sp, #148	; 0x94
   81e04:	f002 f89e 	bl	83f44 <__ssprint_r>
   81e08:	2800      	cmp	r0, #0
   81e0a:	f040 80d4 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81e0e:	ae32      	add	r6, sp, #200	; 0xc8
   81e10:	e080      	b.n	81f14 <_svfprintf_r+0xe74>
   81e12:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81e14:	2d01      	cmp	r5, #1
   81e16:	dc01      	bgt.n	81e1c <_svfprintf_r+0xd7c>
   81e18:	07fa      	lsls	r2, r7, #31
   81e1a:	d56d      	bpl.n	81ef8 <_svfprintf_r+0xe58>
   81e1c:	2301      	movs	r3, #1
   81e1e:	6073      	str	r3, [r6, #4]
   81e20:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81e22:	9c07      	ldr	r4, [sp, #28]
   81e24:	3301      	adds	r3, #1
   81e26:	9327      	str	r3, [sp, #156]	; 0x9c
   81e28:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81e2a:	6034      	str	r4, [r6, #0]
   81e2c:	3301      	adds	r3, #1
   81e2e:	2b07      	cmp	r3, #7
   81e30:	9326      	str	r3, [sp, #152]	; 0x98
   81e32:	dc01      	bgt.n	81e38 <_svfprintf_r+0xd98>
   81e34:	3608      	adds	r6, #8
   81e36:	e008      	b.n	81e4a <_svfprintf_r+0xdaa>
   81e38:	4650      	mov	r0, sl
   81e3a:	4659      	mov	r1, fp
   81e3c:	aa25      	add	r2, sp, #148	; 0x94
   81e3e:	f002 f881 	bl	83f44 <__ssprint_r>
   81e42:	2800      	cmp	r0, #0
   81e44:	f040 80b7 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81e48:	ae32      	add	r6, sp, #200	; 0xc8
   81e4a:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81e4c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81e4e:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81e50:	4423      	add	r3, r4
   81e52:	9327      	str	r3, [sp, #156]	; 0x9c
   81e54:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81e56:	6035      	str	r5, [r6, #0]
   81e58:	3301      	adds	r3, #1
   81e5a:	2b07      	cmp	r3, #7
   81e5c:	6074      	str	r4, [r6, #4]
   81e5e:	9326      	str	r3, [sp, #152]	; 0x98
   81e60:	dc01      	bgt.n	81e66 <_svfprintf_r+0xdc6>
   81e62:	3608      	adds	r6, #8
   81e64:	e008      	b.n	81e78 <_svfprintf_r+0xdd8>
   81e66:	4650      	mov	r0, sl
   81e68:	4659      	mov	r1, fp
   81e6a:	aa25      	add	r2, sp, #148	; 0x94
   81e6c:	f002 f86a 	bl	83f44 <__ssprint_r>
   81e70:	2800      	cmp	r0, #0
   81e72:	f040 80a0 	bne.w	81fb6 <_svfprintf_r+0xf16>
   81e76:	ae32      	add	r6, sp, #200	; 0xc8
   81e78:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   81e7c:	2200      	movs	r2, #0
   81e7e:	2300      	movs	r3, #0
   81e80:	f003 f966 	bl	85150 <__aeabi_dcmpeq>
   81e84:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81e86:	1e6c      	subs	r4, r5, #1
   81e88:	b940      	cbnz	r0, 81e9c <_svfprintf_r+0xdfc>
   81e8a:	9d07      	ldr	r5, [sp, #28]
   81e8c:	1c6b      	adds	r3, r5, #1
   81e8e:	e886 0018 	stmia.w	r6, {r3, r4}
   81e92:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81e94:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81e96:	3b01      	subs	r3, #1
   81e98:	4423      	add	r3, r4
   81e9a:	e033      	b.n	81f04 <_svfprintf_r+0xe64>
   81e9c:	2c00      	cmp	r4, #0
   81e9e:	dd34      	ble.n	81f0a <_svfprintf_r+0xe6a>
   81ea0:	4b23      	ldr	r3, [pc, #140]	; (81f30 <_svfprintf_r+0xe90>)
   81ea2:	2c10      	cmp	r4, #16
   81ea4:	6033      	str	r3, [r6, #0]
   81ea6:	dd15      	ble.n	81ed4 <_svfprintf_r+0xe34>
   81ea8:	2310      	movs	r3, #16
   81eaa:	6073      	str	r3, [r6, #4]
   81eac:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81eae:	3310      	adds	r3, #16
   81eb0:	9327      	str	r3, [sp, #156]	; 0x9c
   81eb2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81eb4:	3301      	adds	r3, #1
   81eb6:	2b07      	cmp	r3, #7
   81eb8:	9326      	str	r3, [sp, #152]	; 0x98
   81eba:	dc01      	bgt.n	81ec0 <_svfprintf_r+0xe20>
   81ebc:	3608      	adds	r6, #8
   81ebe:	e007      	b.n	81ed0 <_svfprintf_r+0xe30>
   81ec0:	4650      	mov	r0, sl
   81ec2:	4659      	mov	r1, fp
   81ec4:	aa25      	add	r2, sp, #148	; 0x94
   81ec6:	f002 f83d 	bl	83f44 <__ssprint_r>
   81eca:	2800      	cmp	r0, #0
   81ecc:	d173      	bne.n	81fb6 <_svfprintf_r+0xf16>
   81ece:	ae32      	add	r6, sp, #200	; 0xc8
   81ed0:	3c10      	subs	r4, #16
   81ed2:	e7e5      	b.n	81ea0 <_svfprintf_r+0xe00>
   81ed4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81ed6:	6074      	str	r4, [r6, #4]
   81ed8:	441c      	add	r4, r3
   81eda:	9427      	str	r4, [sp, #156]	; 0x9c
   81edc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81ede:	3301      	adds	r3, #1
   81ee0:	2b07      	cmp	r3, #7
   81ee2:	9326      	str	r3, [sp, #152]	; 0x98
   81ee4:	dd10      	ble.n	81f08 <_svfprintf_r+0xe68>
   81ee6:	4650      	mov	r0, sl
   81ee8:	4659      	mov	r1, fp
   81eea:	aa25      	add	r2, sp, #148	; 0x94
   81eec:	f002 f82a 	bl	83f44 <__ssprint_r>
   81ef0:	2800      	cmp	r0, #0
   81ef2:	d160      	bne.n	81fb6 <_svfprintf_r+0xf16>
   81ef4:	ae32      	add	r6, sp, #200	; 0xc8
   81ef6:	e008      	b.n	81f0a <_svfprintf_r+0xe6a>
   81ef8:	2301      	movs	r3, #1
   81efa:	9d07      	ldr	r5, [sp, #28]
   81efc:	6073      	str	r3, [r6, #4]
   81efe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81f00:	6035      	str	r5, [r6, #0]
   81f02:	3301      	adds	r3, #1
   81f04:	9327      	str	r3, [sp, #156]	; 0x9c
   81f06:	e7e9      	b.n	81edc <_svfprintf_r+0xe3c>
   81f08:	3608      	adds	r6, #8
   81f0a:	ab21      	add	r3, sp, #132	; 0x84
   81f0c:	6033      	str	r3, [r6, #0]
   81f0e:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   81f10:	e6ac      	b.n	81c6c <_svfprintf_r+0xbcc>
   81f12:	3608      	adds	r6, #8
   81f14:	077b      	lsls	r3, r7, #29
   81f16:	d40d      	bmi.n	81f34 <_svfprintf_r+0xe94>
   81f18:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81f1a:	980a      	ldr	r0, [sp, #40]	; 0x28
   81f1c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81f1e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81f20:	42a0      	cmp	r0, r4
   81f22:	bfac      	ite	ge
   81f24:	182d      	addge	r5, r5, r0
   81f26:	192d      	addlt	r5, r5, r4
   81f28:	950f      	str	r5, [sp, #60]	; 0x3c
   81f2a:	2b00      	cmp	r3, #0
   81f2c:	d037      	beq.n	81f9e <_svfprintf_r+0xefe>
   81f2e:	e030      	b.n	81f92 <_svfprintf_r+0xef2>
   81f30:	00085806 	.word	0x00085806
   81f34:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   81f36:	980a      	ldr	r0, [sp, #40]	; 0x28
   81f38:	1a2c      	subs	r4, r5, r0
   81f3a:	2c00      	cmp	r4, #0
   81f3c:	ddec      	ble.n	81f18 <_svfprintf_r+0xe78>
   81f3e:	4b23      	ldr	r3, [pc, #140]	; (81fcc <_svfprintf_r+0xf2c>)
   81f40:	2c10      	cmp	r4, #16
   81f42:	6033      	str	r3, [r6, #0]
   81f44:	dd14      	ble.n	81f70 <_svfprintf_r+0xed0>
   81f46:	2310      	movs	r3, #16
   81f48:	6073      	str	r3, [r6, #4]
   81f4a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81f4c:	3310      	adds	r3, #16
   81f4e:	9327      	str	r3, [sp, #156]	; 0x9c
   81f50:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81f52:	3301      	adds	r3, #1
   81f54:	2b07      	cmp	r3, #7
   81f56:	9326      	str	r3, [sp, #152]	; 0x98
   81f58:	dc01      	bgt.n	81f5e <_svfprintf_r+0xebe>
   81f5a:	3608      	adds	r6, #8
   81f5c:	e006      	b.n	81f6c <_svfprintf_r+0xecc>
   81f5e:	4650      	mov	r0, sl
   81f60:	4659      	mov	r1, fp
   81f62:	aa25      	add	r2, sp, #148	; 0x94
   81f64:	f001 ffee 	bl	83f44 <__ssprint_r>
   81f68:	bb28      	cbnz	r0, 81fb6 <_svfprintf_r+0xf16>
   81f6a:	ae32      	add	r6, sp, #200	; 0xc8
   81f6c:	3c10      	subs	r4, #16
   81f6e:	e7e6      	b.n	81f3e <_svfprintf_r+0xe9e>
   81f70:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81f72:	6074      	str	r4, [r6, #4]
   81f74:	441c      	add	r4, r3
   81f76:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81f78:	9427      	str	r4, [sp, #156]	; 0x9c
   81f7a:	3301      	adds	r3, #1
   81f7c:	2b07      	cmp	r3, #7
   81f7e:	9326      	str	r3, [sp, #152]	; 0x98
   81f80:	ddca      	ble.n	81f18 <_svfprintf_r+0xe78>
   81f82:	4650      	mov	r0, sl
   81f84:	4659      	mov	r1, fp
   81f86:	aa25      	add	r2, sp, #148	; 0x94
   81f88:	f001 ffdc 	bl	83f44 <__ssprint_r>
   81f8c:	2800      	cmp	r0, #0
   81f8e:	d0c3      	beq.n	81f18 <_svfprintf_r+0xe78>
   81f90:	e011      	b.n	81fb6 <_svfprintf_r+0xf16>
   81f92:	4650      	mov	r0, sl
   81f94:	4659      	mov	r1, fp
   81f96:	aa25      	add	r2, sp, #148	; 0x94
   81f98:	f001 ffd4 	bl	83f44 <__ssprint_r>
   81f9c:	b958      	cbnz	r0, 81fb6 <_svfprintf_r+0xf16>
   81f9e:	2300      	movs	r3, #0
   81fa0:	9326      	str	r3, [sp, #152]	; 0x98
   81fa2:	ae32      	add	r6, sp, #200	; 0xc8
   81fa4:	f7ff b8b1 	b.w	8110a <_svfprintf_r+0x6a>
   81fa8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81faa:	b123      	cbz	r3, 81fb6 <_svfprintf_r+0xf16>
   81fac:	4650      	mov	r0, sl
   81fae:	4659      	mov	r1, fp
   81fb0:	aa25      	add	r2, sp, #148	; 0x94
   81fb2:	f001 ffc7 	bl	83f44 <__ssprint_r>
   81fb6:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   81fba:	980f      	ldr	r0, [sp, #60]	; 0x3c
   81fbc:	f013 0f40 	tst.w	r3, #64	; 0x40
   81fc0:	bf18      	it	ne
   81fc2:	f04f 30ff 	movne.w	r0, #4294967295
   81fc6:	b043      	add	sp, #268	; 0x10c
   81fc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81fcc:	000857f6 	.word	0x000857f6

00081fd0 <register_fini>:
   81fd0:	4b02      	ldr	r3, [pc, #8]	; (81fdc <register_fini+0xc>)
   81fd2:	b113      	cbz	r3, 81fda <register_fini+0xa>
   81fd4:	4802      	ldr	r0, [pc, #8]	; (81fe0 <register_fini+0x10>)
   81fd6:	f000 b805 	b.w	81fe4 <atexit>
   81fda:	4770      	bx	lr
   81fdc:	00000000 	.word	0x00000000
   81fe0:	00082c71 	.word	0x00082c71

00081fe4 <atexit>:
   81fe4:	4601      	mov	r1, r0
   81fe6:	2000      	movs	r0, #0
   81fe8:	4602      	mov	r2, r0
   81fea:	4603      	mov	r3, r0
   81fec:	f002 bc16 	b.w	8481c <__register_exitproc>

00081ff0 <quorem>:
   81ff0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81ff4:	6903      	ldr	r3, [r0, #16]
   81ff6:	690c      	ldr	r4, [r1, #16]
   81ff8:	4680      	mov	r8, r0
   81ffa:	42a3      	cmp	r3, r4
   81ffc:	f2c0 8083 	blt.w	82106 <quorem+0x116>
   82000:	3c01      	subs	r4, #1
   82002:	00a2      	lsls	r2, r4, #2
   82004:	f101 0714 	add.w	r7, r1, #20
   82008:	f100 0514 	add.w	r5, r0, #20
   8200c:	4691      	mov	r9, r2
   8200e:	9200      	str	r2, [sp, #0]
   82010:	f857 6024 	ldr.w	r6, [r7, r4, lsl #2]
   82014:	442a      	add	r2, r5
   82016:	9201      	str	r2, [sp, #4]
   82018:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
   8201c:	3601      	adds	r6, #1
   8201e:	fbb2 f6f6 	udiv	r6, r2, r6
   82022:	44b9      	add	r9, r7
   82024:	2e00      	cmp	r6, #0
   82026:	d03b      	beq.n	820a0 <quorem+0xb0>
   82028:	f04f 0e00 	mov.w	lr, #0
   8202c:	463a      	mov	r2, r7
   8202e:	4628      	mov	r0, r5
   82030:	46f3      	mov	fp, lr
   82032:	f852 cb04 	ldr.w	ip, [r2], #4
   82036:	6803      	ldr	r3, [r0, #0]
   82038:	fa1f fa8c 	uxth.w	sl, ip
   8203c:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
   82040:	fb0a ea06 	mla	sl, sl, r6, lr
   82044:	fb0c fc06 	mul.w	ip, ip, r6
   82048:	eb0c 4c1a 	add.w	ip, ip, sl, lsr #16
   8204c:	fa1f fa8a 	uxth.w	sl, sl
   82050:	ebca 0b0b 	rsb	fp, sl, fp
   82054:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
   82058:	fa1f fa83 	uxth.w	sl, r3
   8205c:	fa1f fc8c 	uxth.w	ip, ip
   82060:	44da      	add	sl, fp
   82062:	ebcc 4c13 	rsb	ip, ip, r3, lsr #16
   82066:	eb0c 4c2a 	add.w	ip, ip, sl, asr #16
   8206a:	fa1f fa8a 	uxth.w	sl, sl
   8206e:	ea4a 4a0c 	orr.w	sl, sl, ip, lsl #16
   82072:	454a      	cmp	r2, r9
   82074:	ea4f 4b2c 	mov.w	fp, ip, asr #16
   82078:	f840 ab04 	str.w	sl, [r0], #4
   8207c:	d9d9      	bls.n	82032 <quorem+0x42>
   8207e:	9a00      	ldr	r2, [sp, #0]
   82080:	58ab      	ldr	r3, [r5, r2]
   82082:	b96b      	cbnz	r3, 820a0 <quorem+0xb0>
   82084:	9a01      	ldr	r2, [sp, #4]
   82086:	1f13      	subs	r3, r2, #4
   82088:	42ab      	cmp	r3, r5
   8208a:	461a      	mov	r2, r3
   8208c:	d802      	bhi.n	82094 <quorem+0xa4>
   8208e:	f8c8 4010 	str.w	r4, [r8, #16]
   82092:	e005      	b.n	820a0 <quorem+0xb0>
   82094:	6812      	ldr	r2, [r2, #0]
   82096:	3b04      	subs	r3, #4
   82098:	2a00      	cmp	r2, #0
   8209a:	d1f8      	bne.n	8208e <quorem+0x9e>
   8209c:	3c01      	subs	r4, #1
   8209e:	e7f3      	b.n	82088 <quorem+0x98>
   820a0:	4640      	mov	r0, r8
   820a2:	f001 fbaa 	bl	837fa <__mcmp>
   820a6:	2800      	cmp	r0, #0
   820a8:	db2b      	blt.n	82102 <quorem+0x112>
   820aa:	3601      	adds	r6, #1
   820ac:	462b      	mov	r3, r5
   820ae:	2000      	movs	r0, #0
   820b0:	f857 cb04 	ldr.w	ip, [r7], #4
   820b4:	681a      	ldr	r2, [r3, #0]
   820b6:	fa1f f18c 	uxth.w	r1, ip
   820ba:	1a41      	subs	r1, r0, r1
   820bc:	fa1f fa82 	uxth.w	sl, r2
   820c0:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
   820c4:	4451      	add	r1, sl
   820c6:	ebcc 4212 	rsb	r2, ip, r2, lsr #16
   820ca:	eb02 4221 	add.w	r2, r2, r1, asr #16
   820ce:	b289      	uxth	r1, r1
   820d0:	1410      	asrs	r0, r2, #16
   820d2:	454f      	cmp	r7, r9
   820d4:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
   820d8:	f843 2b04 	str.w	r2, [r3], #4
   820dc:	d9e8      	bls.n	820b0 <quorem+0xc0>
   820de:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
   820e2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
   820e6:	b962      	cbnz	r2, 82102 <quorem+0x112>
   820e8:	3b04      	subs	r3, #4
   820ea:	42ab      	cmp	r3, r5
   820ec:	461a      	mov	r2, r3
   820ee:	d802      	bhi.n	820f6 <quorem+0x106>
   820f0:	f8c8 4010 	str.w	r4, [r8, #16]
   820f4:	e005      	b.n	82102 <quorem+0x112>
   820f6:	6812      	ldr	r2, [r2, #0]
   820f8:	3b04      	subs	r3, #4
   820fa:	2a00      	cmp	r2, #0
   820fc:	d1f8      	bne.n	820f0 <quorem+0x100>
   820fe:	3c01      	subs	r4, #1
   82100:	e7f3      	b.n	820ea <quorem+0xfa>
   82102:	4630      	mov	r0, r6
   82104:	e000      	b.n	82108 <quorem+0x118>
   82106:	2000      	movs	r0, #0
   82108:	b003      	add	sp, #12
   8210a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0008210e <_dtoa_r>:
   8210e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82112:	6c01      	ldr	r1, [r0, #64]	; 0x40
   82114:	b09b      	sub	sp, #108	; 0x6c
   82116:	4682      	mov	sl, r0
   82118:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8211a:	e9cd 2304 	strd	r2, r3, [sp, #16]
   8211e:	b151      	cbz	r1, 82136 <_dtoa_r+0x28>
   82120:	6c43      	ldr	r3, [r0, #68]	; 0x44
   82122:	2201      	movs	r2, #1
   82124:	604b      	str	r3, [r1, #4]
   82126:	fa02 f303 	lsl.w	r3, r2, r3
   8212a:	608b      	str	r3, [r1, #8]
   8212c:	f001 f960 	bl	833f0 <_Bfree>
   82130:	2300      	movs	r3, #0
   82132:	f8ca 3040 	str.w	r3, [sl, #64]	; 0x40
   82136:	9805      	ldr	r0, [sp, #20]
   82138:	2800      	cmp	r0, #0
   8213a:	da05      	bge.n	82148 <_dtoa_r+0x3a>
   8213c:	2301      	movs	r3, #1
   8213e:	f020 4100 	bic.w	r1, r0, #2147483648	; 0x80000000
   82142:	6023      	str	r3, [r4, #0]
   82144:	9105      	str	r1, [sp, #20]
   82146:	e001      	b.n	8214c <_dtoa_r+0x3e>
   82148:	2300      	movs	r3, #0
   8214a:	6023      	str	r3, [r4, #0]
   8214c:	9f05      	ldr	r7, [sp, #20]
   8214e:	4a9c      	ldr	r2, [pc, #624]	; (823c0 <_dtoa_r+0x2b2>)
   82150:	f027 4300 	bic.w	r3, r7, #2147483648	; 0x80000000
   82154:	0d1b      	lsrs	r3, r3, #20
   82156:	051b      	lsls	r3, r3, #20
   82158:	4293      	cmp	r3, r2
   8215a:	d11d      	bne.n	82198 <_dtoa_r+0x8a>
   8215c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8215e:	f242 730f 	movw	r3, #9999	; 0x270f
   82162:	6013      	str	r3, [r2, #0]
   82164:	9b04      	ldr	r3, [sp, #16]
   82166:	b943      	cbnz	r3, 8217a <_dtoa_r+0x6c>
   82168:	4b96      	ldr	r3, [pc, #600]	; (823c4 <_dtoa_r+0x2b6>)
   8216a:	4a97      	ldr	r2, [pc, #604]	; (823c8 <_dtoa_r+0x2ba>)
   8216c:	f3c7 0013 	ubfx	r0, r7, #0, #20
   82170:	2800      	cmp	r0, #0
   82172:	bf0c      	ite	eq
   82174:	4610      	moveq	r0, r2
   82176:	4618      	movne	r0, r3
   82178:	e000      	b.n	8217c <_dtoa_r+0x6e>
   8217a:	4892      	ldr	r0, [pc, #584]	; (823c4 <_dtoa_r+0x2b6>)
   8217c:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   8217e:	2f00      	cmp	r7, #0
   82180:	f000 856f 	beq.w	82c62 <_dtoa_r+0xb54>
   82184:	78c3      	ldrb	r3, [r0, #3]
   82186:	b113      	cbz	r3, 8218e <_dtoa_r+0x80>
   82188:	f100 0308 	add.w	r3, r0, #8
   8218c:	e000      	b.n	82190 <_dtoa_r+0x82>
   8218e:	1cc3      	adds	r3, r0, #3
   82190:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   82192:	603b      	str	r3, [r7, #0]
   82194:	f000 bd65 	b.w	82c62 <_dtoa_r+0xb54>
   82198:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
   8219c:	2200      	movs	r2, #0
   8219e:	4620      	mov	r0, r4
   821a0:	4629      	mov	r1, r5
   821a2:	2300      	movs	r3, #0
   821a4:	f002 ffd4 	bl	85150 <__aeabi_dcmpeq>
   821a8:	4680      	mov	r8, r0
   821aa:	b158      	cbz	r0, 821c4 <_dtoa_r+0xb6>
   821ac:	9f26      	ldr	r7, [sp, #152]	; 0x98
   821ae:	2301      	movs	r3, #1
   821b0:	603b      	str	r3, [r7, #0]
   821b2:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   821b4:	2f00      	cmp	r7, #0
   821b6:	f000 8551 	beq.w	82c5c <_dtoa_r+0xb4e>
   821ba:	4884      	ldr	r0, [pc, #528]	; (823cc <_dtoa_r+0x2be>)
   821bc:	6038      	str	r0, [r7, #0]
   821be:	3801      	subs	r0, #1
   821c0:	f000 bd4f 	b.w	82c62 <_dtoa_r+0xb54>
   821c4:	ab19      	add	r3, sp, #100	; 0x64
   821c6:	9300      	str	r3, [sp, #0]
   821c8:	ab18      	add	r3, sp, #96	; 0x60
   821ca:	9301      	str	r3, [sp, #4]
   821cc:	4650      	mov	r0, sl
   821ce:	4622      	mov	r2, r4
   821d0:	462b      	mov	r3, r5
   821d2:	f001 fc02 	bl	839da <__d2b>
   821d6:	f3c7 560a 	ubfx	r6, r7, #20, #11
   821da:	4683      	mov	fp, r0
   821dc:	b15e      	cbz	r6, 821f6 <_dtoa_r+0xe8>
   821de:	f3c5 0313 	ubfx	r3, r5, #0, #20
   821e2:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   821e6:	4620      	mov	r0, r4
   821e8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   821ec:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
   821f0:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
   821f4:	e01c      	b.n	82230 <_dtoa_r+0x122>
   821f6:	9b19      	ldr	r3, [sp, #100]	; 0x64
   821f8:	9e18      	ldr	r6, [sp, #96]	; 0x60
   821fa:	441e      	add	r6, r3
   821fc:	f46f 6382 	mvn.w	r3, #1040	; 0x410
   82200:	429e      	cmp	r6, r3
   82202:	db09      	blt.n	82218 <_dtoa_r+0x10a>
   82204:	9904      	ldr	r1, [sp, #16]
   82206:	331f      	adds	r3, #31
   82208:	f206 4012 	addw	r0, r6, #1042	; 0x412
   8220c:	1b9b      	subs	r3, r3, r6
   8220e:	fa21 f000 	lsr.w	r0, r1, r0
   82212:	409f      	lsls	r7, r3
   82214:	4338      	orrs	r0, r7
   82216:	e004      	b.n	82222 <_dtoa_r+0x114>
   82218:	486d      	ldr	r0, [pc, #436]	; (823d0 <_dtoa_r+0x2c2>)
   8221a:	9a04      	ldr	r2, [sp, #16]
   8221c:	1b80      	subs	r0, r0, r6
   8221e:	fa02 f000 	lsl.w	r0, r2, r0
   82222:	f002 fcb7 	bl	84b94 <__aeabi_ui2d>
   82226:	2701      	movs	r7, #1
   82228:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   8222c:	3e01      	subs	r6, #1
   8222e:	9715      	str	r7, [sp, #84]	; 0x54
   82230:	2200      	movs	r2, #0
   82232:	4b68      	ldr	r3, [pc, #416]	; (823d4 <_dtoa_r+0x2c6>)
   82234:	f002 fb70 	bl	84918 <__aeabi_dsub>
   82238:	a35b      	add	r3, pc, #364	; (adr r3, 823a8 <_dtoa_r+0x29a>)
   8223a:	e9d3 2300 	ldrd	r2, r3, [r3]
   8223e:	f002 fd1f 	bl	84c80 <__aeabi_dmul>
   82242:	a35b      	add	r3, pc, #364	; (adr r3, 823b0 <_dtoa_r+0x2a2>)
   82244:	e9d3 2300 	ldrd	r2, r3, [r3]
   82248:	f002 fb68 	bl	8491c <__adddf3>
   8224c:	4604      	mov	r4, r0
   8224e:	4630      	mov	r0, r6
   82250:	460d      	mov	r5, r1
   82252:	f002 fcaf 	bl	84bb4 <__aeabi_i2d>
   82256:	a358      	add	r3, pc, #352	; (adr r3, 823b8 <_dtoa_r+0x2aa>)
   82258:	e9d3 2300 	ldrd	r2, r3, [r3]
   8225c:	f002 fd10 	bl	84c80 <__aeabi_dmul>
   82260:	4602      	mov	r2, r0
   82262:	460b      	mov	r3, r1
   82264:	4620      	mov	r0, r4
   82266:	4629      	mov	r1, r5
   82268:	f002 fb58 	bl	8491c <__adddf3>
   8226c:	4604      	mov	r4, r0
   8226e:	460d      	mov	r5, r1
   82270:	f002 ffa0 	bl	851b4 <__aeabi_d2iz>
   82274:	4629      	mov	r1, r5
   82276:	4681      	mov	r9, r0
   82278:	2200      	movs	r2, #0
   8227a:	4620      	mov	r0, r4
   8227c:	2300      	movs	r3, #0
   8227e:	f002 ff71 	bl	85164 <__aeabi_dcmplt>
   82282:	b158      	cbz	r0, 8229c <_dtoa_r+0x18e>
   82284:	4648      	mov	r0, r9
   82286:	f002 fc95 	bl	84bb4 <__aeabi_i2d>
   8228a:	4602      	mov	r2, r0
   8228c:	460b      	mov	r3, r1
   8228e:	4620      	mov	r0, r4
   82290:	4629      	mov	r1, r5
   82292:	f002 ff5d 	bl	85150 <__aeabi_dcmpeq>
   82296:	b908      	cbnz	r0, 8229c <_dtoa_r+0x18e>
   82298:	f109 39ff 	add.w	r9, r9, #4294967295
   8229c:	f1b9 0f16 	cmp.w	r9, #22
   822a0:	d80d      	bhi.n	822be <_dtoa_r+0x1b0>
   822a2:	4b4d      	ldr	r3, [pc, #308]	; (823d8 <_dtoa_r+0x2ca>)
   822a4:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
   822a8:	e9d3 0100 	ldrd	r0, r1, [r3]
   822ac:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   822b0:	f002 ff76 	bl	851a0 <__aeabi_dcmpgt>
   822b4:	b130      	cbz	r0, 822c4 <_dtoa_r+0x1b6>
   822b6:	f109 39ff 	add.w	r9, r9, #4294967295
   822ba:	2700      	movs	r7, #0
   822bc:	e000      	b.n	822c0 <_dtoa_r+0x1b2>
   822be:	2701      	movs	r7, #1
   822c0:	9714      	str	r7, [sp, #80]	; 0x50
   822c2:	e000      	b.n	822c6 <_dtoa_r+0x1b8>
   822c4:	9014      	str	r0, [sp, #80]	; 0x50
   822c6:	9b18      	ldr	r3, [sp, #96]	; 0x60
   822c8:	1b9e      	subs	r6, r3, r6
   822ca:	3e01      	subs	r6, #1
   822cc:	960a      	str	r6, [sp, #40]	; 0x28
   822ce:	d504      	bpl.n	822da <_dtoa_r+0x1cc>
   822d0:	4277      	negs	r7, r6
   822d2:	9708      	str	r7, [sp, #32]
   822d4:	2700      	movs	r7, #0
   822d6:	970a      	str	r7, [sp, #40]	; 0x28
   822d8:	e001      	b.n	822de <_dtoa_r+0x1d0>
   822da:	2700      	movs	r7, #0
   822dc:	9708      	str	r7, [sp, #32]
   822de:	f1b9 0f00 	cmp.w	r9, #0
   822e2:	db07      	blt.n	822f4 <_dtoa_r+0x1e6>
   822e4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   822e6:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
   822ea:	444f      	add	r7, r9
   822ec:	970a      	str	r7, [sp, #40]	; 0x28
   822ee:	2700      	movs	r7, #0
   822f0:	970e      	str	r7, [sp, #56]	; 0x38
   822f2:	e008      	b.n	82306 <_dtoa_r+0x1f8>
   822f4:	9f08      	ldr	r7, [sp, #32]
   822f6:	ebc9 0707 	rsb	r7, r9, r7
   822fa:	9708      	str	r7, [sp, #32]
   822fc:	f1c9 0700 	rsb	r7, r9, #0
   82300:	970e      	str	r7, [sp, #56]	; 0x38
   82302:	2700      	movs	r7, #0
   82304:	9711      	str	r7, [sp, #68]	; 0x44
   82306:	9f24      	ldr	r7, [sp, #144]	; 0x90
   82308:	2f09      	cmp	r7, #9
   8230a:	d829      	bhi.n	82360 <_dtoa_r+0x252>
   8230c:	2f05      	cmp	r7, #5
   8230e:	bfc4      	itt	gt
   82310:	3f04      	subgt	r7, #4
   82312:	9724      	strgt	r7, [sp, #144]	; 0x90
   82314:	9f24      	ldr	r7, [sp, #144]	; 0x90
   82316:	bfc8      	it	gt
   82318:	2400      	movgt	r4, #0
   8231a:	f1a7 0302 	sub.w	r3, r7, #2
   8231e:	bfd8      	it	le
   82320:	2401      	movle	r4, #1
   82322:	2b03      	cmp	r3, #3
   82324:	d821      	bhi.n	8236a <_dtoa_r+0x25c>
   82326:	e8df f003 	tbb	[pc, r3]
   8232a:	0f06      	.short	0x0f06
   8232c:	0402      	.short	0x0402
   8232e:	2701      	movs	r7, #1
   82330:	e002      	b.n	82338 <_dtoa_r+0x22a>
   82332:	2701      	movs	r7, #1
   82334:	e009      	b.n	8234a <_dtoa_r+0x23c>
   82336:	2700      	movs	r7, #0
   82338:	970f      	str	r7, [sp, #60]	; 0x3c
   8233a:	9f25      	ldr	r7, [sp, #148]	; 0x94
   8233c:	2f00      	cmp	r7, #0
   8233e:	dd1e      	ble.n	8237e <_dtoa_r+0x270>
   82340:	970b      	str	r7, [sp, #44]	; 0x2c
   82342:	9707      	str	r7, [sp, #28]
   82344:	463b      	mov	r3, r7
   82346:	e01f      	b.n	82388 <_dtoa_r+0x27a>
   82348:	2700      	movs	r7, #0
   8234a:	970f      	str	r7, [sp, #60]	; 0x3c
   8234c:	9f25      	ldr	r7, [sp, #148]	; 0x94
   8234e:	444f      	add	r7, r9
   82350:	970b      	str	r7, [sp, #44]	; 0x2c
   82352:	3701      	adds	r7, #1
   82354:	463b      	mov	r3, r7
   82356:	9707      	str	r7, [sp, #28]
   82358:	2b01      	cmp	r3, #1
   8235a:	bfb8      	it	lt
   8235c:	2301      	movlt	r3, #1
   8235e:	e013      	b.n	82388 <_dtoa_r+0x27a>
   82360:	2401      	movs	r4, #1
   82362:	2700      	movs	r7, #0
   82364:	9724      	str	r7, [sp, #144]	; 0x90
   82366:	940f      	str	r4, [sp, #60]	; 0x3c
   82368:	e001      	b.n	8236e <_dtoa_r+0x260>
   8236a:	2701      	movs	r7, #1
   8236c:	970f      	str	r7, [sp, #60]	; 0x3c
   8236e:	f04f 37ff 	mov.w	r7, #4294967295
   82372:	970b      	str	r7, [sp, #44]	; 0x2c
   82374:	9707      	str	r7, [sp, #28]
   82376:	2700      	movs	r7, #0
   82378:	2312      	movs	r3, #18
   8237a:	9725      	str	r7, [sp, #148]	; 0x94
   8237c:	e004      	b.n	82388 <_dtoa_r+0x27a>
   8237e:	2701      	movs	r7, #1
   82380:	970b      	str	r7, [sp, #44]	; 0x2c
   82382:	9707      	str	r7, [sp, #28]
   82384:	463b      	mov	r3, r7
   82386:	9725      	str	r7, [sp, #148]	; 0x94
   82388:	2200      	movs	r2, #0
   8238a:	f8ca 2044 	str.w	r2, [sl, #68]	; 0x44
   8238e:	2204      	movs	r2, #4
   82390:	f102 0114 	add.w	r1, r2, #20
   82394:	4299      	cmp	r1, r3
   82396:	d821      	bhi.n	823dc <_dtoa_r+0x2ce>
   82398:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
   8239c:	0052      	lsls	r2, r2, #1
   8239e:	3101      	adds	r1, #1
   823a0:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
   823a4:	e7f4      	b.n	82390 <_dtoa_r+0x282>
   823a6:	bf00      	nop
   823a8:	636f4361 	.word	0x636f4361
   823ac:	3fd287a7 	.word	0x3fd287a7
   823b0:	8b60c8b3 	.word	0x8b60c8b3
   823b4:	3fc68a28 	.word	0x3fc68a28
   823b8:	509f79fb 	.word	0x509f79fb
   823bc:	3fd34413 	.word	0x3fd34413
   823c0:	7ff00000 	.word	0x7ff00000
   823c4:	00085853 	.word	0x00085853
   823c8:	0008584a 	.word	0x0008584a
   823cc:	00085849 	.word	0x00085849
   823d0:	fffffbee 	.word	0xfffffbee
   823d4:	3ff80000 	.word	0x3ff80000
   823d8:	00085870 	.word	0x00085870
   823dc:	4650      	mov	r0, sl
   823de:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
   823e2:	f000 ffdf 	bl	833a4 <_Balloc>
   823e6:	9f07      	ldr	r7, [sp, #28]
   823e8:	9009      	str	r0, [sp, #36]	; 0x24
   823ea:	2f0e      	cmp	r7, #14
   823ec:	f8ca 0040 	str.w	r0, [sl, #64]	; 0x40
   823f0:	f200 816a 	bhi.w	826c8 <_dtoa_r+0x5ba>
   823f4:	2c00      	cmp	r4, #0
   823f6:	f000 8167 	beq.w	826c8 <_dtoa_r+0x5ba>
   823fa:	f1b9 0f00 	cmp.w	r9, #0
   823fe:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82402:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   82406:	dd31      	ble.n	8246c <_dtoa_r+0x35e>
   82408:	4a80      	ldr	r2, [pc, #512]	; (8260c <_dtoa_r+0x4fe>)
   8240a:	f009 030f 	and.w	r3, r9, #15
   8240e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   82412:	ea4f 1429 	mov.w	r4, r9, asr #4
   82416:	e9d3 0100 	ldrd	r0, r1, [r3]
   8241a:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   8241e:	06e0      	lsls	r0, r4, #27
   82420:	d50c      	bpl.n	8243c <_dtoa_r+0x32e>
   82422:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   82426:	4b7a      	ldr	r3, [pc, #488]	; (82610 <_dtoa_r+0x502>)
   82428:	f004 040f 	and.w	r4, r4, #15
   8242c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   82430:	f002 fd50 	bl	84ed4 <__aeabi_ddiv>
   82434:	2703      	movs	r7, #3
   82436:	e9cd 0104 	strd	r0, r1, [sp, #16]
   8243a:	e000      	b.n	8243e <_dtoa_r+0x330>
   8243c:	2702      	movs	r7, #2
   8243e:	4d74      	ldr	r5, [pc, #464]	; (82610 <_dtoa_r+0x502>)
   82440:	b16c      	cbz	r4, 8245e <_dtoa_r+0x350>
   82442:	07e1      	lsls	r1, r4, #31
   82444:	d508      	bpl.n	82458 <_dtoa_r+0x34a>
   82446:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   8244a:	e9d5 2300 	ldrd	r2, r3, [r5]
   8244e:	f002 fc17 	bl	84c80 <__aeabi_dmul>
   82452:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   82456:	3701      	adds	r7, #1
   82458:	1064      	asrs	r4, r4, #1
   8245a:	3508      	adds	r5, #8
   8245c:	e7f0      	b.n	82440 <_dtoa_r+0x332>
   8245e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82462:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   82466:	f002 fd35 	bl	84ed4 <__aeabi_ddiv>
   8246a:	e01b      	b.n	824a4 <_dtoa_r+0x396>
   8246c:	f1c9 0400 	rsb	r4, r9, #0
   82470:	b1dc      	cbz	r4, 824aa <_dtoa_r+0x39c>
   82472:	4b66      	ldr	r3, [pc, #408]	; (8260c <_dtoa_r+0x4fe>)
   82474:	f004 020f 	and.w	r2, r4, #15
   82478:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8247c:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   82480:	e9d3 2300 	ldrd	r2, r3, [r3]
   82484:	f002 fbfc 	bl	84c80 <__aeabi_dmul>
   82488:	4d61      	ldr	r5, [pc, #388]	; (82610 <_dtoa_r+0x502>)
   8248a:	1124      	asrs	r4, r4, #4
   8248c:	2702      	movs	r7, #2
   8248e:	b14c      	cbz	r4, 824a4 <_dtoa_r+0x396>
   82490:	07e2      	lsls	r2, r4, #31
   82492:	d504      	bpl.n	8249e <_dtoa_r+0x390>
   82494:	e9d5 2300 	ldrd	r2, r3, [r5]
   82498:	3701      	adds	r7, #1
   8249a:	f002 fbf1 	bl	84c80 <__aeabi_dmul>
   8249e:	1064      	asrs	r4, r4, #1
   824a0:	3508      	adds	r5, #8
   824a2:	e7f4      	b.n	8248e <_dtoa_r+0x380>
   824a4:	e9cd 0104 	strd	r0, r1, [sp, #16]
   824a8:	e000      	b.n	824ac <_dtoa_r+0x39e>
   824aa:	2702      	movs	r7, #2
   824ac:	9914      	ldr	r1, [sp, #80]	; 0x50
   824ae:	b1e9      	cbz	r1, 824ec <_dtoa_r+0x3de>
   824b0:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
   824b4:	2200      	movs	r2, #0
   824b6:	4620      	mov	r0, r4
   824b8:	4629      	mov	r1, r5
   824ba:	4b56      	ldr	r3, [pc, #344]	; (82614 <_dtoa_r+0x506>)
   824bc:	f002 fe52 	bl	85164 <__aeabi_dcmplt>
   824c0:	b1c8      	cbz	r0, 824f6 <_dtoa_r+0x3e8>
   824c2:	9a07      	ldr	r2, [sp, #28]
   824c4:	b1e2      	cbz	r2, 82500 <_dtoa_r+0x3f2>
   824c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   824c8:	2b00      	cmp	r3, #0
   824ca:	f340 80f9 	ble.w	826c0 <_dtoa_r+0x5b2>
   824ce:	f109 30ff 	add.w	r0, r9, #4294967295
   824d2:	9010      	str	r0, [sp, #64]	; 0x40
   824d4:	4629      	mov	r1, r5
   824d6:	4620      	mov	r0, r4
   824d8:	2200      	movs	r2, #0
   824da:	4b4f      	ldr	r3, [pc, #316]	; (82618 <_dtoa_r+0x50a>)
   824dc:	f002 fbd0 	bl	84c80 <__aeabi_dmul>
   824e0:	e9cd 0104 	strd	r0, r1, [sp, #16]
   824e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   824e6:	3701      	adds	r7, #1
   824e8:	910c      	str	r1, [sp, #48]	; 0x30
   824ea:	e00d      	b.n	82508 <_dtoa_r+0x3fa>
   824ec:	9a07      	ldr	r2, [sp, #28]
   824ee:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   824f2:	920c      	str	r2, [sp, #48]	; 0x30
   824f4:	e008      	b.n	82508 <_dtoa_r+0x3fa>
   824f6:	9b07      	ldr	r3, [sp, #28]
   824f8:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   824fc:	930c      	str	r3, [sp, #48]	; 0x30
   824fe:	e003      	b.n	82508 <_dtoa_r+0x3fa>
   82500:	9807      	ldr	r0, [sp, #28]
   82502:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   82506:	900c      	str	r0, [sp, #48]	; 0x30
   82508:	4638      	mov	r0, r7
   8250a:	f002 fb53 	bl	84bb4 <__aeabi_i2d>
   8250e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   82512:	f002 fbb5 	bl	84c80 <__aeabi_dmul>
   82516:	2200      	movs	r2, #0
   82518:	4b40      	ldr	r3, [pc, #256]	; (8261c <_dtoa_r+0x50e>)
   8251a:	f002 f9ff 	bl	8491c <__adddf3>
   8251e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   82520:	4604      	mov	r4, r0
   82522:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
   82526:	b9cf      	cbnz	r7, 8255c <_dtoa_r+0x44e>
   82528:	2200      	movs	r2, #0
   8252a:	4b3d      	ldr	r3, [pc, #244]	; (82620 <_dtoa_r+0x512>)
   8252c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82530:	f002 f9f2 	bl	84918 <__aeabi_dsub>
   82534:	4622      	mov	r2, r4
   82536:	462b      	mov	r3, r5
   82538:	4606      	mov	r6, r0
   8253a:	460f      	mov	r7, r1
   8253c:	f002 fe30 	bl	851a0 <__aeabi_dcmpgt>
   82540:	2800      	cmp	r0, #0
   82542:	f040 8252 	bne.w	829ea <_dtoa_r+0x8dc>
   82546:	4622      	mov	r2, r4
   82548:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   8254c:	4630      	mov	r0, r6
   8254e:	4639      	mov	r1, r7
   82550:	f002 fe08 	bl	85164 <__aeabi_dcmplt>
   82554:	2800      	cmp	r0, #0
   82556:	f040 823e 	bne.w	829d6 <_dtoa_r+0x8c8>
   8255a:	e0b1      	b.n	826c0 <_dtoa_r+0x5b2>
   8255c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   8255e:	4b2b      	ldr	r3, [pc, #172]	; (8260c <_dtoa_r+0x4fe>)
   82560:	1e7a      	subs	r2, r7, #1
   82562:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   82564:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   82568:	2f00      	cmp	r7, #0
   8256a:	d05d      	beq.n	82628 <_dtoa_r+0x51a>
   8256c:	e9d3 2300 	ldrd	r2, r3, [r3]
   82570:	2000      	movs	r0, #0
   82572:	492c      	ldr	r1, [pc, #176]	; (82624 <_dtoa_r+0x516>)
   82574:	f002 fcae 	bl	84ed4 <__aeabi_ddiv>
   82578:	4622      	mov	r2, r4
   8257a:	462b      	mov	r3, r5
   8257c:	f002 f9cc 	bl	84918 <__aeabi_dsub>
   82580:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   82584:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   82588:	4604      	mov	r4, r0
   8258a:	460d      	mov	r5, r1
   8258c:	4639      	mov	r1, r7
   8258e:	4630      	mov	r0, r6
   82590:	f002 fe10 	bl	851b4 <__aeabi_d2iz>
   82594:	9002      	str	r0, [sp, #8]
   82596:	f002 fb0d 	bl	84bb4 <__aeabi_i2d>
   8259a:	4602      	mov	r2, r0
   8259c:	460b      	mov	r3, r1
   8259e:	4630      	mov	r0, r6
   825a0:	4639      	mov	r1, r7
   825a2:	f002 f9b9 	bl	84918 <__aeabi_dsub>
   825a6:	f8dd c008 	ldr.w	ip, [sp, #8]
   825aa:	4622      	mov	r2, r4
   825ac:	f10c 0330 	add.w	r3, ip, #48	; 0x30
   825b0:	f808 3b01 	strb.w	r3, [r8], #1
   825b4:	462b      	mov	r3, r5
   825b6:	4606      	mov	r6, r0
   825b8:	460f      	mov	r7, r1
   825ba:	f002 fdd3 	bl	85164 <__aeabi_dcmplt>
   825be:	2800      	cmp	r0, #0
   825c0:	f040 833a 	bne.w	82c38 <_dtoa_r+0xb2a>
   825c4:	4632      	mov	r2, r6
   825c6:	463b      	mov	r3, r7
   825c8:	2000      	movs	r0, #0
   825ca:	4912      	ldr	r1, [pc, #72]	; (82614 <_dtoa_r+0x506>)
   825cc:	f002 f9a4 	bl	84918 <__aeabi_dsub>
   825d0:	4622      	mov	r2, r4
   825d2:	462b      	mov	r3, r5
   825d4:	f002 fdc6 	bl	85164 <__aeabi_dcmplt>
   825d8:	2800      	cmp	r0, #0
   825da:	f040 80d4 	bne.w	82786 <_dtoa_r+0x678>
   825de:	9809      	ldr	r0, [sp, #36]	; 0x24
   825e0:	990c      	ldr	r1, [sp, #48]	; 0x30
   825e2:	ebc0 0308 	rsb	r3, r0, r8
   825e6:	428b      	cmp	r3, r1
   825e8:	da6a      	bge.n	826c0 <_dtoa_r+0x5b2>
   825ea:	4620      	mov	r0, r4
   825ec:	4629      	mov	r1, r5
   825ee:	2200      	movs	r2, #0
   825f0:	4b09      	ldr	r3, [pc, #36]	; (82618 <_dtoa_r+0x50a>)
   825f2:	f002 fb45 	bl	84c80 <__aeabi_dmul>
   825f6:	2200      	movs	r2, #0
   825f8:	4604      	mov	r4, r0
   825fa:	460d      	mov	r5, r1
   825fc:	4630      	mov	r0, r6
   825fe:	4639      	mov	r1, r7
   82600:	4b05      	ldr	r3, [pc, #20]	; (82618 <_dtoa_r+0x50a>)
   82602:	f002 fb3d 	bl	84c80 <__aeabi_dmul>
   82606:	4606      	mov	r6, r0
   82608:	460f      	mov	r7, r1
   8260a:	e7bf      	b.n	8258c <_dtoa_r+0x47e>
   8260c:	00085870 	.word	0x00085870
   82610:	00085960 	.word	0x00085960
   82614:	3ff00000 	.word	0x3ff00000
   82618:	40240000 	.word	0x40240000
   8261c:	401c0000 	.word	0x401c0000
   82620:	40140000 	.word	0x40140000
   82624:	3fe00000 	.word	0x3fe00000
   82628:	4622      	mov	r2, r4
   8262a:	e9d3 0100 	ldrd	r0, r1, [r3]
   8262e:	462b      	mov	r3, r5
   82630:	f002 fb26 	bl	84c80 <__aeabi_dmul>
   82634:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   82638:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   8263c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8263e:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   82642:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82644:	4490      	add	r8, r2
   82646:	4639      	mov	r1, r7
   82648:	4630      	mov	r0, r6
   8264a:	f002 fdb3 	bl	851b4 <__aeabi_d2iz>
   8264e:	4605      	mov	r5, r0
   82650:	f002 fab0 	bl	84bb4 <__aeabi_i2d>
   82654:	4602      	mov	r2, r0
   82656:	460b      	mov	r3, r1
   82658:	4630      	mov	r0, r6
   8265a:	4639      	mov	r1, r7
   8265c:	f002 f95c 	bl	84918 <__aeabi_dsub>
   82660:	3530      	adds	r5, #48	; 0x30
   82662:	f804 5b01 	strb.w	r5, [r4], #1
   82666:	4544      	cmp	r4, r8
   82668:	4606      	mov	r6, r0
   8266a:	460f      	mov	r7, r1
   8266c:	d121      	bne.n	826b2 <_dtoa_r+0x5a4>
   8266e:	2200      	movs	r2, #0
   82670:	4b87      	ldr	r3, [pc, #540]	; (82890 <_dtoa_r+0x782>)
   82672:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   82676:	f002 f951 	bl	8491c <__adddf3>
   8267a:	4602      	mov	r2, r0
   8267c:	460b      	mov	r3, r1
   8267e:	4630      	mov	r0, r6
   82680:	4639      	mov	r1, r7
   82682:	f002 fd8d 	bl	851a0 <__aeabi_dcmpgt>
   82686:	2800      	cmp	r0, #0
   82688:	d17d      	bne.n	82786 <_dtoa_r+0x678>
   8268a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   8268e:	2000      	movs	r0, #0
   82690:	497f      	ldr	r1, [pc, #508]	; (82890 <_dtoa_r+0x782>)
   82692:	f002 f941 	bl	84918 <__aeabi_dsub>
   82696:	4602      	mov	r2, r0
   82698:	460b      	mov	r3, r1
   8269a:	4630      	mov	r0, r6
   8269c:	4639      	mov	r1, r7
   8269e:	f002 fd61 	bl	85164 <__aeabi_dcmplt>
   826a2:	b168      	cbz	r0, 826c0 <_dtoa_r+0x5b2>
   826a4:	46a0      	mov	r8, r4
   826a6:	f818 3c01 	ldrb.w	r3, [r8, #-1]
   826aa:	3c01      	subs	r4, #1
   826ac:	2b30      	cmp	r3, #48	; 0x30
   826ae:	d0f9      	beq.n	826a4 <_dtoa_r+0x596>
   826b0:	e2c2      	b.n	82c38 <_dtoa_r+0xb2a>
   826b2:	2200      	movs	r2, #0
   826b4:	4b77      	ldr	r3, [pc, #476]	; (82894 <_dtoa_r+0x786>)
   826b6:	f002 fae3 	bl	84c80 <__aeabi_dmul>
   826ba:	4606      	mov	r6, r0
   826bc:	460f      	mov	r7, r1
   826be:	e7c2      	b.n	82646 <_dtoa_r+0x538>
   826c0:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   826c4:	e9cd 0104 	strd	r0, r1, [sp, #16]
   826c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
   826ca:	2b00      	cmp	r3, #0
   826cc:	db7c      	blt.n	827c8 <_dtoa_r+0x6ba>
   826ce:	f1b9 0f0e 	cmp.w	r9, #14
   826d2:	dc79      	bgt.n	827c8 <_dtoa_r+0x6ba>
   826d4:	4b70      	ldr	r3, [pc, #448]	; (82898 <_dtoa_r+0x78a>)
   826d6:	9f25      	ldr	r7, [sp, #148]	; 0x94
   826d8:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
   826dc:	2f00      	cmp	r7, #0
   826de:	e9d3 4500 	ldrd	r4, r5, [r3]
   826e2:	da14      	bge.n	8270e <_dtoa_r+0x600>
   826e4:	9f07      	ldr	r7, [sp, #28]
   826e6:	2f00      	cmp	r7, #0
   826e8:	dc11      	bgt.n	8270e <_dtoa_r+0x600>
   826ea:	f040 8176 	bne.w	829da <_dtoa_r+0x8cc>
   826ee:	4620      	mov	r0, r4
   826f0:	4629      	mov	r1, r5
   826f2:	2200      	movs	r2, #0
   826f4:	4b69      	ldr	r3, [pc, #420]	; (8289c <_dtoa_r+0x78e>)
   826f6:	f002 fac3 	bl	84c80 <__aeabi_dmul>
   826fa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   826fe:	f002 fd45 	bl	8518c <__aeabi_dcmpge>
   82702:	9d07      	ldr	r5, [sp, #28]
   82704:	462c      	mov	r4, r5
   82706:	2800      	cmp	r0, #0
   82708:	f040 8169 	bne.w	829de <_dtoa_r+0x8d0>
   8270c:	e171      	b.n	829f2 <_dtoa_r+0x8e4>
   8270e:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   82712:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   82716:	4622      	mov	r2, r4
   82718:	462b      	mov	r3, r5
   8271a:	4630      	mov	r0, r6
   8271c:	4639      	mov	r1, r7
   8271e:	f002 fbd9 	bl	84ed4 <__aeabi_ddiv>
   82722:	f002 fd47 	bl	851b4 <__aeabi_d2iz>
   82726:	9004      	str	r0, [sp, #16]
   82728:	f002 fa44 	bl	84bb4 <__aeabi_i2d>
   8272c:	4622      	mov	r2, r4
   8272e:	462b      	mov	r3, r5
   82730:	f002 faa6 	bl	84c80 <__aeabi_dmul>
   82734:	4602      	mov	r2, r0
   82736:	460b      	mov	r3, r1
   82738:	4630      	mov	r0, r6
   8273a:	4639      	mov	r1, r7
   8273c:	f002 f8ec 	bl	84918 <__aeabi_dsub>
   82740:	9f04      	ldr	r7, [sp, #16]
   82742:	4602      	mov	r2, r0
   82744:	f107 0630 	add.w	r6, r7, #48	; 0x30
   82748:	9f09      	ldr	r7, [sp, #36]	; 0x24
   8274a:	f808 6b01 	strb.w	r6, [r8], #1
   8274e:	ebc7 0608 	rsb	r6, r7, r8
   82752:	9f07      	ldr	r7, [sp, #28]
   82754:	460b      	mov	r3, r1
   82756:	42be      	cmp	r6, r7
   82758:	d129      	bne.n	827ae <_dtoa_r+0x6a0>
   8275a:	f002 f8df 	bl	8491c <__adddf3>
   8275e:	4622      	mov	r2, r4
   82760:	462b      	mov	r3, r5
   82762:	4606      	mov	r6, r0
   82764:	460f      	mov	r7, r1
   82766:	f002 fd1b 	bl	851a0 <__aeabi_dcmpgt>
   8276a:	b970      	cbnz	r0, 8278a <_dtoa_r+0x67c>
   8276c:	4630      	mov	r0, r6
   8276e:	4639      	mov	r1, r7
   82770:	4622      	mov	r2, r4
   82772:	462b      	mov	r3, r5
   82774:	f002 fcec 	bl	85150 <__aeabi_dcmpeq>
   82778:	2800      	cmp	r0, #0
   8277a:	f000 825f 	beq.w	82c3c <_dtoa_r+0xb2e>
   8277e:	9f04      	ldr	r7, [sp, #16]
   82780:	07fb      	lsls	r3, r7, #31
   82782:	d402      	bmi.n	8278a <_dtoa_r+0x67c>
   82784:	e25a      	b.n	82c3c <_dtoa_r+0xb2e>
   82786:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   8278a:	4643      	mov	r3, r8
   8278c:	4698      	mov	r8, r3
   8278e:	f818 2c01 	ldrb.w	r2, [r8, #-1]
   82792:	3b01      	subs	r3, #1
   82794:	2a39      	cmp	r2, #57	; 0x39
   82796:	d106      	bne.n	827a6 <_dtoa_r+0x698>
   82798:	9f09      	ldr	r7, [sp, #36]	; 0x24
   8279a:	429f      	cmp	r7, r3
   8279c:	d1f6      	bne.n	8278c <_dtoa_r+0x67e>
   8279e:	2230      	movs	r2, #48	; 0x30
   827a0:	f109 0901 	add.w	r9, r9, #1
   827a4:	703a      	strb	r2, [r7, #0]
   827a6:	781a      	ldrb	r2, [r3, #0]
   827a8:	3201      	adds	r2, #1
   827aa:	701a      	strb	r2, [r3, #0]
   827ac:	e246      	b.n	82c3c <_dtoa_r+0xb2e>
   827ae:	2200      	movs	r2, #0
   827b0:	4b38      	ldr	r3, [pc, #224]	; (82894 <_dtoa_r+0x786>)
   827b2:	f002 fa65 	bl	84c80 <__aeabi_dmul>
   827b6:	2200      	movs	r2, #0
   827b8:	2300      	movs	r3, #0
   827ba:	4606      	mov	r6, r0
   827bc:	460f      	mov	r7, r1
   827be:	f002 fcc7 	bl	85150 <__aeabi_dcmpeq>
   827c2:	2800      	cmp	r0, #0
   827c4:	d0a7      	beq.n	82716 <_dtoa_r+0x608>
   827c6:	e239      	b.n	82c3c <_dtoa_r+0xb2e>
   827c8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   827ca:	2f00      	cmp	r7, #0
   827cc:	d030      	beq.n	82830 <_dtoa_r+0x722>
   827ce:	9f24      	ldr	r7, [sp, #144]	; 0x90
   827d0:	2f01      	cmp	r7, #1
   827d2:	dc0a      	bgt.n	827ea <_dtoa_r+0x6dc>
   827d4:	9f15      	ldr	r7, [sp, #84]	; 0x54
   827d6:	b117      	cbz	r7, 827de <_dtoa_r+0x6d0>
   827d8:	f203 4333 	addw	r3, r3, #1075	; 0x433
   827dc:	e002      	b.n	827e4 <_dtoa_r+0x6d6>
   827de:	9b18      	ldr	r3, [sp, #96]	; 0x60
   827e0:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   827e4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   827e6:	9e08      	ldr	r6, [sp, #32]
   827e8:	e016      	b.n	82818 <_dtoa_r+0x70a>
   827ea:	9f07      	ldr	r7, [sp, #28]
   827ec:	1e7d      	subs	r5, r7, #1
   827ee:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   827f0:	42af      	cmp	r7, r5
   827f2:	db01      	blt.n	827f8 <_dtoa_r+0x6ea>
   827f4:	1b7d      	subs	r5, r7, r5
   827f6:	e006      	b.n	82806 <_dtoa_r+0x6f8>
   827f8:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   827fa:	950e      	str	r5, [sp, #56]	; 0x38
   827fc:	1beb      	subs	r3, r5, r7
   827fe:	9f11      	ldr	r7, [sp, #68]	; 0x44
   82800:	2500      	movs	r5, #0
   82802:	441f      	add	r7, r3
   82804:	9711      	str	r7, [sp, #68]	; 0x44
   82806:	9f07      	ldr	r7, [sp, #28]
   82808:	2f00      	cmp	r7, #0
   8280a:	da03      	bge.n	82814 <_dtoa_r+0x706>
   8280c:	9808      	ldr	r0, [sp, #32]
   8280e:	2300      	movs	r3, #0
   82810:	1bc6      	subs	r6, r0, r7
   82812:	e001      	b.n	82818 <_dtoa_r+0x70a>
   82814:	9e08      	ldr	r6, [sp, #32]
   82816:	9b07      	ldr	r3, [sp, #28]
   82818:	9f08      	ldr	r7, [sp, #32]
   8281a:	4650      	mov	r0, sl
   8281c:	441f      	add	r7, r3
   8281e:	9708      	str	r7, [sp, #32]
   82820:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   82822:	2101      	movs	r1, #1
   82824:	441f      	add	r7, r3
   82826:	970a      	str	r7, [sp, #40]	; 0x28
   82828:	f000 feb4 	bl	83594 <__i2b>
   8282c:	4604      	mov	r4, r0
   8282e:	e002      	b.n	82836 <_dtoa_r+0x728>
   82830:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   82832:	9e08      	ldr	r6, [sp, #32]
   82834:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82836:	b16e      	cbz	r6, 82854 <_dtoa_r+0x746>
   82838:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   8283a:	2f00      	cmp	r7, #0
   8283c:	dd0a      	ble.n	82854 <_dtoa_r+0x746>
   8283e:	463b      	mov	r3, r7
   82840:	9f08      	ldr	r7, [sp, #32]
   82842:	42b3      	cmp	r3, r6
   82844:	bfa8      	it	ge
   82846:	4633      	movge	r3, r6
   82848:	1aff      	subs	r7, r7, r3
   8284a:	9708      	str	r7, [sp, #32]
   8284c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   8284e:	1af6      	subs	r6, r6, r3
   82850:	1aff      	subs	r7, r7, r3
   82852:	970a      	str	r7, [sp, #40]	; 0x28
   82854:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   82856:	2f00      	cmp	r7, #0
   82858:	dd28      	ble.n	828ac <_dtoa_r+0x79e>
   8285a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   8285c:	b307      	cbz	r7, 828a0 <_dtoa_r+0x792>
   8285e:	2d00      	cmp	r5, #0
   82860:	dd10      	ble.n	82884 <_dtoa_r+0x776>
   82862:	4621      	mov	r1, r4
   82864:	462a      	mov	r2, r5
   82866:	4650      	mov	r0, sl
   82868:	f000 ff35 	bl	836d6 <__pow5mult>
   8286c:	4604      	mov	r4, r0
   8286e:	465a      	mov	r2, fp
   82870:	4621      	mov	r1, r4
   82872:	4650      	mov	r0, sl
   82874:	f000 fe97 	bl	835a6 <__multiply>
   82878:	4659      	mov	r1, fp
   8287a:	4607      	mov	r7, r0
   8287c:	4650      	mov	r0, sl
   8287e:	f000 fdb7 	bl	833f0 <_Bfree>
   82882:	46bb      	mov	fp, r7
   82884:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   82886:	1b7a      	subs	r2, r7, r5
   82888:	d010      	beq.n	828ac <_dtoa_r+0x79e>
   8288a:	4650      	mov	r0, sl
   8288c:	4659      	mov	r1, fp
   8288e:	e00a      	b.n	828a6 <_dtoa_r+0x798>
   82890:	3fe00000 	.word	0x3fe00000
   82894:	40240000 	.word	0x40240000
   82898:	00085870 	.word	0x00085870
   8289c:	40140000 	.word	0x40140000
   828a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   828a2:	4650      	mov	r0, sl
   828a4:	4659      	mov	r1, fp
   828a6:	f000 ff16 	bl	836d6 <__pow5mult>
   828aa:	4683      	mov	fp, r0
   828ac:	4650      	mov	r0, sl
   828ae:	2101      	movs	r1, #1
   828b0:	f000 fe70 	bl	83594 <__i2b>
   828b4:	9f11      	ldr	r7, [sp, #68]	; 0x44
   828b6:	4605      	mov	r5, r0
   828b8:	2f00      	cmp	r7, #0
   828ba:	dd05      	ble.n	828c8 <_dtoa_r+0x7ba>
   828bc:	4629      	mov	r1, r5
   828be:	4650      	mov	r0, sl
   828c0:	463a      	mov	r2, r7
   828c2:	f000 ff08 	bl	836d6 <__pow5mult>
   828c6:	4605      	mov	r5, r0
   828c8:	9f24      	ldr	r7, [sp, #144]	; 0x90
   828ca:	2f01      	cmp	r7, #1
   828cc:	dc12      	bgt.n	828f4 <_dtoa_r+0x7e6>
   828ce:	9804      	ldr	r0, [sp, #16]
   828d0:	b980      	cbnz	r0, 828f4 <_dtoa_r+0x7e6>
   828d2:	9905      	ldr	r1, [sp, #20]
   828d4:	f3c1 0313 	ubfx	r3, r1, #0, #20
   828d8:	b973      	cbnz	r3, 828f8 <_dtoa_r+0x7ea>
   828da:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
   828de:	0d3f      	lsrs	r7, r7, #20
   828e0:	053f      	lsls	r7, r7, #20
   828e2:	b157      	cbz	r7, 828fa <_dtoa_r+0x7ec>
   828e4:	9f08      	ldr	r7, [sp, #32]
   828e6:	3701      	adds	r7, #1
   828e8:	9708      	str	r7, [sp, #32]
   828ea:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   828ec:	3701      	adds	r7, #1
   828ee:	970a      	str	r7, [sp, #40]	; 0x28
   828f0:	2701      	movs	r7, #1
   828f2:	e002      	b.n	828fa <_dtoa_r+0x7ec>
   828f4:	2700      	movs	r7, #0
   828f6:	e000      	b.n	828fa <_dtoa_r+0x7ec>
   828f8:	9f04      	ldr	r7, [sp, #16]
   828fa:	9811      	ldr	r0, [sp, #68]	; 0x44
   828fc:	b140      	cbz	r0, 82910 <_dtoa_r+0x802>
   828fe:	692b      	ldr	r3, [r5, #16]
   82900:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   82904:	6918      	ldr	r0, [r3, #16]
   82906:	f000 fdf8 	bl	834fa <__hi0bits>
   8290a:	f1c0 0020 	rsb	r0, r0, #32
   8290e:	e000      	b.n	82912 <_dtoa_r+0x804>
   82910:	2001      	movs	r0, #1
   82912:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82914:	4403      	add	r3, r0
   82916:	f013 031f 	ands.w	r3, r3, #31
   8291a:	d00f      	beq.n	8293c <_dtoa_r+0x82e>
   8291c:	f1c3 0220 	rsb	r2, r3, #32
   82920:	2a04      	cmp	r2, #4
   82922:	dd09      	ble.n	82938 <_dtoa_r+0x82a>
   82924:	9908      	ldr	r1, [sp, #32]
   82926:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82928:	f1c3 031c 	rsb	r3, r3, #28
   8292c:	4419      	add	r1, r3
   8292e:	441a      	add	r2, r3
   82930:	9108      	str	r1, [sp, #32]
   82932:	441e      	add	r6, r3
   82934:	920a      	str	r2, [sp, #40]	; 0x28
   82936:	e009      	b.n	8294c <_dtoa_r+0x83e>
   82938:	d008      	beq.n	8294c <_dtoa_r+0x83e>
   8293a:	4613      	mov	r3, r2
   8293c:	9808      	ldr	r0, [sp, #32]
   8293e:	990a      	ldr	r1, [sp, #40]	; 0x28
   82940:	331c      	adds	r3, #28
   82942:	4418      	add	r0, r3
   82944:	4419      	add	r1, r3
   82946:	9008      	str	r0, [sp, #32]
   82948:	441e      	add	r6, r3
   8294a:	910a      	str	r1, [sp, #40]	; 0x28
   8294c:	9a08      	ldr	r2, [sp, #32]
   8294e:	2a00      	cmp	r2, #0
   82950:	dd04      	ble.n	8295c <_dtoa_r+0x84e>
   82952:	4659      	mov	r1, fp
   82954:	4650      	mov	r0, sl
   82956:	f000 fefd 	bl	83754 <__lshift>
   8295a:	4683      	mov	fp, r0
   8295c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8295e:	2b00      	cmp	r3, #0
   82960:	dd05      	ble.n	8296e <_dtoa_r+0x860>
   82962:	4629      	mov	r1, r5
   82964:	4650      	mov	r0, sl
   82966:	461a      	mov	r2, r3
   82968:	f000 fef4 	bl	83754 <__lshift>
   8296c:	4605      	mov	r5, r0
   8296e:	9814      	ldr	r0, [sp, #80]	; 0x50
   82970:	b1e0      	cbz	r0, 829ac <_dtoa_r+0x89e>
   82972:	4658      	mov	r0, fp
   82974:	4629      	mov	r1, r5
   82976:	f000 ff40 	bl	837fa <__mcmp>
   8297a:	2800      	cmp	r0, #0
   8297c:	da16      	bge.n	829ac <_dtoa_r+0x89e>
   8297e:	4659      	mov	r1, fp
   82980:	4650      	mov	r0, sl
   82982:	220a      	movs	r2, #10
   82984:	2300      	movs	r3, #0
   82986:	f000 fd3c 	bl	83402 <__multadd>
   8298a:	990f      	ldr	r1, [sp, #60]	; 0x3c
   8298c:	f109 39ff 	add.w	r9, r9, #4294967295
   82990:	4683      	mov	fp, r0
   82992:	b149      	cbz	r1, 829a8 <_dtoa_r+0x89a>
   82994:	4621      	mov	r1, r4
   82996:	220a      	movs	r2, #10
   82998:	4650      	mov	r0, sl
   8299a:	2300      	movs	r3, #0
   8299c:	f000 fd31 	bl	83402 <__multadd>
   829a0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   829a2:	4604      	mov	r4, r0
   829a4:	9207      	str	r2, [sp, #28]
   829a6:	e001      	b.n	829ac <_dtoa_r+0x89e>
   829a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   829aa:	9307      	str	r3, [sp, #28]
   829ac:	9807      	ldr	r0, [sp, #28]
   829ae:	2800      	cmp	r0, #0
   829b0:	dc29      	bgt.n	82a06 <_dtoa_r+0x8f8>
   829b2:	9924      	ldr	r1, [sp, #144]	; 0x90
   829b4:	2902      	cmp	r1, #2
   829b6:	dd26      	ble.n	82a06 <_dtoa_r+0x8f8>
   829b8:	b988      	cbnz	r0, 829de <_dtoa_r+0x8d0>
   829ba:	4629      	mov	r1, r5
   829bc:	2205      	movs	r2, #5
   829be:	9b07      	ldr	r3, [sp, #28]
   829c0:	4650      	mov	r0, sl
   829c2:	f000 fd1e 	bl	83402 <__multadd>
   829c6:	4605      	mov	r5, r0
   829c8:	4629      	mov	r1, r5
   829ca:	4658      	mov	r0, fp
   829cc:	f000 ff15 	bl	837fa <__mcmp>
   829d0:	2800      	cmp	r0, #0
   829d2:	dc0e      	bgt.n	829f2 <_dtoa_r+0x8e4>
   829d4:	e003      	b.n	829de <_dtoa_r+0x8d0>
   829d6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   829d8:	e000      	b.n	829dc <_dtoa_r+0x8ce>
   829da:	2500      	movs	r5, #0
   829dc:	462c      	mov	r4, r5
   829de:	9f25      	ldr	r7, [sp, #148]	; 0x94
   829e0:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   829e4:	ea6f 0907 	mvn.w	r9, r7
   829e8:	e00a      	b.n	82a00 <_dtoa_r+0x8f2>
   829ea:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   829ec:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   829f0:	462c      	mov	r4, r5
   829f2:	9f09      	ldr	r7, [sp, #36]	; 0x24
   829f4:	2331      	movs	r3, #49	; 0x31
   829f6:	f107 0801 	add.w	r8, r7, #1
   829fa:	703b      	strb	r3, [r7, #0]
   829fc:	f109 0901 	add.w	r9, r9, #1
   82a00:	4627      	mov	r7, r4
   82a02:	2400      	movs	r4, #0
   82a04:	e107      	b.n	82c16 <_dtoa_r+0xb08>
   82a06:	980f      	ldr	r0, [sp, #60]	; 0x3c
   82a08:	2800      	cmp	r0, #0
   82a0a:	f000 80bb 	beq.w	82b84 <_dtoa_r+0xa76>
   82a0e:	2e00      	cmp	r6, #0
   82a10:	dd05      	ble.n	82a1e <_dtoa_r+0x910>
   82a12:	4621      	mov	r1, r4
   82a14:	4650      	mov	r0, sl
   82a16:	4632      	mov	r2, r6
   82a18:	f000 fe9c 	bl	83754 <__lshift>
   82a1c:	4604      	mov	r4, r0
   82a1e:	b19f      	cbz	r7, 82a48 <_dtoa_r+0x93a>
   82a20:	6861      	ldr	r1, [r4, #4]
   82a22:	4650      	mov	r0, sl
   82a24:	f000 fcbe 	bl	833a4 <_Balloc>
   82a28:	6922      	ldr	r2, [r4, #16]
   82a2a:	4606      	mov	r6, r0
   82a2c:	3202      	adds	r2, #2
   82a2e:	f104 010c 	add.w	r1, r4, #12
   82a32:	0092      	lsls	r2, r2, #2
   82a34:	300c      	adds	r0, #12
   82a36:	f000 fc8f 	bl	83358 <memcpy>
   82a3a:	4650      	mov	r0, sl
   82a3c:	4631      	mov	r1, r6
   82a3e:	2201      	movs	r2, #1
   82a40:	f000 fe88 	bl	83754 <__lshift>
   82a44:	4607      	mov	r7, r0
   82a46:	e000      	b.n	82a4a <_dtoa_r+0x93c>
   82a48:	4627      	mov	r7, r4
   82a4a:	9e09      	ldr	r6, [sp, #36]	; 0x24
   82a4c:	4629      	mov	r1, r5
   82a4e:	4658      	mov	r0, fp
   82a50:	f7ff face 	bl	81ff0 <quorem>
   82a54:	4621      	mov	r1, r4
   82a56:	f100 0c30 	add.w	ip, r0, #48	; 0x30
   82a5a:	4680      	mov	r8, r0
   82a5c:	4658      	mov	r0, fp
   82a5e:	f8cd c008 	str.w	ip, [sp, #8]
   82a62:	f000 feca 	bl	837fa <__mcmp>
   82a66:	463a      	mov	r2, r7
   82a68:	9008      	str	r0, [sp, #32]
   82a6a:	4629      	mov	r1, r5
   82a6c:	4650      	mov	r0, sl
   82a6e:	f000 fee1 	bl	83834 <__mdiff>
   82a72:	68c3      	ldr	r3, [r0, #12]
   82a74:	4602      	mov	r2, r0
   82a76:	f8dd c008 	ldr.w	ip, [sp, #8]
   82a7a:	b94b      	cbnz	r3, 82a90 <_dtoa_r+0x982>
   82a7c:	4611      	mov	r1, r2
   82a7e:	4658      	mov	r0, fp
   82a80:	9203      	str	r2, [sp, #12]
   82a82:	f000 feba 	bl	837fa <__mcmp>
   82a86:	9a03      	ldr	r2, [sp, #12]
   82a88:	4603      	mov	r3, r0
   82a8a:	f8dd c008 	ldr.w	ip, [sp, #8]
   82a8e:	e000      	b.n	82a92 <_dtoa_r+0x984>
   82a90:	2301      	movs	r3, #1
   82a92:	4650      	mov	r0, sl
   82a94:	4611      	mov	r1, r2
   82a96:	9303      	str	r3, [sp, #12]
   82a98:	f8cd c008 	str.w	ip, [sp, #8]
   82a9c:	f000 fca8 	bl	833f0 <_Bfree>
   82aa0:	9b03      	ldr	r3, [sp, #12]
   82aa2:	f8dd c008 	ldr.w	ip, [sp, #8]
   82aa6:	b963      	cbnz	r3, 82ac2 <_dtoa_r+0x9b4>
   82aa8:	9924      	ldr	r1, [sp, #144]	; 0x90
   82aaa:	b951      	cbnz	r1, 82ac2 <_dtoa_r+0x9b4>
   82aac:	9804      	ldr	r0, [sp, #16]
   82aae:	f000 0201 	and.w	r2, r0, #1
   82ab2:	b932      	cbnz	r2, 82ac2 <_dtoa_r+0x9b4>
   82ab4:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   82ab8:	d035      	beq.n	82b26 <_dtoa_r+0xa18>
   82aba:	9b08      	ldr	r3, [sp, #32]
   82abc:	2b00      	cmp	r3, #0
   82abe:	dc24      	bgt.n	82b0a <_dtoa_r+0x9fc>
   82ac0:	e025      	b.n	82b0e <_dtoa_r+0xa00>
   82ac2:	9808      	ldr	r0, [sp, #32]
   82ac4:	2800      	cmp	r0, #0
   82ac6:	da02      	bge.n	82ace <_dtoa_r+0x9c0>
   82ac8:	2b00      	cmp	r3, #0
   82aca:	dc08      	bgt.n	82ade <_dtoa_r+0x9d0>
   82acc:	e01f      	b.n	82b0e <_dtoa_r+0xa00>
   82ace:	d123      	bne.n	82b18 <_dtoa_r+0xa0a>
   82ad0:	9924      	ldr	r1, [sp, #144]	; 0x90
   82ad2:	bb09      	cbnz	r1, 82b18 <_dtoa_r+0xa0a>
   82ad4:	9804      	ldr	r0, [sp, #16]
   82ad6:	f000 0201 	and.w	r2, r0, #1
   82ada:	b9ea      	cbnz	r2, 82b18 <_dtoa_r+0xa0a>
   82adc:	e7f4      	b.n	82ac8 <_dtoa_r+0x9ba>
   82ade:	4659      	mov	r1, fp
   82ae0:	2201      	movs	r2, #1
   82ae2:	4650      	mov	r0, sl
   82ae4:	f8cd c008 	str.w	ip, [sp, #8]
   82ae8:	f000 fe34 	bl	83754 <__lshift>
   82aec:	4629      	mov	r1, r5
   82aee:	4683      	mov	fp, r0
   82af0:	f000 fe83 	bl	837fa <__mcmp>
   82af4:	2800      	cmp	r0, #0
   82af6:	f8dd c008 	ldr.w	ip, [sp, #8]
   82afa:	dc03      	bgt.n	82b04 <_dtoa_r+0x9f6>
   82afc:	d107      	bne.n	82b0e <_dtoa_r+0xa00>
   82afe:	f01c 0f01 	tst.w	ip, #1
   82b02:	d004      	beq.n	82b0e <_dtoa_r+0xa00>
   82b04:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   82b08:	d00d      	beq.n	82b26 <_dtoa_r+0xa18>
   82b0a:	f108 0c31 	add.w	ip, r8, #49	; 0x31
   82b0e:	f106 0801 	add.w	r8, r6, #1
   82b12:	f886 c000 	strb.w	ip, [r6]
   82b16:	e07e      	b.n	82c16 <_dtoa_r+0xb08>
   82b18:	2b00      	cmp	r3, #0
   82b1a:	f106 0801 	add.w	r8, r6, #1
   82b1e:	dd09      	ble.n	82b34 <_dtoa_r+0xa26>
   82b20:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   82b24:	d103      	bne.n	82b2e <_dtoa_r+0xa20>
   82b26:	2339      	movs	r3, #57	; 0x39
   82b28:	7033      	strb	r3, [r6, #0]
   82b2a:	3601      	adds	r6, #1
   82b2c:	e05b      	b.n	82be6 <_dtoa_r+0xad8>
   82b2e:	f10c 0301 	add.w	r3, ip, #1
   82b32:	e068      	b.n	82c06 <_dtoa_r+0xaf8>
   82b34:	9909      	ldr	r1, [sp, #36]	; 0x24
   82b36:	9a07      	ldr	r2, [sp, #28]
   82b38:	ebc1 0308 	rsb	r3, r1, r8
   82b3c:	4646      	mov	r6, r8
   82b3e:	4293      	cmp	r3, r2
   82b40:	f806 cc01 	strb.w	ip, [r6, #-1]
   82b44:	d03c      	beq.n	82bc0 <_dtoa_r+0xab2>
   82b46:	4659      	mov	r1, fp
   82b48:	220a      	movs	r2, #10
   82b4a:	2300      	movs	r3, #0
   82b4c:	4650      	mov	r0, sl
   82b4e:	f000 fc58 	bl	83402 <__multadd>
   82b52:	42bc      	cmp	r4, r7
   82b54:	4683      	mov	fp, r0
   82b56:	4621      	mov	r1, r4
   82b58:	4650      	mov	r0, sl
   82b5a:	f04f 020a 	mov.w	r2, #10
   82b5e:	f04f 0300 	mov.w	r3, #0
   82b62:	d104      	bne.n	82b6e <_dtoa_r+0xa60>
   82b64:	f000 fc4d 	bl	83402 <__multadd>
   82b68:	4604      	mov	r4, r0
   82b6a:	4607      	mov	r7, r0
   82b6c:	e76e      	b.n	82a4c <_dtoa_r+0x93e>
   82b6e:	f000 fc48 	bl	83402 <__multadd>
   82b72:	4639      	mov	r1, r7
   82b74:	4604      	mov	r4, r0
   82b76:	220a      	movs	r2, #10
   82b78:	4650      	mov	r0, sl
   82b7a:	2300      	movs	r3, #0
   82b7c:	f000 fc41 	bl	83402 <__multadd>
   82b80:	4607      	mov	r7, r0
   82b82:	e763      	b.n	82a4c <_dtoa_r+0x93e>
   82b84:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
   82b86:	4658      	mov	r0, fp
   82b88:	4629      	mov	r1, r5
   82b8a:	f7ff fa31 	bl	81ff0 <quorem>
   82b8e:	9f09      	ldr	r7, [sp, #36]	; 0x24
   82b90:	f100 0c30 	add.w	ip, r0, #48	; 0x30
   82b94:	f807 c006 	strb.w	ip, [r7, r6]
   82b98:	9f07      	ldr	r7, [sp, #28]
   82b9a:	3601      	adds	r6, #1
   82b9c:	42be      	cmp	r6, r7
   82b9e:	db07      	blt.n	82bb0 <_dtoa_r+0xaa2>
   82ba0:	9e09      	ldr	r6, [sp, #36]	; 0x24
   82ba2:	2f01      	cmp	r7, #1
   82ba4:	bfac      	ite	ge
   82ba6:	19f6      	addge	r6, r6, r7
   82ba8:	3601      	addlt	r6, #1
   82baa:	4627      	mov	r7, r4
   82bac:	2400      	movs	r4, #0
   82bae:	e007      	b.n	82bc0 <_dtoa_r+0xab2>
   82bb0:	4659      	mov	r1, fp
   82bb2:	4650      	mov	r0, sl
   82bb4:	220a      	movs	r2, #10
   82bb6:	2300      	movs	r3, #0
   82bb8:	f000 fc23 	bl	83402 <__multadd>
   82bbc:	4683      	mov	fp, r0
   82bbe:	e7e2      	b.n	82b86 <_dtoa_r+0xa78>
   82bc0:	4659      	mov	r1, fp
   82bc2:	2201      	movs	r2, #1
   82bc4:	4650      	mov	r0, sl
   82bc6:	f8cd c008 	str.w	ip, [sp, #8]
   82bca:	f000 fdc3 	bl	83754 <__lshift>
   82bce:	4629      	mov	r1, r5
   82bd0:	4683      	mov	fp, r0
   82bd2:	f000 fe12 	bl	837fa <__mcmp>
   82bd6:	2800      	cmp	r0, #0
   82bd8:	f8dd c008 	ldr.w	ip, [sp, #8]
   82bdc:	dc03      	bgt.n	82be6 <_dtoa_r+0xad8>
   82bde:	d114      	bne.n	82c0a <_dtoa_r+0xafc>
   82be0:	f01c 0f01 	tst.w	ip, #1
   82be4:	d011      	beq.n	82c0a <_dtoa_r+0xafc>
   82be6:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   82bea:	46b0      	mov	r8, r6
   82bec:	2b39      	cmp	r3, #57	; 0x39
   82bee:	f106 36ff 	add.w	r6, r6, #4294967295
   82bf2:	d107      	bne.n	82c04 <_dtoa_r+0xaf6>
   82bf4:	9809      	ldr	r0, [sp, #36]	; 0x24
   82bf6:	42b0      	cmp	r0, r6
   82bf8:	d1f5      	bne.n	82be6 <_dtoa_r+0xad8>
   82bfa:	2331      	movs	r3, #49	; 0x31
   82bfc:	f109 0901 	add.w	r9, r9, #1
   82c00:	7003      	strb	r3, [r0, #0]
   82c02:	e008      	b.n	82c16 <_dtoa_r+0xb08>
   82c04:	3301      	adds	r3, #1
   82c06:	7033      	strb	r3, [r6, #0]
   82c08:	e005      	b.n	82c16 <_dtoa_r+0xb08>
   82c0a:	46b0      	mov	r8, r6
   82c0c:	f818 3c01 	ldrb.w	r3, [r8, #-1]
   82c10:	3e01      	subs	r6, #1
   82c12:	2b30      	cmp	r3, #48	; 0x30
   82c14:	d0f9      	beq.n	82c0a <_dtoa_r+0xafc>
   82c16:	4650      	mov	r0, sl
   82c18:	4629      	mov	r1, r5
   82c1a:	f000 fbe9 	bl	833f0 <_Bfree>
   82c1e:	b16f      	cbz	r7, 82c3c <_dtoa_r+0xb2e>
   82c20:	b12c      	cbz	r4, 82c2e <_dtoa_r+0xb20>
   82c22:	42bc      	cmp	r4, r7
   82c24:	d003      	beq.n	82c2e <_dtoa_r+0xb20>
   82c26:	4650      	mov	r0, sl
   82c28:	4621      	mov	r1, r4
   82c2a:	f000 fbe1 	bl	833f0 <_Bfree>
   82c2e:	4650      	mov	r0, sl
   82c30:	4639      	mov	r1, r7
   82c32:	f000 fbdd 	bl	833f0 <_Bfree>
   82c36:	e001      	b.n	82c3c <_dtoa_r+0xb2e>
   82c38:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   82c3c:	4650      	mov	r0, sl
   82c3e:	4659      	mov	r1, fp
   82c40:	f000 fbd6 	bl	833f0 <_Bfree>
   82c44:	2300      	movs	r3, #0
   82c46:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82c48:	f888 3000 	strb.w	r3, [r8]
   82c4c:	f109 0301 	add.w	r3, r9, #1
   82c50:	603b      	str	r3, [r7, #0]
   82c52:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   82c54:	b127      	cbz	r7, 82c60 <_dtoa_r+0xb52>
   82c56:	f8c7 8000 	str.w	r8, [r7]
   82c5a:	e001      	b.n	82c60 <_dtoa_r+0xb52>
   82c5c:	4802      	ldr	r0, [pc, #8]	; (82c68 <_dtoa_r+0xb5a>)
   82c5e:	e000      	b.n	82c62 <_dtoa_r+0xb54>
   82c60:	9809      	ldr	r0, [sp, #36]	; 0x24
   82c62:	b01b      	add	sp, #108	; 0x6c
   82c64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82c68:	00085848 	.word	0x00085848
   82c6c:	f3af 8000 	nop.w

00082c70 <__libc_fini_array>:
   82c70:	b538      	push	{r3, r4, r5, lr}
   82c72:	4d08      	ldr	r5, [pc, #32]	; (82c94 <__libc_fini_array+0x24>)
   82c74:	4c08      	ldr	r4, [pc, #32]	; (82c98 <__libc_fini_array+0x28>)
   82c76:	1b64      	subs	r4, r4, r5
   82c78:	10a4      	asrs	r4, r4, #2
   82c7a:	eb05 0584 	add.w	r5, r5, r4, lsl #2
   82c7e:	b124      	cbz	r4, 82c8a <__libc_fini_array+0x1a>
   82c80:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   82c84:	3c01      	subs	r4, #1
   82c86:	4798      	blx	r3
   82c88:	e7f9      	b.n	82c7e <__libc_fini_array+0xe>
   82c8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   82c8e:	f002 be95 	b.w	859bc <_fini>
   82c92:	bf00      	nop
   82c94:	000859c8 	.word	0x000859c8
   82c98:	000859cc 	.word	0x000859cc

00082c9c <_malloc_trim_r>:
   82c9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82c9e:	4d23      	ldr	r5, [pc, #140]	; (82d2c <_malloc_trim_r+0x90>)
   82ca0:	460e      	mov	r6, r1
   82ca2:	4604      	mov	r4, r0
   82ca4:	f000 fb7c 	bl	833a0 <__malloc_lock>
   82ca8:	68ab      	ldr	r3, [r5, #8]
   82caa:	685f      	ldr	r7, [r3, #4]
   82cac:	f027 0703 	bic.w	r7, r7, #3
   82cb0:	1bbe      	subs	r6, r7, r6
   82cb2:	f606 76ef 	addw	r6, r6, #4079	; 0xfef
   82cb6:	f426 667f 	bic.w	r6, r6, #4080	; 0xff0
   82cba:	f026 060f 	bic.w	r6, r6, #15
   82cbe:	f5a6 5680 	sub.w	r6, r6, #4096	; 0x1000
   82cc2:	f5b6 5f80 	cmp.w	r6, #4096	; 0x1000
   82cc6:	da04      	bge.n	82cd2 <_malloc_trim_r+0x36>
   82cc8:	4620      	mov	r0, r4
   82cca:	f000 fb6a 	bl	833a2 <__malloc_unlock>
   82cce:	2000      	movs	r0, #0
   82cd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82cd2:	4620      	mov	r0, r4
   82cd4:	2100      	movs	r1, #0
   82cd6:	f001 f91b 	bl	83f10 <_sbrk_r>
   82cda:	68ab      	ldr	r3, [r5, #8]
   82cdc:	443b      	add	r3, r7
   82cde:	4298      	cmp	r0, r3
   82ce0:	d1f2      	bne.n	82cc8 <_malloc_trim_r+0x2c>
   82ce2:	4620      	mov	r0, r4
   82ce4:	4271      	negs	r1, r6
   82ce6:	f001 f913 	bl	83f10 <_sbrk_r>
   82cea:	3001      	adds	r0, #1
   82cec:	d110      	bne.n	82d10 <_malloc_trim_r+0x74>
   82cee:	4620      	mov	r0, r4
   82cf0:	2100      	movs	r1, #0
   82cf2:	f001 f90d 	bl	83f10 <_sbrk_r>
   82cf6:	68ab      	ldr	r3, [r5, #8]
   82cf8:	1ac2      	subs	r2, r0, r3
   82cfa:	2a0f      	cmp	r2, #15
   82cfc:	dde4      	ble.n	82cc8 <_malloc_trim_r+0x2c>
   82cfe:	490c      	ldr	r1, [pc, #48]	; (82d30 <_malloc_trim_r+0x94>)
   82d00:	f042 0201 	orr.w	r2, r2, #1
   82d04:	6809      	ldr	r1, [r1, #0]
   82d06:	605a      	str	r2, [r3, #4]
   82d08:	1a40      	subs	r0, r0, r1
   82d0a:	490a      	ldr	r1, [pc, #40]	; (82d34 <_malloc_trim_r+0x98>)
   82d0c:	6008      	str	r0, [r1, #0]
   82d0e:	e7db      	b.n	82cc8 <_malloc_trim_r+0x2c>
   82d10:	68ab      	ldr	r3, [r5, #8]
   82d12:	1bbf      	subs	r7, r7, r6
   82d14:	f047 0701 	orr.w	r7, r7, #1
   82d18:	605f      	str	r7, [r3, #4]
   82d1a:	4b06      	ldr	r3, [pc, #24]	; (82d34 <_malloc_trim_r+0x98>)
   82d1c:	4620      	mov	r0, r4
   82d1e:	681a      	ldr	r2, [r3, #0]
   82d20:	1b96      	subs	r6, r2, r6
   82d22:	601e      	str	r6, [r3, #0]
   82d24:	f000 fb3d 	bl	833a2 <__malloc_unlock>
   82d28:	2001      	movs	r0, #1
   82d2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82d2c:	200704b4 	.word	0x200704b4
   82d30:	200708bc 	.word	0x200708bc
   82d34:	2007306c 	.word	0x2007306c

00082d38 <_free_r>:
   82d38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82d3a:	4606      	mov	r6, r0
   82d3c:	460d      	mov	r5, r1
   82d3e:	2900      	cmp	r1, #0
   82d40:	f000 80a9 	beq.w	82e96 <_free_r+0x15e>
   82d44:	f000 fb2c 	bl	833a0 <__malloc_lock>
   82d48:	f855 cc04 	ldr.w	ip, [r5, #-4]
   82d4c:	4c52      	ldr	r4, [pc, #328]	; (82e98 <_free_r+0x160>)
   82d4e:	f1a5 0308 	sub.w	r3, r5, #8
   82d52:	f02c 0201 	bic.w	r2, ip, #1
   82d56:	1898      	adds	r0, r3, r2
   82d58:	68a1      	ldr	r1, [r4, #8]
   82d5a:	6847      	ldr	r7, [r0, #4]
   82d5c:	4288      	cmp	r0, r1
   82d5e:	f027 0703 	bic.w	r7, r7, #3
   82d62:	f00c 0101 	and.w	r1, ip, #1
   82d66:	d11b      	bne.n	82da0 <_free_r+0x68>
   82d68:	443a      	add	r2, r7
   82d6a:	b939      	cbnz	r1, 82d7c <_free_r+0x44>
   82d6c:	f855 1c08 	ldr.w	r1, [r5, #-8]
   82d70:	1a5b      	subs	r3, r3, r1
   82d72:	6898      	ldr	r0, [r3, #8]
   82d74:	440a      	add	r2, r1
   82d76:	68d9      	ldr	r1, [r3, #12]
   82d78:	60c1      	str	r1, [r0, #12]
   82d7a:	6088      	str	r0, [r1, #8]
   82d7c:	f042 0101 	orr.w	r1, r2, #1
   82d80:	6059      	str	r1, [r3, #4]
   82d82:	60a3      	str	r3, [r4, #8]
   82d84:	4b45      	ldr	r3, [pc, #276]	; (82e9c <_free_r+0x164>)
   82d86:	681b      	ldr	r3, [r3, #0]
   82d88:	429a      	cmp	r2, r3
   82d8a:	d304      	bcc.n	82d96 <_free_r+0x5e>
   82d8c:	4b44      	ldr	r3, [pc, #272]	; (82ea0 <_free_r+0x168>)
   82d8e:	4630      	mov	r0, r6
   82d90:	6819      	ldr	r1, [r3, #0]
   82d92:	f7ff ff83 	bl	82c9c <_malloc_trim_r>
   82d96:	4630      	mov	r0, r6
   82d98:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   82d9c:	f000 bb01 	b.w	833a2 <__malloc_unlock>
   82da0:	6047      	str	r7, [r0, #4]
   82da2:	b979      	cbnz	r1, 82dc4 <_free_r+0x8c>
   82da4:	f855 5c08 	ldr.w	r5, [r5, #-8]
   82da8:	f104 0c08 	add.w	ip, r4, #8
   82dac:	1b5b      	subs	r3, r3, r5
   82dae:	442a      	add	r2, r5
   82db0:	689d      	ldr	r5, [r3, #8]
   82db2:	4565      	cmp	r5, ip
   82db4:	d008      	beq.n	82dc8 <_free_r+0x90>
   82db6:	f8d3 c00c 	ldr.w	ip, [r3, #12]
   82dba:	f8c5 c00c 	str.w	ip, [r5, #12]
   82dbe:	f8cc 5008 	str.w	r5, [ip, #8]
   82dc2:	e002      	b.n	82dca <_free_r+0x92>
   82dc4:	2100      	movs	r1, #0
   82dc6:	e000      	b.n	82dca <_free_r+0x92>
   82dc8:	2101      	movs	r1, #1
   82dca:	19c5      	adds	r5, r0, r7
   82dcc:	686d      	ldr	r5, [r5, #4]
   82dce:	07ed      	lsls	r5, r5, #31
   82dd0:	d40e      	bmi.n	82df0 <_free_r+0xb8>
   82dd2:	443a      	add	r2, r7
   82dd4:	6885      	ldr	r5, [r0, #8]
   82dd6:	b941      	cbnz	r1, 82dea <_free_r+0xb2>
   82dd8:	4f32      	ldr	r7, [pc, #200]	; (82ea4 <_free_r+0x16c>)
   82dda:	42bd      	cmp	r5, r7
   82ddc:	d105      	bne.n	82dea <_free_r+0xb2>
   82dde:	6163      	str	r3, [r4, #20]
   82de0:	6123      	str	r3, [r4, #16]
   82de2:	2101      	movs	r1, #1
   82de4:	60dd      	str	r5, [r3, #12]
   82de6:	609d      	str	r5, [r3, #8]
   82de8:	e002      	b.n	82df0 <_free_r+0xb8>
   82dea:	68c0      	ldr	r0, [r0, #12]
   82dec:	60e8      	str	r0, [r5, #12]
   82dee:	6085      	str	r5, [r0, #8]
   82df0:	f042 0001 	orr.w	r0, r2, #1
   82df4:	6058      	str	r0, [r3, #4]
   82df6:	509a      	str	r2, [r3, r2]
   82df8:	2900      	cmp	r1, #0
   82dfa:	d1cc      	bne.n	82d96 <_free_r+0x5e>
   82dfc:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   82e00:	d20e      	bcs.n	82e20 <_free_r+0xe8>
   82e02:	08d2      	lsrs	r2, r2, #3
   82e04:	1091      	asrs	r1, r2, #2
   82e06:	2001      	movs	r0, #1
   82e08:	4088      	lsls	r0, r1
   82e0a:	6861      	ldr	r1, [r4, #4]
   82e0c:	4301      	orrs	r1, r0
   82e0e:	6061      	str	r1, [r4, #4]
   82e10:	eb04 04c2 	add.w	r4, r4, r2, lsl #3
   82e14:	68a2      	ldr	r2, [r4, #8]
   82e16:	60dc      	str	r4, [r3, #12]
   82e18:	609a      	str	r2, [r3, #8]
   82e1a:	60a3      	str	r3, [r4, #8]
   82e1c:	60d3      	str	r3, [r2, #12]
   82e1e:	e7ba      	b.n	82d96 <_free_r+0x5e>
   82e20:	0a51      	lsrs	r1, r2, #9
   82e22:	2904      	cmp	r1, #4
   82e24:	d802      	bhi.n	82e2c <_free_r+0xf4>
   82e26:	0991      	lsrs	r1, r2, #6
   82e28:	3138      	adds	r1, #56	; 0x38
   82e2a:	e015      	b.n	82e58 <_free_r+0x120>
   82e2c:	2914      	cmp	r1, #20
   82e2e:	d801      	bhi.n	82e34 <_free_r+0xfc>
   82e30:	315b      	adds	r1, #91	; 0x5b
   82e32:	e011      	b.n	82e58 <_free_r+0x120>
   82e34:	2954      	cmp	r1, #84	; 0x54
   82e36:	d802      	bhi.n	82e3e <_free_r+0x106>
   82e38:	0b11      	lsrs	r1, r2, #12
   82e3a:	316e      	adds	r1, #110	; 0x6e
   82e3c:	e00c      	b.n	82e58 <_free_r+0x120>
   82e3e:	f5b1 7faa 	cmp.w	r1, #340	; 0x154
   82e42:	d802      	bhi.n	82e4a <_free_r+0x112>
   82e44:	0bd1      	lsrs	r1, r2, #15
   82e46:	3177      	adds	r1, #119	; 0x77
   82e48:	e006      	b.n	82e58 <_free_r+0x120>
   82e4a:	f240 5054 	movw	r0, #1364	; 0x554
   82e4e:	4281      	cmp	r1, r0
   82e50:	bf9a      	itte	ls
   82e52:	0c91      	lsrls	r1, r2, #18
   82e54:	317c      	addls	r1, #124	; 0x7c
   82e56:	217e      	movhi	r1, #126	; 0x7e
   82e58:	eb04 04c1 	add.w	r4, r4, r1, lsl #3
   82e5c:	68a5      	ldr	r5, [r4, #8]
   82e5e:	480e      	ldr	r0, [pc, #56]	; (82e98 <_free_r+0x160>)
   82e60:	42a5      	cmp	r5, r4
   82e62:	d001      	beq.n	82e68 <_free_r+0x130>
   82e64:	4629      	mov	r1, r5
   82e66:	e00b      	b.n	82e80 <_free_r+0x148>
   82e68:	2201      	movs	r2, #1
   82e6a:	1089      	asrs	r1, r1, #2
   82e6c:	fa02 f101 	lsl.w	r1, r2, r1
   82e70:	6842      	ldr	r2, [r0, #4]
   82e72:	430a      	orrs	r2, r1
   82e74:	6042      	str	r2, [r0, #4]
   82e76:	4629      	mov	r1, r5
   82e78:	e008      	b.n	82e8c <_free_r+0x154>
   82e7a:	6889      	ldr	r1, [r1, #8]
   82e7c:	42a1      	cmp	r1, r4
   82e7e:	d004      	beq.n	82e8a <_free_r+0x152>
   82e80:	6848      	ldr	r0, [r1, #4]
   82e82:	f020 0003 	bic.w	r0, r0, #3
   82e86:	4282      	cmp	r2, r0
   82e88:	d3f7      	bcc.n	82e7a <_free_r+0x142>
   82e8a:	68cd      	ldr	r5, [r1, #12]
   82e8c:	60dd      	str	r5, [r3, #12]
   82e8e:	6099      	str	r1, [r3, #8]
   82e90:	60ab      	str	r3, [r5, #8]
   82e92:	60cb      	str	r3, [r1, #12]
   82e94:	e77f      	b.n	82d96 <_free_r+0x5e>
   82e96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82e98:	200704b4 	.word	0x200704b4
   82e9c:	200708c0 	.word	0x200708c0
   82ea0:	20073068 	.word	0x20073068
   82ea4:	200704bc 	.word	0x200704bc

00082ea8 <_setlocale_r>:
   82ea8:	b510      	push	{r4, lr}
   82eaa:	4614      	mov	r4, r2
   82eac:	b90a      	cbnz	r2, 82eb2 <_setlocale_r+0xa>
   82eae:	480b      	ldr	r0, [pc, #44]	; (82edc <_setlocale_r+0x34>)
   82eb0:	bd10      	pop	{r4, pc}
   82eb2:	4610      	mov	r0, r2
   82eb4:	490a      	ldr	r1, [pc, #40]	; (82ee0 <_setlocale_r+0x38>)
   82eb6:	f001 f83b 	bl	83f30 <strcmp>
   82eba:	2800      	cmp	r0, #0
   82ebc:	d0f7      	beq.n	82eae <_setlocale_r+0x6>
   82ebe:	4620      	mov	r0, r4
   82ec0:	4906      	ldr	r1, [pc, #24]	; (82edc <_setlocale_r+0x34>)
   82ec2:	f001 f835 	bl	83f30 <strcmp>
   82ec6:	2800      	cmp	r0, #0
   82ec8:	d0f1      	beq.n	82eae <_setlocale_r+0x6>
   82eca:	4620      	mov	r0, r4
   82ecc:	4905      	ldr	r1, [pc, #20]	; (82ee4 <_setlocale_r+0x3c>)
   82ece:	f001 f82f 	bl	83f30 <strcmp>
   82ed2:	2800      	cmp	r0, #0
   82ed4:	4801      	ldr	r0, [pc, #4]	; (82edc <_setlocale_r+0x34>)
   82ed6:	bf18      	it	ne
   82ed8:	2000      	movne	r0, #0
   82eda:	bd10      	pop	{r4, pc}
   82edc:	000857f4 	.word	0x000857f4
   82ee0:	00085857 	.word	0x00085857
   82ee4:	0008585e 	.word	0x0008585e

00082ee8 <__locale_charset>:
   82ee8:	4800      	ldr	r0, [pc, #0]	; (82eec <__locale_charset+0x4>)
   82eea:	4770      	bx	lr
   82eec:	20070438 	.word	0x20070438

00082ef0 <__locale_mb_cur_max>:
   82ef0:	4b01      	ldr	r3, [pc, #4]	; (82ef8 <__locale_mb_cur_max+0x8>)
   82ef2:	6a18      	ldr	r0, [r3, #32]
   82ef4:	4770      	bx	lr
   82ef6:	bf00      	nop
   82ef8:	20070438 	.word	0x20070438

00082efc <__locale_msgcharset>:
   82efc:	4800      	ldr	r0, [pc, #0]	; (82f00 <__locale_msgcharset+0x4>)
   82efe:	4770      	bx	lr
   82f00:	2007045c 	.word	0x2007045c

00082f04 <__locale_cjk_lang>:
   82f04:	2000      	movs	r0, #0
   82f06:	4770      	bx	lr

00082f08 <_localeconv_r>:
   82f08:	4800      	ldr	r0, [pc, #0]	; (82f0c <_localeconv_r+0x4>)
   82f0a:	4770      	bx	lr
   82f0c:	2007047c 	.word	0x2007047c

00082f10 <setlocale>:
   82f10:	460a      	mov	r2, r1
   82f12:	4903      	ldr	r1, [pc, #12]	; (82f20 <setlocale+0x10>)
   82f14:	4603      	mov	r3, r0
   82f16:	6808      	ldr	r0, [r1, #0]
   82f18:	4619      	mov	r1, r3
   82f1a:	f7ff bfc5 	b.w	82ea8 <_setlocale_r>
   82f1e:	bf00      	nop
   82f20:	20070008 	.word	0x20070008

00082f24 <localeconv>:
   82f24:	4800      	ldr	r0, [pc, #0]	; (82f28 <localeconv+0x4>)
   82f26:	4770      	bx	lr
   82f28:	2007047c 	.word	0x2007047c

00082f2c <_malloc_r>:
   82f2c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82f30:	f101 040b 	add.w	r4, r1, #11
   82f34:	2c16      	cmp	r4, #22
   82f36:	4607      	mov	r7, r0
   82f38:	d903      	bls.n	82f42 <_malloc_r+0x16>
   82f3a:	f034 0407 	bics.w	r4, r4, #7
   82f3e:	d501      	bpl.n	82f44 <_malloc_r+0x18>
   82f40:	e002      	b.n	82f48 <_malloc_r+0x1c>
   82f42:	2410      	movs	r4, #16
   82f44:	428c      	cmp	r4, r1
   82f46:	d202      	bcs.n	82f4e <_malloc_r+0x22>
   82f48:	230c      	movs	r3, #12
   82f4a:	603b      	str	r3, [r7, #0]
   82f4c:	e1de      	b.n	8330c <_malloc_r+0x3e0>
   82f4e:	4638      	mov	r0, r7
   82f50:	f000 fa26 	bl	833a0 <__malloc_lock>
   82f54:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
   82f58:	4da3      	ldr	r5, [pc, #652]	; (831e8 <_malloc_r+0x2bc>)
   82f5a:	d214      	bcs.n	82f86 <_malloc_r+0x5a>
   82f5c:	08e2      	lsrs	r2, r4, #3
   82f5e:	eb05 03c2 	add.w	r3, r5, r2, lsl #3
   82f62:	68de      	ldr	r6, [r3, #12]
   82f64:	429e      	cmp	r6, r3
   82f66:	d106      	bne.n	82f76 <_malloc_r+0x4a>
   82f68:	f106 0308 	add.w	r3, r6, #8
   82f6c:	6976      	ldr	r6, [r6, #20]
   82f6e:	429e      	cmp	r6, r3
   82f70:	bf08      	it	eq
   82f72:	3202      	addeq	r2, #2
   82f74:	d043      	beq.n	82ffe <_malloc_r+0xd2>
   82f76:	6873      	ldr	r3, [r6, #4]
   82f78:	68f2      	ldr	r2, [r6, #12]
   82f7a:	68b1      	ldr	r1, [r6, #8]
   82f7c:	f023 0303 	bic.w	r3, r3, #3
   82f80:	60ca      	str	r2, [r1, #12]
   82f82:	6091      	str	r1, [r2, #8]
   82f84:	e05d      	b.n	83042 <_malloc_r+0x116>
   82f86:	0a62      	lsrs	r2, r4, #9
   82f88:	d01a      	beq.n	82fc0 <_malloc_r+0x94>
   82f8a:	2a04      	cmp	r2, #4
   82f8c:	d802      	bhi.n	82f94 <_malloc_r+0x68>
   82f8e:	09a2      	lsrs	r2, r4, #6
   82f90:	3238      	adds	r2, #56	; 0x38
   82f92:	e018      	b.n	82fc6 <_malloc_r+0x9a>
   82f94:	2a14      	cmp	r2, #20
   82f96:	d801      	bhi.n	82f9c <_malloc_r+0x70>
   82f98:	325b      	adds	r2, #91	; 0x5b
   82f9a:	e014      	b.n	82fc6 <_malloc_r+0x9a>
   82f9c:	2a54      	cmp	r2, #84	; 0x54
   82f9e:	d802      	bhi.n	82fa6 <_malloc_r+0x7a>
   82fa0:	0b22      	lsrs	r2, r4, #12
   82fa2:	326e      	adds	r2, #110	; 0x6e
   82fa4:	e00f      	b.n	82fc6 <_malloc_r+0x9a>
   82fa6:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   82faa:	d802      	bhi.n	82fb2 <_malloc_r+0x86>
   82fac:	0be2      	lsrs	r2, r4, #15
   82fae:	3277      	adds	r2, #119	; 0x77
   82fb0:	e009      	b.n	82fc6 <_malloc_r+0x9a>
   82fb2:	f240 5354 	movw	r3, #1364	; 0x554
   82fb6:	429a      	cmp	r2, r3
   82fb8:	d804      	bhi.n	82fc4 <_malloc_r+0x98>
   82fba:	0ca2      	lsrs	r2, r4, #18
   82fbc:	327c      	adds	r2, #124	; 0x7c
   82fbe:	e002      	b.n	82fc6 <_malloc_r+0x9a>
   82fc0:	223f      	movs	r2, #63	; 0x3f
   82fc2:	e000      	b.n	82fc6 <_malloc_r+0x9a>
   82fc4:	227e      	movs	r2, #126	; 0x7e
   82fc6:	eb05 03c2 	add.w	r3, r5, r2, lsl #3
   82fca:	68de      	ldr	r6, [r3, #12]
   82fcc:	429e      	cmp	r6, r3
   82fce:	d015      	beq.n	82ffc <_malloc_r+0xd0>
   82fd0:	6871      	ldr	r1, [r6, #4]
   82fd2:	f021 0103 	bic.w	r1, r1, #3
   82fd6:	1b08      	subs	r0, r1, r4
   82fd8:	280f      	cmp	r0, #15
   82fda:	dd01      	ble.n	82fe0 <_malloc_r+0xb4>
   82fdc:	3a01      	subs	r2, #1
   82fde:	e00d      	b.n	82ffc <_malloc_r+0xd0>
   82fe0:	2800      	cmp	r0, #0
   82fe2:	db09      	blt.n	82ff8 <_malloc_r+0xcc>
   82fe4:	68f3      	ldr	r3, [r6, #12]
   82fe6:	68b2      	ldr	r2, [r6, #8]
   82fe8:	60d3      	str	r3, [r2, #12]
   82fea:	609a      	str	r2, [r3, #8]
   82fec:	1873      	adds	r3, r6, r1
   82fee:	685a      	ldr	r2, [r3, #4]
   82ff0:	f042 0201 	orr.w	r2, r2, #1
   82ff4:	605a      	str	r2, [r3, #4]
   82ff6:	e194      	b.n	83322 <_malloc_r+0x3f6>
   82ff8:	68f6      	ldr	r6, [r6, #12]
   82ffa:	e7e7      	b.n	82fcc <_malloc_r+0xa0>
   82ffc:	3201      	adds	r2, #1
   82ffe:	497a      	ldr	r1, [pc, #488]	; (831e8 <_malloc_r+0x2bc>)
   83000:	692e      	ldr	r6, [r5, #16]
   83002:	f101 0008 	add.w	r0, r1, #8
   83006:	4286      	cmp	r6, r0
   83008:	4686      	mov	lr, r0
   8300a:	d06d      	beq.n	830e8 <_malloc_r+0x1bc>
   8300c:	6873      	ldr	r3, [r6, #4]
   8300e:	f023 0303 	bic.w	r3, r3, #3
   83012:	ebc4 0c03 	rsb	ip, r4, r3
   83016:	f1bc 0f0f 	cmp.w	ip, #15
   8301a:	dd0d      	ble.n	83038 <_malloc_r+0x10c>
   8301c:	1933      	adds	r3, r6, r4
   8301e:	f04c 0201 	orr.w	r2, ip, #1
   83022:	f044 0401 	orr.w	r4, r4, #1
   83026:	6074      	str	r4, [r6, #4]
   83028:	614b      	str	r3, [r1, #20]
   8302a:	610b      	str	r3, [r1, #16]
   8302c:	60d8      	str	r0, [r3, #12]
   8302e:	6098      	str	r0, [r3, #8]
   83030:	605a      	str	r2, [r3, #4]
   83032:	f843 c00c 	str.w	ip, [r3, ip]
   83036:	e174      	b.n	83322 <_malloc_r+0x3f6>
   83038:	f1bc 0f00 	cmp.w	ip, #0
   8303c:	6148      	str	r0, [r1, #20]
   8303e:	6108      	str	r0, [r1, #16]
   83040:	db01      	blt.n	83046 <_malloc_r+0x11a>
   83042:	4433      	add	r3, r6
   83044:	e7d3      	b.n	82fee <_malloc_r+0xc2>
   83046:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   8304a:	d211      	bcs.n	83070 <_malloc_r+0x144>
   8304c:	08db      	lsrs	r3, r3, #3
   8304e:	1098      	asrs	r0, r3, #2
   83050:	f04f 0c01 	mov.w	ip, #1
   83054:	fa0c fc00 	lsl.w	ip, ip, r0
   83058:	6848      	ldr	r0, [r1, #4]
   8305a:	ea4c 0000 	orr.w	r0, ip, r0
   8305e:	6048      	str	r0, [r1, #4]
   83060:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
   83064:	688b      	ldr	r3, [r1, #8]
   83066:	60f1      	str	r1, [r6, #12]
   83068:	60b3      	str	r3, [r6, #8]
   8306a:	608e      	str	r6, [r1, #8]
   8306c:	60de      	str	r6, [r3, #12]
   8306e:	e03b      	b.n	830e8 <_malloc_r+0x1bc>
   83070:	0a58      	lsrs	r0, r3, #9
   83072:	2804      	cmp	r0, #4
   83074:	d802      	bhi.n	8307c <_malloc_r+0x150>
   83076:	0998      	lsrs	r0, r3, #6
   83078:	3038      	adds	r0, #56	; 0x38
   8307a:	e015      	b.n	830a8 <_malloc_r+0x17c>
   8307c:	2814      	cmp	r0, #20
   8307e:	d801      	bhi.n	83084 <_malloc_r+0x158>
   83080:	305b      	adds	r0, #91	; 0x5b
   83082:	e011      	b.n	830a8 <_malloc_r+0x17c>
   83084:	2854      	cmp	r0, #84	; 0x54
   83086:	d802      	bhi.n	8308e <_malloc_r+0x162>
   83088:	0b18      	lsrs	r0, r3, #12
   8308a:	306e      	adds	r0, #110	; 0x6e
   8308c:	e00c      	b.n	830a8 <_malloc_r+0x17c>
   8308e:	f5b0 7faa 	cmp.w	r0, #340	; 0x154
   83092:	d802      	bhi.n	8309a <_malloc_r+0x16e>
   83094:	0bd8      	lsrs	r0, r3, #15
   83096:	3077      	adds	r0, #119	; 0x77
   83098:	e006      	b.n	830a8 <_malloc_r+0x17c>
   8309a:	f240 5154 	movw	r1, #1364	; 0x554
   8309e:	4288      	cmp	r0, r1
   830a0:	bf9a      	itte	ls
   830a2:	0c98      	lsrls	r0, r3, #18
   830a4:	307c      	addls	r0, #124	; 0x7c
   830a6:	207e      	movhi	r0, #126	; 0x7e
   830a8:	eb05 0cc0 	add.w	ip, r5, r0, lsl #3
   830ac:	f8dc 1008 	ldr.w	r1, [ip, #8]
   830b0:	f8df 8134 	ldr.w	r8, [pc, #308]	; 831e8 <_malloc_r+0x2bc>
   830b4:	4561      	cmp	r1, ip
   830b6:	d10d      	bne.n	830d4 <_malloc_r+0x1a8>
   830b8:	2301      	movs	r3, #1
   830ba:	1080      	asrs	r0, r0, #2
   830bc:	fa03 f000 	lsl.w	r0, r3, r0
   830c0:	f8d8 3004 	ldr.w	r3, [r8, #4]
   830c4:	4303      	orrs	r3, r0
   830c6:	f8c8 3004 	str.w	r3, [r8, #4]
   830ca:	460b      	mov	r3, r1
   830cc:	e008      	b.n	830e0 <_malloc_r+0x1b4>
   830ce:	6889      	ldr	r1, [r1, #8]
   830d0:	4561      	cmp	r1, ip
   830d2:	d004      	beq.n	830de <_malloc_r+0x1b2>
   830d4:	6848      	ldr	r0, [r1, #4]
   830d6:	f020 0003 	bic.w	r0, r0, #3
   830da:	4283      	cmp	r3, r0
   830dc:	d3f7      	bcc.n	830ce <_malloc_r+0x1a2>
   830de:	68cb      	ldr	r3, [r1, #12]
   830e0:	60f3      	str	r3, [r6, #12]
   830e2:	60b1      	str	r1, [r6, #8]
   830e4:	609e      	str	r6, [r3, #8]
   830e6:	60ce      	str	r6, [r1, #12]
   830e8:	2101      	movs	r1, #1
   830ea:	1093      	asrs	r3, r2, #2
   830ec:	fa01 f303 	lsl.w	r3, r1, r3
   830f0:	6869      	ldr	r1, [r5, #4]
   830f2:	428b      	cmp	r3, r1
   830f4:	d85d      	bhi.n	831b2 <_malloc_r+0x286>
   830f6:	420b      	tst	r3, r1
   830f8:	d106      	bne.n	83108 <_malloc_r+0x1dc>
   830fa:	f022 0203 	bic.w	r2, r2, #3
   830fe:	005b      	lsls	r3, r3, #1
   83100:	420b      	tst	r3, r1
   83102:	f102 0204 	add.w	r2, r2, #4
   83106:	d0fa      	beq.n	830fe <_malloc_r+0x1d2>
   83108:	eb05 00c2 	add.w	r0, r5, r2, lsl #3
   8310c:	4680      	mov	r8, r0
   8310e:	4694      	mov	ip, r2
   83110:	f8d8 600c 	ldr.w	r6, [r8, #12]
   83114:	4546      	cmp	r6, r8
   83116:	d02d      	beq.n	83174 <_malloc_r+0x248>
   83118:	6871      	ldr	r1, [r6, #4]
   8311a:	f021 0903 	bic.w	r9, r1, #3
   8311e:	ebc4 0109 	rsb	r1, r4, r9
   83122:	290f      	cmp	r1, #15
   83124:	dd13      	ble.n	8314e <_malloc_r+0x222>
   83126:	1933      	adds	r3, r6, r4
   83128:	f044 0401 	orr.w	r4, r4, #1
   8312c:	68f2      	ldr	r2, [r6, #12]
   8312e:	6074      	str	r4, [r6, #4]
   83130:	f856 0f08 	ldr.w	r0, [r6, #8]!
   83134:	60c2      	str	r2, [r0, #12]
   83136:	6090      	str	r0, [r2, #8]
   83138:	f041 0201 	orr.w	r2, r1, #1
   8313c:	616b      	str	r3, [r5, #20]
   8313e:	612b      	str	r3, [r5, #16]
   83140:	f8c3 e00c 	str.w	lr, [r3, #12]
   83144:	f8c3 e008 	str.w	lr, [r3, #8]
   83148:	605a      	str	r2, [r3, #4]
   8314a:	5059      	str	r1, [r3, r1]
   8314c:	e00c      	b.n	83168 <_malloc_r+0x23c>
   8314e:	2900      	cmp	r1, #0
   83150:	db0e      	blt.n	83170 <_malloc_r+0x244>
   83152:	eb06 0109 	add.w	r1, r6, r9
   83156:	684b      	ldr	r3, [r1, #4]
   83158:	f043 0301 	orr.w	r3, r3, #1
   8315c:	604b      	str	r3, [r1, #4]
   8315e:	68f3      	ldr	r3, [r6, #12]
   83160:	f856 2f08 	ldr.w	r2, [r6, #8]!
   83164:	60d3      	str	r3, [r2, #12]
   83166:	609a      	str	r2, [r3, #8]
   83168:	4638      	mov	r0, r7
   8316a:	f000 f91a 	bl	833a2 <__malloc_unlock>
   8316e:	e0dc      	b.n	8332a <_malloc_r+0x3fe>
   83170:	68f6      	ldr	r6, [r6, #12]
   83172:	e7cf      	b.n	83114 <_malloc_r+0x1e8>
   83174:	f10c 0c01 	add.w	ip, ip, #1
   83178:	f01c 0f03 	tst.w	ip, #3
   8317c:	f108 0808 	add.w	r8, r8, #8
   83180:	d1c6      	bne.n	83110 <_malloc_r+0x1e4>
   83182:	0791      	lsls	r1, r2, #30
   83184:	d104      	bne.n	83190 <_malloc_r+0x264>
   83186:	686a      	ldr	r2, [r5, #4]
   83188:	ea22 0203 	bic.w	r2, r2, r3
   8318c:	606a      	str	r2, [r5, #4]
   8318e:	e005      	b.n	8319c <_malloc_r+0x270>
   83190:	f1a0 0108 	sub.w	r1, r0, #8
   83194:	6800      	ldr	r0, [r0, #0]
   83196:	3a01      	subs	r2, #1
   83198:	4288      	cmp	r0, r1
   8319a:	d0f2      	beq.n	83182 <_malloc_r+0x256>
   8319c:	6869      	ldr	r1, [r5, #4]
   8319e:	005b      	lsls	r3, r3, #1
   831a0:	428b      	cmp	r3, r1
   831a2:	d806      	bhi.n	831b2 <_malloc_r+0x286>
   831a4:	b12b      	cbz	r3, 831b2 <_malloc_r+0x286>
   831a6:	4662      	mov	r2, ip
   831a8:	420b      	tst	r3, r1
   831aa:	d1ad      	bne.n	83108 <_malloc_r+0x1dc>
   831ac:	3204      	adds	r2, #4
   831ae:	005b      	lsls	r3, r3, #1
   831b0:	e7fa      	b.n	831a8 <_malloc_r+0x27c>
   831b2:	f8d5 9008 	ldr.w	r9, [r5, #8]
   831b6:	f8d9 3004 	ldr.w	r3, [r9, #4]
   831ba:	f023 0b03 	bic.w	fp, r3, #3
   831be:	45a3      	cmp	fp, r4
   831c0:	d304      	bcc.n	831cc <_malloc_r+0x2a0>
   831c2:	ebc4 030b 	rsb	r3, r4, fp
   831c6:	2b0f      	cmp	r3, #15
   831c8:	f300 80a2 	bgt.w	83310 <_malloc_r+0x3e4>
   831cc:	4907      	ldr	r1, [pc, #28]	; (831ec <_malloc_r+0x2c0>)
   831ce:	eb09 030b 	add.w	r3, r9, fp
   831d2:	680a      	ldr	r2, [r1, #0]
   831d4:	4688      	mov	r8, r1
   831d6:	eb04 0a02 	add.w	sl, r4, r2
   831da:	f8d5 2408 	ldr.w	r2, [r5, #1032]	; 0x408
   831de:	3201      	adds	r2, #1
   831e0:	d106      	bne.n	831f0 <_malloc_r+0x2c4>
   831e2:	f10a 0a10 	add.w	sl, sl, #16
   831e6:	e00b      	b.n	83200 <_malloc_r+0x2d4>
   831e8:	200704b4 	.word	0x200704b4
   831ec:	20073068 	.word	0x20073068
   831f0:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
   831f4:	f10a 0a0f 	add.w	sl, sl, #15
   831f8:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
   831fc:	f02a 0a0f 	bic.w	sl, sl, #15
   83200:	4638      	mov	r0, r7
   83202:	4651      	mov	r1, sl
   83204:	9301      	str	r3, [sp, #4]
   83206:	f000 fe83 	bl	83f10 <_sbrk_r>
   8320a:	1c42      	adds	r2, r0, #1
   8320c:	4606      	mov	r6, r0
   8320e:	9b01      	ldr	r3, [sp, #4]
   83210:	d06f      	beq.n	832f2 <_malloc_r+0x3c6>
   83212:	4298      	cmp	r0, r3
   83214:	d201      	bcs.n	8321a <_malloc_r+0x2ee>
   83216:	45a9      	cmp	r9, r5
   83218:	d16b      	bne.n	832f2 <_malloc_r+0x3c6>
   8321a:	f8d8 2004 	ldr.w	r2, [r8, #4]
   8321e:	429e      	cmp	r6, r3
   83220:	4452      	add	r2, sl
   83222:	f8c8 2004 	str.w	r2, [r8, #4]
   83226:	d108      	bne.n	8323a <_malloc_r+0x30e>
   83228:	f3c6 010b 	ubfx	r1, r6, #0, #12
   8322c:	b929      	cbnz	r1, 8323a <_malloc_r+0x30e>
   8322e:	68ab      	ldr	r3, [r5, #8]
   83230:	44da      	add	sl, fp
   83232:	f04a 0201 	orr.w	r2, sl, #1
   83236:	605a      	str	r2, [r3, #4]
   83238:	e04d      	b.n	832d6 <_malloc_r+0x3aa>
   8323a:	f8d5 1408 	ldr.w	r1, [r5, #1032]	; 0x408
   8323e:	3101      	adds	r1, #1
   83240:	d103      	bne.n	8324a <_malloc_r+0x31e>
   83242:	4b3c      	ldr	r3, [pc, #240]	; (83334 <_malloc_r+0x408>)
   83244:	f8c3 6408 	str.w	r6, [r3, #1032]	; 0x408
   83248:	e003      	b.n	83252 <_malloc_r+0x326>
   8324a:	1af3      	subs	r3, r6, r3
   8324c:	441a      	add	r2, r3
   8324e:	f8c8 2004 	str.w	r2, [r8, #4]
   83252:	f016 0307 	ands.w	r3, r6, #7
   83256:	bf1c      	itt	ne
   83258:	f1c3 0308 	rsbne	r3, r3, #8
   8325c:	18f6      	addne	r6, r6, r3
   8325e:	44b2      	add	sl, r6
   83260:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   83264:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
   83268:	ebca 0a03 	rsb	sl, sl, r3
   8326c:	4651      	mov	r1, sl
   8326e:	4638      	mov	r0, r7
   83270:	f000 fe4e 	bl	83f10 <_sbrk_r>
   83274:	1c43      	adds	r3, r0, #1
   83276:	bf04      	itt	eq
   83278:	4630      	moveq	r0, r6
   8327a:	f04f 0a00 	moveq.w	sl, #0
   8327e:	f8d8 3004 	ldr.w	r3, [r8, #4]
   83282:	1b80      	subs	r0, r0, r6
   83284:	4450      	add	r0, sl
   83286:	4453      	add	r3, sl
   83288:	f040 0001 	orr.w	r0, r0, #1
   8328c:	45a9      	cmp	r9, r5
   8328e:	60ae      	str	r6, [r5, #8]
   83290:	f8c8 3004 	str.w	r3, [r8, #4]
   83294:	6070      	str	r0, [r6, #4]
   83296:	d01e      	beq.n	832d6 <_malloc_r+0x3aa>
   83298:	f1bb 0f0f 	cmp.w	fp, #15
   8329c:	d802      	bhi.n	832a4 <_malloc_r+0x378>
   8329e:	2301      	movs	r3, #1
   832a0:	6073      	str	r3, [r6, #4]
   832a2:	e026      	b.n	832f2 <_malloc_r+0x3c6>
   832a4:	f8d9 3004 	ldr.w	r3, [r9, #4]
   832a8:	f1ab 0b0c 	sub.w	fp, fp, #12
   832ac:	f02b 0b07 	bic.w	fp, fp, #7
   832b0:	f003 0301 	and.w	r3, r3, #1
   832b4:	ea4b 0303 	orr.w	r3, fp, r3
   832b8:	f8c9 3004 	str.w	r3, [r9, #4]
   832bc:	2205      	movs	r2, #5
   832be:	eb09 030b 	add.w	r3, r9, fp
   832c2:	f1bb 0f0f 	cmp.w	fp, #15
   832c6:	605a      	str	r2, [r3, #4]
   832c8:	609a      	str	r2, [r3, #8]
   832ca:	d904      	bls.n	832d6 <_malloc_r+0x3aa>
   832cc:	4638      	mov	r0, r7
   832ce:	f109 0108 	add.w	r1, r9, #8
   832d2:	f7ff fd31 	bl	82d38 <_free_r>
   832d6:	f8d8 3004 	ldr.w	r3, [r8, #4]
   832da:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
   832de:	4293      	cmp	r3, r2
   832e0:	bf84      	itt	hi
   832e2:	4a15      	ldrhi	r2, [pc, #84]	; (83338 <_malloc_r+0x40c>)
   832e4:	62d3      	strhi	r3, [r2, #44]	; 0x2c
   832e6:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
   832ea:	4293      	cmp	r3, r2
   832ec:	bf84      	itt	hi
   832ee:	4a12      	ldrhi	r2, [pc, #72]	; (83338 <_malloc_r+0x40c>)
   832f0:	6313      	strhi	r3, [r2, #48]	; 0x30
   832f2:	68ab      	ldr	r3, [r5, #8]
   832f4:	685a      	ldr	r2, [r3, #4]
   832f6:	f022 0203 	bic.w	r2, r2, #3
   832fa:	42a2      	cmp	r2, r4
   832fc:	ebc4 0302 	rsb	r3, r4, r2
   83300:	d301      	bcc.n	83306 <_malloc_r+0x3da>
   83302:	2b0f      	cmp	r3, #15
   83304:	dc04      	bgt.n	83310 <_malloc_r+0x3e4>
   83306:	4638      	mov	r0, r7
   83308:	f000 f84b 	bl	833a2 <__malloc_unlock>
   8330c:	2600      	movs	r6, #0
   8330e:	e00c      	b.n	8332a <_malloc_r+0x3fe>
   83310:	68ae      	ldr	r6, [r5, #8]
   83312:	f044 0201 	orr.w	r2, r4, #1
   83316:	f043 0301 	orr.w	r3, r3, #1
   8331a:	4434      	add	r4, r6
   8331c:	6072      	str	r2, [r6, #4]
   8331e:	60ac      	str	r4, [r5, #8]
   83320:	6063      	str	r3, [r4, #4]
   83322:	4638      	mov	r0, r7
   83324:	f000 f83d 	bl	833a2 <__malloc_unlock>
   83328:	3608      	adds	r6, #8
   8332a:	4630      	mov	r0, r6
   8332c:	b003      	add	sp, #12
   8332e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83332:	bf00      	nop
   83334:	200704b4 	.word	0x200704b4
   83338:	20073068 	.word	0x20073068

0008333c <memchr>:
   8333c:	b510      	push	{r4, lr}
   8333e:	b2c9      	uxtb	r1, r1
   83340:	4402      	add	r2, r0
   83342:	4290      	cmp	r0, r2
   83344:	4603      	mov	r3, r0
   83346:	d005      	beq.n	83354 <memchr+0x18>
   83348:	781c      	ldrb	r4, [r3, #0]
   8334a:	3001      	adds	r0, #1
   8334c:	428c      	cmp	r4, r1
   8334e:	d1f8      	bne.n	83342 <memchr+0x6>
   83350:	4618      	mov	r0, r3
   83352:	bd10      	pop	{r4, pc}
   83354:	2000      	movs	r0, #0
   83356:	bd10      	pop	{r4, pc}

00083358 <memcpy>:
   83358:	b510      	push	{r4, lr}
   8335a:	2300      	movs	r3, #0
   8335c:	4293      	cmp	r3, r2
   8335e:	d003      	beq.n	83368 <memcpy+0x10>
   83360:	5ccc      	ldrb	r4, [r1, r3]
   83362:	54c4      	strb	r4, [r0, r3]
   83364:	3301      	adds	r3, #1
   83366:	e7f9      	b.n	8335c <memcpy+0x4>
   83368:	bd10      	pop	{r4, pc}

0008336a <memmove>:
   8336a:	4281      	cmp	r1, r0
   8336c:	b570      	push	{r4, r5, r6, lr}
   8336e:	d301      	bcc.n	83374 <memmove+0xa>
   83370:	2300      	movs	r3, #0
   83372:	e00e      	b.n	83392 <memmove+0x28>
   83374:	188c      	adds	r4, r1, r2
   83376:	42a0      	cmp	r0, r4
   83378:	d2fa      	bcs.n	83370 <memmove+0x6>
   8337a:	1885      	adds	r5, r0, r2
   8337c:	4613      	mov	r3, r2
   8337e:	f113 33ff 	adds.w	r3, r3, #4294967295
   83382:	d305      	bcc.n	83390 <memmove+0x26>
   83384:	4251      	negs	r1, r2
   83386:	1866      	adds	r6, r4, r1
   83388:	5cf6      	ldrb	r6, [r6, r3]
   8338a:	4429      	add	r1, r5
   8338c:	54ce      	strb	r6, [r1, r3]
   8338e:	e7f6      	b.n	8337e <memmove+0x14>
   83390:	bd70      	pop	{r4, r5, r6, pc}
   83392:	4293      	cmp	r3, r2
   83394:	d003      	beq.n	8339e <memmove+0x34>
   83396:	5ccc      	ldrb	r4, [r1, r3]
   83398:	54c4      	strb	r4, [r0, r3]
   8339a:	3301      	adds	r3, #1
   8339c:	e7f9      	b.n	83392 <memmove+0x28>
   8339e:	bd70      	pop	{r4, r5, r6, pc}

000833a0 <__malloc_lock>:
   833a0:	4770      	bx	lr

000833a2 <__malloc_unlock>:
   833a2:	4770      	bx	lr

000833a4 <_Balloc>:
   833a4:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   833a6:	b570      	push	{r4, r5, r6, lr}
   833a8:	4605      	mov	r5, r0
   833aa:	460c      	mov	r4, r1
   833ac:	b13b      	cbz	r3, 833be <_Balloc+0x1a>
   833ae:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   833b0:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
   833b4:	b160      	cbz	r0, 833d0 <_Balloc+0x2c>
   833b6:	6801      	ldr	r1, [r0, #0]
   833b8:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
   833bc:	e014      	b.n	833e8 <_Balloc+0x44>
   833be:	2104      	movs	r1, #4
   833c0:	2221      	movs	r2, #33	; 0x21
   833c2:	f001 fa77 	bl	848b4 <_calloc_r>
   833c6:	64e8      	str	r0, [r5, #76]	; 0x4c
   833c8:	2800      	cmp	r0, #0
   833ca:	d1f0      	bne.n	833ae <_Balloc+0xa>
   833cc:	2000      	movs	r0, #0
   833ce:	bd70      	pop	{r4, r5, r6, pc}
   833d0:	2101      	movs	r1, #1
   833d2:	fa01 f604 	lsl.w	r6, r1, r4
   833d6:	1d72      	adds	r2, r6, #5
   833d8:	4628      	mov	r0, r5
   833da:	0092      	lsls	r2, r2, #2
   833dc:	f001 fa6a 	bl	848b4 <_calloc_r>
   833e0:	2800      	cmp	r0, #0
   833e2:	d0f3      	beq.n	833cc <_Balloc+0x28>
   833e4:	6044      	str	r4, [r0, #4]
   833e6:	6086      	str	r6, [r0, #8]
   833e8:	2200      	movs	r2, #0
   833ea:	6102      	str	r2, [r0, #16]
   833ec:	60c2      	str	r2, [r0, #12]
   833ee:	bd70      	pop	{r4, r5, r6, pc}

000833f0 <_Bfree>:
   833f0:	b131      	cbz	r1, 83400 <_Bfree+0x10>
   833f2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   833f4:	684a      	ldr	r2, [r1, #4]
   833f6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   833fa:	6008      	str	r0, [r1, #0]
   833fc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   83400:	4770      	bx	lr

00083402 <__multadd>:
   83402:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83406:	460c      	mov	r4, r1
   83408:	461e      	mov	r6, r3
   8340a:	690d      	ldr	r5, [r1, #16]
   8340c:	4607      	mov	r7, r0
   8340e:	3114      	adds	r1, #20
   83410:	2300      	movs	r3, #0
   83412:	6808      	ldr	r0, [r1, #0]
   83414:	3301      	adds	r3, #1
   83416:	fa1f fc80 	uxth.w	ip, r0
   8341a:	0c00      	lsrs	r0, r0, #16
   8341c:	fb02 6c0c 	mla	ip, r2, ip, r6
   83420:	4350      	muls	r0, r2
   83422:	eb00 401c 	add.w	r0, r0, ip, lsr #16
   83426:	fa1f fc8c 	uxth.w	ip, ip
   8342a:	0c06      	lsrs	r6, r0, #16
   8342c:	42ab      	cmp	r3, r5
   8342e:	eb0c 4000 	add.w	r0, ip, r0, lsl #16
   83432:	f841 0b04 	str.w	r0, [r1], #4
   83436:	dbec      	blt.n	83412 <__multadd+0x10>
   83438:	b1d6      	cbz	r6, 83470 <__multadd+0x6e>
   8343a:	68a3      	ldr	r3, [r4, #8]
   8343c:	429d      	cmp	r5, r3
   8343e:	db12      	blt.n	83466 <__multadd+0x64>
   83440:	6861      	ldr	r1, [r4, #4]
   83442:	4638      	mov	r0, r7
   83444:	3101      	adds	r1, #1
   83446:	f7ff ffad 	bl	833a4 <_Balloc>
   8344a:	6922      	ldr	r2, [r4, #16]
   8344c:	f104 010c 	add.w	r1, r4, #12
   83450:	3202      	adds	r2, #2
   83452:	4680      	mov	r8, r0
   83454:	0092      	lsls	r2, r2, #2
   83456:	300c      	adds	r0, #12
   83458:	f7ff ff7e 	bl	83358 <memcpy>
   8345c:	4621      	mov	r1, r4
   8345e:	4638      	mov	r0, r7
   83460:	f7ff ffc6 	bl	833f0 <_Bfree>
   83464:	4644      	mov	r4, r8
   83466:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   8346a:	3501      	adds	r5, #1
   8346c:	615e      	str	r6, [r3, #20]
   8346e:	6125      	str	r5, [r4, #16]
   83470:	4620      	mov	r0, r4
   83472:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00083476 <__s2b>:
   83476:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   8347a:	4614      	mov	r4, r2
   8347c:	4698      	mov	r8, r3
   8347e:	f103 0208 	add.w	r2, r3, #8
   83482:	2309      	movs	r3, #9
   83484:	460d      	mov	r5, r1
   83486:	fb92 f2f3 	sdiv	r2, r2, r3
   8348a:	4606      	mov	r6, r0
   8348c:	2301      	movs	r3, #1
   8348e:	2100      	movs	r1, #0
   83490:	429a      	cmp	r2, r3
   83492:	dd02      	ble.n	8349a <__s2b+0x24>
   83494:	005b      	lsls	r3, r3, #1
   83496:	3101      	adds	r1, #1
   83498:	e7fa      	b.n	83490 <__s2b+0x1a>
   8349a:	4630      	mov	r0, r6
   8349c:	f7ff ff82 	bl	833a4 <_Balloc>
   834a0:	9b08      	ldr	r3, [sp, #32]
   834a2:	2c09      	cmp	r4, #9
   834a4:	6143      	str	r3, [r0, #20]
   834a6:	f04f 0301 	mov.w	r3, #1
   834aa:	4601      	mov	r1, r0
   834ac:	6103      	str	r3, [r0, #16]
   834ae:	dd11      	ble.n	834d4 <__s2b+0x5e>
   834b0:	f105 0909 	add.w	r9, r5, #9
   834b4:	464f      	mov	r7, r9
   834b6:	4425      	add	r5, r4
   834b8:	f817 3b01 	ldrb.w	r3, [r7], #1
   834bc:	4630      	mov	r0, r6
   834be:	220a      	movs	r2, #10
   834c0:	3b30      	subs	r3, #48	; 0x30
   834c2:	f7ff ff9e 	bl	83402 <__multadd>
   834c6:	42af      	cmp	r7, r5
   834c8:	4601      	mov	r1, r0
   834ca:	d1f5      	bne.n	834b8 <__s2b+0x42>
   834cc:	eb09 0704 	add.w	r7, r9, r4
   834d0:	3f08      	subs	r7, #8
   834d2:	e002      	b.n	834da <__s2b+0x64>
   834d4:	f105 070a 	add.w	r7, r5, #10
   834d8:	2409      	movs	r4, #9
   834da:	4625      	mov	r5, r4
   834dc:	4545      	cmp	r5, r8
   834de:	da09      	bge.n	834f4 <__s2b+0x7e>
   834e0:	1b3b      	subs	r3, r7, r4
   834e2:	5d5b      	ldrb	r3, [r3, r5]
   834e4:	4630      	mov	r0, r6
   834e6:	220a      	movs	r2, #10
   834e8:	3b30      	subs	r3, #48	; 0x30
   834ea:	f7ff ff8a 	bl	83402 <__multadd>
   834ee:	3501      	adds	r5, #1
   834f0:	4601      	mov	r1, r0
   834f2:	e7f3      	b.n	834dc <__s2b+0x66>
   834f4:	4608      	mov	r0, r1
   834f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

000834fa <__hi0bits>:
   834fa:	0c03      	lsrs	r3, r0, #16
   834fc:	041b      	lsls	r3, r3, #16
   834fe:	b913      	cbnz	r3, 83506 <__hi0bits+0xc>
   83500:	0400      	lsls	r0, r0, #16
   83502:	2310      	movs	r3, #16
   83504:	e000      	b.n	83508 <__hi0bits+0xe>
   83506:	2300      	movs	r3, #0
   83508:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   8350c:	bf04      	itt	eq
   8350e:	0200      	lsleq	r0, r0, #8
   83510:	3308      	addeq	r3, #8
   83512:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   83516:	bf04      	itt	eq
   83518:	0100      	lsleq	r0, r0, #4
   8351a:	3304      	addeq	r3, #4
   8351c:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   83520:	bf04      	itt	eq
   83522:	0080      	lsleq	r0, r0, #2
   83524:	3302      	addeq	r3, #2
   83526:	2800      	cmp	r0, #0
   83528:	db03      	blt.n	83532 <__hi0bits+0x38>
   8352a:	0042      	lsls	r2, r0, #1
   8352c:	d503      	bpl.n	83536 <__hi0bits+0x3c>
   8352e:	1c58      	adds	r0, r3, #1
   83530:	4770      	bx	lr
   83532:	4618      	mov	r0, r3
   83534:	4770      	bx	lr
   83536:	2020      	movs	r0, #32
   83538:	4770      	bx	lr

0008353a <__lo0bits>:
   8353a:	6803      	ldr	r3, [r0, #0]
   8353c:	f013 0207 	ands.w	r2, r3, #7
   83540:	d00b      	beq.n	8355a <__lo0bits+0x20>
   83542:	07d9      	lsls	r1, r3, #31
   83544:	d422      	bmi.n	8358c <__lo0bits+0x52>
   83546:	079a      	lsls	r2, r3, #30
   83548:	d503      	bpl.n	83552 <__lo0bits+0x18>
   8354a:	085b      	lsrs	r3, r3, #1
   8354c:	6003      	str	r3, [r0, #0]
   8354e:	2001      	movs	r0, #1
   83550:	4770      	bx	lr
   83552:	089b      	lsrs	r3, r3, #2
   83554:	6003      	str	r3, [r0, #0]
   83556:	2002      	movs	r0, #2
   83558:	4770      	bx	lr
   8355a:	b299      	uxth	r1, r3
   8355c:	b909      	cbnz	r1, 83562 <__lo0bits+0x28>
   8355e:	0c1b      	lsrs	r3, r3, #16
   83560:	2210      	movs	r2, #16
   83562:	f013 0fff 	tst.w	r3, #255	; 0xff
   83566:	bf04      	itt	eq
   83568:	0a1b      	lsreq	r3, r3, #8
   8356a:	3208      	addeq	r2, #8
   8356c:	0719      	lsls	r1, r3, #28
   8356e:	bf04      	itt	eq
   83570:	091b      	lsreq	r3, r3, #4
   83572:	3204      	addeq	r2, #4
   83574:	0799      	lsls	r1, r3, #30
   83576:	bf04      	itt	eq
   83578:	089b      	lsreq	r3, r3, #2
   8357a:	3202      	addeq	r2, #2
   8357c:	07d9      	lsls	r1, r3, #31
   8357e:	d402      	bmi.n	83586 <__lo0bits+0x4c>
   83580:	085b      	lsrs	r3, r3, #1
   83582:	d005      	beq.n	83590 <__lo0bits+0x56>
   83584:	3201      	adds	r2, #1
   83586:	6003      	str	r3, [r0, #0]
   83588:	4610      	mov	r0, r2
   8358a:	4770      	bx	lr
   8358c:	2000      	movs	r0, #0
   8358e:	4770      	bx	lr
   83590:	2020      	movs	r0, #32
   83592:	4770      	bx	lr

00083594 <__i2b>:
   83594:	b510      	push	{r4, lr}
   83596:	460c      	mov	r4, r1
   83598:	2101      	movs	r1, #1
   8359a:	f7ff ff03 	bl	833a4 <_Balloc>
   8359e:	2201      	movs	r2, #1
   835a0:	6144      	str	r4, [r0, #20]
   835a2:	6102      	str	r2, [r0, #16]
   835a4:	bd10      	pop	{r4, pc}

000835a6 <__multiply>:
   835a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   835aa:	4616      	mov	r6, r2
   835ac:	6933      	ldr	r3, [r6, #16]
   835ae:	690a      	ldr	r2, [r1, #16]
   835b0:	b085      	sub	sp, #20
   835b2:	429a      	cmp	r2, r3
   835b4:	460d      	mov	r5, r1
   835b6:	da01      	bge.n	835bc <__multiply+0x16>
   835b8:	4635      	mov	r5, r6
   835ba:	460e      	mov	r6, r1
   835bc:	f8d5 8010 	ldr.w	r8, [r5, #16]
   835c0:	6937      	ldr	r7, [r6, #16]
   835c2:	68ab      	ldr	r3, [r5, #8]
   835c4:	6869      	ldr	r1, [r5, #4]
   835c6:	eb08 0407 	add.w	r4, r8, r7
   835ca:	429c      	cmp	r4, r3
   835cc:	bfc8      	it	gt
   835ce:	3101      	addgt	r1, #1
   835d0:	f7ff fee8 	bl	833a4 <_Balloc>
   835d4:	f100 0314 	add.w	r3, r0, #20
   835d8:	eb03 0184 	add.w	r1, r3, r4, lsl #2
   835dc:	9101      	str	r1, [sp, #4]
   835de:	461a      	mov	r2, r3
   835e0:	f8dd a004 	ldr.w	sl, [sp, #4]
   835e4:	4552      	cmp	r2, sl
   835e6:	d203      	bcs.n	835f0 <__multiply+0x4a>
   835e8:	2100      	movs	r1, #0
   835ea:	f842 1b04 	str.w	r1, [r2], #4
   835ee:	e7f7      	b.n	835e0 <__multiply+0x3a>
   835f0:	f105 0114 	add.w	r1, r5, #20
   835f4:	f106 0214 	add.w	r2, r6, #20
   835f8:	eb01 0888 	add.w	r8, r1, r8, lsl #2
   835fc:	eb02 0787 	add.w	r7, r2, r7, lsl #2
   83600:	f8cd 8008 	str.w	r8, [sp, #8]
   83604:	9703      	str	r7, [sp, #12]
   83606:	9e03      	ldr	r6, [sp, #12]
   83608:	4615      	mov	r5, r2
   8360a:	42b2      	cmp	r2, r6
   8360c:	d256      	bcs.n	836bc <__multiply+0x116>
   8360e:	f8b5 c000 	ldrh.w	ip, [r5]
   83612:	3204      	adds	r2, #4
   83614:	f1bc 0f00 	cmp.w	ip, #0
   83618:	d025      	beq.n	83666 <__multiply+0xc0>
   8361a:	460f      	mov	r7, r1
   8361c:	461d      	mov	r5, r3
   8361e:	2600      	movs	r6, #0
   83620:	f857 9b04 	ldr.w	r9, [r7], #4
   83624:	f8d5 8000 	ldr.w	r8, [r5]
   83628:	fa1f fb89 	uxth.w	fp, r9
   8362c:	fa1f fa88 	uxth.w	sl, r8
   83630:	fb0c aa0b 	mla	sl, ip, fp, sl
   83634:	ea4f 4919 	mov.w	r9, r9, lsr #16
   83638:	ea4f 4818 	mov.w	r8, r8, lsr #16
   8363c:	fb0c 8809 	mla	r8, ip, r9, r8
   83640:	44b2      	add	sl, r6
   83642:	eb08 481a 	add.w	r8, r8, sl, lsr #16
   83646:	fa1f fa8a 	uxth.w	sl, sl
   8364a:	ea4a 4a08 	orr.w	sl, sl, r8, lsl #16
   8364e:	ea4f 4618 	mov.w	r6, r8, lsr #16
   83652:	f8dd 8008 	ldr.w	r8, [sp, #8]
   83656:	46ab      	mov	fp, r5
   83658:	45b8      	cmp	r8, r7
   8365a:	f84b ab04 	str.w	sl, [fp], #4
   8365e:	d901      	bls.n	83664 <__multiply+0xbe>
   83660:	465d      	mov	r5, fp
   83662:	e7dd      	b.n	83620 <__multiply+0x7a>
   83664:	606e      	str	r6, [r5, #4]
   83666:	f832 8c02 	ldrh.w	r8, [r2, #-2]
   8366a:	f1b8 0f00 	cmp.w	r8, #0
   8366e:	d023      	beq.n	836b8 <__multiply+0x112>
   83670:	681e      	ldr	r6, [r3, #0]
   83672:	460f      	mov	r7, r1
   83674:	461d      	mov	r5, r3
   83676:	f04f 0900 	mov.w	r9, #0
   8367a:	f8b7 a000 	ldrh.w	sl, [r7]
   8367e:	f8b5 c002 	ldrh.w	ip, [r5, #2]
   83682:	b2b6      	uxth	r6, r6
   83684:	fb08 cc0a 	mla	ip, r8, sl, ip
   83688:	44e1      	add	r9, ip
   8368a:	ea46 4609 	orr.w	r6, r6, r9, lsl #16
   8368e:	46ac      	mov	ip, r5
   83690:	f84c 6b04 	str.w	r6, [ip], #4
   83694:	f857 6b04 	ldr.w	r6, [r7], #4
   83698:	f8b5 a004 	ldrh.w	sl, [r5, #4]
   8369c:	0c36      	lsrs	r6, r6, #16
   8369e:	fb08 a606 	mla	r6, r8, r6, sl
   836a2:	f8dd a008 	ldr.w	sl, [sp, #8]
   836a6:	eb06 4619 	add.w	r6, r6, r9, lsr #16
   836aa:	4557      	cmp	r7, sl
   836ac:	ea4f 4916 	mov.w	r9, r6, lsr #16
   836b0:	d201      	bcs.n	836b6 <__multiply+0x110>
   836b2:	4665      	mov	r5, ip
   836b4:	e7e1      	b.n	8367a <__multiply+0xd4>
   836b6:	606e      	str	r6, [r5, #4]
   836b8:	3304      	adds	r3, #4
   836ba:	e7a4      	b.n	83606 <__multiply+0x60>
   836bc:	9b01      	ldr	r3, [sp, #4]
   836be:	2c00      	cmp	r4, #0
   836c0:	dc03      	bgt.n	836ca <__multiply+0x124>
   836c2:	6104      	str	r4, [r0, #16]
   836c4:	b005      	add	sp, #20
   836c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   836ca:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   836ce:	2a00      	cmp	r2, #0
   836d0:	d1f7      	bne.n	836c2 <__multiply+0x11c>
   836d2:	3c01      	subs	r4, #1
   836d4:	e7f3      	b.n	836be <__multiply+0x118>

000836d6 <__pow5mult>:
   836d6:	f012 0303 	ands.w	r3, r2, #3
   836da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   836de:	4605      	mov	r5, r0
   836e0:	460e      	mov	r6, r1
   836e2:	4617      	mov	r7, r2
   836e4:	d007      	beq.n	836f6 <__pow5mult+0x20>
   836e6:	4a1a      	ldr	r2, [pc, #104]	; (83750 <__pow5mult+0x7a>)
   836e8:	3b01      	subs	r3, #1
   836ea:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   836ee:	2300      	movs	r3, #0
   836f0:	f7ff fe87 	bl	83402 <__multadd>
   836f4:	4606      	mov	r6, r0
   836f6:	10bf      	asrs	r7, r7, #2
   836f8:	d027      	beq.n	8374a <__pow5mult+0x74>
   836fa:	6cac      	ldr	r4, [r5, #72]	; 0x48
   836fc:	b974      	cbnz	r4, 8371c <__pow5mult+0x46>
   836fe:	4628      	mov	r0, r5
   83700:	f240 2171 	movw	r1, #625	; 0x271
   83704:	f7ff ff46 	bl	83594 <__i2b>
   83708:	2300      	movs	r3, #0
   8370a:	64a8      	str	r0, [r5, #72]	; 0x48
   8370c:	4604      	mov	r4, r0
   8370e:	6003      	str	r3, [r0, #0]
   83710:	e004      	b.n	8371c <__pow5mult+0x46>
   83712:	107f      	asrs	r7, r7, #1
   83714:	d019      	beq.n	8374a <__pow5mult+0x74>
   83716:	6820      	ldr	r0, [r4, #0]
   83718:	b170      	cbz	r0, 83738 <__pow5mult+0x62>
   8371a:	4604      	mov	r4, r0
   8371c:	07fb      	lsls	r3, r7, #31
   8371e:	d5f8      	bpl.n	83712 <__pow5mult+0x3c>
   83720:	4631      	mov	r1, r6
   83722:	4622      	mov	r2, r4
   83724:	4628      	mov	r0, r5
   83726:	f7ff ff3e 	bl	835a6 <__multiply>
   8372a:	4631      	mov	r1, r6
   8372c:	4680      	mov	r8, r0
   8372e:	4628      	mov	r0, r5
   83730:	f7ff fe5e 	bl	833f0 <_Bfree>
   83734:	4646      	mov	r6, r8
   83736:	e7ec      	b.n	83712 <__pow5mult+0x3c>
   83738:	4628      	mov	r0, r5
   8373a:	4621      	mov	r1, r4
   8373c:	4622      	mov	r2, r4
   8373e:	f7ff ff32 	bl	835a6 <__multiply>
   83742:	2300      	movs	r3, #0
   83744:	6020      	str	r0, [r4, #0]
   83746:	6003      	str	r3, [r0, #0]
   83748:	e7e7      	b.n	8371a <__pow5mult+0x44>
   8374a:	4630      	mov	r0, r6
   8374c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   83750:	00085860 	.word	0x00085860

00083754 <__lshift>:
   83754:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   83758:	460c      	mov	r4, r1
   8375a:	6923      	ldr	r3, [r4, #16]
   8375c:	ea4f 1a62 	mov.w	sl, r2, asr #5
   83760:	eb0a 0903 	add.w	r9, sl, r3
   83764:	6849      	ldr	r1, [r1, #4]
   83766:	68a3      	ldr	r3, [r4, #8]
   83768:	4680      	mov	r8, r0
   8376a:	4615      	mov	r5, r2
   8376c:	f109 0701 	add.w	r7, r9, #1
   83770:	429f      	cmp	r7, r3
   83772:	dd02      	ble.n	8377a <__lshift+0x26>
   83774:	3101      	adds	r1, #1
   83776:	005b      	lsls	r3, r3, #1
   83778:	e7fa      	b.n	83770 <__lshift+0x1c>
   8377a:	4640      	mov	r0, r8
   8377c:	f7ff fe12 	bl	833a4 <_Balloc>
   83780:	2300      	movs	r3, #0
   83782:	4606      	mov	r6, r0
   83784:	f100 0214 	add.w	r2, r0, #20
   83788:	4553      	cmp	r3, sl
   8378a:	da04      	bge.n	83796 <__lshift+0x42>
   8378c:	2100      	movs	r1, #0
   8378e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
   83792:	3301      	adds	r3, #1
   83794:	e7f8      	b.n	83788 <__lshift+0x34>
   83796:	6920      	ldr	r0, [r4, #16]
   83798:	ea2a 71ea 	bic.w	r1, sl, sl, asr #31
   8379c:	f104 0314 	add.w	r3, r4, #20
   837a0:	f015 0c1f 	ands.w	ip, r5, #31
   837a4:	eb02 0181 	add.w	r1, r2, r1, lsl #2
   837a8:	eb03 0e80 	add.w	lr, r3, r0, lsl #2
   837ac:	d016      	beq.n	837dc <__lshift+0x88>
   837ae:	f1cc 0a20 	rsb	sl, ip, #32
   837b2:	2500      	movs	r5, #0
   837b4:	6818      	ldr	r0, [r3, #0]
   837b6:	460a      	mov	r2, r1
   837b8:	fa00 f00c 	lsl.w	r0, r0, ip
   837bc:	4305      	orrs	r5, r0
   837be:	f842 5b04 	str.w	r5, [r2], #4
   837c2:	f853 5b04 	ldr.w	r5, [r3], #4
   837c6:	4573      	cmp	r3, lr
   837c8:	fa25 f50a 	lsr.w	r5, r5, sl
   837cc:	d201      	bcs.n	837d2 <__lshift+0x7e>
   837ce:	4611      	mov	r1, r2
   837d0:	e7f0      	b.n	837b4 <__lshift+0x60>
   837d2:	604d      	str	r5, [r1, #4]
   837d4:	b145      	cbz	r5, 837e8 <__lshift+0x94>
   837d6:	f109 0702 	add.w	r7, r9, #2
   837da:	e005      	b.n	837e8 <__lshift+0x94>
   837dc:	f853 2b04 	ldr.w	r2, [r3], #4
   837e0:	4573      	cmp	r3, lr
   837e2:	f841 2b04 	str.w	r2, [r1], #4
   837e6:	d3f9      	bcc.n	837dc <__lshift+0x88>
   837e8:	3f01      	subs	r7, #1
   837ea:	4640      	mov	r0, r8
   837ec:	6137      	str	r7, [r6, #16]
   837ee:	4621      	mov	r1, r4
   837f0:	f7ff fdfe 	bl	833f0 <_Bfree>
   837f4:	4630      	mov	r0, r6
   837f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

000837fa <__mcmp>:
   837fa:	6902      	ldr	r2, [r0, #16]
   837fc:	690b      	ldr	r3, [r1, #16]
   837fe:	b510      	push	{r4, lr}
   83800:	1ad2      	subs	r2, r2, r3
   83802:	d113      	bne.n	8382c <__mcmp+0x32>
   83804:	009c      	lsls	r4, r3, #2
   83806:	3014      	adds	r0, #20
   83808:	f101 0214 	add.w	r2, r1, #20
   8380c:	1903      	adds	r3, r0, r4
   8380e:	4422      	add	r2, r4
   83810:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   83814:	f852 1d04 	ldr.w	r1, [r2, #-4]!
   83818:	428c      	cmp	r4, r1
   8381a:	d003      	beq.n	83824 <__mcmp+0x2a>
   8381c:	d208      	bcs.n	83830 <__mcmp+0x36>
   8381e:	f04f 30ff 	mov.w	r0, #4294967295
   83822:	bd10      	pop	{r4, pc}
   83824:	4298      	cmp	r0, r3
   83826:	d3f3      	bcc.n	83810 <__mcmp+0x16>
   83828:	2000      	movs	r0, #0
   8382a:	bd10      	pop	{r4, pc}
   8382c:	4610      	mov	r0, r2
   8382e:	bd10      	pop	{r4, pc}
   83830:	2001      	movs	r0, #1
   83832:	bd10      	pop	{r4, pc}

00083834 <__mdiff>:
   83834:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   83838:	4606      	mov	r6, r0
   8383a:	460c      	mov	r4, r1
   8383c:	4608      	mov	r0, r1
   8383e:	4611      	mov	r1, r2
   83840:	4615      	mov	r5, r2
   83842:	f7ff ffda 	bl	837fa <__mcmp>
   83846:	1e07      	subs	r7, r0, #0
   83848:	d108      	bne.n	8385c <__mdiff+0x28>
   8384a:	4630      	mov	r0, r6
   8384c:	4639      	mov	r1, r7
   8384e:	f7ff fda9 	bl	833a4 <_Balloc>
   83852:	2301      	movs	r3, #1
   83854:	6103      	str	r3, [r0, #16]
   83856:	6147      	str	r7, [r0, #20]
   83858:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8385c:	db01      	blt.n	83862 <__mdiff+0x2e>
   8385e:	2700      	movs	r7, #0
   83860:	e003      	b.n	8386a <__mdiff+0x36>
   83862:	4623      	mov	r3, r4
   83864:	2701      	movs	r7, #1
   83866:	462c      	mov	r4, r5
   83868:	461d      	mov	r5, r3
   8386a:	6861      	ldr	r1, [r4, #4]
   8386c:	4630      	mov	r0, r6
   8386e:	f7ff fd99 	bl	833a4 <_Balloc>
   83872:	6922      	ldr	r2, [r4, #16]
   83874:	692b      	ldr	r3, [r5, #16]
   83876:	3414      	adds	r4, #20
   83878:	f105 0614 	add.w	r6, r5, #20
   8387c:	eb06 0a83 	add.w	sl, r6, r3, lsl #2
   83880:	60c7      	str	r7, [r0, #12]
   83882:	eb04 0c82 	add.w	ip, r4, r2, lsl #2
   83886:	f100 0314 	add.w	r3, r0, #20
   8388a:	2100      	movs	r1, #0
   8388c:	f854 7b04 	ldr.w	r7, [r4], #4
   83890:	f856 9b04 	ldr.w	r9, [r6], #4
   83894:	fa1f f887 	uxth.w	r8, r7
   83898:	fa1f f589 	uxth.w	r5, r9
   8389c:	4441      	add	r1, r8
   8389e:	ea4f 4919 	mov.w	r9, r9, lsr #16
   838a2:	ebc5 0801 	rsb	r8, r5, r1
   838a6:	ebc9 4717 	rsb	r7, r9, r7, lsr #16
   838aa:	eb07 4728 	add.w	r7, r7, r8, asr #16
   838ae:	fa1f f888 	uxth.w	r8, r8
   838b2:	1439      	asrs	r1, r7, #16
   838b4:	45b2      	cmp	sl, r6
   838b6:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   838ba:	4625      	mov	r5, r4
   838bc:	f843 7b04 	str.w	r7, [r3], #4
   838c0:	d8e4      	bhi.n	8388c <__mdiff+0x58>
   838c2:	4565      	cmp	r5, ip
   838c4:	d20d      	bcs.n	838e2 <__mdiff+0xae>
   838c6:	f855 4b04 	ldr.w	r4, [r5], #4
   838ca:	b2a6      	uxth	r6, r4
   838cc:	440e      	add	r6, r1
   838ce:	0c24      	lsrs	r4, r4, #16
   838d0:	eb04 4426 	add.w	r4, r4, r6, asr #16
   838d4:	b2b6      	uxth	r6, r6
   838d6:	1421      	asrs	r1, r4, #16
   838d8:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   838dc:	f843 4b04 	str.w	r4, [r3], #4
   838e0:	e7ef      	b.n	838c2 <__mdiff+0x8e>
   838e2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   838e6:	b909      	cbnz	r1, 838ec <__mdiff+0xb8>
   838e8:	3a01      	subs	r2, #1
   838ea:	e7fa      	b.n	838e2 <__mdiff+0xae>
   838ec:	6102      	str	r2, [r0, #16]
   838ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

000838f2 <__ulp>:
   838f2:	4b0f      	ldr	r3, [pc, #60]	; (83930 <__ulp+0x3e>)
   838f4:	400b      	ands	r3, r1
   838f6:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   838fa:	2b00      	cmp	r3, #0
   838fc:	dd01      	ble.n	83902 <__ulp+0x10>
   838fe:	4619      	mov	r1, r3
   83900:	e009      	b.n	83916 <__ulp+0x24>
   83902:	425b      	negs	r3, r3
   83904:	151b      	asrs	r3, r3, #20
   83906:	2b13      	cmp	r3, #19
   83908:	f04f 0100 	mov.w	r1, #0
   8390c:	dc05      	bgt.n	8391a <__ulp+0x28>
   8390e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   83912:	fa42 f103 	asr.w	r1, r2, r3
   83916:	2000      	movs	r0, #0
   83918:	4770      	bx	lr
   8391a:	2b32      	cmp	r3, #50	; 0x32
   8391c:	f04f 0201 	mov.w	r2, #1
   83920:	bfda      	itte	le
   83922:	f1c3 0333 	rsble	r3, r3, #51	; 0x33
   83926:	fa02 f303 	lslle.w	r3, r2, r3
   8392a:	4613      	movgt	r3, r2
   8392c:	4618      	mov	r0, r3
   8392e:	4770      	bx	lr
   83930:	7ff00000 	.word	0x7ff00000

00083934 <__b2d>:
   83934:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83938:	6906      	ldr	r6, [r0, #16]
   8393a:	f100 0714 	add.w	r7, r0, #20
   8393e:	eb07 0686 	add.w	r6, r7, r6, lsl #2
   83942:	f856 4c04 	ldr.w	r4, [r6, #-4]
   83946:	4688      	mov	r8, r1
   83948:	4620      	mov	r0, r4
   8394a:	f7ff fdd6 	bl	834fa <__hi0bits>
   8394e:	f1c0 0320 	rsb	r3, r0, #32
   83952:	280a      	cmp	r0, #10
   83954:	f1a6 0504 	sub.w	r5, r6, #4
   83958:	f8c8 3000 	str.w	r3, [r8]
   8395c:	dc14      	bgt.n	83988 <__b2d+0x54>
   8395e:	42bd      	cmp	r5, r7
   83960:	f1c0 010b 	rsb	r1, r0, #11
   83964:	bf88      	it	hi
   83966:	f856 5c08 	ldrhi.w	r5, [r6, #-8]
   8396a:	fa24 fc01 	lsr.w	ip, r4, r1
   8396e:	bf98      	it	ls
   83970:	2500      	movls	r5, #0
   83972:	3015      	adds	r0, #21
   83974:	fa25 f101 	lsr.w	r1, r5, r1
   83978:	4084      	lsls	r4, r0
   8397a:	f04c 537f 	orr.w	r3, ip, #1069547520	; 0x3fc00000
   8397e:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
   83982:	ea41 0204 	orr.w	r2, r1, r4
   83986:	e024      	b.n	839d2 <__b2d+0x9e>
   83988:	42bd      	cmp	r5, r7
   8398a:	bf86      	itte	hi
   8398c:	f1a6 0508 	subhi.w	r5, r6, #8
   83990:	f856 1c08 	ldrhi.w	r1, [r6, #-8]
   83994:	2100      	movls	r1, #0
   83996:	f1b0 060b 	subs.w	r6, r0, #11
   8399a:	d015      	beq.n	839c8 <__b2d+0x94>
   8399c:	40b4      	lsls	r4, r6
   8399e:	f1c0 002b 	rsb	r0, r0, #43	; 0x2b
   839a2:	fa21 fc00 	lsr.w	ip, r1, r0
   839a6:	f044 547f 	orr.w	r4, r4, #1069547520	; 0x3fc00000
   839aa:	f444 1440 	orr.w	r4, r4, #3145728	; 0x300000
   839ae:	42bd      	cmp	r5, r7
   839b0:	ea44 030c 	orr.w	r3, r4, ip
   839b4:	bf8c      	ite	hi
   839b6:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
   839ba:	2400      	movls	r4, #0
   839bc:	fa24 f000 	lsr.w	r0, r4, r0
   839c0:	40b1      	lsls	r1, r6
   839c2:	ea40 0201 	orr.w	r2, r0, r1
   839c6:	e004      	b.n	839d2 <__b2d+0x9e>
   839c8:	f044 537f 	orr.w	r3, r4, #1069547520	; 0x3fc00000
   839cc:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
   839d0:	460a      	mov	r2, r1
   839d2:	4610      	mov	r0, r2
   839d4:	4619      	mov	r1, r3
   839d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

000839da <__d2b>:
   839da:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   839de:	2101      	movs	r1, #1
   839e0:	461d      	mov	r5, r3
   839e2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   839e6:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   839ea:	4614      	mov	r4, r2
   839ec:	f7ff fcda 	bl	833a4 <_Balloc>
   839f0:	f3c5 570a 	ubfx	r7, r5, #20, #11
   839f4:	4606      	mov	r6, r0
   839f6:	f3c5 0313 	ubfx	r3, r5, #0, #20
   839fa:	b10f      	cbz	r7, 83a00 <__d2b+0x26>
   839fc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   83a00:	9301      	str	r3, [sp, #4]
   83a02:	b1d4      	cbz	r4, 83a3a <__d2b+0x60>
   83a04:	a802      	add	r0, sp, #8
   83a06:	f840 4d08 	str.w	r4, [r0, #-8]!
   83a0a:	4668      	mov	r0, sp
   83a0c:	f7ff fd95 	bl	8353a <__lo0bits>
   83a10:	9b00      	ldr	r3, [sp, #0]
   83a12:	b148      	cbz	r0, 83a28 <__d2b+0x4e>
   83a14:	9a01      	ldr	r2, [sp, #4]
   83a16:	f1c0 0120 	rsb	r1, r0, #32
   83a1a:	fa02 f101 	lsl.w	r1, r2, r1
   83a1e:	40c2      	lsrs	r2, r0
   83a20:	430b      	orrs	r3, r1
   83a22:	6173      	str	r3, [r6, #20]
   83a24:	9201      	str	r2, [sp, #4]
   83a26:	e000      	b.n	83a2a <__d2b+0x50>
   83a28:	6173      	str	r3, [r6, #20]
   83a2a:	9b01      	ldr	r3, [sp, #4]
   83a2c:	2b00      	cmp	r3, #0
   83a2e:	bf0c      	ite	eq
   83a30:	2401      	moveq	r4, #1
   83a32:	2402      	movne	r4, #2
   83a34:	61b3      	str	r3, [r6, #24]
   83a36:	6134      	str	r4, [r6, #16]
   83a38:	e007      	b.n	83a4a <__d2b+0x70>
   83a3a:	a801      	add	r0, sp, #4
   83a3c:	f7ff fd7d 	bl	8353a <__lo0bits>
   83a40:	9b01      	ldr	r3, [sp, #4]
   83a42:	2401      	movs	r4, #1
   83a44:	6173      	str	r3, [r6, #20]
   83a46:	6134      	str	r4, [r6, #16]
   83a48:	3020      	adds	r0, #32
   83a4a:	b13f      	cbz	r7, 83a5c <__d2b+0x82>
   83a4c:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
   83a50:	4407      	add	r7, r0
   83a52:	f8c9 7000 	str.w	r7, [r9]
   83a56:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   83a5a:	e00a      	b.n	83a72 <__d2b+0x98>
   83a5c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   83a60:	eb06 0384 	add.w	r3, r6, r4, lsl #2
   83a64:	f8c9 0000 	str.w	r0, [r9]
   83a68:	6918      	ldr	r0, [r3, #16]
   83a6a:	f7ff fd46 	bl	834fa <__hi0bits>
   83a6e:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
   83a72:	f8c8 0000 	str.w	r0, [r8]
   83a76:	4630      	mov	r0, r6
   83a78:	b003      	add	sp, #12
   83a7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00083a7e <__ratio>:
   83a7e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   83a82:	460e      	mov	r6, r1
   83a84:	4669      	mov	r1, sp
   83a86:	4680      	mov	r8, r0
   83a88:	f7ff ff54 	bl	83934 <__b2d>
   83a8c:	460d      	mov	r5, r1
   83a8e:	4604      	mov	r4, r0
   83a90:	a901      	add	r1, sp, #4
   83a92:	4630      	mov	r0, r6
   83a94:	f7ff ff4e 	bl	83934 <__b2d>
   83a98:	9f00      	ldr	r7, [sp, #0]
   83a9a:	460b      	mov	r3, r1
   83a9c:	9901      	ldr	r1, [sp, #4]
   83a9e:	4602      	mov	r2, r0
   83aa0:	1a7f      	subs	r7, r7, r1
   83aa2:	f8d8 0010 	ldr.w	r0, [r8, #16]
   83aa6:	6931      	ldr	r1, [r6, #16]
   83aa8:	1a41      	subs	r1, r0, r1
   83aaa:	eb07 1141 	add.w	r1, r7, r1, lsl #5
   83aae:	2900      	cmp	r1, #0
   83ab0:	bfcc      	ite	gt
   83ab2:	eb05 5501 	addgt.w	r5, r5, r1, lsl #20
   83ab6:	eba3 5301 	suble.w	r3, r3, r1, lsl #20
   83aba:	4620      	mov	r0, r4
   83abc:	4629      	mov	r1, r5
   83abe:	f001 fa09 	bl	84ed4 <__aeabi_ddiv>
   83ac2:	b002      	add	sp, #8
   83ac4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00083ac8 <_mprec_log10>:
   83ac8:	2817      	cmp	r0, #23
   83aca:	b510      	push	{r4, lr}
   83acc:	4604      	mov	r4, r0
   83ace:	dc05      	bgt.n	83adc <_mprec_log10+0x14>
   83ad0:	4b07      	ldr	r3, [pc, #28]	; (83af0 <_mprec_log10+0x28>)
   83ad2:	eb03 04c0 	add.w	r4, r3, r0, lsl #3
   83ad6:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
   83ada:	bd10      	pop	{r4, pc}
   83adc:	4905      	ldr	r1, [pc, #20]	; (83af4 <_mprec_log10+0x2c>)
   83ade:	2000      	movs	r0, #0
   83ae0:	2200      	movs	r2, #0
   83ae2:	4b05      	ldr	r3, [pc, #20]	; (83af8 <_mprec_log10+0x30>)
   83ae4:	f001 f8cc 	bl	84c80 <__aeabi_dmul>
   83ae8:	3c01      	subs	r4, #1
   83aea:	d1f9      	bne.n	83ae0 <_mprec_log10+0x18>
   83aec:	bd10      	pop	{r4, pc}
   83aee:	bf00      	nop
   83af0:	00085860 	.word	0x00085860
   83af4:	3ff00000 	.word	0x3ff00000
   83af8:	40240000 	.word	0x40240000

00083afc <__copybits>:
   83afc:	b510      	push	{r4, lr}
   83afe:	3901      	subs	r1, #1
   83b00:	f102 0314 	add.w	r3, r2, #20
   83b04:	1149      	asrs	r1, r1, #5
   83b06:	6912      	ldr	r2, [r2, #16]
   83b08:	3101      	adds	r1, #1
   83b0a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   83b0e:	eb03 0282 	add.w	r2, r3, r2, lsl #2
   83b12:	4293      	cmp	r3, r2
   83b14:	d204      	bcs.n	83b20 <__copybits+0x24>
   83b16:	f853 4b04 	ldr.w	r4, [r3], #4
   83b1a:	f840 4b04 	str.w	r4, [r0], #4
   83b1e:	e7f8      	b.n	83b12 <__copybits+0x16>
   83b20:	4288      	cmp	r0, r1
   83b22:	d203      	bcs.n	83b2c <__copybits+0x30>
   83b24:	2300      	movs	r3, #0
   83b26:	f840 3b04 	str.w	r3, [r0], #4
   83b2a:	e7f9      	b.n	83b20 <__copybits+0x24>
   83b2c:	bd10      	pop	{r4, pc}

00083b2e <__any_on>:
   83b2e:	f100 0214 	add.w	r2, r0, #20
   83b32:	6900      	ldr	r0, [r0, #16]
   83b34:	114b      	asrs	r3, r1, #5
   83b36:	4283      	cmp	r3, r0
   83b38:	b510      	push	{r4, lr}
   83b3a:	dc0c      	bgt.n	83b56 <__any_on+0x28>
   83b3c:	da0c      	bge.n	83b58 <__any_on+0x2a>
   83b3e:	f011 011f 	ands.w	r1, r1, #31
   83b42:	d009      	beq.n	83b58 <__any_on+0x2a>
   83b44:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
   83b48:	fa20 f401 	lsr.w	r4, r0, r1
   83b4c:	fa04 f101 	lsl.w	r1, r4, r1
   83b50:	4281      	cmp	r1, r0
   83b52:	d10e      	bne.n	83b72 <__any_on+0x44>
   83b54:	e000      	b.n	83b58 <__any_on+0x2a>
   83b56:	4603      	mov	r3, r0
   83b58:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   83b5c:	4293      	cmp	r3, r2
   83b5e:	4619      	mov	r1, r3
   83b60:	d905      	bls.n	83b6e <__any_on+0x40>
   83b62:	f851 1c04 	ldr.w	r1, [r1, #-4]
   83b66:	3b04      	subs	r3, #4
   83b68:	2900      	cmp	r1, #0
   83b6a:	d0f7      	beq.n	83b5c <__any_on+0x2e>
   83b6c:	e001      	b.n	83b72 <__any_on+0x44>
   83b6e:	2000      	movs	r0, #0
   83b70:	bd10      	pop	{r4, pc}
   83b72:	2001      	movs	r0, #1
   83b74:	bd10      	pop	{r4, pc}
   83b76:	bf00      	nop

00083b78 <_realloc_r>:
   83b78:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83b7c:	4681      	mov	r9, r0
   83b7e:	460c      	mov	r4, r1
   83b80:	b929      	cbnz	r1, 83b8e <_realloc_r+0x16>
   83b82:	4611      	mov	r1, r2
   83b84:	b003      	add	sp, #12
   83b86:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83b8a:	f7ff b9cf 	b.w	82f2c <_malloc_r>
   83b8e:	9201      	str	r2, [sp, #4]
   83b90:	f7ff fc06 	bl	833a0 <__malloc_lock>
   83b94:	9a01      	ldr	r2, [sp, #4]
   83b96:	f854 5c04 	ldr.w	r5, [r4, #-4]
   83b9a:	f102 070b 	add.w	r7, r2, #11
   83b9e:	2f16      	cmp	r7, #22
   83ba0:	f1a4 0808 	sub.w	r8, r4, #8
   83ba4:	f025 0603 	bic.w	r6, r5, #3
   83ba8:	d903      	bls.n	83bb2 <_realloc_r+0x3a>
   83baa:	f037 0707 	bics.w	r7, r7, #7
   83bae:	d501      	bpl.n	83bb4 <_realloc_r+0x3c>
   83bb0:	e002      	b.n	83bb8 <_realloc_r+0x40>
   83bb2:	2710      	movs	r7, #16
   83bb4:	4297      	cmp	r7, r2
   83bb6:	d204      	bcs.n	83bc2 <_realloc_r+0x4a>
   83bb8:	230c      	movs	r3, #12
   83bba:	f8c9 3000 	str.w	r3, [r9]
   83bbe:	2000      	movs	r0, #0
   83bc0:	e180      	b.n	83ec4 <_realloc_r+0x34c>
   83bc2:	42be      	cmp	r6, r7
   83bc4:	f280 8156 	bge.w	83e74 <_realloc_r+0x2fc>
   83bc8:	49a3      	ldr	r1, [pc, #652]	; (83e58 <_realloc_r+0x2e0>)
   83bca:	eb08 0306 	add.w	r3, r8, r6
   83bce:	f8d1 e008 	ldr.w	lr, [r1, #8]
   83bd2:	468b      	mov	fp, r1
   83bd4:	4573      	cmp	r3, lr
   83bd6:	6858      	ldr	r0, [r3, #4]
   83bd8:	d005      	beq.n	83be6 <_realloc_r+0x6e>
   83bda:	f020 0101 	bic.w	r1, r0, #1
   83bde:	4419      	add	r1, r3
   83be0:	6849      	ldr	r1, [r1, #4]
   83be2:	07c9      	lsls	r1, r1, #31
   83be4:	d425      	bmi.n	83c32 <_realloc_r+0xba>
   83be6:	f020 0003 	bic.w	r0, r0, #3
   83bea:	4573      	cmp	r3, lr
   83bec:	eb00 0106 	add.w	r1, r0, r6
   83bf0:	d117      	bne.n	83c22 <_realloc_r+0xaa>
   83bf2:	f107 0c10 	add.w	ip, r7, #16
   83bf6:	4561      	cmp	r1, ip
   83bf8:	db1d      	blt.n	83c36 <_realloc_r+0xbe>
   83bfa:	1bc9      	subs	r1, r1, r7
   83bfc:	eb08 0507 	add.w	r5, r8, r7
   83c00:	f041 0101 	orr.w	r1, r1, #1
   83c04:	f8cb 5008 	str.w	r5, [fp, #8]
   83c08:	6069      	str	r1, [r5, #4]
   83c0a:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83c0e:	4648      	mov	r0, r9
   83c10:	f003 0301 	and.w	r3, r3, #1
   83c14:	431f      	orrs	r7, r3
   83c16:	f844 7c04 	str.w	r7, [r4, #-4]
   83c1a:	f7ff fbc2 	bl	833a2 <__malloc_unlock>
   83c1e:	4620      	mov	r0, r4
   83c20:	e150      	b.n	83ec4 <_realloc_r+0x34c>
   83c22:	42b9      	cmp	r1, r7
   83c24:	db07      	blt.n	83c36 <_realloc_r+0xbe>
   83c26:	68da      	ldr	r2, [r3, #12]
   83c28:	689b      	ldr	r3, [r3, #8]
   83c2a:	460e      	mov	r6, r1
   83c2c:	60da      	str	r2, [r3, #12]
   83c2e:	6093      	str	r3, [r2, #8]
   83c30:	e120      	b.n	83e74 <_realloc_r+0x2fc>
   83c32:	2000      	movs	r0, #0
   83c34:	4603      	mov	r3, r0
   83c36:	07e9      	lsls	r1, r5, #31
   83c38:	f100 80cb 	bmi.w	83dd2 <_realloc_r+0x25a>
   83c3c:	f854 5c08 	ldr.w	r5, [r4, #-8]
   83c40:	ebc5 0508 	rsb	r5, r5, r8
   83c44:	6869      	ldr	r1, [r5, #4]
   83c46:	f021 0103 	bic.w	r1, r1, #3
   83c4a:	eb01 0a06 	add.w	sl, r1, r6
   83c4e:	2b00      	cmp	r3, #0
   83c50:	f000 808a 	beq.w	83d68 <_realloc_r+0x1f0>
   83c54:	4573      	cmp	r3, lr
   83c56:	d14d      	bne.n	83cf4 <_realloc_r+0x17c>
   83c58:	eb0a 0300 	add.w	r3, sl, r0
   83c5c:	f107 0110 	add.w	r1, r7, #16
   83c60:	428b      	cmp	r3, r1
   83c62:	f2c0 8081 	blt.w	83d68 <_realloc_r+0x1f0>
   83c66:	46a8      	mov	r8, r5
   83c68:	68ea      	ldr	r2, [r5, #12]
   83c6a:	f858 1f08 	ldr.w	r1, [r8, #8]!
   83c6e:	60ca      	str	r2, [r1, #12]
   83c70:	6091      	str	r1, [r2, #8]
   83c72:	1f32      	subs	r2, r6, #4
   83c74:	2a24      	cmp	r2, #36	; 0x24
   83c76:	d826      	bhi.n	83cc6 <_realloc_r+0x14e>
   83c78:	2a13      	cmp	r2, #19
   83c7a:	d91c      	bls.n	83cb6 <_realloc_r+0x13e>
   83c7c:	6821      	ldr	r1, [r4, #0]
   83c7e:	2a1b      	cmp	r2, #27
   83c80:	60a9      	str	r1, [r5, #8]
   83c82:	6861      	ldr	r1, [r4, #4]
   83c84:	60e9      	str	r1, [r5, #12]
   83c86:	d803      	bhi.n	83c90 <_realloc_r+0x118>
   83c88:	f105 0210 	add.w	r2, r5, #16
   83c8c:	3408      	adds	r4, #8
   83c8e:	e013      	b.n	83cb8 <_realloc_r+0x140>
   83c90:	68a1      	ldr	r1, [r4, #8]
   83c92:	2a24      	cmp	r2, #36	; 0x24
   83c94:	6129      	str	r1, [r5, #16]
   83c96:	68e1      	ldr	r1, [r4, #12]
   83c98:	6169      	str	r1, [r5, #20]
   83c9a:	d003      	beq.n	83ca4 <_realloc_r+0x12c>
   83c9c:	f105 0218 	add.w	r2, r5, #24
   83ca0:	3410      	adds	r4, #16
   83ca2:	e009      	b.n	83cb8 <_realloc_r+0x140>
   83ca4:	6922      	ldr	r2, [r4, #16]
   83ca6:	3418      	adds	r4, #24
   83ca8:	61aa      	str	r2, [r5, #24]
   83caa:	f854 1c04 	ldr.w	r1, [r4, #-4]
   83cae:	f105 0220 	add.w	r2, r5, #32
   83cb2:	61e9      	str	r1, [r5, #28]
   83cb4:	e000      	b.n	83cb8 <_realloc_r+0x140>
   83cb6:	4642      	mov	r2, r8
   83cb8:	6821      	ldr	r1, [r4, #0]
   83cba:	6011      	str	r1, [r2, #0]
   83cbc:	6861      	ldr	r1, [r4, #4]
   83cbe:	6051      	str	r1, [r2, #4]
   83cc0:	68a1      	ldr	r1, [r4, #8]
   83cc2:	6091      	str	r1, [r2, #8]
   83cc4:	e005      	b.n	83cd2 <_realloc_r+0x15a>
   83cc6:	4640      	mov	r0, r8
   83cc8:	4621      	mov	r1, r4
   83cca:	9301      	str	r3, [sp, #4]
   83ccc:	f7ff fb4d 	bl	8336a <memmove>
   83cd0:	9b01      	ldr	r3, [sp, #4]
   83cd2:	1bdb      	subs	r3, r3, r7
   83cd4:	19ea      	adds	r2, r5, r7
   83cd6:	f043 0301 	orr.w	r3, r3, #1
   83cda:	f8cb 2008 	str.w	r2, [fp, #8]
   83cde:	6053      	str	r3, [r2, #4]
   83ce0:	686b      	ldr	r3, [r5, #4]
   83ce2:	4648      	mov	r0, r9
   83ce4:	f003 0301 	and.w	r3, r3, #1
   83ce8:	431f      	orrs	r7, r3
   83cea:	606f      	str	r7, [r5, #4]
   83cec:	f7ff fb59 	bl	833a2 <__malloc_unlock>
   83cf0:	4640      	mov	r0, r8
   83cf2:	e0e7      	b.n	83ec4 <_realloc_r+0x34c>
   83cf4:	eb0a 0b00 	add.w	fp, sl, r0
   83cf8:	45bb      	cmp	fp, r7
   83cfa:	db35      	blt.n	83d68 <_realloc_r+0x1f0>
   83cfc:	68da      	ldr	r2, [r3, #12]
   83cfe:	689b      	ldr	r3, [r3, #8]
   83d00:	4628      	mov	r0, r5
   83d02:	60da      	str	r2, [r3, #12]
   83d04:	6093      	str	r3, [r2, #8]
   83d06:	f850 2f08 	ldr.w	r2, [r0, #8]!
   83d0a:	68eb      	ldr	r3, [r5, #12]
   83d0c:	60d3      	str	r3, [r2, #12]
   83d0e:	609a      	str	r2, [r3, #8]
   83d10:	1f32      	subs	r2, r6, #4
   83d12:	2a24      	cmp	r2, #36	; 0x24
   83d14:	d823      	bhi.n	83d5e <_realloc_r+0x1e6>
   83d16:	2a13      	cmp	r2, #19
   83d18:	d91a      	bls.n	83d50 <_realloc_r+0x1d8>
   83d1a:	6823      	ldr	r3, [r4, #0]
   83d1c:	2a1b      	cmp	r2, #27
   83d1e:	60ab      	str	r3, [r5, #8]
   83d20:	6863      	ldr	r3, [r4, #4]
   83d22:	60eb      	str	r3, [r5, #12]
   83d24:	d803      	bhi.n	83d2e <_realloc_r+0x1b6>
   83d26:	f105 0010 	add.w	r0, r5, #16
   83d2a:	3408      	adds	r4, #8
   83d2c:	e010      	b.n	83d50 <_realloc_r+0x1d8>
   83d2e:	68a3      	ldr	r3, [r4, #8]
   83d30:	2a24      	cmp	r2, #36	; 0x24
   83d32:	612b      	str	r3, [r5, #16]
   83d34:	68e3      	ldr	r3, [r4, #12]
   83d36:	616b      	str	r3, [r5, #20]
   83d38:	d003      	beq.n	83d42 <_realloc_r+0x1ca>
   83d3a:	f105 0018 	add.w	r0, r5, #24
   83d3e:	3410      	adds	r4, #16
   83d40:	e006      	b.n	83d50 <_realloc_r+0x1d8>
   83d42:	6923      	ldr	r3, [r4, #16]
   83d44:	f105 0020 	add.w	r0, r5, #32
   83d48:	61ab      	str	r3, [r5, #24]
   83d4a:	6963      	ldr	r3, [r4, #20]
   83d4c:	3418      	adds	r4, #24
   83d4e:	61eb      	str	r3, [r5, #28]
   83d50:	6823      	ldr	r3, [r4, #0]
   83d52:	6003      	str	r3, [r0, #0]
   83d54:	6863      	ldr	r3, [r4, #4]
   83d56:	6043      	str	r3, [r0, #4]
   83d58:	68a3      	ldr	r3, [r4, #8]
   83d5a:	6083      	str	r3, [r0, #8]
   83d5c:	e002      	b.n	83d64 <_realloc_r+0x1ec>
   83d5e:	4621      	mov	r1, r4
   83d60:	f7ff fb03 	bl	8336a <memmove>
   83d64:	465e      	mov	r6, fp
   83d66:	e02e      	b.n	83dc6 <_realloc_r+0x24e>
   83d68:	45ba      	cmp	sl, r7
   83d6a:	db32      	blt.n	83dd2 <_realloc_r+0x25a>
   83d6c:	4628      	mov	r0, r5
   83d6e:	f850 2f08 	ldr.w	r2, [r0, #8]!
   83d72:	68eb      	ldr	r3, [r5, #12]
   83d74:	60d3      	str	r3, [r2, #12]
   83d76:	609a      	str	r2, [r3, #8]
   83d78:	1f32      	subs	r2, r6, #4
   83d7a:	2a24      	cmp	r2, #36	; 0x24
   83d7c:	d825      	bhi.n	83dca <_realloc_r+0x252>
   83d7e:	2a13      	cmp	r2, #19
   83d80:	d91a      	bls.n	83db8 <_realloc_r+0x240>
   83d82:	6823      	ldr	r3, [r4, #0]
   83d84:	2a1b      	cmp	r2, #27
   83d86:	60ab      	str	r3, [r5, #8]
   83d88:	6863      	ldr	r3, [r4, #4]
   83d8a:	60eb      	str	r3, [r5, #12]
   83d8c:	d803      	bhi.n	83d96 <_realloc_r+0x21e>
   83d8e:	f105 0010 	add.w	r0, r5, #16
   83d92:	3408      	adds	r4, #8
   83d94:	e010      	b.n	83db8 <_realloc_r+0x240>
   83d96:	68a3      	ldr	r3, [r4, #8]
   83d98:	2a24      	cmp	r2, #36	; 0x24
   83d9a:	612b      	str	r3, [r5, #16]
   83d9c:	68e3      	ldr	r3, [r4, #12]
   83d9e:	616b      	str	r3, [r5, #20]
   83da0:	d003      	beq.n	83daa <_realloc_r+0x232>
   83da2:	f105 0018 	add.w	r0, r5, #24
   83da6:	3410      	adds	r4, #16
   83da8:	e006      	b.n	83db8 <_realloc_r+0x240>
   83daa:	6923      	ldr	r3, [r4, #16]
   83dac:	f105 0020 	add.w	r0, r5, #32
   83db0:	61ab      	str	r3, [r5, #24]
   83db2:	6963      	ldr	r3, [r4, #20]
   83db4:	3418      	adds	r4, #24
   83db6:	61eb      	str	r3, [r5, #28]
   83db8:	6823      	ldr	r3, [r4, #0]
   83dba:	6003      	str	r3, [r0, #0]
   83dbc:	6863      	ldr	r3, [r4, #4]
   83dbe:	6043      	str	r3, [r0, #4]
   83dc0:	68a3      	ldr	r3, [r4, #8]
   83dc2:	6083      	str	r3, [r0, #8]
   83dc4:	4656      	mov	r6, sl
   83dc6:	46a8      	mov	r8, r5
   83dc8:	e054      	b.n	83e74 <_realloc_r+0x2fc>
   83dca:	4621      	mov	r1, r4
   83dcc:	f7ff facd 	bl	8336a <memmove>
   83dd0:	e7f8      	b.n	83dc4 <_realloc_r+0x24c>
   83dd2:	4648      	mov	r0, r9
   83dd4:	4611      	mov	r1, r2
   83dd6:	f7ff f8a9 	bl	82f2c <_malloc_r>
   83dda:	4605      	mov	r5, r0
   83ddc:	2800      	cmp	r0, #0
   83dde:	d044      	beq.n	83e6a <_realloc_r+0x2f2>
   83de0:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83de4:	f1a0 0208 	sub.w	r2, r0, #8
   83de8:	f023 0301 	bic.w	r3, r3, #1
   83dec:	4443      	add	r3, r8
   83dee:	429a      	cmp	r2, r3
   83df0:	d105      	bne.n	83dfe <_realloc_r+0x286>
   83df2:	f850 3c04 	ldr.w	r3, [r0, #-4]
   83df6:	f023 0303 	bic.w	r3, r3, #3
   83dfa:	441e      	add	r6, r3
   83dfc:	e03a      	b.n	83e74 <_realloc_r+0x2fc>
   83dfe:	1f32      	subs	r2, r6, #4
   83e00:	2a24      	cmp	r2, #36	; 0x24
   83e02:	d82b      	bhi.n	83e5c <_realloc_r+0x2e4>
   83e04:	2a13      	cmp	r2, #19
   83e06:	d91e      	bls.n	83e46 <_realloc_r+0x2ce>
   83e08:	6823      	ldr	r3, [r4, #0]
   83e0a:	2a1b      	cmp	r2, #27
   83e0c:	6003      	str	r3, [r0, #0]
   83e0e:	6863      	ldr	r3, [r4, #4]
   83e10:	6043      	str	r3, [r0, #4]
   83e12:	d804      	bhi.n	83e1e <_realloc_r+0x2a6>
   83e14:	f100 0308 	add.w	r3, r0, #8
   83e18:	f104 0208 	add.w	r2, r4, #8
   83e1c:	e015      	b.n	83e4a <_realloc_r+0x2d2>
   83e1e:	68a3      	ldr	r3, [r4, #8]
   83e20:	2a24      	cmp	r2, #36	; 0x24
   83e22:	6083      	str	r3, [r0, #8]
   83e24:	68e3      	ldr	r3, [r4, #12]
   83e26:	60c3      	str	r3, [r0, #12]
   83e28:	d004      	beq.n	83e34 <_realloc_r+0x2bc>
   83e2a:	f100 0310 	add.w	r3, r0, #16
   83e2e:	f104 0210 	add.w	r2, r4, #16
   83e32:	e00a      	b.n	83e4a <_realloc_r+0x2d2>
   83e34:	6923      	ldr	r3, [r4, #16]
   83e36:	f104 0218 	add.w	r2, r4, #24
   83e3a:	6103      	str	r3, [r0, #16]
   83e3c:	6961      	ldr	r1, [r4, #20]
   83e3e:	f100 0318 	add.w	r3, r0, #24
   83e42:	6141      	str	r1, [r0, #20]
   83e44:	e001      	b.n	83e4a <_realloc_r+0x2d2>
   83e46:	4603      	mov	r3, r0
   83e48:	4622      	mov	r2, r4
   83e4a:	6811      	ldr	r1, [r2, #0]
   83e4c:	6019      	str	r1, [r3, #0]
   83e4e:	6851      	ldr	r1, [r2, #4]
   83e50:	6059      	str	r1, [r3, #4]
   83e52:	6892      	ldr	r2, [r2, #8]
   83e54:	609a      	str	r2, [r3, #8]
   83e56:	e004      	b.n	83e62 <_realloc_r+0x2ea>
   83e58:	200704b4 	.word	0x200704b4
   83e5c:	4621      	mov	r1, r4
   83e5e:	f7ff fa84 	bl	8336a <memmove>
   83e62:	4648      	mov	r0, r9
   83e64:	4621      	mov	r1, r4
   83e66:	f7fe ff67 	bl	82d38 <_free_r>
   83e6a:	4648      	mov	r0, r9
   83e6c:	f7ff fa99 	bl	833a2 <__malloc_unlock>
   83e70:	4628      	mov	r0, r5
   83e72:	e027      	b.n	83ec4 <_realloc_r+0x34c>
   83e74:	1bf3      	subs	r3, r6, r7
   83e76:	2b0f      	cmp	r3, #15
   83e78:	f8d8 2004 	ldr.w	r2, [r8, #4]
   83e7c:	d913      	bls.n	83ea6 <_realloc_r+0x32e>
   83e7e:	f002 0201 	and.w	r2, r2, #1
   83e82:	eb08 0107 	add.w	r1, r8, r7
   83e86:	4317      	orrs	r7, r2
   83e88:	f043 0201 	orr.w	r2, r3, #1
   83e8c:	f8c8 7004 	str.w	r7, [r8, #4]
   83e90:	440b      	add	r3, r1
   83e92:	604a      	str	r2, [r1, #4]
   83e94:	685a      	ldr	r2, [r3, #4]
   83e96:	4648      	mov	r0, r9
   83e98:	f042 0201 	orr.w	r2, r2, #1
   83e9c:	605a      	str	r2, [r3, #4]
   83e9e:	3108      	adds	r1, #8
   83ea0:	f7fe ff4a 	bl	82d38 <_free_r>
   83ea4:	e009      	b.n	83eba <_realloc_r+0x342>
   83ea6:	f002 0201 	and.w	r2, r2, #1
   83eaa:	4332      	orrs	r2, r6
   83eac:	f8c8 2004 	str.w	r2, [r8, #4]
   83eb0:	4446      	add	r6, r8
   83eb2:	6873      	ldr	r3, [r6, #4]
   83eb4:	f043 0301 	orr.w	r3, r3, #1
   83eb8:	6073      	str	r3, [r6, #4]
   83eba:	4648      	mov	r0, r9
   83ebc:	f7ff fa71 	bl	833a2 <__malloc_unlock>
   83ec0:	f108 0008 	add.w	r0, r8, #8
   83ec4:	b003      	add	sp, #12
   83ec6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83eca:	bf00      	nop

00083ecc <__fpclassifyd>:
   83ecc:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   83ed0:	b510      	push	{r4, lr}
   83ed2:	d100      	bne.n	83ed6 <__fpclassifyd+0xa>
   83ed4:	b178      	cbz	r0, 83ef6 <__fpclassifyd+0x2a>
   83ed6:	4a0c      	ldr	r2, [pc, #48]	; (83f08 <__fpclassifyd+0x3c>)
   83ed8:	f5a3 1480 	sub.w	r4, r3, #1048576	; 0x100000
   83edc:	4294      	cmp	r4, r2
   83ede:	d90c      	bls.n	83efa <__fpclassifyd+0x2e>
   83ee0:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   83ee4:	d30b      	bcc.n	83efe <__fpclassifyd+0x32>
   83ee6:	4a09      	ldr	r2, [pc, #36]	; (83f0c <__fpclassifyd+0x40>)
   83ee8:	4293      	cmp	r3, r2
   83eea:	d10a      	bne.n	83f02 <__fpclassifyd+0x36>
   83eec:	f1d0 0001 	rsbs	r0, r0, #1
   83ef0:	bf38      	it	cc
   83ef2:	2000      	movcc	r0, #0
   83ef4:	bd10      	pop	{r4, pc}
   83ef6:	2002      	movs	r0, #2
   83ef8:	bd10      	pop	{r4, pc}
   83efa:	2004      	movs	r0, #4
   83efc:	bd10      	pop	{r4, pc}
   83efe:	2003      	movs	r0, #3
   83f00:	bd10      	pop	{r4, pc}
   83f02:	2000      	movs	r0, #0
   83f04:	bd10      	pop	{r4, pc}
   83f06:	bf00      	nop
   83f08:	7fdfffff 	.word	0x7fdfffff
   83f0c:	7ff00000 	.word	0x7ff00000

00083f10 <_sbrk_r>:
   83f10:	b538      	push	{r3, r4, r5, lr}
   83f12:	4c06      	ldr	r4, [pc, #24]	; (83f2c <_sbrk_r+0x1c>)
   83f14:	2300      	movs	r3, #0
   83f16:	4605      	mov	r5, r0
   83f18:	4608      	mov	r0, r1
   83f1a:	6023      	str	r3, [r4, #0]
   83f1c:	f7fd f82c 	bl	80f78 <_sbrk>
   83f20:	1c43      	adds	r3, r0, #1
   83f22:	d102      	bne.n	83f2a <_sbrk_r+0x1a>
   83f24:	6823      	ldr	r3, [r4, #0]
   83f26:	b103      	cbz	r3, 83f2a <_sbrk_r+0x1a>
   83f28:	602b      	str	r3, [r5, #0]
   83f2a:	bd38      	pop	{r3, r4, r5, pc}
   83f2c:	2007309c 	.word	0x2007309c

00083f30 <strcmp>:
   83f30:	f810 2b01 	ldrb.w	r2, [r0], #1
   83f34:	f811 3b01 	ldrb.w	r3, [r1], #1
   83f38:	2a01      	cmp	r2, #1
   83f3a:	bf28      	it	cs
   83f3c:	429a      	cmpcs	r2, r3
   83f3e:	d0f7      	beq.n	83f30 <strcmp>
   83f40:	1ad0      	subs	r0, r2, r3
   83f42:	4770      	bx	lr

00083f44 <__ssprint_r>:
   83f44:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83f48:	4680      	mov	r8, r0
   83f4a:	6890      	ldr	r0, [r2, #8]
   83f4c:	460c      	mov	r4, r1
   83f4e:	4615      	mov	r5, r2
   83f50:	f8d2 9000 	ldr.w	r9, [r2]
   83f54:	b118      	cbz	r0, 83f5e <__ssprint_r+0x1a>
   83f56:	2300      	movs	r3, #0
   83f58:	9301      	str	r3, [sp, #4]
   83f5a:	461e      	mov	r6, r3
   83f5c:	e008      	b.n	83f70 <__ssprint_r+0x2c>
   83f5e:	6050      	str	r0, [r2, #4]
   83f60:	e066      	b.n	84030 <__ssprint_r+0xec>
   83f62:	f8d9 3000 	ldr.w	r3, [r9]
   83f66:	f8d9 6004 	ldr.w	r6, [r9, #4]
   83f6a:	9301      	str	r3, [sp, #4]
   83f6c:	f109 0908 	add.w	r9, r9, #8
   83f70:	2e00      	cmp	r6, #0
   83f72:	d0f6      	beq.n	83f62 <__ssprint_r+0x1e>
   83f74:	68a7      	ldr	r7, [r4, #8]
   83f76:	42be      	cmp	r6, r7
   83f78:	d347      	bcc.n	8400a <__ssprint_r+0xc6>
   83f7a:	89a2      	ldrh	r2, [r4, #12]
   83f7c:	f412 6f90 	tst.w	r2, #1152	; 0x480
   83f80:	d041      	beq.n	84006 <__ssprint_r+0xc2>
   83f82:	6823      	ldr	r3, [r4, #0]
   83f84:	6921      	ldr	r1, [r4, #16]
   83f86:	2002      	movs	r0, #2
   83f88:	ebc1 0a03 	rsb	sl, r1, r3
   83f8c:	6963      	ldr	r3, [r4, #20]
   83f8e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   83f92:	fb93 fbf0 	sdiv	fp, r3, r0
   83f96:	f10a 0001 	add.w	r0, sl, #1
   83f9a:	4430      	add	r0, r6
   83f9c:	4583      	cmp	fp, r0
   83f9e:	bf38      	it	cc
   83fa0:	4683      	movcc	fp, r0
   83fa2:	0553      	lsls	r3, r2, #21
   83fa4:	4640      	mov	r0, r8
   83fa6:	d50f      	bpl.n	83fc8 <__ssprint_r+0x84>
   83fa8:	4659      	mov	r1, fp
   83faa:	f7fe ffbf 	bl	82f2c <_malloc_r>
   83fae:	4607      	mov	r7, r0
   83fb0:	b198      	cbz	r0, 83fda <__ssprint_r+0x96>
   83fb2:	4652      	mov	r2, sl
   83fb4:	6921      	ldr	r1, [r4, #16]
   83fb6:	f7ff f9cf 	bl	83358 <memcpy>
   83fba:	89a2      	ldrh	r2, [r4, #12]
   83fbc:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   83fc0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   83fc4:	81a2      	strh	r2, [r4, #12]
   83fc6:	e015      	b.n	83ff4 <__ssprint_r+0xb0>
   83fc8:	465a      	mov	r2, fp
   83fca:	f7ff fdd5 	bl	83b78 <_realloc_r>
   83fce:	4607      	mov	r7, r0
   83fd0:	b980      	cbnz	r0, 83ff4 <__ssprint_r+0xb0>
   83fd2:	4640      	mov	r0, r8
   83fd4:	6921      	ldr	r1, [r4, #16]
   83fd6:	f7fe feaf 	bl	82d38 <_free_r>
   83fda:	230c      	movs	r3, #12
   83fdc:	f8c8 3000 	str.w	r3, [r8]
   83fe0:	89a3      	ldrh	r3, [r4, #12]
   83fe2:	f04f 30ff 	mov.w	r0, #4294967295
   83fe6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   83fea:	81a3      	strh	r3, [r4, #12]
   83fec:	2300      	movs	r3, #0
   83fee:	60ab      	str	r3, [r5, #8]
   83ff0:	606b      	str	r3, [r5, #4]
   83ff2:	e01d      	b.n	84030 <__ssprint_r+0xec>
   83ff4:	6127      	str	r7, [r4, #16]
   83ff6:	ebca 030b 	rsb	r3, sl, fp
   83ffa:	4457      	add	r7, sl
   83ffc:	6027      	str	r7, [r4, #0]
   83ffe:	f8c4 b014 	str.w	fp, [r4, #20]
   84002:	4637      	mov	r7, r6
   84004:	60a3      	str	r3, [r4, #8]
   84006:	42be      	cmp	r6, r7
   84008:	d200      	bcs.n	8400c <__ssprint_r+0xc8>
   8400a:	4637      	mov	r7, r6
   8400c:	463a      	mov	r2, r7
   8400e:	6820      	ldr	r0, [r4, #0]
   84010:	9901      	ldr	r1, [sp, #4]
   84012:	f7ff f9aa 	bl	8336a <memmove>
   84016:	68a3      	ldr	r3, [r4, #8]
   84018:	1bdb      	subs	r3, r3, r7
   8401a:	60a3      	str	r3, [r4, #8]
   8401c:	6823      	ldr	r3, [r4, #0]
   8401e:	441f      	add	r7, r3
   84020:	68ab      	ldr	r3, [r5, #8]
   84022:	6027      	str	r7, [r4, #0]
   84024:	1b9e      	subs	r6, r3, r6
   84026:	60ae      	str	r6, [r5, #8]
   84028:	2e00      	cmp	r6, #0
   8402a:	d19a      	bne.n	83f62 <__ssprint_r+0x1e>
   8402c:	606e      	str	r6, [r5, #4]
   8402e:	4630      	mov	r0, r6
   84030:	b003      	add	sp, #12
   84032:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00084036 <_svfiprintf_r>:
   84036:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8403a:	461e      	mov	r6, r3
   8403c:	898b      	ldrh	r3, [r1, #12]
   8403e:	b0ad      	sub	sp, #180	; 0xb4
   84040:	4688      	mov	r8, r1
   84042:	0619      	lsls	r1, r3, #24
   84044:	4683      	mov	fp, r0
   84046:	9202      	str	r2, [sp, #8]
   84048:	d513      	bpl.n	84072 <_svfiprintf_r+0x3c>
   8404a:	f8d8 3010 	ldr.w	r3, [r8, #16]
   8404e:	b983      	cbnz	r3, 84072 <_svfiprintf_r+0x3c>
   84050:	2140      	movs	r1, #64	; 0x40
   84052:	f7fe ff6b 	bl	82f2c <_malloc_r>
   84056:	f8c8 0000 	str.w	r0, [r8]
   8405a:	f8c8 0010 	str.w	r0, [r8, #16]
   8405e:	b928      	cbnz	r0, 8406c <_svfiprintf_r+0x36>
   84060:	230c      	movs	r3, #12
   84062:	f8cb 3000 	str.w	r3, [fp]
   84066:	f04f 30ff 	mov.w	r0, #4294967295
   8406a:	e3d4      	b.n	84816 <_svfiprintf_r+0x7e0>
   8406c:	2340      	movs	r3, #64	; 0x40
   8406e:	f8c8 3014 	str.w	r3, [r8, #20]
   84072:	2300      	movs	r3, #0
   84074:	aa1c      	add	r2, sp, #112	; 0x70
   84076:	920f      	str	r2, [sp, #60]	; 0x3c
   84078:	9311      	str	r3, [sp, #68]	; 0x44
   8407a:	9310      	str	r3, [sp, #64]	; 0x40
   8407c:	4694      	mov	ip, r2
   8407e:	930a      	str	r3, [sp, #40]	; 0x28
   84080:	9305      	str	r3, [sp, #20]
   84082:	9b02      	ldr	r3, [sp, #8]
   84084:	461c      	mov	r4, r3
   84086:	f813 2b01 	ldrb.w	r2, [r3], #1
   8408a:	b91a      	cbnz	r2, 84094 <_svfiprintf_r+0x5e>
   8408c:	9802      	ldr	r0, [sp, #8]
   8408e:	1a25      	subs	r5, r4, r0
   84090:	d103      	bne.n	8409a <_svfiprintf_r+0x64>
   84092:	e01d      	b.n	840d0 <_svfiprintf_r+0x9a>
   84094:	2a25      	cmp	r2, #37	; 0x25
   84096:	d1f5      	bne.n	84084 <_svfiprintf_r+0x4e>
   84098:	e7f8      	b.n	8408c <_svfiprintf_r+0x56>
   8409a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8409c:	9902      	ldr	r1, [sp, #8]
   8409e:	442b      	add	r3, r5
   840a0:	9311      	str	r3, [sp, #68]	; 0x44
   840a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   840a4:	e88c 0022 	stmia.w	ip, {r1, r5}
   840a8:	3301      	adds	r3, #1
   840aa:	2b07      	cmp	r3, #7
   840ac:	9310      	str	r3, [sp, #64]	; 0x40
   840ae:	dc02      	bgt.n	840b6 <_svfiprintf_r+0x80>
   840b0:	f10c 0c08 	add.w	ip, ip, #8
   840b4:	e009      	b.n	840ca <_svfiprintf_r+0x94>
   840b6:	4658      	mov	r0, fp
   840b8:	4641      	mov	r1, r8
   840ba:	aa0f      	add	r2, sp, #60	; 0x3c
   840bc:	f7ff ff42 	bl	83f44 <__ssprint_r>
   840c0:	2800      	cmp	r0, #0
   840c2:	f040 83a0 	bne.w	84806 <_svfiprintf_r+0x7d0>
   840c6:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   840ca:	9a05      	ldr	r2, [sp, #20]
   840cc:	442a      	add	r2, r5
   840ce:	9205      	str	r2, [sp, #20]
   840d0:	7823      	ldrb	r3, [r4, #0]
   840d2:	2b00      	cmp	r3, #0
   840d4:	f000 8390 	beq.w	847f8 <_svfiprintf_r+0x7c2>
   840d8:	2200      	movs	r2, #0
   840da:	3401      	adds	r4, #1
   840dc:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   840e0:	f04f 3aff 	mov.w	sl, #4294967295
   840e4:	9204      	str	r2, [sp, #16]
   840e6:	4617      	mov	r7, r2
   840e8:	1c65      	adds	r5, r4, #1
   840ea:	7823      	ldrb	r3, [r4, #0]
   840ec:	9502      	str	r5, [sp, #8]
   840ee:	2b58      	cmp	r3, #88	; 0x58
   840f0:	d064      	beq.n	841bc <_svfiprintf_r+0x186>
   840f2:	dc2d      	bgt.n	84150 <_svfiprintf_r+0x11a>
   840f4:	2b2e      	cmp	r3, #46	; 0x2e
   840f6:	d076      	beq.n	841e6 <_svfiprintf_r+0x1b0>
   840f8:	dc12      	bgt.n	84120 <_svfiprintf_r+0xea>
   840fa:	2b2a      	cmp	r3, #42	; 0x2a
   840fc:	d066      	beq.n	841cc <_svfiprintf_r+0x196>
   840fe:	dc08      	bgt.n	84112 <_svfiprintf_r+0xdc>
   84100:	2b20      	cmp	r3, #32
   84102:	d05f      	beq.n	841c4 <_svfiprintf_r+0x18e>
   84104:	2b23      	cmp	r3, #35	; 0x23
   84106:	f040 8201 	bne.w	8450c <_svfiprintf_r+0x4d6>
   8410a:	f047 0701 	orr.w	r7, r7, #1
   8410e:	9c02      	ldr	r4, [sp, #8]
   84110:	e7ea      	b.n	840e8 <_svfiprintf_r+0xb2>
   84112:	2b2b      	cmp	r3, #43	; 0x2b
   84114:	d101      	bne.n	8411a <_svfiprintf_r+0xe4>
   84116:	461a      	mov	r2, r3
   84118:	e7f9      	b.n	8410e <_svfiprintf_r+0xd8>
   8411a:	2b2d      	cmp	r3, #45	; 0x2d
   8411c:	d060      	beq.n	841e0 <_svfiprintf_r+0x1aa>
   8411e:	e1f5      	b.n	8450c <_svfiprintf_r+0x4d6>
   84120:	2b39      	cmp	r3, #57	; 0x39
   84122:	dc07      	bgt.n	84134 <_svfiprintf_r+0xfe>
   84124:	2b31      	cmp	r3, #49	; 0x31
   84126:	da7f      	bge.n	84228 <_svfiprintf_r+0x1f2>
   84128:	2b30      	cmp	r3, #48	; 0x30
   8412a:	f040 81ef 	bne.w	8450c <_svfiprintf_r+0x4d6>
   8412e:	f047 0780 	orr.w	r7, r7, #128	; 0x80
   84132:	e7ec      	b.n	8410e <_svfiprintf_r+0xd8>
   84134:	2b4f      	cmp	r3, #79	; 0x4f
   84136:	f000 80e0 	beq.w	842fa <_svfiprintf_r+0x2c4>
   8413a:	2b55      	cmp	r3, #85	; 0x55
   8413c:	f000 8120 	beq.w	84380 <_svfiprintf_r+0x34a>
   84140:	2b44      	cmp	r3, #68	; 0x44
   84142:	f040 81e3 	bne.w	8450c <_svfiprintf_r+0x4d6>
   84146:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   8414a:	f047 0710 	orr.w	r7, r7, #16
   8414e:	e094      	b.n	8427a <_svfiprintf_r+0x244>
   84150:	2b6e      	cmp	r3, #110	; 0x6e
   84152:	f000 80b6 	beq.w	842c2 <_svfiprintf_r+0x28c>
   84156:	dc0d      	bgt.n	84174 <_svfiprintf_r+0x13e>
   84158:	2b68      	cmp	r3, #104	; 0x68
   8415a:	d076      	beq.n	8424a <_svfiprintf_r+0x214>
   8415c:	dc05      	bgt.n	8416a <_svfiprintf_r+0x134>
   8415e:	2b63      	cmp	r3, #99	; 0x63
   84160:	f000 8083 	beq.w	8426a <_svfiprintf_r+0x234>
   84164:	2b64      	cmp	r3, #100	; 0x64
   84166:	d026      	beq.n	841b6 <_svfiprintf_r+0x180>
   84168:	e1d0      	b.n	8450c <_svfiprintf_r+0x4d6>
   8416a:	2b69      	cmp	r3, #105	; 0x69
   8416c:	d023      	beq.n	841b6 <_svfiprintf_r+0x180>
   8416e:	2b6c      	cmp	r3, #108	; 0x6c
   84170:	d06e      	beq.n	84250 <_svfiprintf_r+0x21a>
   84172:	e1cb      	b.n	8450c <_svfiprintf_r+0x4d6>
   84174:	2b71      	cmp	r3, #113	; 0x71
   84176:	d075      	beq.n	84264 <_svfiprintf_r+0x22e>
   84178:	dc13      	bgt.n	841a2 <_svfiprintf_r+0x16c>
   8417a:	2b6f      	cmp	r3, #111	; 0x6f
   8417c:	f000 80bf 	beq.w	842fe <_svfiprintf_r+0x2c8>
   84180:	2b70      	cmp	r3, #112	; 0x70
   84182:	f040 81c3 	bne.w	8450c <_svfiprintf_r+0x4d6>
   84186:	2330      	movs	r3, #48	; 0x30
   84188:	48a0      	ldr	r0, [pc, #640]	; (8440c <_svfiprintf_r+0x3d6>)
   8418a:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
   8418e:	2378      	movs	r3, #120	; 0x78
   84190:	6834      	ldr	r4, [r6, #0]
   84192:	2500      	movs	r5, #0
   84194:	f047 0702 	orr.w	r7, r7, #2
   84198:	f88d 3039 	strb.w	r3, [sp, #57]	; 0x39
   8419c:	3604      	adds	r6, #4
   8419e:	900a      	str	r0, [sp, #40]	; 0x28
   841a0:	e12e      	b.n	84400 <_svfiprintf_r+0x3ca>
   841a2:	2b75      	cmp	r3, #117	; 0x75
   841a4:	f000 80ee 	beq.w	84384 <_svfiprintf_r+0x34e>
   841a8:	2b78      	cmp	r3, #120	; 0x78
   841aa:	f000 8103 	beq.w	843b4 <_svfiprintf_r+0x37e>
   841ae:	2b73      	cmp	r3, #115	; 0x73
   841b0:	f040 81ac 	bne.w	8450c <_svfiprintf_r+0x4d6>
   841b4:	e0bf      	b.n	84336 <_svfiprintf_r+0x300>
   841b6:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   841ba:	e05e      	b.n	8427a <_svfiprintf_r+0x244>
   841bc:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   841c0:	4c93      	ldr	r4, [pc, #588]	; (84410 <_svfiprintf_r+0x3da>)
   841c2:	e0fa      	b.n	843ba <_svfiprintf_r+0x384>
   841c4:	2a00      	cmp	r2, #0
   841c6:	bf08      	it	eq
   841c8:	2220      	moveq	r2, #32
   841ca:	e7a0      	b.n	8410e <_svfiprintf_r+0xd8>
   841cc:	1d33      	adds	r3, r6, #4
   841ce:	6836      	ldr	r6, [r6, #0]
   841d0:	2e00      	cmp	r6, #0
   841d2:	9604      	str	r6, [sp, #16]
   841d4:	db01      	blt.n	841da <_svfiprintf_r+0x1a4>
   841d6:	461e      	mov	r6, r3
   841d8:	e799      	b.n	8410e <_svfiprintf_r+0xd8>
   841da:	4275      	negs	r5, r6
   841dc:	9504      	str	r5, [sp, #16]
   841de:	461e      	mov	r6, r3
   841e0:	f047 0704 	orr.w	r7, r7, #4
   841e4:	e793      	b.n	8410e <_svfiprintf_r+0xd8>
   841e6:	9c02      	ldr	r4, [sp, #8]
   841e8:	7823      	ldrb	r3, [r4, #0]
   841ea:	1c61      	adds	r1, r4, #1
   841ec:	2b2a      	cmp	r3, #42	; 0x2a
   841ee:	d002      	beq.n	841f6 <_svfiprintf_r+0x1c0>
   841f0:	f04f 0a00 	mov.w	sl, #0
   841f4:	e00a      	b.n	8420c <_svfiprintf_r+0x1d6>
   841f6:	f8d6 a000 	ldr.w	sl, [r6]
   841fa:	1d33      	adds	r3, r6, #4
   841fc:	f1ba 0f00 	cmp.w	sl, #0
   84200:	461e      	mov	r6, r3
   84202:	9102      	str	r1, [sp, #8]
   84204:	da83      	bge.n	8410e <_svfiprintf_r+0xd8>
   84206:	f04f 3aff 	mov.w	sl, #4294967295
   8420a:	e780      	b.n	8410e <_svfiprintf_r+0xd8>
   8420c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   84210:	2809      	cmp	r0, #9
   84212:	d805      	bhi.n	84220 <_svfiprintf_r+0x1ea>
   84214:	230a      	movs	r3, #10
   84216:	fb03 0a0a 	mla	sl, r3, sl, r0
   8421a:	f811 3b01 	ldrb.w	r3, [r1], #1
   8421e:	e7f5      	b.n	8420c <_svfiprintf_r+0x1d6>
   84220:	ea4a 7aea 	orr.w	sl, sl, sl, asr #31
   84224:	9102      	str	r1, [sp, #8]
   84226:	e762      	b.n	840ee <_svfiprintf_r+0xb8>
   84228:	2500      	movs	r5, #0
   8422a:	9504      	str	r5, [sp, #16]
   8422c:	9c04      	ldr	r4, [sp, #16]
   8422e:	3b30      	subs	r3, #48	; 0x30
   84230:	210a      	movs	r1, #10
   84232:	fb01 3404 	mla	r4, r1, r4, r3
   84236:	9902      	ldr	r1, [sp, #8]
   84238:	9404      	str	r4, [sp, #16]
   8423a:	f811 3b01 	ldrb.w	r3, [r1], #1
   8423e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   84242:	2809      	cmp	r0, #9
   84244:	d8ee      	bhi.n	84224 <_svfiprintf_r+0x1ee>
   84246:	9102      	str	r1, [sp, #8]
   84248:	e7f0      	b.n	8422c <_svfiprintf_r+0x1f6>
   8424a:	f047 0740 	orr.w	r7, r7, #64	; 0x40
   8424e:	e75e      	b.n	8410e <_svfiprintf_r+0xd8>
   84250:	9d02      	ldr	r5, [sp, #8]
   84252:	782b      	ldrb	r3, [r5, #0]
   84254:	2b6c      	cmp	r3, #108	; 0x6c
   84256:	d102      	bne.n	8425e <_svfiprintf_r+0x228>
   84258:	3501      	adds	r5, #1
   8425a:	9502      	str	r5, [sp, #8]
   8425c:	e002      	b.n	84264 <_svfiprintf_r+0x22e>
   8425e:	f047 0710 	orr.w	r7, r7, #16
   84262:	e754      	b.n	8410e <_svfiprintf_r+0xd8>
   84264:	f047 0720 	orr.w	r7, r7, #32
   84268:	e751      	b.n	8410e <_svfiprintf_r+0xd8>
   8426a:	6833      	ldr	r3, [r6, #0]
   8426c:	2500      	movs	r5, #0
   8426e:	f88d 3048 	strb.w	r3, [sp, #72]	; 0x48
   84272:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
   84276:	3604      	adds	r6, #4
   84278:	e152      	b.n	84520 <_svfiprintf_r+0x4ea>
   8427a:	06ba      	lsls	r2, r7, #26
   8427c:	d507      	bpl.n	8428e <_svfiprintf_r+0x258>
   8427e:	3607      	adds	r6, #7
   84280:	f026 0307 	bic.w	r3, r6, #7
   84284:	f103 0608 	add.w	r6, r3, #8
   84288:	e9d3 4500 	ldrd	r4, r5, [r3]
   8428c:	e00d      	b.n	842aa <_svfiprintf_r+0x274>
   8428e:	f017 0f10 	tst.w	r7, #16
   84292:	f106 0304 	add.w	r3, r6, #4
   84296:	d001      	beq.n	8429c <_svfiprintf_r+0x266>
   84298:	6834      	ldr	r4, [r6, #0]
   8429a:	e004      	b.n	842a6 <_svfiprintf_r+0x270>
   8429c:	6834      	ldr	r4, [r6, #0]
   8429e:	f017 0f40 	tst.w	r7, #64	; 0x40
   842a2:	bf18      	it	ne
   842a4:	b224      	sxthne	r4, r4
   842a6:	17e5      	asrs	r5, r4, #31
   842a8:	461e      	mov	r6, r3
   842aa:	2c00      	cmp	r4, #0
   842ac:	f175 0000 	sbcs.w	r0, r5, #0
   842b0:	f280 80b0 	bge.w	84414 <_svfiprintf_r+0x3de>
   842b4:	232d      	movs	r3, #45	; 0x2d
   842b6:	4264      	negs	r4, r4
   842b8:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   842bc:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   842c0:	e0a8      	b.n	84414 <_svfiprintf_r+0x3de>
   842c2:	f017 0f20 	tst.w	r7, #32
   842c6:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   842ca:	f106 0104 	add.w	r1, r6, #4
   842ce:	d007      	beq.n	842e0 <_svfiprintf_r+0x2aa>
   842d0:	9c05      	ldr	r4, [sp, #20]
   842d2:	6830      	ldr	r0, [r6, #0]
   842d4:	17e5      	asrs	r5, r4, #31
   842d6:	4622      	mov	r2, r4
   842d8:	462b      	mov	r3, r5
   842da:	e9c0 2300 	strd	r2, r3, [r0]
   842de:	e00a      	b.n	842f6 <_svfiprintf_r+0x2c0>
   842e0:	06fb      	lsls	r3, r7, #27
   842e2:	d405      	bmi.n	842f0 <_svfiprintf_r+0x2ba>
   842e4:	067f      	lsls	r7, r7, #25
   842e6:	d503      	bpl.n	842f0 <_svfiprintf_r+0x2ba>
   842e8:	6833      	ldr	r3, [r6, #0]
   842ea:	9c05      	ldr	r4, [sp, #20]
   842ec:	801c      	strh	r4, [r3, #0]
   842ee:	e002      	b.n	842f6 <_svfiprintf_r+0x2c0>
   842f0:	6833      	ldr	r3, [r6, #0]
   842f2:	9d05      	ldr	r5, [sp, #20]
   842f4:	601d      	str	r5, [r3, #0]
   842f6:	460e      	mov	r6, r1
   842f8:	e6c3      	b.n	84082 <_svfiprintf_r+0x4c>
   842fa:	f047 0710 	orr.w	r7, r7, #16
   842fe:	f017 0320 	ands.w	r3, r7, #32
   84302:	d008      	beq.n	84316 <_svfiprintf_r+0x2e0>
   84304:	3607      	adds	r6, #7
   84306:	f026 0307 	bic.w	r3, r6, #7
   8430a:	f103 0608 	add.w	r6, r3, #8
   8430e:	e9d3 4500 	ldrd	r4, r5, [r3]
   84312:	2300      	movs	r3, #0
   84314:	e075      	b.n	84402 <_svfiprintf_r+0x3cc>
   84316:	f017 0110 	ands.w	r1, r7, #16
   8431a:	f106 0204 	add.w	r2, r6, #4
   8431e:	d106      	bne.n	8432e <_svfiprintf_r+0x2f8>
   84320:	f017 0340 	ands.w	r3, r7, #64	; 0x40
   84324:	d003      	beq.n	8432e <_svfiprintf_r+0x2f8>
   84326:	8834      	ldrh	r4, [r6, #0]
   84328:	2500      	movs	r5, #0
   8432a:	4616      	mov	r6, r2
   8432c:	e7f1      	b.n	84312 <_svfiprintf_r+0x2dc>
   8432e:	6834      	ldr	r4, [r6, #0]
   84330:	2500      	movs	r5, #0
   84332:	4616      	mov	r6, r2
   84334:	e065      	b.n	84402 <_svfiprintf_r+0x3cc>
   84336:	f8d6 9000 	ldr.w	r9, [r6]
   8433a:	2300      	movs	r3, #0
   8433c:	459a      	cmp	sl, r3
   8433e:	f106 0604 	add.w	r6, r6, #4
   84342:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   84346:	4648      	mov	r0, r9
   84348:	db11      	blt.n	8436e <_svfiprintf_r+0x338>
   8434a:	4619      	mov	r1, r3
   8434c:	4652      	mov	r2, sl
   8434e:	f8cd c004 	str.w	ip, [sp, #4]
   84352:	f7fe fff3 	bl	8333c <memchr>
   84356:	f8dd c004 	ldr.w	ip, [sp, #4]
   8435a:	2800      	cmp	r0, #0
   8435c:	f000 80e5 	beq.w	8452a <_svfiprintf_r+0x4f4>
   84360:	ebc9 0000 	rsb	r0, r9, r0
   84364:	4550      	cmp	r0, sl
   84366:	bfb8      	it	lt
   84368:	4682      	movlt	sl, r0
   8436a:	2500      	movs	r5, #0
   8436c:	e0de      	b.n	8452c <_svfiprintf_r+0x4f6>
   8436e:	f8cd c004 	str.w	ip, [sp, #4]
   84372:	f7fc fe8d 	bl	81090 <strlen>
   84376:	2500      	movs	r5, #0
   84378:	4682      	mov	sl, r0
   8437a:	f8dd c004 	ldr.w	ip, [sp, #4]
   8437e:	e0d5      	b.n	8452c <_svfiprintf_r+0x4f6>
   84380:	f047 0710 	orr.w	r7, r7, #16
   84384:	06bd      	lsls	r5, r7, #26
   84386:	d507      	bpl.n	84398 <_svfiprintf_r+0x362>
   84388:	3607      	adds	r6, #7
   8438a:	f026 0307 	bic.w	r3, r6, #7
   8438e:	f103 0608 	add.w	r6, r3, #8
   84392:	e9d3 4500 	ldrd	r4, r5, [r3]
   84396:	e00b      	b.n	843b0 <_svfiprintf_r+0x37a>
   84398:	f017 0f10 	tst.w	r7, #16
   8439c:	f106 0304 	add.w	r3, r6, #4
   843a0:	d103      	bne.n	843aa <_svfiprintf_r+0x374>
   843a2:	067c      	lsls	r4, r7, #25
   843a4:	d501      	bpl.n	843aa <_svfiprintf_r+0x374>
   843a6:	8834      	ldrh	r4, [r6, #0]
   843a8:	e000      	b.n	843ac <_svfiprintf_r+0x376>
   843aa:	6834      	ldr	r4, [r6, #0]
   843ac:	2500      	movs	r5, #0
   843ae:	461e      	mov	r6, r3
   843b0:	2301      	movs	r3, #1
   843b2:	e026      	b.n	84402 <_svfiprintf_r+0x3cc>
   843b4:	4c15      	ldr	r4, [pc, #84]	; (8440c <_svfiprintf_r+0x3d6>)
   843b6:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   843ba:	06b8      	lsls	r0, r7, #26
   843bc:	940a      	str	r4, [sp, #40]	; 0x28
   843be:	d507      	bpl.n	843d0 <_svfiprintf_r+0x39a>
   843c0:	3607      	adds	r6, #7
   843c2:	f026 0207 	bic.w	r2, r6, #7
   843c6:	f102 0608 	add.w	r6, r2, #8
   843ca:	e9d2 4500 	ldrd	r4, r5, [r2]
   843ce:	e00b      	b.n	843e8 <_svfiprintf_r+0x3b2>
   843d0:	f017 0f10 	tst.w	r7, #16
   843d4:	f106 0204 	add.w	r2, r6, #4
   843d8:	d103      	bne.n	843e2 <_svfiprintf_r+0x3ac>
   843da:	0679      	lsls	r1, r7, #25
   843dc:	d501      	bpl.n	843e2 <_svfiprintf_r+0x3ac>
   843de:	8834      	ldrh	r4, [r6, #0]
   843e0:	e000      	b.n	843e4 <_svfiprintf_r+0x3ae>
   843e2:	6834      	ldr	r4, [r6, #0]
   843e4:	2500      	movs	r5, #0
   843e6:	4616      	mov	r6, r2
   843e8:	07fa      	lsls	r2, r7, #31
   843ea:	d509      	bpl.n	84400 <_svfiprintf_r+0x3ca>
   843ec:	ea54 0005 	orrs.w	r0, r4, r5
   843f0:	d006      	beq.n	84400 <_svfiprintf_r+0x3ca>
   843f2:	2230      	movs	r2, #48	; 0x30
   843f4:	f88d 2038 	strb.w	r2, [sp, #56]	; 0x38
   843f8:	f88d 3039 	strb.w	r3, [sp, #57]	; 0x39
   843fc:	f047 0702 	orr.w	r7, r7, #2
   84400:	2302      	movs	r3, #2
   84402:	2200      	movs	r2, #0
   84404:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   84408:	e005      	b.n	84416 <_svfiprintf_r+0x3e0>
   8440a:	bf00      	nop
   8440c:	00085837 	.word	0x00085837
   84410:	00085826 	.word	0x00085826
   84414:	2301      	movs	r3, #1
   84416:	f1ba 0f00 	cmp.w	sl, #0
   8441a:	bfa8      	it	ge
   8441c:	f027 0780 	bicge.w	r7, r7, #128	; 0x80
   84420:	ea54 0105 	orrs.w	r1, r4, r5
   84424:	d102      	bne.n	8442c <_svfiprintf_r+0x3f6>
   84426:	f1ba 0f00 	cmp.w	sl, #0
   8442a:	d05e      	beq.n	844ea <_svfiprintf_r+0x4b4>
   8442c:	2b01      	cmp	r3, #1
   8442e:	d01f      	beq.n	84470 <_svfiprintf_r+0x43a>
   84430:	2b02      	cmp	r3, #2
   84432:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
   84436:	d045      	beq.n	844c4 <_svfiprintf_r+0x48e>
   84438:	08e0      	lsrs	r0, r4, #3
   8443a:	ea40 7145 	orr.w	r1, r0, r5, lsl #29
   8443e:	08e8      	lsrs	r0, r5, #3
   84440:	f004 0207 	and.w	r2, r4, #7
   84444:	9106      	str	r1, [sp, #24]
   84446:	9007      	str	r0, [sp, #28]
   84448:	3230      	adds	r2, #48	; 0x30
   8444a:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
   8444e:	ea54 0105 	orrs.w	r1, r4, r5
   84452:	4699      	mov	r9, r3
   84454:	701a      	strb	r2, [r3, #0]
   84456:	f103 33ff 	add.w	r3, r3, #4294967295
   8445a:	d1ed      	bne.n	84438 <_svfiprintf_r+0x402>
   8445c:	07f8      	lsls	r0, r7, #31
   8445e:	4649      	mov	r1, r9
   84460:	d54e      	bpl.n	84500 <_svfiprintf_r+0x4ca>
   84462:	2a30      	cmp	r2, #48	; 0x30
   84464:	d04c      	beq.n	84500 <_svfiprintf_r+0x4ca>
   84466:	4699      	mov	r9, r3
   84468:	2330      	movs	r3, #48	; 0x30
   8446a:	f801 3c01 	strb.w	r3, [r1, #-1]
   8446e:	e047      	b.n	84500 <_svfiprintf_r+0x4ca>
   84470:	2d00      	cmp	r5, #0
   84472:	bf08      	it	eq
   84474:	2c0a      	cmpeq	r4, #10
   84476:	d205      	bcs.n	84484 <_svfiprintf_r+0x44e>
   84478:	3430      	adds	r4, #48	; 0x30
   8447a:	f88d 406f 	strb.w	r4, [sp, #111]	; 0x6f
   8447e:	f10d 096f 	add.w	r9, sp, #111	; 0x6f
   84482:	e03d      	b.n	84500 <_svfiprintf_r+0x4ca>
   84484:	f10d 026f 	add.w	r2, sp, #111	; 0x6f
   84488:	9203      	str	r2, [sp, #12]
   8448a:	4620      	mov	r0, r4
   8448c:	4629      	mov	r1, r5
   8448e:	220a      	movs	r2, #10
   84490:	2300      	movs	r3, #0
   84492:	f8cd c004 	str.w	ip, [sp, #4]
   84496:	f000 feb5 	bl	85204 <__aeabi_uldivmod>
   8449a:	9b03      	ldr	r3, [sp, #12]
   8449c:	3230      	adds	r2, #48	; 0x30
   8449e:	f803 2901 	strb.w	r2, [r3], #-1
   844a2:	4620      	mov	r0, r4
   844a4:	4629      	mov	r1, r5
   844a6:	f8dd 900c 	ldr.w	r9, [sp, #12]
   844aa:	220a      	movs	r2, #10
   844ac:	9303      	str	r3, [sp, #12]
   844ae:	2300      	movs	r3, #0
   844b0:	f000 fea8 	bl	85204 <__aeabi_uldivmod>
   844b4:	4604      	mov	r4, r0
   844b6:	460d      	mov	r5, r1
   844b8:	ea54 0005 	orrs.w	r0, r4, r5
   844bc:	f8dd c004 	ldr.w	ip, [sp, #4]
   844c0:	d1e3      	bne.n	8448a <_svfiprintf_r+0x454>
   844c2:	e01d      	b.n	84500 <_svfiprintf_r+0x4ca>
   844c4:	990a      	ldr	r1, [sp, #40]	; 0x28
   844c6:	f004 020f 	and.w	r2, r4, #15
   844ca:	5c8a      	ldrb	r2, [r1, r2]
   844cc:	4699      	mov	r9, r3
   844ce:	f803 2901 	strb.w	r2, [r3], #-1
   844d2:	0922      	lsrs	r2, r4, #4
   844d4:	ea42 7005 	orr.w	r0, r2, r5, lsl #28
   844d8:	0929      	lsrs	r1, r5, #4
   844da:	9008      	str	r0, [sp, #32]
   844dc:	9109      	str	r1, [sp, #36]	; 0x24
   844de:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
   844e2:	ea54 0205 	orrs.w	r2, r4, r5
   844e6:	d1ed      	bne.n	844c4 <_svfiprintf_r+0x48e>
   844e8:	e00a      	b.n	84500 <_svfiprintf_r+0x4ca>
   844ea:	b93b      	cbnz	r3, 844fc <_svfiprintf_r+0x4c6>
   844ec:	07f9      	lsls	r1, r7, #31
   844ee:	d505      	bpl.n	844fc <_svfiprintf_r+0x4c6>
   844f0:	f10d 09b0 	add.w	r9, sp, #176	; 0xb0
   844f4:	2330      	movs	r3, #48	; 0x30
   844f6:	f809 3d41 	strb.w	r3, [r9, #-65]!
   844fa:	e001      	b.n	84500 <_svfiprintf_r+0x4ca>
   844fc:	f10d 0970 	add.w	r9, sp, #112	; 0x70
   84500:	4655      	mov	r5, sl
   84502:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
   84506:	ebc9 0a0a 	rsb	sl, r9, sl
   8450a:	e00f      	b.n	8452c <_svfiprintf_r+0x4f6>
   8450c:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   84510:	2b00      	cmp	r3, #0
   84512:	f000 8171 	beq.w	847f8 <_svfiprintf_r+0x7c2>
   84516:	2500      	movs	r5, #0
   84518:	f88d 3048 	strb.w	r3, [sp, #72]	; 0x48
   8451c:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
   84520:	f04f 0a01 	mov.w	sl, #1
   84524:	f10d 0948 	add.w	r9, sp, #72	; 0x48
   84528:	e000      	b.n	8452c <_svfiprintf_r+0x4f6>
   8452a:	4605      	mov	r5, r0
   8452c:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
   84530:	45aa      	cmp	sl, r5
   84532:	bfac      	ite	ge
   84534:	4654      	movge	r4, sl
   84536:	462c      	movlt	r4, r5
   84538:	b103      	cbz	r3, 8453c <_svfiprintf_r+0x506>
   8453a:	3401      	adds	r4, #1
   8453c:	f017 0302 	ands.w	r3, r7, #2
   84540:	9303      	str	r3, [sp, #12]
   84542:	bf18      	it	ne
   84544:	3402      	addne	r4, #2
   84546:	f017 0384 	ands.w	r3, r7, #132	; 0x84
   8454a:	930b      	str	r3, [sp, #44]	; 0x2c
   8454c:	d13b      	bne.n	845c6 <_svfiprintf_r+0x590>
   8454e:	9804      	ldr	r0, [sp, #16]
   84550:	1b03      	subs	r3, r0, r4
   84552:	2b00      	cmp	r3, #0
   84554:	dd37      	ble.n	845c6 <_svfiprintf_r+0x590>
   84556:	4aa6      	ldr	r2, [pc, #664]	; (847f0 <_svfiprintf_r+0x7ba>)
   84558:	2b10      	cmp	r3, #16
   8455a:	f8cc 2000 	str.w	r2, [ip]
   8455e:	dd1b      	ble.n	84598 <_svfiprintf_r+0x562>
   84560:	2210      	movs	r2, #16
   84562:	f8cc 2004 	str.w	r2, [ip, #4]
   84566:	9a11      	ldr	r2, [sp, #68]	; 0x44
   84568:	3210      	adds	r2, #16
   8456a:	9211      	str	r2, [sp, #68]	; 0x44
   8456c:	9a10      	ldr	r2, [sp, #64]	; 0x40
   8456e:	3201      	adds	r2, #1
   84570:	2a07      	cmp	r2, #7
   84572:	9210      	str	r2, [sp, #64]	; 0x40
   84574:	dc02      	bgt.n	8457c <_svfiprintf_r+0x546>
   84576:	f10c 0c08 	add.w	ip, ip, #8
   8457a:	e00b      	b.n	84594 <_svfiprintf_r+0x55e>
   8457c:	4658      	mov	r0, fp
   8457e:	4641      	mov	r1, r8
   84580:	aa0f      	add	r2, sp, #60	; 0x3c
   84582:	9301      	str	r3, [sp, #4]
   84584:	f7ff fcde 	bl	83f44 <__ssprint_r>
   84588:	9b01      	ldr	r3, [sp, #4]
   8458a:	2800      	cmp	r0, #0
   8458c:	f040 813b 	bne.w	84806 <_svfiprintf_r+0x7d0>
   84590:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   84594:	3b10      	subs	r3, #16
   84596:	e7de      	b.n	84556 <_svfiprintf_r+0x520>
   84598:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8459a:	f8cc 3004 	str.w	r3, [ip, #4]
   8459e:	4413      	add	r3, r2
   845a0:	9311      	str	r3, [sp, #68]	; 0x44
   845a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   845a4:	3301      	adds	r3, #1
   845a6:	2b07      	cmp	r3, #7
   845a8:	9310      	str	r3, [sp, #64]	; 0x40
   845aa:	dc02      	bgt.n	845b2 <_svfiprintf_r+0x57c>
   845ac:	f10c 0c08 	add.w	ip, ip, #8
   845b0:	e009      	b.n	845c6 <_svfiprintf_r+0x590>
   845b2:	4658      	mov	r0, fp
   845b4:	4641      	mov	r1, r8
   845b6:	aa0f      	add	r2, sp, #60	; 0x3c
   845b8:	f7ff fcc4 	bl	83f44 <__ssprint_r>
   845bc:	2800      	cmp	r0, #0
   845be:	f040 8122 	bne.w	84806 <_svfiprintf_r+0x7d0>
   845c2:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   845c6:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
   845ca:	b1db      	cbz	r3, 84604 <_svfiprintf_r+0x5ce>
   845cc:	f10d 0337 	add.w	r3, sp, #55	; 0x37
   845d0:	f8cc 3000 	str.w	r3, [ip]
   845d4:	2301      	movs	r3, #1
   845d6:	f8cc 3004 	str.w	r3, [ip, #4]
   845da:	9b11      	ldr	r3, [sp, #68]	; 0x44
   845dc:	3301      	adds	r3, #1
   845de:	9311      	str	r3, [sp, #68]	; 0x44
   845e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
   845e2:	3301      	adds	r3, #1
   845e4:	2b07      	cmp	r3, #7
   845e6:	9310      	str	r3, [sp, #64]	; 0x40
   845e8:	dc02      	bgt.n	845f0 <_svfiprintf_r+0x5ba>
   845ea:	f10c 0c08 	add.w	ip, ip, #8
   845ee:	e009      	b.n	84604 <_svfiprintf_r+0x5ce>
   845f0:	4658      	mov	r0, fp
   845f2:	4641      	mov	r1, r8
   845f4:	aa0f      	add	r2, sp, #60	; 0x3c
   845f6:	f7ff fca5 	bl	83f44 <__ssprint_r>
   845fa:	2800      	cmp	r0, #0
   845fc:	f040 8103 	bne.w	84806 <_svfiprintf_r+0x7d0>
   84600:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   84604:	9b03      	ldr	r3, [sp, #12]
   84606:	b1d3      	cbz	r3, 8463e <_svfiprintf_r+0x608>
   84608:	ab0e      	add	r3, sp, #56	; 0x38
   8460a:	f8cc 3000 	str.w	r3, [ip]
   8460e:	2302      	movs	r3, #2
   84610:	f8cc 3004 	str.w	r3, [ip, #4]
   84614:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84616:	3302      	adds	r3, #2
   84618:	9311      	str	r3, [sp, #68]	; 0x44
   8461a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8461c:	3301      	adds	r3, #1
   8461e:	2b07      	cmp	r3, #7
   84620:	9310      	str	r3, [sp, #64]	; 0x40
   84622:	dc02      	bgt.n	8462a <_svfiprintf_r+0x5f4>
   84624:	f10c 0c08 	add.w	ip, ip, #8
   84628:	e009      	b.n	8463e <_svfiprintf_r+0x608>
   8462a:	4658      	mov	r0, fp
   8462c:	4641      	mov	r1, r8
   8462e:	aa0f      	add	r2, sp, #60	; 0x3c
   84630:	f7ff fc88 	bl	83f44 <__ssprint_r>
   84634:	2800      	cmp	r0, #0
   84636:	f040 80e6 	bne.w	84806 <_svfiprintf_r+0x7d0>
   8463a:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   8463e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84640:	2b80      	cmp	r3, #128	; 0x80
   84642:	d13f      	bne.n	846c4 <_svfiprintf_r+0x68e>
   84644:	9b04      	ldr	r3, [sp, #16]
   84646:	1b1b      	subs	r3, r3, r4
   84648:	2b00      	cmp	r3, #0
   8464a:	9303      	str	r3, [sp, #12]
   8464c:	dd3a      	ble.n	846c4 <_svfiprintf_r+0x68e>
   8464e:	9b03      	ldr	r3, [sp, #12]
   84650:	2b10      	cmp	r3, #16
   84652:	4b68      	ldr	r3, [pc, #416]	; (847f4 <_svfiprintf_r+0x7be>)
   84654:	f8cc 3000 	str.w	r3, [ip]
   84658:	dd1b      	ble.n	84692 <_svfiprintf_r+0x65c>
   8465a:	2310      	movs	r3, #16
   8465c:	f8cc 3004 	str.w	r3, [ip, #4]
   84660:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84662:	3310      	adds	r3, #16
   84664:	9311      	str	r3, [sp, #68]	; 0x44
   84666:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84668:	3301      	adds	r3, #1
   8466a:	2b07      	cmp	r3, #7
   8466c:	9310      	str	r3, [sp, #64]	; 0x40
   8466e:	dc02      	bgt.n	84676 <_svfiprintf_r+0x640>
   84670:	f10c 0c08 	add.w	ip, ip, #8
   84674:	e009      	b.n	8468a <_svfiprintf_r+0x654>
   84676:	4658      	mov	r0, fp
   84678:	4641      	mov	r1, r8
   8467a:	aa0f      	add	r2, sp, #60	; 0x3c
   8467c:	f7ff fc62 	bl	83f44 <__ssprint_r>
   84680:	2800      	cmp	r0, #0
   84682:	f040 80c0 	bne.w	84806 <_svfiprintf_r+0x7d0>
   84686:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   8468a:	9b03      	ldr	r3, [sp, #12]
   8468c:	3b10      	subs	r3, #16
   8468e:	9303      	str	r3, [sp, #12]
   84690:	e7dd      	b.n	8464e <_svfiprintf_r+0x618>
   84692:	9b03      	ldr	r3, [sp, #12]
   84694:	9803      	ldr	r0, [sp, #12]
   84696:	f8cc 3004 	str.w	r3, [ip, #4]
   8469a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8469c:	4403      	add	r3, r0
   8469e:	9311      	str	r3, [sp, #68]	; 0x44
   846a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
   846a2:	3301      	adds	r3, #1
   846a4:	2b07      	cmp	r3, #7
   846a6:	9310      	str	r3, [sp, #64]	; 0x40
   846a8:	dc02      	bgt.n	846b0 <_svfiprintf_r+0x67a>
   846aa:	f10c 0c08 	add.w	ip, ip, #8
   846ae:	e009      	b.n	846c4 <_svfiprintf_r+0x68e>
   846b0:	4658      	mov	r0, fp
   846b2:	4641      	mov	r1, r8
   846b4:	aa0f      	add	r2, sp, #60	; 0x3c
   846b6:	f7ff fc45 	bl	83f44 <__ssprint_r>
   846ba:	2800      	cmp	r0, #0
   846bc:	f040 80a3 	bne.w	84806 <_svfiprintf_r+0x7d0>
   846c0:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   846c4:	ebca 0505 	rsb	r5, sl, r5
   846c8:	2d00      	cmp	r5, #0
   846ca:	dd34      	ble.n	84736 <_svfiprintf_r+0x700>
   846cc:	4b49      	ldr	r3, [pc, #292]	; (847f4 <_svfiprintf_r+0x7be>)
   846ce:	2d10      	cmp	r5, #16
   846d0:	f8cc 3000 	str.w	r3, [ip]
   846d4:	dd19      	ble.n	8470a <_svfiprintf_r+0x6d4>
   846d6:	2310      	movs	r3, #16
   846d8:	f8cc 3004 	str.w	r3, [ip, #4]
   846dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
   846de:	3310      	adds	r3, #16
   846e0:	9311      	str	r3, [sp, #68]	; 0x44
   846e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   846e4:	3301      	adds	r3, #1
   846e6:	2b07      	cmp	r3, #7
   846e8:	9310      	str	r3, [sp, #64]	; 0x40
   846ea:	dc02      	bgt.n	846f2 <_svfiprintf_r+0x6bc>
   846ec:	f10c 0c08 	add.w	ip, ip, #8
   846f0:	e009      	b.n	84706 <_svfiprintf_r+0x6d0>
   846f2:	4658      	mov	r0, fp
   846f4:	4641      	mov	r1, r8
   846f6:	aa0f      	add	r2, sp, #60	; 0x3c
   846f8:	f7ff fc24 	bl	83f44 <__ssprint_r>
   846fc:	2800      	cmp	r0, #0
   846fe:	f040 8082 	bne.w	84806 <_svfiprintf_r+0x7d0>
   84702:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   84706:	3d10      	subs	r5, #16
   84708:	e7e0      	b.n	846cc <_svfiprintf_r+0x696>
   8470a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8470c:	f8cc 5004 	str.w	r5, [ip, #4]
   84710:	441d      	add	r5, r3
   84712:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84714:	9511      	str	r5, [sp, #68]	; 0x44
   84716:	3301      	adds	r3, #1
   84718:	2b07      	cmp	r3, #7
   8471a:	9310      	str	r3, [sp, #64]	; 0x40
   8471c:	dc02      	bgt.n	84724 <_svfiprintf_r+0x6ee>
   8471e:	f10c 0c08 	add.w	ip, ip, #8
   84722:	e008      	b.n	84736 <_svfiprintf_r+0x700>
   84724:	4658      	mov	r0, fp
   84726:	4641      	mov	r1, r8
   84728:	aa0f      	add	r2, sp, #60	; 0x3c
   8472a:	f7ff fc0b 	bl	83f44 <__ssprint_r>
   8472e:	2800      	cmp	r0, #0
   84730:	d169      	bne.n	84806 <_svfiprintf_r+0x7d0>
   84732:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   84736:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84738:	e88c 0600 	stmia.w	ip, {r9, sl}
   8473c:	4453      	add	r3, sl
   8473e:	9311      	str	r3, [sp, #68]	; 0x44
   84740:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84742:	3301      	adds	r3, #1
   84744:	2b07      	cmp	r3, #7
   84746:	9310      	str	r3, [sp, #64]	; 0x40
   84748:	dc02      	bgt.n	84750 <_svfiprintf_r+0x71a>
   8474a:	f10c 0308 	add.w	r3, ip, #8
   8474e:	e007      	b.n	84760 <_svfiprintf_r+0x72a>
   84750:	4658      	mov	r0, fp
   84752:	4641      	mov	r1, r8
   84754:	aa0f      	add	r2, sp, #60	; 0x3c
   84756:	f7ff fbf5 	bl	83f44 <__ssprint_r>
   8475a:	2800      	cmp	r0, #0
   8475c:	d153      	bne.n	84806 <_svfiprintf_r+0x7d0>
   8475e:	ab1c      	add	r3, sp, #112	; 0x70
   84760:	077a      	lsls	r2, r7, #29
   84762:	d40a      	bmi.n	8477a <_svfiprintf_r+0x744>
   84764:	9d05      	ldr	r5, [sp, #20]
   84766:	9804      	ldr	r0, [sp, #16]
   84768:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8476a:	4284      	cmp	r4, r0
   8476c:	bfac      	ite	ge
   8476e:	192d      	addge	r5, r5, r4
   84770:	182d      	addlt	r5, r5, r0
   84772:	9505      	str	r5, [sp, #20]
   84774:	2b00      	cmp	r3, #0
   84776:	d035      	beq.n	847e4 <_svfiprintf_r+0x7ae>
   84778:	e02e      	b.n	847d8 <_svfiprintf_r+0x7a2>
   8477a:	9904      	ldr	r1, [sp, #16]
   8477c:	1b0d      	subs	r5, r1, r4
   8477e:	2d00      	cmp	r5, #0
   84780:	ddf0      	ble.n	84764 <_svfiprintf_r+0x72e>
   84782:	4a1b      	ldr	r2, [pc, #108]	; (847f0 <_svfiprintf_r+0x7ba>)
   84784:	2d10      	cmp	r5, #16
   84786:	601a      	str	r2, [r3, #0]
   84788:	dd15      	ble.n	847b6 <_svfiprintf_r+0x780>
   8478a:	2210      	movs	r2, #16
   8478c:	605a      	str	r2, [r3, #4]
   8478e:	9a11      	ldr	r2, [sp, #68]	; 0x44
   84790:	3210      	adds	r2, #16
   84792:	9211      	str	r2, [sp, #68]	; 0x44
   84794:	9a10      	ldr	r2, [sp, #64]	; 0x40
   84796:	3201      	adds	r2, #1
   84798:	2a07      	cmp	r2, #7
   8479a:	9210      	str	r2, [sp, #64]	; 0x40
   8479c:	dc01      	bgt.n	847a2 <_svfiprintf_r+0x76c>
   8479e:	3308      	adds	r3, #8
   847a0:	e007      	b.n	847b2 <_svfiprintf_r+0x77c>
   847a2:	4658      	mov	r0, fp
   847a4:	4641      	mov	r1, r8
   847a6:	aa0f      	add	r2, sp, #60	; 0x3c
   847a8:	f7ff fbcc 	bl	83f44 <__ssprint_r>
   847ac:	2800      	cmp	r0, #0
   847ae:	d12a      	bne.n	84806 <_svfiprintf_r+0x7d0>
   847b0:	ab1c      	add	r3, sp, #112	; 0x70
   847b2:	3d10      	subs	r5, #16
   847b4:	e7e5      	b.n	84782 <_svfiprintf_r+0x74c>
   847b6:	605d      	str	r5, [r3, #4]
   847b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
   847ba:	441d      	add	r5, r3
   847bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
   847be:	9511      	str	r5, [sp, #68]	; 0x44
   847c0:	3301      	adds	r3, #1
   847c2:	2b07      	cmp	r3, #7
   847c4:	9310      	str	r3, [sp, #64]	; 0x40
   847c6:	ddcd      	ble.n	84764 <_svfiprintf_r+0x72e>
   847c8:	4658      	mov	r0, fp
   847ca:	4641      	mov	r1, r8
   847cc:	aa0f      	add	r2, sp, #60	; 0x3c
   847ce:	f7ff fbb9 	bl	83f44 <__ssprint_r>
   847d2:	2800      	cmp	r0, #0
   847d4:	d0c6      	beq.n	84764 <_svfiprintf_r+0x72e>
   847d6:	e016      	b.n	84806 <_svfiprintf_r+0x7d0>
   847d8:	4658      	mov	r0, fp
   847da:	4641      	mov	r1, r8
   847dc:	aa0f      	add	r2, sp, #60	; 0x3c
   847de:	f7ff fbb1 	bl	83f44 <__ssprint_r>
   847e2:	b980      	cbnz	r0, 84806 <_svfiprintf_r+0x7d0>
   847e4:	2300      	movs	r3, #0
   847e6:	9310      	str	r3, [sp, #64]	; 0x40
   847e8:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   847ec:	e449      	b.n	84082 <_svfiprintf_r+0x4c>
   847ee:	bf00      	nop
   847f0:	00085988 	.word	0x00085988
   847f4:	00085998 	.word	0x00085998
   847f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
   847fa:	b123      	cbz	r3, 84806 <_svfiprintf_r+0x7d0>
   847fc:	4658      	mov	r0, fp
   847fe:	4641      	mov	r1, r8
   84800:	aa0f      	add	r2, sp, #60	; 0x3c
   84802:	f7ff fb9f 	bl	83f44 <__ssprint_r>
   84806:	f8b8 300c 	ldrh.w	r3, [r8, #12]
   8480a:	9805      	ldr	r0, [sp, #20]
   8480c:	f013 0f40 	tst.w	r3, #64	; 0x40
   84810:	bf18      	it	ne
   84812:	f04f 30ff 	movne.w	r0, #4294967295
   84816:	b02d      	add	sp, #180	; 0xb4
   84818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0008481c <__register_exitproc>:
   8481c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   84820:	4698      	mov	r8, r3
   84822:	4b22      	ldr	r3, [pc, #136]	; (848ac <__register_exitproc+0x90>)
   84824:	4606      	mov	r6, r0
   84826:	681c      	ldr	r4, [r3, #0]
   84828:	460f      	mov	r7, r1
   8482a:	f8d4 0148 	ldr.w	r0, [r4, #328]	; 0x148
   8482e:	4691      	mov	r9, r2
   84830:	b918      	cbnz	r0, 8483a <__register_exitproc+0x1e>
   84832:	f504 70a6 	add.w	r0, r4, #332	; 0x14c
   84836:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
   8483a:	6843      	ldr	r3, [r0, #4]
   8483c:	2b1f      	cmp	r3, #31
   8483e:	dd16      	ble.n	8486e <__register_exitproc+0x52>
   84840:	4b1b      	ldr	r3, [pc, #108]	; (848b0 <__register_exitproc+0x94>)
   84842:	b91b      	cbnz	r3, 8484c <__register_exitproc+0x30>
   84844:	f04f 30ff 	mov.w	r0, #4294967295
   84848:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8484c:	f44f 70c8 	mov.w	r0, #400	; 0x190
   84850:	f3af 8000 	nop.w
   84854:	2800      	cmp	r0, #0
   84856:	d0f5      	beq.n	84844 <__register_exitproc+0x28>
   84858:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   8485c:	2500      	movs	r5, #0
   8485e:	6045      	str	r5, [r0, #4]
   84860:	6001      	str	r1, [r0, #0]
   84862:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
   84866:	f8c0 5188 	str.w	r5, [r0, #392]	; 0x188
   8486a:	f8c0 518c 	str.w	r5, [r0, #396]	; 0x18c
   8486e:	6844      	ldr	r4, [r0, #4]
   84870:	b1a6      	cbz	r6, 8489c <__register_exitproc+0x80>
   84872:	2201      	movs	r2, #1
   84874:	40a2      	lsls	r2, r4
   84876:	eb00 0584 	add.w	r5, r0, r4, lsl #2
   8487a:	f8c5 9088 	str.w	r9, [r5, #136]	; 0x88
   8487e:	f8d0 1188 	ldr.w	r1, [r0, #392]	; 0x188
   84882:	2e02      	cmp	r6, #2
   84884:	ea41 0102 	orr.w	r1, r1, r2
   84888:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
   8488c:	f8c5 8108 	str.w	r8, [r5, #264]	; 0x108
   84890:	d104      	bne.n	8489c <__register_exitproc+0x80>
   84892:	f8d0 318c 	ldr.w	r3, [r0, #396]	; 0x18c
   84896:	431a      	orrs	r2, r3
   84898:	f8c0 218c 	str.w	r2, [r0, #396]	; 0x18c
   8489c:	1c63      	adds	r3, r4, #1
   8489e:	3402      	adds	r4, #2
   848a0:	6043      	str	r3, [r0, #4]
   848a2:	f840 7024 	str.w	r7, [r0, r4, lsl #2]
   848a6:	2000      	movs	r0, #0
   848a8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   848ac:	000857f0 	.word	0x000857f0
   848b0:	00000000 	.word	0x00000000

000848b4 <_calloc_r>:
   848b4:	b510      	push	{r4, lr}
   848b6:	4351      	muls	r1, r2
   848b8:	f7fe fb38 	bl	82f2c <_malloc_r>
   848bc:	4604      	mov	r4, r0
   848be:	b320      	cbz	r0, 8490a <_calloc_r+0x56>
   848c0:	f850 2c04 	ldr.w	r2, [r0, #-4]
   848c4:	f022 0203 	bic.w	r2, r2, #3
   848c8:	3a04      	subs	r2, #4
   848ca:	2a24      	cmp	r2, #36	; 0x24
   848cc:	d81a      	bhi.n	84904 <_calloc_r+0x50>
   848ce:	2a13      	cmp	r2, #19
   848d0:	d912      	bls.n	848f8 <_calloc_r+0x44>
   848d2:	2100      	movs	r1, #0
   848d4:	2a1b      	cmp	r2, #27
   848d6:	6001      	str	r1, [r0, #0]
   848d8:	6041      	str	r1, [r0, #4]
   848da:	d802      	bhi.n	848e2 <_calloc_r+0x2e>
   848dc:	f100 0308 	add.w	r3, r0, #8
   848e0:	e00b      	b.n	848fa <_calloc_r+0x46>
   848e2:	2a24      	cmp	r2, #36	; 0x24
   848e4:	6081      	str	r1, [r0, #8]
   848e6:	60c1      	str	r1, [r0, #12]
   848e8:	bf11      	iteee	ne
   848ea:	f100 0310 	addne.w	r3, r0, #16
   848ee:	6101      	streq	r1, [r0, #16]
   848f0:	f100 0318 	addeq.w	r3, r0, #24
   848f4:	6141      	streq	r1, [r0, #20]
   848f6:	e000      	b.n	848fa <_calloc_r+0x46>
   848f8:	4603      	mov	r3, r0
   848fa:	2200      	movs	r2, #0
   848fc:	601a      	str	r2, [r3, #0]
   848fe:	605a      	str	r2, [r3, #4]
   84900:	609a      	str	r2, [r3, #8]
   84902:	e002      	b.n	8490a <_calloc_r+0x56>
   84904:	2100      	movs	r1, #0
   84906:	f7fc fb77 	bl	80ff8 <memset>
   8490a:	4620      	mov	r0, r4
   8490c:	bd10      	pop	{r4, pc}
	...

00084910 <__aeabi_drsub>:
   84910:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   84914:	e002      	b.n	8491c <__adddf3>
   84916:	bf00      	nop

00084918 <__aeabi_dsub>:
   84918:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0008491c <__adddf3>:
   8491c:	b530      	push	{r4, r5, lr}
   8491e:	ea4f 0441 	mov.w	r4, r1, lsl #1
   84922:	ea4f 0543 	mov.w	r5, r3, lsl #1
   84926:	ea94 0f05 	teq	r4, r5
   8492a:	bf08      	it	eq
   8492c:	ea90 0f02 	teqeq	r0, r2
   84930:	bf1f      	itttt	ne
   84932:	ea54 0c00 	orrsne.w	ip, r4, r0
   84936:	ea55 0c02 	orrsne.w	ip, r5, r2
   8493a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   8493e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84942:	f000 80e2 	beq.w	84b0a <__adddf3+0x1ee>
   84946:	ea4f 5454 	mov.w	r4, r4, lsr #21
   8494a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   8494e:	bfb8      	it	lt
   84950:	426d      	neglt	r5, r5
   84952:	dd0c      	ble.n	8496e <__adddf3+0x52>
   84954:	442c      	add	r4, r5
   84956:	ea80 0202 	eor.w	r2, r0, r2
   8495a:	ea81 0303 	eor.w	r3, r1, r3
   8495e:	ea82 0000 	eor.w	r0, r2, r0
   84962:	ea83 0101 	eor.w	r1, r3, r1
   84966:	ea80 0202 	eor.w	r2, r0, r2
   8496a:	ea81 0303 	eor.w	r3, r1, r3
   8496e:	2d36      	cmp	r5, #54	; 0x36
   84970:	bf88      	it	hi
   84972:	bd30      	pophi	{r4, r5, pc}
   84974:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   84978:	ea4f 3101 	mov.w	r1, r1, lsl #12
   8497c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   84980:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   84984:	d002      	beq.n	8498c <__adddf3+0x70>
   84986:	4240      	negs	r0, r0
   84988:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   8498c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   84990:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84994:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   84998:	d002      	beq.n	849a0 <__adddf3+0x84>
   8499a:	4252      	negs	r2, r2
   8499c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   849a0:	ea94 0f05 	teq	r4, r5
   849a4:	f000 80a7 	beq.w	84af6 <__adddf3+0x1da>
   849a8:	f1a4 0401 	sub.w	r4, r4, #1
   849ac:	f1d5 0e20 	rsbs	lr, r5, #32
   849b0:	db0d      	blt.n	849ce <__adddf3+0xb2>
   849b2:	fa02 fc0e 	lsl.w	ip, r2, lr
   849b6:	fa22 f205 	lsr.w	r2, r2, r5
   849ba:	1880      	adds	r0, r0, r2
   849bc:	f141 0100 	adc.w	r1, r1, #0
   849c0:	fa03 f20e 	lsl.w	r2, r3, lr
   849c4:	1880      	adds	r0, r0, r2
   849c6:	fa43 f305 	asr.w	r3, r3, r5
   849ca:	4159      	adcs	r1, r3
   849cc:	e00e      	b.n	849ec <__adddf3+0xd0>
   849ce:	f1a5 0520 	sub.w	r5, r5, #32
   849d2:	f10e 0e20 	add.w	lr, lr, #32
   849d6:	2a01      	cmp	r2, #1
   849d8:	fa03 fc0e 	lsl.w	ip, r3, lr
   849dc:	bf28      	it	cs
   849de:	f04c 0c02 	orrcs.w	ip, ip, #2
   849e2:	fa43 f305 	asr.w	r3, r3, r5
   849e6:	18c0      	adds	r0, r0, r3
   849e8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   849ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   849f0:	d507      	bpl.n	84a02 <__adddf3+0xe6>
   849f2:	f04f 0e00 	mov.w	lr, #0
   849f6:	f1dc 0c00 	rsbs	ip, ip, #0
   849fa:	eb7e 0000 	sbcs.w	r0, lr, r0
   849fe:	eb6e 0101 	sbc.w	r1, lr, r1
   84a02:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   84a06:	d31b      	bcc.n	84a40 <__adddf3+0x124>
   84a08:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   84a0c:	d30c      	bcc.n	84a28 <__adddf3+0x10c>
   84a0e:	0849      	lsrs	r1, r1, #1
   84a10:	ea5f 0030 	movs.w	r0, r0, rrx
   84a14:	ea4f 0c3c 	mov.w	ip, ip, rrx
   84a18:	f104 0401 	add.w	r4, r4, #1
   84a1c:	ea4f 5244 	mov.w	r2, r4, lsl #21
   84a20:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   84a24:	f080 809a 	bcs.w	84b5c <__adddf3+0x240>
   84a28:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   84a2c:	bf08      	it	eq
   84a2e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   84a32:	f150 0000 	adcs.w	r0, r0, #0
   84a36:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84a3a:	ea41 0105 	orr.w	r1, r1, r5
   84a3e:	bd30      	pop	{r4, r5, pc}
   84a40:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   84a44:	4140      	adcs	r0, r0
   84a46:	eb41 0101 	adc.w	r1, r1, r1
   84a4a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84a4e:	f1a4 0401 	sub.w	r4, r4, #1
   84a52:	d1e9      	bne.n	84a28 <__adddf3+0x10c>
   84a54:	f091 0f00 	teq	r1, #0
   84a58:	bf04      	itt	eq
   84a5a:	4601      	moveq	r1, r0
   84a5c:	2000      	moveq	r0, #0
   84a5e:	fab1 f381 	clz	r3, r1
   84a62:	bf08      	it	eq
   84a64:	3320      	addeq	r3, #32
   84a66:	f1a3 030b 	sub.w	r3, r3, #11
   84a6a:	f1b3 0220 	subs.w	r2, r3, #32
   84a6e:	da0c      	bge.n	84a8a <__adddf3+0x16e>
   84a70:	320c      	adds	r2, #12
   84a72:	dd08      	ble.n	84a86 <__adddf3+0x16a>
   84a74:	f102 0c14 	add.w	ip, r2, #20
   84a78:	f1c2 020c 	rsb	r2, r2, #12
   84a7c:	fa01 f00c 	lsl.w	r0, r1, ip
   84a80:	fa21 f102 	lsr.w	r1, r1, r2
   84a84:	e00c      	b.n	84aa0 <__adddf3+0x184>
   84a86:	f102 0214 	add.w	r2, r2, #20
   84a8a:	bfd8      	it	le
   84a8c:	f1c2 0c20 	rsble	ip, r2, #32
   84a90:	fa01 f102 	lsl.w	r1, r1, r2
   84a94:	fa20 fc0c 	lsr.w	ip, r0, ip
   84a98:	bfdc      	itt	le
   84a9a:	ea41 010c 	orrle.w	r1, r1, ip
   84a9e:	4090      	lslle	r0, r2
   84aa0:	1ae4      	subs	r4, r4, r3
   84aa2:	bfa2      	ittt	ge
   84aa4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   84aa8:	4329      	orrge	r1, r5
   84aaa:	bd30      	popge	{r4, r5, pc}
   84aac:	ea6f 0404 	mvn.w	r4, r4
   84ab0:	3c1f      	subs	r4, #31
   84ab2:	da1c      	bge.n	84aee <__adddf3+0x1d2>
   84ab4:	340c      	adds	r4, #12
   84ab6:	dc0e      	bgt.n	84ad6 <__adddf3+0x1ba>
   84ab8:	f104 0414 	add.w	r4, r4, #20
   84abc:	f1c4 0220 	rsb	r2, r4, #32
   84ac0:	fa20 f004 	lsr.w	r0, r0, r4
   84ac4:	fa01 f302 	lsl.w	r3, r1, r2
   84ac8:	ea40 0003 	orr.w	r0, r0, r3
   84acc:	fa21 f304 	lsr.w	r3, r1, r4
   84ad0:	ea45 0103 	orr.w	r1, r5, r3
   84ad4:	bd30      	pop	{r4, r5, pc}
   84ad6:	f1c4 040c 	rsb	r4, r4, #12
   84ada:	f1c4 0220 	rsb	r2, r4, #32
   84ade:	fa20 f002 	lsr.w	r0, r0, r2
   84ae2:	fa01 f304 	lsl.w	r3, r1, r4
   84ae6:	ea40 0003 	orr.w	r0, r0, r3
   84aea:	4629      	mov	r1, r5
   84aec:	bd30      	pop	{r4, r5, pc}
   84aee:	fa21 f004 	lsr.w	r0, r1, r4
   84af2:	4629      	mov	r1, r5
   84af4:	bd30      	pop	{r4, r5, pc}
   84af6:	f094 0f00 	teq	r4, #0
   84afa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   84afe:	bf06      	itte	eq
   84b00:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   84b04:	3401      	addeq	r4, #1
   84b06:	3d01      	subne	r5, #1
   84b08:	e74e      	b.n	849a8 <__adddf3+0x8c>
   84b0a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84b0e:	bf18      	it	ne
   84b10:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84b14:	d029      	beq.n	84b6a <__adddf3+0x24e>
   84b16:	ea94 0f05 	teq	r4, r5
   84b1a:	bf08      	it	eq
   84b1c:	ea90 0f02 	teqeq	r0, r2
   84b20:	d005      	beq.n	84b2e <__adddf3+0x212>
   84b22:	ea54 0c00 	orrs.w	ip, r4, r0
   84b26:	bf04      	itt	eq
   84b28:	4619      	moveq	r1, r3
   84b2a:	4610      	moveq	r0, r2
   84b2c:	bd30      	pop	{r4, r5, pc}
   84b2e:	ea91 0f03 	teq	r1, r3
   84b32:	bf1e      	ittt	ne
   84b34:	2100      	movne	r1, #0
   84b36:	2000      	movne	r0, #0
   84b38:	bd30      	popne	{r4, r5, pc}
   84b3a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   84b3e:	d105      	bne.n	84b4c <__adddf3+0x230>
   84b40:	0040      	lsls	r0, r0, #1
   84b42:	4149      	adcs	r1, r1
   84b44:	bf28      	it	cs
   84b46:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   84b4a:	bd30      	pop	{r4, r5, pc}
   84b4c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   84b50:	bf3c      	itt	cc
   84b52:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   84b56:	bd30      	popcc	{r4, r5, pc}
   84b58:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84b5c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   84b60:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   84b64:	f04f 0000 	mov.w	r0, #0
   84b68:	bd30      	pop	{r4, r5, pc}
   84b6a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84b6e:	bf1a      	itte	ne
   84b70:	4619      	movne	r1, r3
   84b72:	4610      	movne	r0, r2
   84b74:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   84b78:	bf1c      	itt	ne
   84b7a:	460b      	movne	r3, r1
   84b7c:	4602      	movne	r2, r0
   84b7e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   84b82:	bf06      	itte	eq
   84b84:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   84b88:	ea91 0f03 	teqeq	r1, r3
   84b8c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   84b90:	bd30      	pop	{r4, r5, pc}
   84b92:	bf00      	nop

00084b94 <__aeabi_ui2d>:
   84b94:	f090 0f00 	teq	r0, #0
   84b98:	bf04      	itt	eq
   84b9a:	2100      	moveq	r1, #0
   84b9c:	4770      	bxeq	lr
   84b9e:	b530      	push	{r4, r5, lr}
   84ba0:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84ba4:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84ba8:	f04f 0500 	mov.w	r5, #0
   84bac:	f04f 0100 	mov.w	r1, #0
   84bb0:	e750      	b.n	84a54 <__adddf3+0x138>
   84bb2:	bf00      	nop

00084bb4 <__aeabi_i2d>:
   84bb4:	f090 0f00 	teq	r0, #0
   84bb8:	bf04      	itt	eq
   84bba:	2100      	moveq	r1, #0
   84bbc:	4770      	bxeq	lr
   84bbe:	b530      	push	{r4, r5, lr}
   84bc0:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84bc4:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84bc8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   84bcc:	bf48      	it	mi
   84bce:	4240      	negmi	r0, r0
   84bd0:	f04f 0100 	mov.w	r1, #0
   84bd4:	e73e      	b.n	84a54 <__adddf3+0x138>
   84bd6:	bf00      	nop

00084bd8 <__aeabi_f2d>:
   84bd8:	0042      	lsls	r2, r0, #1
   84bda:	ea4f 01e2 	mov.w	r1, r2, asr #3
   84bde:	ea4f 0131 	mov.w	r1, r1, rrx
   84be2:	ea4f 7002 	mov.w	r0, r2, lsl #28
   84be6:	bf1f      	itttt	ne
   84be8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   84bec:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84bf0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   84bf4:	4770      	bxne	lr
   84bf6:	f092 0f00 	teq	r2, #0
   84bfa:	bf14      	ite	ne
   84bfc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84c00:	4770      	bxeq	lr
   84c02:	b530      	push	{r4, r5, lr}
   84c04:	f44f 7460 	mov.w	r4, #896	; 0x380
   84c08:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84c0c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84c10:	e720      	b.n	84a54 <__adddf3+0x138>
   84c12:	bf00      	nop

00084c14 <__aeabi_ul2d>:
   84c14:	ea50 0201 	orrs.w	r2, r0, r1
   84c18:	bf08      	it	eq
   84c1a:	4770      	bxeq	lr
   84c1c:	b530      	push	{r4, r5, lr}
   84c1e:	f04f 0500 	mov.w	r5, #0
   84c22:	e00a      	b.n	84c3a <__aeabi_l2d+0x16>

00084c24 <__aeabi_l2d>:
   84c24:	ea50 0201 	orrs.w	r2, r0, r1
   84c28:	bf08      	it	eq
   84c2a:	4770      	bxeq	lr
   84c2c:	b530      	push	{r4, r5, lr}
   84c2e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   84c32:	d502      	bpl.n	84c3a <__aeabi_l2d+0x16>
   84c34:	4240      	negs	r0, r0
   84c36:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84c3a:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84c3e:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84c42:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   84c46:	f43f aedc 	beq.w	84a02 <__adddf3+0xe6>
   84c4a:	f04f 0203 	mov.w	r2, #3
   84c4e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84c52:	bf18      	it	ne
   84c54:	3203      	addne	r2, #3
   84c56:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84c5a:	bf18      	it	ne
   84c5c:	3203      	addne	r2, #3
   84c5e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   84c62:	f1c2 0320 	rsb	r3, r2, #32
   84c66:	fa00 fc03 	lsl.w	ip, r0, r3
   84c6a:	fa20 f002 	lsr.w	r0, r0, r2
   84c6e:	fa01 fe03 	lsl.w	lr, r1, r3
   84c72:	ea40 000e 	orr.w	r0, r0, lr
   84c76:	fa21 f102 	lsr.w	r1, r1, r2
   84c7a:	4414      	add	r4, r2
   84c7c:	e6c1      	b.n	84a02 <__adddf3+0xe6>
   84c7e:	bf00      	nop

00084c80 <__aeabi_dmul>:
   84c80:	b570      	push	{r4, r5, r6, lr}
   84c82:	f04f 0cff 	mov.w	ip, #255	; 0xff
   84c86:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   84c8a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   84c8e:	bf1d      	ittte	ne
   84c90:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   84c94:	ea94 0f0c 	teqne	r4, ip
   84c98:	ea95 0f0c 	teqne	r5, ip
   84c9c:	f000 f8de 	bleq	84e5c <__aeabi_dmul+0x1dc>
   84ca0:	442c      	add	r4, r5
   84ca2:	ea81 0603 	eor.w	r6, r1, r3
   84ca6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   84caa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   84cae:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   84cb2:	bf18      	it	ne
   84cb4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   84cb8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84cbc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   84cc0:	d038      	beq.n	84d34 <__aeabi_dmul+0xb4>
   84cc2:	fba0 ce02 	umull	ip, lr, r0, r2
   84cc6:	f04f 0500 	mov.w	r5, #0
   84cca:	fbe1 e502 	umlal	lr, r5, r1, r2
   84cce:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   84cd2:	fbe0 e503 	umlal	lr, r5, r0, r3
   84cd6:	f04f 0600 	mov.w	r6, #0
   84cda:	fbe1 5603 	umlal	r5, r6, r1, r3
   84cde:	f09c 0f00 	teq	ip, #0
   84ce2:	bf18      	it	ne
   84ce4:	f04e 0e01 	orrne.w	lr, lr, #1
   84ce8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   84cec:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   84cf0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   84cf4:	d204      	bcs.n	84d00 <__aeabi_dmul+0x80>
   84cf6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   84cfa:	416d      	adcs	r5, r5
   84cfc:	eb46 0606 	adc.w	r6, r6, r6
   84d00:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   84d04:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   84d08:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   84d0c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   84d10:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   84d14:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   84d18:	bf88      	it	hi
   84d1a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   84d1e:	d81e      	bhi.n	84d5e <__aeabi_dmul+0xde>
   84d20:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   84d24:	bf08      	it	eq
   84d26:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   84d2a:	f150 0000 	adcs.w	r0, r0, #0
   84d2e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84d32:	bd70      	pop	{r4, r5, r6, pc}
   84d34:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   84d38:	ea46 0101 	orr.w	r1, r6, r1
   84d3c:	ea40 0002 	orr.w	r0, r0, r2
   84d40:	ea81 0103 	eor.w	r1, r1, r3
   84d44:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   84d48:	bfc2      	ittt	gt
   84d4a:	ebd4 050c 	rsbsgt	r5, r4, ip
   84d4e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   84d52:	bd70      	popgt	{r4, r5, r6, pc}
   84d54:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84d58:	f04f 0e00 	mov.w	lr, #0
   84d5c:	3c01      	subs	r4, #1
   84d5e:	f300 80ab 	bgt.w	84eb8 <__aeabi_dmul+0x238>
   84d62:	f114 0f36 	cmn.w	r4, #54	; 0x36
   84d66:	bfde      	ittt	le
   84d68:	2000      	movle	r0, #0
   84d6a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   84d6e:	bd70      	pople	{r4, r5, r6, pc}
   84d70:	f1c4 0400 	rsb	r4, r4, #0
   84d74:	3c20      	subs	r4, #32
   84d76:	da35      	bge.n	84de4 <__aeabi_dmul+0x164>
   84d78:	340c      	adds	r4, #12
   84d7a:	dc1b      	bgt.n	84db4 <__aeabi_dmul+0x134>
   84d7c:	f104 0414 	add.w	r4, r4, #20
   84d80:	f1c4 0520 	rsb	r5, r4, #32
   84d84:	fa00 f305 	lsl.w	r3, r0, r5
   84d88:	fa20 f004 	lsr.w	r0, r0, r4
   84d8c:	fa01 f205 	lsl.w	r2, r1, r5
   84d90:	ea40 0002 	orr.w	r0, r0, r2
   84d94:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   84d98:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84d9c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   84da0:	fa21 f604 	lsr.w	r6, r1, r4
   84da4:	eb42 0106 	adc.w	r1, r2, r6
   84da8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   84dac:	bf08      	it	eq
   84dae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   84db2:	bd70      	pop	{r4, r5, r6, pc}
   84db4:	f1c4 040c 	rsb	r4, r4, #12
   84db8:	f1c4 0520 	rsb	r5, r4, #32
   84dbc:	fa00 f304 	lsl.w	r3, r0, r4
   84dc0:	fa20 f005 	lsr.w	r0, r0, r5
   84dc4:	fa01 f204 	lsl.w	r2, r1, r4
   84dc8:	ea40 0002 	orr.w	r0, r0, r2
   84dcc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84dd0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   84dd4:	f141 0100 	adc.w	r1, r1, #0
   84dd8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   84ddc:	bf08      	it	eq
   84dde:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   84de2:	bd70      	pop	{r4, r5, r6, pc}
   84de4:	f1c4 0520 	rsb	r5, r4, #32
   84de8:	fa00 f205 	lsl.w	r2, r0, r5
   84dec:	ea4e 0e02 	orr.w	lr, lr, r2
   84df0:	fa20 f304 	lsr.w	r3, r0, r4
   84df4:	fa01 f205 	lsl.w	r2, r1, r5
   84df8:	ea43 0302 	orr.w	r3, r3, r2
   84dfc:	fa21 f004 	lsr.w	r0, r1, r4
   84e00:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84e04:	fa21 f204 	lsr.w	r2, r1, r4
   84e08:	ea20 0002 	bic.w	r0, r0, r2
   84e0c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   84e10:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   84e14:	bf08      	it	eq
   84e16:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   84e1a:	bd70      	pop	{r4, r5, r6, pc}
   84e1c:	f094 0f00 	teq	r4, #0
   84e20:	d10f      	bne.n	84e42 <__aeabi_dmul+0x1c2>
   84e22:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   84e26:	0040      	lsls	r0, r0, #1
   84e28:	eb41 0101 	adc.w	r1, r1, r1
   84e2c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84e30:	bf08      	it	eq
   84e32:	3c01      	subeq	r4, #1
   84e34:	d0f7      	beq.n	84e26 <__aeabi_dmul+0x1a6>
   84e36:	ea41 0106 	orr.w	r1, r1, r6
   84e3a:	f095 0f00 	teq	r5, #0
   84e3e:	bf18      	it	ne
   84e40:	4770      	bxne	lr
   84e42:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   84e46:	0052      	lsls	r2, r2, #1
   84e48:	eb43 0303 	adc.w	r3, r3, r3
   84e4c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   84e50:	bf08      	it	eq
   84e52:	3d01      	subeq	r5, #1
   84e54:	d0f7      	beq.n	84e46 <__aeabi_dmul+0x1c6>
   84e56:	ea43 0306 	orr.w	r3, r3, r6
   84e5a:	4770      	bx	lr
   84e5c:	ea94 0f0c 	teq	r4, ip
   84e60:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   84e64:	bf18      	it	ne
   84e66:	ea95 0f0c 	teqne	r5, ip
   84e6a:	d00c      	beq.n	84e86 <__aeabi_dmul+0x206>
   84e6c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   84e70:	bf18      	it	ne
   84e72:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   84e76:	d1d1      	bne.n	84e1c <__aeabi_dmul+0x19c>
   84e78:	ea81 0103 	eor.w	r1, r1, r3
   84e7c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84e80:	f04f 0000 	mov.w	r0, #0
   84e84:	bd70      	pop	{r4, r5, r6, pc}
   84e86:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   84e8a:	bf06      	itte	eq
   84e8c:	4610      	moveq	r0, r2
   84e8e:	4619      	moveq	r1, r3
   84e90:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   84e94:	d019      	beq.n	84eca <__aeabi_dmul+0x24a>
   84e96:	ea94 0f0c 	teq	r4, ip
   84e9a:	d102      	bne.n	84ea2 <__aeabi_dmul+0x222>
   84e9c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   84ea0:	d113      	bne.n	84eca <__aeabi_dmul+0x24a>
   84ea2:	ea95 0f0c 	teq	r5, ip
   84ea6:	d105      	bne.n	84eb4 <__aeabi_dmul+0x234>
   84ea8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   84eac:	bf1c      	itt	ne
   84eae:	4610      	movne	r0, r2
   84eb0:	4619      	movne	r1, r3
   84eb2:	d10a      	bne.n	84eca <__aeabi_dmul+0x24a>
   84eb4:	ea81 0103 	eor.w	r1, r1, r3
   84eb8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84ebc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   84ec0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   84ec4:	f04f 0000 	mov.w	r0, #0
   84ec8:	bd70      	pop	{r4, r5, r6, pc}
   84eca:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   84ece:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   84ed2:	bd70      	pop	{r4, r5, r6, pc}

00084ed4 <__aeabi_ddiv>:
   84ed4:	b570      	push	{r4, r5, r6, lr}
   84ed6:	f04f 0cff 	mov.w	ip, #255	; 0xff
   84eda:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   84ede:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   84ee2:	bf1d      	ittte	ne
   84ee4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   84ee8:	ea94 0f0c 	teqne	r4, ip
   84eec:	ea95 0f0c 	teqne	r5, ip
   84ef0:	f000 f8a7 	bleq	85042 <__aeabi_ddiv+0x16e>
   84ef4:	eba4 0405 	sub.w	r4, r4, r5
   84ef8:	ea81 0e03 	eor.w	lr, r1, r3
   84efc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   84f00:	ea4f 3101 	mov.w	r1, r1, lsl #12
   84f04:	f000 8088 	beq.w	85018 <__aeabi_ddiv+0x144>
   84f08:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84f0c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   84f10:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   84f14:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   84f18:	ea4f 2202 	mov.w	r2, r2, lsl #8
   84f1c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   84f20:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   84f24:	ea4f 2600 	mov.w	r6, r0, lsl #8
   84f28:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   84f2c:	429d      	cmp	r5, r3
   84f2e:	bf08      	it	eq
   84f30:	4296      	cmpeq	r6, r2
   84f32:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   84f36:	f504 7440 	add.w	r4, r4, #768	; 0x300
   84f3a:	d202      	bcs.n	84f42 <__aeabi_ddiv+0x6e>
   84f3c:	085b      	lsrs	r3, r3, #1
   84f3e:	ea4f 0232 	mov.w	r2, r2, rrx
   84f42:	1ab6      	subs	r6, r6, r2
   84f44:	eb65 0503 	sbc.w	r5, r5, r3
   84f48:	085b      	lsrs	r3, r3, #1
   84f4a:	ea4f 0232 	mov.w	r2, r2, rrx
   84f4e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   84f52:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   84f56:	ebb6 0e02 	subs.w	lr, r6, r2
   84f5a:	eb75 0e03 	sbcs.w	lr, r5, r3
   84f5e:	bf22      	ittt	cs
   84f60:	1ab6      	subcs	r6, r6, r2
   84f62:	4675      	movcs	r5, lr
   84f64:	ea40 000c 	orrcs.w	r0, r0, ip
   84f68:	085b      	lsrs	r3, r3, #1
   84f6a:	ea4f 0232 	mov.w	r2, r2, rrx
   84f6e:	ebb6 0e02 	subs.w	lr, r6, r2
   84f72:	eb75 0e03 	sbcs.w	lr, r5, r3
   84f76:	bf22      	ittt	cs
   84f78:	1ab6      	subcs	r6, r6, r2
   84f7a:	4675      	movcs	r5, lr
   84f7c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   84f80:	085b      	lsrs	r3, r3, #1
   84f82:	ea4f 0232 	mov.w	r2, r2, rrx
   84f86:	ebb6 0e02 	subs.w	lr, r6, r2
   84f8a:	eb75 0e03 	sbcs.w	lr, r5, r3
   84f8e:	bf22      	ittt	cs
   84f90:	1ab6      	subcs	r6, r6, r2
   84f92:	4675      	movcs	r5, lr
   84f94:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   84f98:	085b      	lsrs	r3, r3, #1
   84f9a:	ea4f 0232 	mov.w	r2, r2, rrx
   84f9e:	ebb6 0e02 	subs.w	lr, r6, r2
   84fa2:	eb75 0e03 	sbcs.w	lr, r5, r3
   84fa6:	bf22      	ittt	cs
   84fa8:	1ab6      	subcs	r6, r6, r2
   84faa:	4675      	movcs	r5, lr
   84fac:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   84fb0:	ea55 0e06 	orrs.w	lr, r5, r6
   84fb4:	d018      	beq.n	84fe8 <__aeabi_ddiv+0x114>
   84fb6:	ea4f 1505 	mov.w	r5, r5, lsl #4
   84fba:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   84fbe:	ea4f 1606 	mov.w	r6, r6, lsl #4
   84fc2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   84fc6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   84fca:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   84fce:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   84fd2:	d1c0      	bne.n	84f56 <__aeabi_ddiv+0x82>
   84fd4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84fd8:	d10b      	bne.n	84ff2 <__aeabi_ddiv+0x11e>
   84fda:	ea41 0100 	orr.w	r1, r1, r0
   84fde:	f04f 0000 	mov.w	r0, #0
   84fe2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   84fe6:	e7b6      	b.n	84f56 <__aeabi_ddiv+0x82>
   84fe8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84fec:	bf04      	itt	eq
   84fee:	4301      	orreq	r1, r0
   84ff0:	2000      	moveq	r0, #0
   84ff2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   84ff6:	bf88      	it	hi
   84ff8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   84ffc:	f63f aeaf 	bhi.w	84d5e <__aeabi_dmul+0xde>
   85000:	ebb5 0c03 	subs.w	ip, r5, r3
   85004:	bf04      	itt	eq
   85006:	ebb6 0c02 	subseq.w	ip, r6, r2
   8500a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8500e:	f150 0000 	adcs.w	r0, r0, #0
   85012:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85016:	bd70      	pop	{r4, r5, r6, pc}
   85018:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   8501c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   85020:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   85024:	bfc2      	ittt	gt
   85026:	ebd4 050c 	rsbsgt	r5, r4, ip
   8502a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8502e:	bd70      	popgt	{r4, r5, r6, pc}
   85030:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85034:	f04f 0e00 	mov.w	lr, #0
   85038:	3c01      	subs	r4, #1
   8503a:	e690      	b.n	84d5e <__aeabi_dmul+0xde>
   8503c:	ea45 0e06 	orr.w	lr, r5, r6
   85040:	e68d      	b.n	84d5e <__aeabi_dmul+0xde>
   85042:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   85046:	ea94 0f0c 	teq	r4, ip
   8504a:	bf08      	it	eq
   8504c:	ea95 0f0c 	teqeq	r5, ip
   85050:	f43f af3b 	beq.w	84eca <__aeabi_dmul+0x24a>
   85054:	ea94 0f0c 	teq	r4, ip
   85058:	d10a      	bne.n	85070 <__aeabi_ddiv+0x19c>
   8505a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8505e:	f47f af34 	bne.w	84eca <__aeabi_dmul+0x24a>
   85062:	ea95 0f0c 	teq	r5, ip
   85066:	f47f af25 	bne.w	84eb4 <__aeabi_dmul+0x234>
   8506a:	4610      	mov	r0, r2
   8506c:	4619      	mov	r1, r3
   8506e:	e72c      	b.n	84eca <__aeabi_dmul+0x24a>
   85070:	ea95 0f0c 	teq	r5, ip
   85074:	d106      	bne.n	85084 <__aeabi_ddiv+0x1b0>
   85076:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   8507a:	f43f aefd 	beq.w	84e78 <__aeabi_dmul+0x1f8>
   8507e:	4610      	mov	r0, r2
   85080:	4619      	mov	r1, r3
   85082:	e722      	b.n	84eca <__aeabi_dmul+0x24a>
   85084:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85088:	bf18      	it	ne
   8508a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8508e:	f47f aec5 	bne.w	84e1c <__aeabi_dmul+0x19c>
   85092:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   85096:	f47f af0d 	bne.w	84eb4 <__aeabi_dmul+0x234>
   8509a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   8509e:	f47f aeeb 	bne.w	84e78 <__aeabi_dmul+0x1f8>
   850a2:	e712      	b.n	84eca <__aeabi_dmul+0x24a>

000850a4 <__gedf2>:
   850a4:	f04f 3cff 	mov.w	ip, #4294967295
   850a8:	e006      	b.n	850b8 <__cmpdf2+0x4>
   850aa:	bf00      	nop

000850ac <__ledf2>:
   850ac:	f04f 0c01 	mov.w	ip, #1
   850b0:	e002      	b.n	850b8 <__cmpdf2+0x4>
   850b2:	bf00      	nop

000850b4 <__cmpdf2>:
   850b4:	f04f 0c01 	mov.w	ip, #1
   850b8:	f84d cd04 	str.w	ip, [sp, #-4]!
   850bc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   850c0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   850c4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   850c8:	bf18      	it	ne
   850ca:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   850ce:	d01b      	beq.n	85108 <__cmpdf2+0x54>
   850d0:	b001      	add	sp, #4
   850d2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   850d6:	bf0c      	ite	eq
   850d8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   850dc:	ea91 0f03 	teqne	r1, r3
   850e0:	bf02      	ittt	eq
   850e2:	ea90 0f02 	teqeq	r0, r2
   850e6:	2000      	moveq	r0, #0
   850e8:	4770      	bxeq	lr
   850ea:	f110 0f00 	cmn.w	r0, #0
   850ee:	ea91 0f03 	teq	r1, r3
   850f2:	bf58      	it	pl
   850f4:	4299      	cmppl	r1, r3
   850f6:	bf08      	it	eq
   850f8:	4290      	cmpeq	r0, r2
   850fa:	bf2c      	ite	cs
   850fc:	17d8      	asrcs	r0, r3, #31
   850fe:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   85102:	f040 0001 	orr.w	r0, r0, #1
   85106:	4770      	bx	lr
   85108:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   8510c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85110:	d102      	bne.n	85118 <__cmpdf2+0x64>
   85112:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   85116:	d107      	bne.n	85128 <__cmpdf2+0x74>
   85118:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   8511c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85120:	d1d6      	bne.n	850d0 <__cmpdf2+0x1c>
   85122:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   85126:	d0d3      	beq.n	850d0 <__cmpdf2+0x1c>
   85128:	f85d 0b04 	ldr.w	r0, [sp], #4
   8512c:	4770      	bx	lr
   8512e:	bf00      	nop

00085130 <__aeabi_cdrcmple>:
   85130:	4684      	mov	ip, r0
   85132:	4610      	mov	r0, r2
   85134:	4662      	mov	r2, ip
   85136:	468c      	mov	ip, r1
   85138:	4619      	mov	r1, r3
   8513a:	4663      	mov	r3, ip
   8513c:	e000      	b.n	85140 <__aeabi_cdcmpeq>
   8513e:	bf00      	nop

00085140 <__aeabi_cdcmpeq>:
   85140:	b501      	push	{r0, lr}
   85142:	f7ff ffb7 	bl	850b4 <__cmpdf2>
   85146:	2800      	cmp	r0, #0
   85148:	bf48      	it	mi
   8514a:	f110 0f00 	cmnmi.w	r0, #0
   8514e:	bd01      	pop	{r0, pc}

00085150 <__aeabi_dcmpeq>:
   85150:	f84d ed08 	str.w	lr, [sp, #-8]!
   85154:	f7ff fff4 	bl	85140 <__aeabi_cdcmpeq>
   85158:	bf0c      	ite	eq
   8515a:	2001      	moveq	r0, #1
   8515c:	2000      	movne	r0, #0
   8515e:	f85d fb08 	ldr.w	pc, [sp], #8
   85162:	bf00      	nop

00085164 <__aeabi_dcmplt>:
   85164:	f84d ed08 	str.w	lr, [sp, #-8]!
   85168:	f7ff ffea 	bl	85140 <__aeabi_cdcmpeq>
   8516c:	bf34      	ite	cc
   8516e:	2001      	movcc	r0, #1
   85170:	2000      	movcs	r0, #0
   85172:	f85d fb08 	ldr.w	pc, [sp], #8
   85176:	bf00      	nop

00085178 <__aeabi_dcmple>:
   85178:	f84d ed08 	str.w	lr, [sp, #-8]!
   8517c:	f7ff ffe0 	bl	85140 <__aeabi_cdcmpeq>
   85180:	bf94      	ite	ls
   85182:	2001      	movls	r0, #1
   85184:	2000      	movhi	r0, #0
   85186:	f85d fb08 	ldr.w	pc, [sp], #8
   8518a:	bf00      	nop

0008518c <__aeabi_dcmpge>:
   8518c:	f84d ed08 	str.w	lr, [sp, #-8]!
   85190:	f7ff ffce 	bl	85130 <__aeabi_cdrcmple>
   85194:	bf94      	ite	ls
   85196:	2001      	movls	r0, #1
   85198:	2000      	movhi	r0, #0
   8519a:	f85d fb08 	ldr.w	pc, [sp], #8
   8519e:	bf00      	nop

000851a0 <__aeabi_dcmpgt>:
   851a0:	f84d ed08 	str.w	lr, [sp, #-8]!
   851a4:	f7ff ffc4 	bl	85130 <__aeabi_cdrcmple>
   851a8:	bf34      	ite	cc
   851aa:	2001      	movcc	r0, #1
   851ac:	2000      	movcs	r0, #0
   851ae:	f85d fb08 	ldr.w	pc, [sp], #8
   851b2:	bf00      	nop

000851b4 <__aeabi_d2iz>:
   851b4:	ea4f 0241 	mov.w	r2, r1, lsl #1
   851b8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   851bc:	d215      	bcs.n	851ea <__aeabi_d2iz+0x36>
   851be:	d511      	bpl.n	851e4 <__aeabi_d2iz+0x30>
   851c0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   851c4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   851c8:	d912      	bls.n	851f0 <__aeabi_d2iz+0x3c>
   851ca:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   851ce:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   851d2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   851d6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   851da:	fa23 f002 	lsr.w	r0, r3, r2
   851de:	bf18      	it	ne
   851e0:	4240      	negne	r0, r0
   851e2:	4770      	bx	lr
   851e4:	f04f 0000 	mov.w	r0, #0
   851e8:	4770      	bx	lr
   851ea:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   851ee:	d105      	bne.n	851fc <__aeabi_d2iz+0x48>
   851f0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   851f4:	bf08      	it	eq
   851f6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   851fa:	4770      	bx	lr
   851fc:	f04f 0000 	mov.w	r0, #0
   85200:	4770      	bx	lr
   85202:	bf00      	nop

00085204 <__aeabi_uldivmod>:
   85204:	b94b      	cbnz	r3, 8521a <__aeabi_uldivmod+0x16>
   85206:	b942      	cbnz	r2, 8521a <__aeabi_uldivmod+0x16>
   85208:	2900      	cmp	r1, #0
   8520a:	bf08      	it	eq
   8520c:	2800      	cmpeq	r0, #0
   8520e:	d002      	beq.n	85216 <__aeabi_uldivmod+0x12>
   85210:	f04f 31ff 	mov.w	r1, #4294967295
   85214:	4608      	mov	r0, r1
   85216:	f000 b83b 	b.w	85290 <__aeabi_idiv0>
   8521a:	b082      	sub	sp, #8
   8521c:	46ec      	mov	ip, sp
   8521e:	e92d 5000 	stmdb	sp!, {ip, lr}
   85222:	f000 f81d 	bl	85260 <__gnu_uldivmod_helper>
   85226:	f8dd e004 	ldr.w	lr, [sp, #4]
   8522a:	b002      	add	sp, #8
   8522c:	bc0c      	pop	{r2, r3}
   8522e:	4770      	bx	lr

00085230 <__gnu_ldivmod_helper>:
   85230:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   85234:	9e08      	ldr	r6, [sp, #32]
   85236:	4614      	mov	r4, r2
   85238:	461d      	mov	r5, r3
   8523a:	4680      	mov	r8, r0
   8523c:	4689      	mov	r9, r1
   8523e:	f000 f829 	bl	85294 <__divdi3>
   85242:	fb04 f301 	mul.w	r3, r4, r1
   85246:	fba4 ab00 	umull	sl, fp, r4, r0
   8524a:	fb00 3205 	mla	r2, r0, r5, r3
   8524e:	4493      	add	fp, r2
   85250:	ebb8 080a 	subs.w	r8, r8, sl
   85254:	eb69 090b 	sbc.w	r9, r9, fp
   85258:	e9c6 8900 	strd	r8, r9, [r6]
   8525c:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

00085260 <__gnu_uldivmod_helper>:
   85260:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   85264:	9e08      	ldr	r6, [sp, #32]
   85266:	4614      	mov	r4, r2
   85268:	461d      	mov	r5, r3
   8526a:	4680      	mov	r8, r0
   8526c:	4689      	mov	r9, r1
   8526e:	f000 f961 	bl	85534 <__udivdi3>
   85272:	fb00 f505 	mul.w	r5, r0, r5
   85276:	fba0 ab04 	umull	sl, fp, r0, r4
   8527a:	fb04 5401 	mla	r4, r4, r1, r5
   8527e:	44a3      	add	fp, r4
   85280:	ebb8 080a 	subs.w	r8, r8, sl
   85284:	eb69 090b 	sbc.w	r9, r9, fp
   85288:	e9c6 8900 	strd	r8, r9, [r6]
   8528c:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

00085290 <__aeabi_idiv0>:
   85290:	4770      	bx	lr
   85292:	bf00      	nop

00085294 <__divdi3>:
   85294:	2900      	cmp	r1, #0
   85296:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8529a:	f2c0 80a1 	blt.w	853e0 <__divdi3+0x14c>
   8529e:	2400      	movs	r4, #0
   852a0:	2b00      	cmp	r3, #0
   852a2:	f2c0 8098 	blt.w	853d6 <__divdi3+0x142>
   852a6:	4615      	mov	r5, r2
   852a8:	4606      	mov	r6, r0
   852aa:	460f      	mov	r7, r1
   852ac:	2b00      	cmp	r3, #0
   852ae:	d13f      	bne.n	85330 <__divdi3+0x9c>
   852b0:	428a      	cmp	r2, r1
   852b2:	d958      	bls.n	85366 <__divdi3+0xd2>
   852b4:	fab2 f382 	clz	r3, r2
   852b8:	b14b      	cbz	r3, 852ce <__divdi3+0x3a>
   852ba:	f1c3 0220 	rsb	r2, r3, #32
   852be:	fa01 f703 	lsl.w	r7, r1, r3
   852c2:	fa20 f202 	lsr.w	r2, r0, r2
   852c6:	409d      	lsls	r5, r3
   852c8:	fa00 f603 	lsl.w	r6, r0, r3
   852cc:	4317      	orrs	r7, r2
   852ce:	0c29      	lsrs	r1, r5, #16
   852d0:	fbb7 f2f1 	udiv	r2, r7, r1
   852d4:	fb01 7712 	mls	r7, r1, r2, r7
   852d8:	b2a8      	uxth	r0, r5
   852da:	fb00 f302 	mul.w	r3, r0, r2
   852de:	ea4f 4c16 	mov.w	ip, r6, lsr #16
   852e2:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
   852e6:	42bb      	cmp	r3, r7
   852e8:	d909      	bls.n	852fe <__divdi3+0x6a>
   852ea:	197f      	adds	r7, r7, r5
   852ec:	f102 3cff 	add.w	ip, r2, #4294967295
   852f0:	f080 8105 	bcs.w	854fe <__divdi3+0x26a>
   852f4:	42bb      	cmp	r3, r7
   852f6:	f240 8102 	bls.w	854fe <__divdi3+0x26a>
   852fa:	3a02      	subs	r2, #2
   852fc:	442f      	add	r7, r5
   852fe:	1aff      	subs	r7, r7, r3
   85300:	fbb7 f3f1 	udiv	r3, r7, r1
   85304:	fb01 7113 	mls	r1, r1, r3, r7
   85308:	fb00 f003 	mul.w	r0, r0, r3
   8530c:	b2b6      	uxth	r6, r6
   8530e:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
   85312:	4288      	cmp	r0, r1
   85314:	d908      	bls.n	85328 <__divdi3+0x94>
   85316:	1949      	adds	r1, r1, r5
   85318:	f103 37ff 	add.w	r7, r3, #4294967295
   8531c:	f080 80f1 	bcs.w	85502 <__divdi3+0x26e>
   85320:	4288      	cmp	r0, r1
   85322:	f240 80ee 	bls.w	85502 <__divdi3+0x26e>
   85326:	3b02      	subs	r3, #2
   85328:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   8532c:	2300      	movs	r3, #0
   8532e:	e003      	b.n	85338 <__divdi3+0xa4>
   85330:	428b      	cmp	r3, r1
   85332:	d90a      	bls.n	8534a <__divdi3+0xb6>
   85334:	2300      	movs	r3, #0
   85336:	461a      	mov	r2, r3
   85338:	4610      	mov	r0, r2
   8533a:	4619      	mov	r1, r3
   8533c:	b114      	cbz	r4, 85344 <__divdi3+0xb0>
   8533e:	4240      	negs	r0, r0
   85340:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   85344:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85348:	4770      	bx	lr
   8534a:	fab3 f883 	clz	r8, r3
   8534e:	f1b8 0f00 	cmp.w	r8, #0
   85352:	f040 8088 	bne.w	85466 <__divdi3+0x1d2>
   85356:	428b      	cmp	r3, r1
   85358:	d302      	bcc.n	85360 <__divdi3+0xcc>
   8535a:	4282      	cmp	r2, r0
   8535c:	f200 80e2 	bhi.w	85524 <__divdi3+0x290>
   85360:	2300      	movs	r3, #0
   85362:	2201      	movs	r2, #1
   85364:	e7e8      	b.n	85338 <__divdi3+0xa4>
   85366:	b912      	cbnz	r2, 8536e <__divdi3+0xda>
   85368:	2301      	movs	r3, #1
   8536a:	fbb3 f5f2 	udiv	r5, r3, r2
   8536e:	fab5 f285 	clz	r2, r5
   85372:	2a00      	cmp	r2, #0
   85374:	d13a      	bne.n	853ec <__divdi3+0x158>
   85376:	1b7f      	subs	r7, r7, r5
   85378:	0c28      	lsrs	r0, r5, #16
   8537a:	fa1f fc85 	uxth.w	ip, r5
   8537e:	2301      	movs	r3, #1
   85380:	fbb7 f1f0 	udiv	r1, r7, r0
   85384:	fb00 7711 	mls	r7, r0, r1, r7
   85388:	fb0c f201 	mul.w	r2, ip, r1
   8538c:	ea4f 4816 	mov.w	r8, r6, lsr #16
   85390:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   85394:	42ba      	cmp	r2, r7
   85396:	d907      	bls.n	853a8 <__divdi3+0x114>
   85398:	197f      	adds	r7, r7, r5
   8539a:	f101 38ff 	add.w	r8, r1, #4294967295
   8539e:	d202      	bcs.n	853a6 <__divdi3+0x112>
   853a0:	42ba      	cmp	r2, r7
   853a2:	f200 80c4 	bhi.w	8552e <__divdi3+0x29a>
   853a6:	4641      	mov	r1, r8
   853a8:	1abf      	subs	r7, r7, r2
   853aa:	fbb7 f2f0 	udiv	r2, r7, r0
   853ae:	fb00 7012 	mls	r0, r0, r2, r7
   853b2:	fb0c fc02 	mul.w	ip, ip, r2
   853b6:	b2b6      	uxth	r6, r6
   853b8:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
   853bc:	4584      	cmp	ip, r0
   853be:	d907      	bls.n	853d0 <__divdi3+0x13c>
   853c0:	1940      	adds	r0, r0, r5
   853c2:	f102 37ff 	add.w	r7, r2, #4294967295
   853c6:	d202      	bcs.n	853ce <__divdi3+0x13a>
   853c8:	4584      	cmp	ip, r0
   853ca:	f200 80ae 	bhi.w	8552a <__divdi3+0x296>
   853ce:	463a      	mov	r2, r7
   853d0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   853d4:	e7b0      	b.n	85338 <__divdi3+0xa4>
   853d6:	43e4      	mvns	r4, r4
   853d8:	4252      	negs	r2, r2
   853da:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   853de:	e762      	b.n	852a6 <__divdi3+0x12>
   853e0:	4240      	negs	r0, r0
   853e2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   853e6:	f04f 34ff 	mov.w	r4, #4294967295
   853ea:	e759      	b.n	852a0 <__divdi3+0xc>
   853ec:	4095      	lsls	r5, r2
   853ee:	f1c2 0920 	rsb	r9, r2, #32
   853f2:	fa27 f109 	lsr.w	r1, r7, r9
   853f6:	fa26 f909 	lsr.w	r9, r6, r9
   853fa:	4097      	lsls	r7, r2
   853fc:	0c28      	lsrs	r0, r5, #16
   853fe:	fbb1 f8f0 	udiv	r8, r1, r0
   85402:	fb00 1118 	mls	r1, r0, r8, r1
   85406:	fa1f fc85 	uxth.w	ip, r5
   8540a:	fb0c f308 	mul.w	r3, ip, r8
   8540e:	ea49 0907 	orr.w	r9, r9, r7
   85412:	ea4f 4719 	mov.w	r7, r9, lsr #16
   85416:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
   8541a:	428b      	cmp	r3, r1
   8541c:	fa06 f602 	lsl.w	r6, r6, r2
   85420:	d908      	bls.n	85434 <__divdi3+0x1a0>
   85422:	1949      	adds	r1, r1, r5
   85424:	f108 32ff 	add.w	r2, r8, #4294967295
   85428:	d27a      	bcs.n	85520 <__divdi3+0x28c>
   8542a:	428b      	cmp	r3, r1
   8542c:	d978      	bls.n	85520 <__divdi3+0x28c>
   8542e:	f1a8 0802 	sub.w	r8, r8, #2
   85432:	4429      	add	r1, r5
   85434:	1ac9      	subs	r1, r1, r3
   85436:	fbb1 f3f0 	udiv	r3, r1, r0
   8543a:	fb00 1713 	mls	r7, r0, r3, r1
   8543e:	fb0c f203 	mul.w	r2, ip, r3
   85442:	fa1f f989 	uxth.w	r9, r9
   85446:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
   8544a:	42ba      	cmp	r2, r7
   8544c:	d907      	bls.n	8545e <__divdi3+0x1ca>
   8544e:	197f      	adds	r7, r7, r5
   85450:	f103 31ff 	add.w	r1, r3, #4294967295
   85454:	d260      	bcs.n	85518 <__divdi3+0x284>
   85456:	42ba      	cmp	r2, r7
   85458:	d95e      	bls.n	85518 <__divdi3+0x284>
   8545a:	3b02      	subs	r3, #2
   8545c:	442f      	add	r7, r5
   8545e:	1abf      	subs	r7, r7, r2
   85460:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   85464:	e78c      	b.n	85380 <__divdi3+0xec>
   85466:	f1c8 0220 	rsb	r2, r8, #32
   8546a:	fa25 f102 	lsr.w	r1, r5, r2
   8546e:	fa03 fc08 	lsl.w	ip, r3, r8
   85472:	fa27 f302 	lsr.w	r3, r7, r2
   85476:	fa20 f202 	lsr.w	r2, r0, r2
   8547a:	fa07 f708 	lsl.w	r7, r7, r8
   8547e:	ea41 0c0c 	orr.w	ip, r1, ip
   85482:	ea4f 491c 	mov.w	r9, ip, lsr #16
   85486:	fbb3 f1f9 	udiv	r1, r3, r9
   8548a:	fb09 3311 	mls	r3, r9, r1, r3
   8548e:	fa1f fa8c 	uxth.w	sl, ip
   85492:	fb0a fb01 	mul.w	fp, sl, r1
   85496:	4317      	orrs	r7, r2
   85498:	0c3a      	lsrs	r2, r7, #16
   8549a:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   8549e:	459b      	cmp	fp, r3
   854a0:	fa05 f008 	lsl.w	r0, r5, r8
   854a4:	d908      	bls.n	854b8 <__divdi3+0x224>
   854a6:	eb13 030c 	adds.w	r3, r3, ip
   854aa:	f101 32ff 	add.w	r2, r1, #4294967295
   854ae:	d235      	bcs.n	8551c <__divdi3+0x288>
   854b0:	459b      	cmp	fp, r3
   854b2:	d933      	bls.n	8551c <__divdi3+0x288>
   854b4:	3902      	subs	r1, #2
   854b6:	4463      	add	r3, ip
   854b8:	ebcb 0303 	rsb	r3, fp, r3
   854bc:	fbb3 f2f9 	udiv	r2, r3, r9
   854c0:	fb09 3312 	mls	r3, r9, r2, r3
   854c4:	fb0a fa02 	mul.w	sl, sl, r2
   854c8:	b2bf      	uxth	r7, r7
   854ca:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
   854ce:	45ba      	cmp	sl, r7
   854d0:	d908      	bls.n	854e4 <__divdi3+0x250>
   854d2:	eb17 070c 	adds.w	r7, r7, ip
   854d6:	f102 33ff 	add.w	r3, r2, #4294967295
   854da:	d21b      	bcs.n	85514 <__divdi3+0x280>
   854dc:	45ba      	cmp	sl, r7
   854de:	d919      	bls.n	85514 <__divdi3+0x280>
   854e0:	3a02      	subs	r2, #2
   854e2:	4467      	add	r7, ip
   854e4:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
   854e8:	fba5 0100 	umull	r0, r1, r5, r0
   854ec:	ebca 0707 	rsb	r7, sl, r7
   854f0:	428f      	cmp	r7, r1
   854f2:	f04f 0300 	mov.w	r3, #0
   854f6:	d30a      	bcc.n	8550e <__divdi3+0x27a>
   854f8:	d005      	beq.n	85506 <__divdi3+0x272>
   854fa:	462a      	mov	r2, r5
   854fc:	e71c      	b.n	85338 <__divdi3+0xa4>
   854fe:	4662      	mov	r2, ip
   85500:	e6fd      	b.n	852fe <__divdi3+0x6a>
   85502:	463b      	mov	r3, r7
   85504:	e710      	b.n	85328 <__divdi3+0x94>
   85506:	fa06 f608 	lsl.w	r6, r6, r8
   8550a:	4286      	cmp	r6, r0
   8550c:	d2f5      	bcs.n	854fa <__divdi3+0x266>
   8550e:	1e6a      	subs	r2, r5, #1
   85510:	2300      	movs	r3, #0
   85512:	e711      	b.n	85338 <__divdi3+0xa4>
   85514:	461a      	mov	r2, r3
   85516:	e7e5      	b.n	854e4 <__divdi3+0x250>
   85518:	460b      	mov	r3, r1
   8551a:	e7a0      	b.n	8545e <__divdi3+0x1ca>
   8551c:	4611      	mov	r1, r2
   8551e:	e7cb      	b.n	854b8 <__divdi3+0x224>
   85520:	4690      	mov	r8, r2
   85522:	e787      	b.n	85434 <__divdi3+0x1a0>
   85524:	4643      	mov	r3, r8
   85526:	4642      	mov	r2, r8
   85528:	e706      	b.n	85338 <__divdi3+0xa4>
   8552a:	3a02      	subs	r2, #2
   8552c:	e750      	b.n	853d0 <__divdi3+0x13c>
   8552e:	3902      	subs	r1, #2
   85530:	442f      	add	r7, r5
   85532:	e739      	b.n	853a8 <__divdi3+0x114>

00085534 <__udivdi3>:
   85534:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85538:	4614      	mov	r4, r2
   8553a:	4605      	mov	r5, r0
   8553c:	460e      	mov	r6, r1
   8553e:	2b00      	cmp	r3, #0
   85540:	d143      	bne.n	855ca <__udivdi3+0x96>
   85542:	428a      	cmp	r2, r1
   85544:	d953      	bls.n	855ee <__udivdi3+0xba>
   85546:	fab2 f782 	clz	r7, r2
   8554a:	b157      	cbz	r7, 85562 <__udivdi3+0x2e>
   8554c:	f1c7 0620 	rsb	r6, r7, #32
   85550:	fa20 f606 	lsr.w	r6, r0, r6
   85554:	fa01 f307 	lsl.w	r3, r1, r7
   85558:	fa02 f407 	lsl.w	r4, r2, r7
   8555c:	fa00 f507 	lsl.w	r5, r0, r7
   85560:	431e      	orrs	r6, r3
   85562:	0c21      	lsrs	r1, r4, #16
   85564:	fbb6 f2f1 	udiv	r2, r6, r1
   85568:	fb01 6612 	mls	r6, r1, r2, r6
   8556c:	b2a0      	uxth	r0, r4
   8556e:	fb00 f302 	mul.w	r3, r0, r2
   85572:	0c2f      	lsrs	r7, r5, #16
   85574:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
   85578:	42b3      	cmp	r3, r6
   8557a:	d909      	bls.n	85590 <__udivdi3+0x5c>
   8557c:	1936      	adds	r6, r6, r4
   8557e:	f102 37ff 	add.w	r7, r2, #4294967295
   85582:	f080 80fd 	bcs.w	85780 <__udivdi3+0x24c>
   85586:	42b3      	cmp	r3, r6
   85588:	f240 80fa 	bls.w	85780 <__udivdi3+0x24c>
   8558c:	3a02      	subs	r2, #2
   8558e:	4426      	add	r6, r4
   85590:	1af6      	subs	r6, r6, r3
   85592:	fbb6 f3f1 	udiv	r3, r6, r1
   85596:	fb01 6113 	mls	r1, r1, r3, r6
   8559a:	fb00 f003 	mul.w	r0, r0, r3
   8559e:	b2ad      	uxth	r5, r5
   855a0:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
   855a4:	4288      	cmp	r0, r1
   855a6:	d908      	bls.n	855ba <__udivdi3+0x86>
   855a8:	1909      	adds	r1, r1, r4
   855aa:	f103 36ff 	add.w	r6, r3, #4294967295
   855ae:	f080 80e9 	bcs.w	85784 <__udivdi3+0x250>
   855b2:	4288      	cmp	r0, r1
   855b4:	f240 80e6 	bls.w	85784 <__udivdi3+0x250>
   855b8:	3b02      	subs	r3, #2
   855ba:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   855be:	2300      	movs	r3, #0
   855c0:	4610      	mov	r0, r2
   855c2:	4619      	mov	r1, r3
   855c4:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   855c8:	4770      	bx	lr
   855ca:	428b      	cmp	r3, r1
   855cc:	d84c      	bhi.n	85668 <__udivdi3+0x134>
   855ce:	fab3 f683 	clz	r6, r3
   855d2:	2e00      	cmp	r6, #0
   855d4:	d14f      	bne.n	85676 <__udivdi3+0x142>
   855d6:	428b      	cmp	r3, r1
   855d8:	d302      	bcc.n	855e0 <__udivdi3+0xac>
   855da:	4282      	cmp	r2, r0
   855dc:	f200 80dd 	bhi.w	8579a <__udivdi3+0x266>
   855e0:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   855e4:	2300      	movs	r3, #0
   855e6:	2201      	movs	r2, #1
   855e8:	4610      	mov	r0, r2
   855ea:	4619      	mov	r1, r3
   855ec:	4770      	bx	lr
   855ee:	b912      	cbnz	r2, 855f6 <__udivdi3+0xc2>
   855f0:	2401      	movs	r4, #1
   855f2:	fbb4 f4f2 	udiv	r4, r4, r2
   855f6:	fab4 f284 	clz	r2, r4
   855fa:	2a00      	cmp	r2, #0
   855fc:	f040 8082 	bne.w	85704 <__udivdi3+0x1d0>
   85600:	1b09      	subs	r1, r1, r4
   85602:	0c26      	lsrs	r6, r4, #16
   85604:	b2a7      	uxth	r7, r4
   85606:	2301      	movs	r3, #1
   85608:	fbb1 f0f6 	udiv	r0, r1, r6
   8560c:	fb06 1110 	mls	r1, r6, r0, r1
   85610:	fb07 f200 	mul.w	r2, r7, r0
   85614:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   85618:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
   8561c:	428a      	cmp	r2, r1
   8561e:	d907      	bls.n	85630 <__udivdi3+0xfc>
   85620:	1909      	adds	r1, r1, r4
   85622:	f100 3cff 	add.w	ip, r0, #4294967295
   85626:	d202      	bcs.n	8562e <__udivdi3+0xfa>
   85628:	428a      	cmp	r2, r1
   8562a:	f200 80c8 	bhi.w	857be <__udivdi3+0x28a>
   8562e:	4660      	mov	r0, ip
   85630:	1a89      	subs	r1, r1, r2
   85632:	fbb1 f2f6 	udiv	r2, r1, r6
   85636:	fb06 1112 	mls	r1, r6, r2, r1
   8563a:	fb07 f702 	mul.w	r7, r7, r2
   8563e:	b2ad      	uxth	r5, r5
   85640:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
   85644:	42af      	cmp	r7, r5
   85646:	d908      	bls.n	8565a <__udivdi3+0x126>
   85648:	192c      	adds	r4, r5, r4
   8564a:	f102 31ff 	add.w	r1, r2, #4294967295
   8564e:	f080 809b 	bcs.w	85788 <__udivdi3+0x254>
   85652:	42a7      	cmp	r7, r4
   85654:	f240 8098 	bls.w	85788 <__udivdi3+0x254>
   85658:	3a02      	subs	r2, #2
   8565a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   8565e:	4610      	mov	r0, r2
   85660:	4619      	mov	r1, r3
   85662:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85666:	4770      	bx	lr
   85668:	2300      	movs	r3, #0
   8566a:	461a      	mov	r2, r3
   8566c:	4610      	mov	r0, r2
   8566e:	4619      	mov	r1, r3
   85670:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85674:	4770      	bx	lr
   85676:	f1c6 0520 	rsb	r5, r6, #32
   8567a:	fa22 f705 	lsr.w	r7, r2, r5
   8567e:	fa03 f406 	lsl.w	r4, r3, r6
   85682:	fa21 f305 	lsr.w	r3, r1, r5
   85686:	fa01 fb06 	lsl.w	fp, r1, r6
   8568a:	fa20 f505 	lsr.w	r5, r0, r5
   8568e:	433c      	orrs	r4, r7
   85690:	ea4f 4814 	mov.w	r8, r4, lsr #16
   85694:	fbb3 fcf8 	udiv	ip, r3, r8
   85698:	fb08 331c 	mls	r3, r8, ip, r3
   8569c:	fa1f f984 	uxth.w	r9, r4
   856a0:	fb09 fa0c 	mul.w	sl, r9, ip
   856a4:	ea45 0b0b 	orr.w	fp, r5, fp
   856a8:	ea4f 451b 	mov.w	r5, fp, lsr #16
   856ac:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
   856b0:	459a      	cmp	sl, r3
   856b2:	fa02 f206 	lsl.w	r2, r2, r6
   856b6:	d904      	bls.n	856c2 <__udivdi3+0x18e>
   856b8:	191b      	adds	r3, r3, r4
   856ba:	f10c 35ff 	add.w	r5, ip, #4294967295
   856be:	d36f      	bcc.n	857a0 <__udivdi3+0x26c>
   856c0:	46ac      	mov	ip, r5
   856c2:	ebca 0303 	rsb	r3, sl, r3
   856c6:	fbb3 f5f8 	udiv	r5, r3, r8
   856ca:	fb08 3315 	mls	r3, r8, r5, r3
   856ce:	fb09 f905 	mul.w	r9, r9, r5
   856d2:	fa1f fb8b 	uxth.w	fp, fp
   856d6:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
   856da:	45b9      	cmp	r9, r7
   856dc:	d904      	bls.n	856e8 <__udivdi3+0x1b4>
   856de:	193f      	adds	r7, r7, r4
   856e0:	f105 33ff 	add.w	r3, r5, #4294967295
   856e4:	d362      	bcc.n	857ac <__udivdi3+0x278>
   856e6:	461d      	mov	r5, r3
   856e8:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
   856ec:	fbac 2302 	umull	r2, r3, ip, r2
   856f0:	ebc9 0707 	rsb	r7, r9, r7
   856f4:	429f      	cmp	r7, r3
   856f6:	f04f 0500 	mov.w	r5, #0
   856fa:	d34a      	bcc.n	85792 <__udivdi3+0x25e>
   856fc:	d046      	beq.n	8578c <__udivdi3+0x258>
   856fe:	4662      	mov	r2, ip
   85700:	462b      	mov	r3, r5
   85702:	e75d      	b.n	855c0 <__udivdi3+0x8c>
   85704:	4094      	lsls	r4, r2
   85706:	f1c2 0920 	rsb	r9, r2, #32
   8570a:	fa21 fc09 	lsr.w	ip, r1, r9
   8570e:	4091      	lsls	r1, r2
   85710:	fa20 f909 	lsr.w	r9, r0, r9
   85714:	0c26      	lsrs	r6, r4, #16
   85716:	fbbc f8f6 	udiv	r8, ip, r6
   8571a:	fb06 cc18 	mls	ip, r6, r8, ip
   8571e:	b2a7      	uxth	r7, r4
   85720:	fb07 f308 	mul.w	r3, r7, r8
   85724:	ea49 0901 	orr.w	r9, r9, r1
   85728:	ea4f 4119 	mov.w	r1, r9, lsr #16
   8572c:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
   85730:	4563      	cmp	r3, ip
   85732:	fa00 f502 	lsl.w	r5, r0, r2
   85736:	d909      	bls.n	8574c <__udivdi3+0x218>
   85738:	eb1c 0c04 	adds.w	ip, ip, r4
   8573c:	f108 32ff 	add.w	r2, r8, #4294967295
   85740:	d23b      	bcs.n	857ba <__udivdi3+0x286>
   85742:	4563      	cmp	r3, ip
   85744:	d939      	bls.n	857ba <__udivdi3+0x286>
   85746:	f1a8 0802 	sub.w	r8, r8, #2
   8574a:	44a4      	add	ip, r4
   8574c:	ebc3 0c0c 	rsb	ip, r3, ip
   85750:	fbbc f3f6 	udiv	r3, ip, r6
   85754:	fb06 c113 	mls	r1, r6, r3, ip
   85758:	fb07 f203 	mul.w	r2, r7, r3
   8575c:	fa1f f989 	uxth.w	r9, r9
   85760:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
   85764:	428a      	cmp	r2, r1
   85766:	d907      	bls.n	85778 <__udivdi3+0x244>
   85768:	1909      	adds	r1, r1, r4
   8576a:	f103 30ff 	add.w	r0, r3, #4294967295
   8576e:	d222      	bcs.n	857b6 <__udivdi3+0x282>
   85770:	428a      	cmp	r2, r1
   85772:	d920      	bls.n	857b6 <__udivdi3+0x282>
   85774:	3b02      	subs	r3, #2
   85776:	4421      	add	r1, r4
   85778:	1a89      	subs	r1, r1, r2
   8577a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   8577e:	e743      	b.n	85608 <__udivdi3+0xd4>
   85780:	463a      	mov	r2, r7
   85782:	e705      	b.n	85590 <__udivdi3+0x5c>
   85784:	4633      	mov	r3, r6
   85786:	e718      	b.n	855ba <__udivdi3+0x86>
   85788:	460a      	mov	r2, r1
   8578a:	e766      	b.n	8565a <__udivdi3+0x126>
   8578c:	40b0      	lsls	r0, r6
   8578e:	4290      	cmp	r0, r2
   85790:	d2b5      	bcs.n	856fe <__udivdi3+0x1ca>
   85792:	f10c 32ff 	add.w	r2, ip, #4294967295
   85796:	2300      	movs	r3, #0
   85798:	e712      	b.n	855c0 <__udivdi3+0x8c>
   8579a:	4633      	mov	r3, r6
   8579c:	4632      	mov	r2, r6
   8579e:	e70f      	b.n	855c0 <__udivdi3+0x8c>
   857a0:	459a      	cmp	sl, r3
   857a2:	d98d      	bls.n	856c0 <__udivdi3+0x18c>
   857a4:	f1ac 0c02 	sub.w	ip, ip, #2
   857a8:	4423      	add	r3, r4
   857aa:	e78a      	b.n	856c2 <__udivdi3+0x18e>
   857ac:	45b9      	cmp	r9, r7
   857ae:	d99a      	bls.n	856e6 <__udivdi3+0x1b2>
   857b0:	3d02      	subs	r5, #2
   857b2:	4427      	add	r7, r4
   857b4:	e798      	b.n	856e8 <__udivdi3+0x1b4>
   857b6:	4603      	mov	r3, r0
   857b8:	e7de      	b.n	85778 <__udivdi3+0x244>
   857ba:	4690      	mov	r8, r2
   857bc:	e7c6      	b.n	8574c <__udivdi3+0x218>
   857be:	3802      	subs	r0, #2
   857c0:	4421      	add	r1, r4
   857c2:	e735      	b.n	85630 <__udivdi3+0xfc>
   857c4:	0c040800 	.word	0x0c040800
   857c8:	0e060a02 	.word	0x0e060a02
   857cc:	0d050901 	.word	0x0d050901
   857d0:	0f070b03 	.word	0x0f070b03
   857d4:	414c4544 	.word	0x414c4544
   857d8:	45202059 	.word	0x45202059
   857dc:	004f4843 	.word	0x004f4843
   857e0:	0000736d 	.word	0x0000736d
   857e4:	00000025 	.word	0x00000025
   857e8:	73256425 	.word	0x73256425
   857ec:	00000020 	.word	0x00000020

000857f0 <_global_impure_ptr>:
   857f0:	20070010 20200043                                ... C.

000857f6 <blanks.6743>:
   857f6:	20202020 20202020 20202020 20202020                     

00085806 <zeroes.6744>:
   85806:	30303030 30303030 30303030 30303030     0000000000000000
   85816:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   85826:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   85836:	32313000 36353433 61393837 65646362     .0123456789abcde
   85846:	00300066 69666e49 7974696e 4e614e00     f.0.Infinity.NaN
   85856:	534f5000 2e005849 00050000                       .POSIX....

00085860 <p05.5289>:
   85860:	00000005 00000019 0000007d 00000000     ........}.......

00085870 <__mprec_tens>:
   85870:	00000000 3ff00000 00000000 40240000     .......?......$@
   85880:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   85890:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   858a0:	00000000 412e8480 00000000 416312d0     .......A......cA
   858b0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   858c0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   858d0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   858e0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   858f0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   85900:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   85910:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   85920:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   85930:	79d99db4 44ea7843                       ...yCx.D

00085938 <__mprec_tinytens>:
   85938:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   85948:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   85958:	64ac6f43 0ac80628                       Co.d(...

00085960 <__mprec_bigtens>:
   85960:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   85970:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   85980:	7f73bf3c 75154fdd                       <.s..O.u

00085988 <blanks.6687>:
   85988:	20202020 20202020 20202020 20202020                     

00085998 <zeroes.6688>:
   85998:	30303030 30303030 30303030 30303030     0000000000000000

000859a8 <_init>:
   859a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   859aa:	bf00      	nop
   859ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
   859ae:	bc08      	pop	{r3}
   859b0:	469e      	mov	lr, r3
   859b2:	4770      	bx	lr

000859b4 <__init_array_start>:
   859b4:	00081fd1 	.word	0x00081fd1

000859b8 <__frame_dummy_init_array_entry>:
   859b8:	0008016d                                m...

000859bc <_fini>:
   859bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   859be:	bf00      	nop
   859c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
   859c2:	bc08      	pop	{r3}
   859c4:	469e      	mov	lr, r3
   859c6:	4770      	bx	lr

000859c8 <__fini_array_start>:
   859c8:	00080145 	.word	0x00080145
