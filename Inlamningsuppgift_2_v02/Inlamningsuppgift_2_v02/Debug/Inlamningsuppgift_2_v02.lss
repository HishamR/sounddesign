
Inlamningsuppgift_2_v02.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005acc  00080000  00080000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00085acc  00085acc  0000dacc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000008c4  20070000  00085ad4  00010000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000027e0  200708c4  00086398  000108c4  2**2
                  ALLOC
  4 .stack        00002004  200730a4  00088b78  000108c4  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  000108c4  2**0
                  CONTENTS, READONLY
  6 .comment      00000071  00000000  00000000  000108ed  2**0
                  CONTENTS, READONLY
  7 .debug_info   000189be  00000000  00000000  0001095e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00004799  00000000  00000000  0002931c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000bb65  00000000  00000000  0002dab5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000c10  00000000  00000000  00039620  2**3
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000888  00000000  00000000  0003a230  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00017bd3  00000000  00000000  0003aab8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0001207b  00000000  00000000  0005268b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00062484  00000000  00000000  00064706  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000019b4  00000000  00000000  000c6b8c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	200750a8 	.word	0x200750a8
   80004:	00080e15 	.word	0x00080e15
   80008:	00080e11 	.word	0x00080e11
   8000c:	00080e11 	.word	0x00080e11
   80010:	00080e11 	.word	0x00080e11
   80014:	00080e11 	.word	0x00080e11
   80018:	00080e11 	.word	0x00080e11
	...
   8002c:	00080e11 	.word	0x00080e11
   80030:	00080e11 	.word	0x00080e11
   80034:	00000000 	.word	0x00000000
   80038:	00080e11 	.word	0x00080e11
   8003c:	00080e11 	.word	0x00080e11
   80040:	00080e11 	.word	0x00080e11
   80044:	00080e11 	.word	0x00080e11
   80048:	00080e11 	.word	0x00080e11
   8004c:	00080e11 	.word	0x00080e11
   80050:	00080e11 	.word	0x00080e11
   80054:	00080e11 	.word	0x00080e11
   80058:	00080e11 	.word	0x00080e11
   8005c:	00080e11 	.word	0x00080e11
   80060:	00080e11 	.word	0x00080e11
   80064:	00080e11 	.word	0x00080e11
   80068:	00000000 	.word	0x00000000
   8006c:	00080c2d 	.word	0x00080c2d
   80070:	00080c41 	.word	0x00080c41
   80074:	00080c55 	.word	0x00080c55
   80078:	00080c69 	.word	0x00080c69
	...
   80084:	00080e11 	.word	0x00080e11
   80088:	00080e11 	.word	0x00080e11
   8008c:	00080e11 	.word	0x00080e11
   80090:	00080e11 	.word	0x00080e11
   80094:	00080e11 	.word	0x00080e11
   80098:	00080e11 	.word	0x00080e11
   8009c:	00080e11 	.word	0x00080e11
   800a0:	00080e11 	.word	0x00080e11
   800a4:	00000000 	.word	0x00000000
   800a8:	00080e11 	.word	0x00080e11
   800ac:	00080639 	.word	0x00080639
   800b0:	00080e11 	.word	0x00080e11
   800b4:	00080e11 	.word	0x00080e11
   800b8:	00080e11 	.word	0x00080e11
   800bc:	00080e11 	.word	0x00080e11
   800c0:	00080e11 	.word	0x00080e11
   800c4:	00080e11 	.word	0x00080e11
   800c8:	00080e11 	.word	0x00080e11
   800cc:	00080e11 	.word	0x00080e11
   800d0:	00080e11 	.word	0x00080e11
   800d4:	00080e11 	.word	0x00080e11
   800d8:	00080e11 	.word	0x00080e11
   800dc:	00080e11 	.word	0x00080e11
   800e0:	00080e11 	.word	0x00080e11
   800e4:	00080e11 	.word	0x00080e11
   800e8:	00080e11 	.word	0x00080e11
   800ec:	00080e11 	.word	0x00080e11
   800f0:	00080e11 	.word	0x00080e11

000800f4 <deregister_tm_clones>:
   800f4:	b508      	push	{r3, lr}
   800f6:	4805      	ldr	r0, [pc, #20]	; (8010c <deregister_tm_clones+0x18>)
   800f8:	4b05      	ldr	r3, [pc, #20]	; (80110 <deregister_tm_clones+0x1c>)
   800fa:	1a1b      	subs	r3, r3, r0
   800fc:	2b06      	cmp	r3, #6
   800fe:	d800      	bhi.n	80102 <deregister_tm_clones+0xe>
   80100:	bd08      	pop	{r3, pc}
   80102:	4b04      	ldr	r3, [pc, #16]	; (80114 <deregister_tm_clones+0x20>)
   80104:	2b00      	cmp	r3, #0
   80106:	d0fb      	beq.n	80100 <deregister_tm_clones+0xc>
   80108:	4798      	blx	r3
   8010a:	e7f9      	b.n	80100 <deregister_tm_clones+0xc>
   8010c:	00085ad4 	.word	0x00085ad4
   80110:	00085ad7 	.word	0x00085ad7
   80114:	00000000 	.word	0x00000000

00080118 <register_tm_clones>:
   80118:	b508      	push	{r3, lr}
   8011a:	4807      	ldr	r0, [pc, #28]	; (80138 <register_tm_clones+0x20>)
   8011c:	4b07      	ldr	r3, [pc, #28]	; (8013c <register_tm_clones+0x24>)
   8011e:	1a1b      	subs	r3, r3, r0
   80120:	109b      	asrs	r3, r3, #2
   80122:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
   80126:	1059      	asrs	r1, r3, #1
   80128:	d100      	bne.n	8012c <register_tm_clones+0x14>
   8012a:	bd08      	pop	{r3, pc}
   8012c:	4a04      	ldr	r2, [pc, #16]	; (80140 <register_tm_clones+0x28>)
   8012e:	2a00      	cmp	r2, #0
   80130:	d0fb      	beq.n	8012a <register_tm_clones+0x12>
   80132:	4790      	blx	r2
   80134:	e7f9      	b.n	8012a <register_tm_clones+0x12>
   80136:	bf00      	nop
   80138:	00085ad4 	.word	0x00085ad4
   8013c:	00085ad4 	.word	0x00085ad4
   80140:	00000000 	.word	0x00000000

00080144 <__do_global_dtors_aux>:
   80144:	b510      	push	{r4, lr}
   80146:	4c06      	ldr	r4, [pc, #24]	; (80160 <__do_global_dtors_aux+0x1c>)
   80148:	7823      	ldrb	r3, [r4, #0]
   8014a:	b943      	cbnz	r3, 8015e <__do_global_dtors_aux+0x1a>
   8014c:	f7ff ffd2 	bl	800f4 <deregister_tm_clones>
   80150:	4b04      	ldr	r3, [pc, #16]	; (80164 <__do_global_dtors_aux+0x20>)
   80152:	b113      	cbz	r3, 8015a <__do_global_dtors_aux+0x16>
   80154:	4804      	ldr	r0, [pc, #16]	; (80168 <__do_global_dtors_aux+0x24>)
   80156:	f3af 8000 	nop.w
   8015a:	2301      	movs	r3, #1
   8015c:	7023      	strb	r3, [r4, #0]
   8015e:	bd10      	pop	{r4, pc}
   80160:	200708c4 	.word	0x200708c4
   80164:	00000000 	.word	0x00000000
   80168:	00085ad4 	.word	0x00085ad4

0008016c <frame_dummy>:
   8016c:	b508      	push	{r3, lr}
   8016e:	4b08      	ldr	r3, [pc, #32]	; (80190 <frame_dummy+0x24>)
   80170:	b11b      	cbz	r3, 8017a <frame_dummy+0xe>
   80172:	4808      	ldr	r0, [pc, #32]	; (80194 <frame_dummy+0x28>)
   80174:	4908      	ldr	r1, [pc, #32]	; (80198 <frame_dummy+0x2c>)
   80176:	f3af 8000 	nop.w
   8017a:	4808      	ldr	r0, [pc, #32]	; (8019c <frame_dummy+0x30>)
   8017c:	6803      	ldr	r3, [r0, #0]
   8017e:	b113      	cbz	r3, 80186 <frame_dummy+0x1a>
   80180:	4b07      	ldr	r3, [pc, #28]	; (801a0 <frame_dummy+0x34>)
   80182:	b103      	cbz	r3, 80186 <frame_dummy+0x1a>
   80184:	4798      	blx	r3
   80186:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   8018a:	f7ff bfc5 	b.w	80118 <register_tm_clones>
   8018e:	bf00      	nop
   80190:	00000000 	.word	0x00000000
   80194:	00085ad4 	.word	0x00085ad4
   80198:	200708c8 	.word	0x200708c8
   8019c:	00085ad4 	.word	0x00085ad4
   801a0:	00000000 	.word	0x00000000

000801a4 <adc_setup>:
*/

#include <asf.h>
#include "adc_dac.h"

void adc_setup() {
   801a4:	b538      	push	{r3, r4, r5, lr}
	
	pmc_enable_periph_clk(ID_ADC);
   801a6:	2025      	movs	r0, #37	; 0x25
   801a8:	4b0f      	ldr	r3, [pc, #60]	; (801e8 <adc_setup+0x44>)
   801aa:	4798      	blx	r3
	adc_init(ADC, sysclk_get_main_hz(), 20000000, 0);	//Configure for maximum frequency @ 84 MHz, CHECK THIS!!
   801ac:	4c0f      	ldr	r4, [pc, #60]	; (801ec <adc_setup+0x48>)
   801ae:	4620      	mov	r0, r4
   801b0:	490f      	ldr	r1, [pc, #60]	; (801f0 <adc_setup+0x4c>)
   801b2:	4a10      	ldr	r2, [pc, #64]	; (801f4 <adc_setup+0x50>)
   801b4:	2300      	movs	r3, #0
   801b6:	4d10      	ldr	r5, [pc, #64]	; (801f8 <adc_setup+0x54>)
   801b8:	47a8      	blx	r5
	adc_configure_timing(ADC, 0, 0, 0);					//
   801ba:	4620      	mov	r0, r4
   801bc:	2100      	movs	r1, #0
   801be:	460a      	mov	r2, r1
   801c0:	460b      	mov	r3, r1
   801c2:	4d0e      	ldr	r5, [pc, #56]	; (801fc <adc_setup+0x58>)
   801c4:	47a8      	blx	r5
	adc_set_resolution(ADC, ADC_MR_LOWRES_BITS_12);		//
   801c6:	4620      	mov	r0, r4
   801c8:	2100      	movs	r1, #0
   801ca:	4b0d      	ldr	r3, [pc, #52]	; (80200 <adc_setup+0x5c>)
   801cc:	4798      	blx	r3
	adc_enable_channel(ADC, ADC_CHANNEL_10);			//Analog Input 8 on Arduino Due, used for Sampling
   801ce:	4620      	mov	r0, r4
   801d0:	210a      	movs	r1, #10
   801d2:	4d0c      	ldr	r5, [pc, #48]	; (80204 <adc_setup+0x60>)
   801d4:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL_7);				//Analog Input 0 on Arduino Due, used for Buttons
   801d6:	4620      	mov	r0, r4
   801d8:	2107      	movs	r1, #7
   801da:	47a8      	blx	r5
	adc_configure_trigger(ADC, ADC_TRIG_SW, 0);			//Trigger by Software
   801dc:	4620      	mov	r0, r4
   801de:	2100      	movs	r1, #0
   801e0:	460a      	mov	r2, r1
   801e2:	4b09      	ldr	r3, [pc, #36]	; (80208 <adc_setup+0x64>)
   801e4:	4798      	blx	r3
   801e6:	bd38      	pop	{r3, r4, r5, pc}
   801e8:	00080d65 	.word	0x00080d65
   801ec:	400c0000 	.word	0x400c0000
   801f0:	0a037a00 	.word	0x0a037a00
   801f4:	01312d00 	.word	0x01312d00
   801f8:	000808a1 	.word	0x000808a1
   801fc:	000808f5 	.word	0x000808f5
   80200:	000808d5 	.word	0x000808d5
   80204:	0008091d 	.word	0x0008091d
   80208:	000808e5 	.word	0x000808e5

0008020c <dac_setup>:
}

void dac_setup() {
   8020c:	b538      	push	{r3, r4, r5, lr}
	
	pmc_enable_periph_clk(ID_DACC);
   8020e:	2026      	movs	r0, #38	; 0x26
   80210:	4b0c      	ldr	r3, [pc, #48]	; (80244 <dac_setup+0x38>)
   80212:	4798      	blx	r3
	dacc_reset(DACC);
   80214:	4c0c      	ldr	r4, [pc, #48]	; (80248 <dac_setup+0x3c>)
   80216:	4620      	mov	r0, r4
   80218:	4b0c      	ldr	r3, [pc, #48]	; (8024c <dac_setup+0x40>)
   8021a:	4798      	blx	r3
	dacc_set_transfer_mode(DACC, 0);
   8021c:	4620      	mov	r0, r4
   8021e:	2100      	movs	r1, #0
   80220:	4b0b      	ldr	r3, [pc, #44]	; (80250 <dac_setup+0x44>)
   80222:	4798      	blx	r3
	dacc_set_timing(DACC,1,1,0);						//1 is shortest refresh period, 1 max. speed, 0 startup time
   80224:	4620      	mov	r0, r4
   80226:	2101      	movs	r1, #1
   80228:	460a      	mov	r2, r1
   8022a:	2300      	movs	r3, #0
   8022c:	4d09      	ldr	r5, [pc, #36]	; (80254 <dac_setup+0x48>)
   8022e:	47a8      	blx	r5
	dacc_set_channel_selection(DACC,0);					//Channel DAC0
   80230:	4620      	mov	r0, r4
   80232:	2100      	movs	r1, #0
   80234:	4b08      	ldr	r3, [pc, #32]	; (80258 <dac_setup+0x4c>)
   80236:	4798      	blx	r3
	dacc_enable_channel(DACC, 0);						//enable DAC0
   80238:	4620      	mov	r0, r4
   8023a:	2100      	movs	r1, #0
   8023c:	4b07      	ldr	r3, [pc, #28]	; (8025c <dac_setup+0x50>)
   8023e:	4798      	blx	r3
   80240:	bd38      	pop	{r3, r4, r5, pc}
   80242:	bf00      	nop
   80244:	00080d65 	.word	0x00080d65
   80248:	400c8000 	.word	0x400c8000
   8024c:	0008093d 	.word	0x0008093d
   80250:	00080945 	.word	0x00080945
   80254:	00080979 	.word	0x00080979
   80258:	00080961 	.word	0x00080961
   8025c:	000809a9 	.word	0x000809a9

00080260 <configure_tc>:
*/

#include <asf.h>
#include "conf_tc.h"

void configure_tc(void) {
   80260:	b510      	push	{r4, lr}

	/* Configure PMC */
	pmc_enable_periph_clk(ID_TC0);
   80262:	201b      	movs	r0, #27
   80264:	4b0e      	ldr	r3, [pc, #56]	; (802a0 <configure_tc+0x40>)
   80266:	4798      	blx	r3

	/** Configure TC for a 10 kHz frequency and trigger on RC compare. */
	tc_init(TC0, 0, 0 | TC_CMR_CPCTRG);			//Timer_clock_1 - MCK/2 - 42 MHz
   80268:	4c0e      	ldr	r4, [pc, #56]	; (802a4 <configure_tc+0x44>)
   8026a:	4620      	mov	r0, r4
   8026c:	2100      	movs	r1, #0
   8026e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   80272:	4b0d      	ldr	r3, [pc, #52]	; (802a8 <configure_tc+0x48>)
   80274:	4798      	blx	r3
	tc_write_rc(TC0, 0, 4200);					//4200 corresponds to fs = 10 kHz
   80276:	4620      	mov	r0, r4
   80278:	2100      	movs	r1, #0
   8027a:	f241 0268 	movw	r2, #4200	; 0x1068
   8027e:	4b0b      	ldr	r3, [pc, #44]	; (802ac <configure_tc+0x4c>)
   80280:	4798      	blx	r3

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   80282:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   80286:	4b0a      	ldr	r3, [pc, #40]	; (802b0 <configure_tc+0x50>)
   80288:	601a      	str	r2, [r3, #0]

	/* Configure and enable interrupt on RC compare */
	NVIC_EnableIRQ((IRQn_Type) ID_TC0);
	tc_enable_interrupt(TC0, 0, TC_IER_CPCS);
   8028a:	4620      	mov	r0, r4
   8028c:	2100      	movs	r1, #0
   8028e:	2210      	movs	r2, #16
   80290:	4b08      	ldr	r3, [pc, #32]	; (802b4 <configure_tc+0x54>)
   80292:	4798      	blx	r3

	tc_start(TC0, 0);
   80294:	4620      	mov	r0, r4
   80296:	2100      	movs	r1, #0
   80298:	4b07      	ldr	r3, [pc, #28]	; (802b8 <configure_tc+0x58>)
   8029a:	4798      	blx	r3
   8029c:	bd10      	pop	{r4, pc}
   8029e:	bf00      	nop
   802a0:	00080d65 	.word	0x00080d65
   802a4:	40080000 	.word	0x40080000
   802a8:	00080dbd 	.word	0x00080dbd
   802ac:	00080df9 	.word	0x00080df9
   802b0:	e000e100 	.word	0xe000e100
   802b4:	00080e01 	.word	0x00080e01
   802b8:	00080de1 	.word	0x00080de1

000802bc <delay_init>:
*/

#include "delay.h"

void delay_init(void)
{
   802bc:	b510      	push	{r4, lr}
	pmc_enable_periph_clk(ID_TC3);
   802be:	201e      	movs	r0, #30
   802c0:	4b08      	ldr	r3, [pc, #32]	; (802e4 <delay_init+0x28>)
   802c2:	4798      	blx	r3
	tc_init(TC1,0,0);	/*TC0, channel 0, TCLK1 och capturemode */
   802c4:	4c08      	ldr	r4, [pc, #32]	; (802e8 <delay_init+0x2c>)
   802c6:	4620      	mov	r0, r4
   802c8:	2100      	movs	r1, #0
   802ca:	460a      	mov	r2, r1
   802cc:	4b07      	ldr	r3, [pc, #28]	; (802ec <delay_init+0x30>)
   802ce:	4798      	blx	r3
	tc_set_block_mode(TC1,0);
   802d0:	4620      	mov	r0, r4
   802d2:	2100      	movs	r1, #0
   802d4:	4b06      	ldr	r3, [pc, #24]	; (802f0 <delay_init+0x34>)
   802d6:	4798      	blx	r3
	tc_stop(TC1,0);		/* Making sure the timer is not running */
   802d8:	4620      	mov	r0, r4
   802da:	2100      	movs	r1, #0
   802dc:	4b05      	ldr	r3, [pc, #20]	; (802f4 <delay_init+0x38>)
   802de:	4798      	blx	r3
   802e0:	bd10      	pop	{r4, pc}
   802e2:	bf00      	nop
   802e4:	00080d65 	.word	0x00080d65
   802e8:	40084000 	.word	0x40084000
   802ec:	00080dbd 	.word	0x00080dbd
   802f0:	00080dd9 	.word	0x00080dd9
   802f4:	00080de9 	.word	0x00080de9

000802f8 <delay>:
}

void delay(uint32_t us)
/* A Delay of us microseconds */
{
   802f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   802fa:	4604      	mov	r4, r0
	tc_start(TC1,0);
   802fc:	4809      	ldr	r0, [pc, #36]	; (80324 <delay+0x2c>)
   802fe:	2100      	movs	r1, #0
   80300:	4b09      	ldr	r3, [pc, #36]	; (80328 <delay+0x30>)
   80302:	4798      	blx	r3
	while (tc_read_cv(TC1,0) < us*42);	/* TIMER_CLOCK1 runs on MCK/2 */
   80304:	272a      	movs	r7, #42	; 0x2a
   80306:	fb07 f704 	mul.w	r7, r7, r4
   8030a:	4e06      	ldr	r6, [pc, #24]	; (80324 <delay+0x2c>)
   8030c:	2500      	movs	r5, #0
   8030e:	4c07      	ldr	r4, [pc, #28]	; (8032c <delay+0x34>)
   80310:	4630      	mov	r0, r6
   80312:	4629      	mov	r1, r5
   80314:	47a0      	blx	r4
   80316:	42b8      	cmp	r0, r7
   80318:	d3fa      	bcc.n	80310 <delay+0x18>
	tc_stop(TC1,0);
   8031a:	4802      	ldr	r0, [pc, #8]	; (80324 <delay+0x2c>)
   8031c:	2100      	movs	r1, #0
   8031e:	4b04      	ldr	r3, [pc, #16]	; (80330 <delay+0x38>)
   80320:	4798      	blx	r3
   80322:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80324:	40084000 	.word	0x40084000
   80328:	00080de1 	.word	0x00080de1
   8032c:	00080df1 	.word	0x00080df1
   80330:	00080de9 	.word	0x00080de9

00080334 <lcd_write>:
*	type = 0 controls the display
*	type = 1 writes the content of the byte (usually interpreted as ASCII-code) to the display
*
*	LCDwrite returns the actual pinout value on PIOC 26-23, which is the reverse order compared to the Due pin order of D4-D7
*/
{
   80334:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80338:	b084      	sub	sp, #16
   8033a:	4607      	mov	r7, r0
   8033c:	460d      	mov	r5, r1
	/* In it's infinite wisdom the shield has the data pins in mirrored order compared to the Due board */
	uint8_t mirror_pin[16]={0b0000,0b1000,0b0100,0b1100,0b0010,0b1010,0b0110,0b1110,0b0001,0b1001,0b0101,0b1101,0b0011,0b1011,0b0111,0b1111};
   8033e:	4b22      	ldr	r3, [pc, #136]	; (803c8 <lcd_write+0x94>)
   80340:	466c      	mov	r4, sp
   80342:	6818      	ldr	r0, [r3, #0]
   80344:	6859      	ldr	r1, [r3, #4]
   80346:	689a      	ldr	r2, [r3, #8]
   80348:	68db      	ldr	r3, [r3, #12]
   8034a:	c40f      	stmia	r4!, {r0, r1, r2, r3}

	byte_orig = byte;

	/* write the first 4 bits to the shield. */
	byte = byte>>4;
	byte = mirror_pin[byte];
   8034c:	eb04 1317 	add.w	r3, r4, r7, lsr #4
   80350:	f813 2c10 	ldrb.w	r2, [r3, #-16]
	byte32 = (uint32_t)byte << 23;
   80354:	05d3      	lsls	r3, r2, #23
	mirrored_output = byte<<4;
   80356:	0112      	lsls	r2, r2, #4
   80358:	fa5f f882 	uxtb.w	r8, r2
__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
   8035c:	b125      	cbz	r5, 80368 <lcd_write+0x34>
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   8035e:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
   80362:	4a1a      	ldr	r2, [pc, #104]	; (803cc <lcd_write+0x98>)
   80364:	6311      	str	r1, [r2, #48]	; 0x30
   80366:	e003      	b.n	80370 <lcd_write+0x3c>
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80368:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
   8036c:	4a17      	ldr	r2, [pc, #92]	; (803cc <lcd_write+0x98>)
   8036e:	6351      	str	r1, [r2, #52]	; 0x34
__always_inline static void arch_ioport_set_port_level(ioport_port_t port,
		ioport_port_mask_t mask, ioport_port_mask_t level)
{
	Pio *base = arch_ioport_port_to_base(port);

	base->PIO_SODR = mask & level;
   80370:	f003 62f0 	and.w	r2, r3, #125829120	; 0x7800000
   80374:	4c15      	ldr	r4, [pc, #84]	; (803cc <lcd_write+0x98>)
   80376:	6322      	str	r2, [r4, #48]	; 0x30
	base->PIO_CODR = mask & ~level;
   80378:	43db      	mvns	r3, r3
   8037a:	f003 63f0 	and.w	r3, r3, #125829120	; 0x7800000
   8037e:	6363      	str	r3, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80380:	f44f 1600 	mov.w	r6, #2097152	; 0x200000
   80384:	6326      	str	r6, [r4, #48]	; 0x30
	
	ioport_set_pin_level(LCD_RS, type);
	ioport_set_port_level(IOPORT_PIOC, LCD_mask_D4_D7, byte32);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);
   80386:	2001      	movs	r0, #1
   80388:	4d11      	ldr	r5, [pc, #68]	; (803d0 <lcd_write+0x9c>)
   8038a:	47a8      	blx	r5
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   8038c:	6366      	str	r6, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(100);
   8038e:	2064      	movs	r0, #100	; 0x64
   80390:	47a8      	blx	r5
	
	/* write the second 4 bits to the shield. */
	byte = byte_orig;
	byte = byte & 0x0f;
	byte = mirror_pin[byte];
   80392:	f007 070f 	and.w	r7, r7, #15
   80396:	ab04      	add	r3, sp, #16
   80398:	441f      	add	r7, r3
   8039a:	f817 2c10 	ldrb.w	r2, [r7, #-16]
	byte32 = (uint32_t)byte<<23;
   8039e:	05d3      	lsls	r3, r2, #23
	mirrored_output = mirrored_output + byte;
   803a0:	4442      	add	r2, r8
   803a2:	b2d7      	uxtb	r7, r2
__always_inline static void arch_ioport_set_port_level(ioport_port_t port,
		ioport_port_mask_t mask, ioport_port_mask_t level)
{
	Pio *base = arch_ioport_port_to_base(port);

	base->PIO_SODR = mask & level;
   803a4:	f003 62f0 	and.w	r2, r3, #125829120	; 0x7800000
   803a8:	6322      	str	r2, [r4, #48]	; 0x30
	base->PIO_CODR = mask & ~level;
   803aa:	43db      	mvns	r3, r3
   803ac:	f003 63f0 	and.w	r3, r3, #125829120	; 0x7800000
   803b0:	6363      	str	r3, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   803b2:	6326      	str	r6, [r4, #48]	; 0x30

	ioport_set_port_level(IOPORT_PIOC, LCD_mask_D4_D7, byte32);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);
   803b4:	2001      	movs	r0, #1
   803b6:	47a8      	blx	r5
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   803b8:	6366      	str	r6, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	delay(100);
   803ba:	2064      	movs	r0, #100	; 0x64
   803bc:	47a8      	blx	r5
	
	return mirrored_output;
}
   803be:	4638      	mov	r0, r7
   803c0:	b004      	add	sp, #16
   803c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   803c6:	bf00      	nop
   803c8:	000858b4 	.word	0x000858b4
   803cc:	400e1200 	.word	0x400e1200
   803d0:	000802f9 	.word	0x000802f9

000803d4 <lcd_init>:
*/

#include "LCDShield.h"

int lcd_init(void)		/* Initializes the display on the LCD shield, returns 1 if everything is ok */
{
   803d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   803d8:	4c34      	ldr	r4, [pc, #208]	; (804ac <lcd_init+0xd8>)
   803da:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
   803de:	6127      	str	r7, [r4, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   803e0:	f8c4 70a0 	str.w	r7, [r4, #160]	; 0xa0
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   803e4:	f44f 1500 	mov.w	r5, #2097152	; 0x200000
   803e8:	6125      	str	r5, [r4, #16]
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   803ea:	f8c4 50a0 	str.w	r5, [r4, #160]	; 0xa0
		ioport_port_mask_t mask, enum ioport_direction group_direction)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (group_direction == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = mask;
   803ee:	f04f 63f0 	mov.w	r3, #125829120	; 0x7800000
   803f2:	6123      	str	r3, [r4, #16]
	} else if (group_direction == IOPORT_DIR_INPUT) {
		base->PIO_ODR = mask;
	}

	base->PIO_OWER = mask;
   803f4:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   803f8:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_dir(LCD_Enable, IOPORT_DIR_OUTPUT);
	ioport_set_port_dir(IOPORT_PIOC, LCD_mask_D4_D7, IOPORT_DIR_OUTPUT);
	
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(30000);		/* wait > 15 ms */
   803fa:	f247 5030 	movw	r0, #30000	; 0x7530
   803fe:	4e2c      	ldr	r6, [pc, #176]	; (804b0 <lcd_init+0xdc>)
   80400:	47b0      	blx	r6
   80402:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80404:	f04f 6a80 	mov.w	sl, #67108864	; 0x4000000
   80408:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
   8040c:	f04f 7900 	mov.w	r9, #33554432	; 0x2000000
   80410:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80414:	f04f 7880 	mov.w	r8, #16777216	; 0x1000000
   80418:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   8041c:	f44f 0700 	mov.w	r7, #8388608	; 0x800000
   80420:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80422:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, HIGH);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);		/* delay 1 us */
   80424:	2001      	movs	r0, #1
   80426:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80428:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(4100);	/* wait for more than 4,1 ms */
   8042a:	f241 0004 	movw	r0, #4100	; 0x1004
   8042e:	47b0      	blx	r6
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80430:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
   80434:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80438:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   8043c:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   8043e:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, HIGH);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);		/* delay 1 us */
   80440:	2001      	movs	r0, #1
   80442:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80444:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);

	delay(100);	/* wait 100 us */
   80446:	2064      	movs	r0, #100	; 0x64
   80448:	47b0      	blx	r6
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   8044a:	f8c4 a030 	str.w	sl, [r4, #48]	; 0x30
   8044e:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80452:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   80456:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80458:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, HIGH);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);		/* delay 1 us */
   8045a:	2001      	movs	r0, #1
   8045c:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   8045e:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(100);	/* wait 100 us */
   80460:	2064      	movs	r0, #100	; 0x64
   80462:	47b0      	blx	r6
   80464:	f8c4 a034 	str.w	sl, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80468:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   8046c:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
   80470:	6367      	str	r7, [r4, #52]	; 0x34
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80472:	6325      	str	r5, [r4, #48]	; 0x30
	ioport_set_pin_level(LCD_D4, LOW);
	ioport_set_pin_level(LCD_D5, HIGH);
	ioport_set_pin_level(LCD_D6, LOW);
	ioport_set_pin_level(LCD_D7, LOW);
	ioport_set_pin_level(LCD_Enable, HIGH);
	delay(1);
   80474:	2001      	movs	r0, #1
   80476:	47b0      	blx	r6
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80478:	6365      	str	r5, [r4, #52]	; 0x34
	ioport_set_pin_level(LCD_Enable, LOW);
	
	delay(100);
   8047a:	2064      	movs	r0, #100	; 0x64
   8047c:	47b0      	blx	r6

	lcd_write(0b00101000, LOW);		/* Two rows, small font */
   8047e:	2028      	movs	r0, #40	; 0x28
   80480:	2100      	movs	r1, #0
   80482:	4c0c      	ldr	r4, [pc, #48]	; (804b4 <lcd_init+0xe0>)
   80484:	47a0      	blx	r4
	lcd_write(0b00001000, LOW);		/* Display off */
   80486:	2008      	movs	r0, #8
   80488:	2100      	movs	r1, #0
   8048a:	47a0      	blx	r4
	lcd_write(0b00000001, LOW);		/* Display clear */
   8048c:	2001      	movs	r0, #1
   8048e:	2100      	movs	r1, #0
   80490:	47a0      	blx	r4
	
	delay(3000);
   80492:	f640 30b8 	movw	r0, #3000	; 0xbb8
   80496:	47b0      	blx	r6
	
	lcd_write(0b00000110, LOW);		/* Entry mode set: move cursor right, no display shift */
   80498:	2006      	movs	r0, #6
   8049a:	2100      	movs	r1, #0
   8049c:	47a0      	blx	r4
	lcd_write(0b00001111 ,LOW);		/* Display on, cursor on, blinking on */
   8049e:	200f      	movs	r0, #15
   804a0:	2100      	movs	r1, #0
   804a2:	47a0      	blx	r4

	all_ok = 1;					/* simple return statement showing that the initialization of the LCD has completed */
	return all_ok;
}
   804a4:	2001      	movs	r0, #1
   804a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   804aa:	bf00      	nop
   804ac:	400e1200 	.word	0x400e1200
   804b0:	000802f9 	.word	0x000802f9
   804b4:	00080335 	.word	0x00080335

000804b8 <lcd_clear>:
	
	return mirrored_output;
}

int lcd_clear(void)
{
   804b8:	b508      	push	{r3, lr}
	int all_Ok = 0;
	lcd_write(0b00000001, LOW);
   804ba:	2001      	movs	r0, #1
   804bc:	2100      	movs	r1, #0
   804be:	4b04      	ldr	r3, [pc, #16]	; (804d0 <lcd_clear+0x18>)
   804c0:	4798      	blx	r3
	delay(1600);
   804c2:	f44f 60c8 	mov.w	r0, #1600	; 0x640
   804c6:	4b03      	ldr	r3, [pc, #12]	; (804d4 <lcd_clear+0x1c>)
   804c8:	4798      	blx	r3
	all_Ok = 1;
	return all_Ok;
}
   804ca:	2001      	movs	r0, #1
   804cc:	bd08      	pop	{r3, pc}
   804ce:	bf00      	nop
   804d0:	00080335 	.word	0x00080335
   804d4:	000802f9 	.word	0x000802f9

000804d8 <lcd_write_str>:

/*
* Displays strings on the Arduino Shield Display
*/
int lcd_write_str(const char* str)
{
   804d8:	b570      	push	{r4, r5, r6, lr}
   804da:	4604      	mov	r4, r0
	int all_ok = 0;
	
	/*
	* Loops until break
	*/
	while (*str != '\0')
   804dc:	7800      	ldrb	r0, [r0, #0]
   804de:	b138      	cbz	r0, 804f0 <lcd_write_str+0x18>
	{
		lcd_write(*str, HIGH);
   804e0:	2601      	movs	r6, #1
   804e2:	4d04      	ldr	r5, [pc, #16]	; (804f4 <lcd_write_str+0x1c>)
   804e4:	4631      	mov	r1, r6
   804e6:	47a8      	blx	r5
	int all_ok = 0;
	
	/*
	* Loops until break
	*/
	while (*str != '\0')
   804e8:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   804ec:	2800      	cmp	r0, #0
   804ee:	d1f9      	bne.n	804e4 <lcd_write_str+0xc>
		str++;
	}
	
	all_ok = 1;
	return all_ok;
}
   804f0:	2001      	movs	r0, #1
   804f2:	bd70      	pop	{r4, r5, r6, pc}
   804f4:	00080335 	.word	0x00080335

000804f8 <lcd_write_int>:
	all_Ok = 1;
	return all_Ok;
}

int lcd_write_int(int number)
{
   804f8:	b500      	push	{lr}
   804fa:	b085      	sub	sp, #20
   804fc:	4602      	mov	r2, r0
	char output[10];
	sprintf(output, "%d", number);
   804fe:	a801      	add	r0, sp, #4
   80500:	4904      	ldr	r1, [pc, #16]	; (80514 <lcd_write_int+0x1c>)
   80502:	4b05      	ldr	r3, [pc, #20]	; (80518 <lcd_write_int+0x20>)
   80504:	4798      	blx	r3
	lcd_write_str(output);
   80506:	a801      	add	r0, sp, #4
   80508:	4b04      	ldr	r3, [pc, #16]	; (8051c <lcd_write_int+0x24>)
   8050a:	4798      	blx	r3
	return 1;

}
   8050c:	2001      	movs	r0, #1
   8050e:	b005      	add	sp, #20
   80510:	f85d fb04 	ldr.w	pc, [sp], #4
   80514:	000858c4 	.word	0x000858c4
   80518:	00081139 	.word	0x00081139
   8051c:	000804d9 	.word	0x000804d9

00080520 <lcd_cursor_pos>:
	all_ok = 1;
	return all_ok;
}

int lcd_cursor_pos(uint8_t row, uint8_t col)
{
   80520:	b508      	push	{r3, lr}
	lcd_write((128 | (row << 6) | col), LOW);
   80522:	f061 017f 	orn	r1, r1, #127	; 0x7f
   80526:	ea41 1080 	orr.w	r0, r1, r0, lsl #6
   8052a:	b2c0      	uxtb	r0, r0
   8052c:	2100      	movs	r1, #0
   8052e:	4b03      	ldr	r3, [pc, #12]	; (8053c <lcd_cursor_pos+0x1c>)
   80530:	4798      	blx	r3
	delay(40);	//delay of 40ms
   80532:	2028      	movs	r0, #40	; 0x28
   80534:	4b02      	ldr	r3, [pc, #8]	; (80540 <lcd_cursor_pos+0x20>)
   80536:	4798      	blx	r3
	return 1;
   80538:	2001      	movs	r0, #1
   8053a:	bd08      	pop	{r3, pc}
   8053c:	00080335 	.word	0x00080335
   80540:	000802f9 	.word	0x000802f9

00080544 <main>:
#include "conf_tc.h"
#include "LCDShield.h"
#include "sample_int.h"
#include "delay.h"

int main(void) {
   80544:	b508      	push	{r3, lr}
	
	sysclk_init();
   80546:	4b14      	ldr	r3, [pc, #80]	; (80598 <main+0x54>)
   80548:	4798      	blx	r3
 	board_init();
   8054a:	4b14      	ldr	r3, [pc, #80]	; (8059c <main+0x58>)
   8054c:	4798      	blx	r3
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   8054e:	200b      	movs	r0, #11
   80550:	4c13      	ldr	r4, [pc, #76]	; (805a0 <main+0x5c>)
   80552:	47a0      	blx	r4
   80554:	200c      	movs	r0, #12
   80556:	47a0      	blx	r4
   80558:	200d      	movs	r0, #13
   8055a:	47a0      	blx	r4
   8055c:	200e      	movs	r0, #14
   8055e:	47a0      	blx	r4
 	ioport_init();
 	adc_setup();
   80560:	4b10      	ldr	r3, [pc, #64]	; (805a4 <main+0x60>)
   80562:	4798      	blx	r3
 	dac_setup();
   80564:	4b10      	ldr	r3, [pc, #64]	; (805a8 <main+0x64>)
   80566:	4798      	blx	r3
 	delay_init();
   80568:	4b10      	ldr	r3, [pc, #64]	; (805ac <main+0x68>)
   8056a:	4798      	blx	r3
 	configure_tc();
   8056c:	4b10      	ldr	r3, [pc, #64]	; (805b0 <main+0x6c>)
   8056e:	4798      	blx	r3
	lcd_init();
   80570:	4b10      	ldr	r3, [pc, #64]	; (805b4 <main+0x70>)
   80572:	4798      	blx	r3
	lcd_cursor_pos(0,0);
   80574:	2000      	movs	r0, #0
   80576:	4601      	mov	r1, r0
   80578:	4b0f      	ldr	r3, [pc, #60]	; (805b8 <main+0x74>)
   8057a:	4798      	blx	r3
	lcd_write_str("VERSION 9000");
   8057c:	480f      	ldr	r0, [pc, #60]	; (805bc <main+0x78>)
   8057e:	4b10      	ldr	r3, [pc, #64]	; (805c0 <main+0x7c>)
   80580:	4798      	blx	r3
	delay(2000000);
   80582:	4810      	ldr	r0, [pc, #64]	; (805c4 <main+0x80>)
   80584:	4b10      	ldr	r3, [pc, #64]	; (805c8 <main+0x84>)
   80586:	4798      	blx	r3
	lcd_clear();
   80588:	4b10      	ldr	r3, [pc, #64]	; (805cc <main+0x88>)
   8058a:	4798      	blx	r3
	lcd_update(50, 5000);
   8058c:	2032      	movs	r0, #50	; 0x32
   8058e:	f241 3188 	movw	r1, #5000	; 0x1388
   80592:	4b0f      	ldr	r3, [pc, #60]	; (805d0 <main+0x8c>)
   80594:	4798      	blx	r3
   80596:	e7fe      	b.n	80596 <main+0x52>
   80598:	000807cd 	.word	0x000807cd
   8059c:	00080831 	.word	0x00080831
   805a0:	00080d65 	.word	0x00080d65
   805a4:	000801a5 	.word	0x000801a5
   805a8:	0008020d 	.word	0x0008020d
   805ac:	000802bd 	.word	0x000802bd
   805b0:	00080261 	.word	0x00080261
   805b4:	000803d5 	.word	0x000803d5
   805b8:	00080521 	.word	0x00080521
   805bc:	000858c8 	.word	0x000858c8
   805c0:	000804d9 	.word	0x000804d9
   805c4:	001e8480 	.word	0x001e8480
   805c8:	000802f9 	.word	0x000802f9
   805cc:	000804b9 	.word	0x000804b9
   805d0:	000805d5 	.word	0x000805d5

000805d4 <lcd_update>:
#include "delay.h"

/************************************************************************/
/*	Interrupt handler for TC0 interrupt.                                */
/************************************************************************/
int lcd_update(uint16_t echo, uint16_t delay_btn){
   805d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   805d6:	4605      	mov	r5, r0
   805d8:	460f      	mov	r7, r1
	
	lcd_clear();
   805da:	4b0e      	ldr	r3, [pc, #56]	; (80614 <lcd_update+0x40>)
   805dc:	4798      	blx	r3
	lcd_cursor_pos(0,0);
   805de:	2000      	movs	r0, #0
   805e0:	4601      	mov	r1, r0
   805e2:	4e0d      	ldr	r6, [pc, #52]	; (80618 <lcd_update+0x44>)
   805e4:	47b0      	blx	r6
	lcd_write_str(("ECHO: "));
   805e6:	480d      	ldr	r0, [pc, #52]	; (8061c <lcd_update+0x48>)
   805e8:	4c0d      	ldr	r4, [pc, #52]	; (80620 <lcd_update+0x4c>)
   805ea:	47a0      	blx	r4
	lcd_write_int(echo);
   805ec:	4628      	mov	r0, r5
   805ee:	4d0d      	ldr	r5, [pc, #52]	; (80624 <lcd_update+0x50>)
   805f0:	47a8      	blx	r5
	lcd_write_str(("%"));
   805f2:	480d      	ldr	r0, [pc, #52]	; (80628 <lcd_update+0x54>)
   805f4:	47a0      	blx	r4
	
	lcd_cursor_pos(1,0);
   805f6:	2001      	movs	r0, #1
   805f8:	2100      	movs	r1, #0
   805fa:	47b0      	blx	r6
	lcd_write_str(("DELAY: "));
   805fc:	480b      	ldr	r0, [pc, #44]	; (8062c <lcd_update+0x58>)
   805fe:	47a0      	blx	r4
	lcd_write_int(delay_btn/10);
   80600:	4b0b      	ldr	r3, [pc, #44]	; (80630 <lcd_update+0x5c>)
   80602:	fba3 2007 	umull	r2, r0, r3, r7
   80606:	08c0      	lsrs	r0, r0, #3
   80608:	47a8      	blx	r5
	lcd_write_str(("ms"));
   8060a:	480a      	ldr	r0, [pc, #40]	; (80634 <lcd_update+0x60>)
   8060c:	47a0      	blx	r4
	return 1;
}
   8060e:	2001      	movs	r0, #1
   80610:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80612:	bf00      	nop
   80614:	000804b9 	.word	0x000804b9
   80618:	00080521 	.word	0x00080521
   8061c:	000858d8 	.word	0x000858d8
   80620:	000804d9 	.word	0x000804d9
   80624:	000804f9 	.word	0x000804f9
   80628:	000858e0 	.word	0x000858e0
   8062c:	000858e4 	.word	0x000858e4
   80630:	cccccccd 	.word	0xcccccccd
   80634:	000858ec 	.word	0x000858ec

00080638 <TC0_Handler>:

void TC0_Handler(void) {
   80638:	b570      	push	{r4, r5, r6, lr}
	static uint16_t i = 0;
	static uint16_t buffer[5000] = {0};
	static uint16_t invalue, outvalue;
	static uint16_t echo = 50, delay_btn = 5000;
	
	tc_get_status(TC0, 0);
   8063a:	4854      	ldr	r0, [pc, #336]	; (8078c <TC0_Handler+0x154>)
   8063c:	2100      	movs	r1, #0
   8063e:	4b54      	ldr	r3, [pc, #336]	; (80790 <TC0_Handler+0x158>)
   80640:	4798      	blx	r3
	adc_start(ADC);
   80642:	4854      	ldr	r0, [pc, #336]	; (80794 <TC0_Handler+0x15c>)
   80644:	4b54      	ldr	r3, [pc, #336]	; (80798 <TC0_Handler+0x160>)
   80646:	4798      	blx	r3
	
	while ((adc_get_status(ADC) & 0x01000000) == 0);
   80648:	4d52      	ldr	r5, [pc, #328]	; (80794 <TC0_Handler+0x15c>)
   8064a:	4c54      	ldr	r4, [pc, #336]	; (8079c <TC0_Handler+0x164>)
   8064c:	4628      	mov	r0, r5
   8064e:	47a0      	blx	r4
   80650:	f010 7f80 	tst.w	r0, #16777216	; 0x1000000
   80654:	d0fa      	beq.n	8064c <TC0_Handler+0x14>
	invalue = adc_get_channel_value(ADC, ADC_CHANNEL_10);	// Channel 10 used for Sampling
   80656:	4d4f      	ldr	r5, [pc, #316]	; (80794 <TC0_Handler+0x15c>)
   80658:	4628      	mov	r0, r5
   8065a:	210a      	movs	r1, #10
   8065c:	4b50      	ldr	r3, [pc, #320]	; (807a0 <TC0_Handler+0x168>)
   8065e:	4798      	blx	r3
   80660:	4c50      	ldr	r4, [pc, #320]	; (807a4 <TC0_Handler+0x16c>)
   80662:	8020      	strh	r0, [r4, #0]
	adc_start(ADC);
   80664:	4628      	mov	r0, r5
   80666:	4b4c      	ldr	r3, [pc, #304]	; (80798 <TC0_Handler+0x160>)
   80668:	4798      	blx	r3
	
	/*
	* Delay function
	*/
	buffer[i] = ((buffer[i] + invalue) * echo) / 100;
   8066a:	494f      	ldr	r1, [pc, #316]	; (807a8 <TC0_Handler+0x170>)
   8066c:	880b      	ldrh	r3, [r1, #0]
   8066e:	8822      	ldrh	r2, [r4, #0]
   80670:	484e      	ldr	r0, [pc, #312]	; (807ac <TC0_Handler+0x174>)
   80672:	f830 4013 	ldrh.w	r4, [r0, r3, lsl #1]
   80676:	4414      	add	r4, r2
   80678:	4d4d      	ldr	r5, [pc, #308]	; (807b0 <TC0_Handler+0x178>)
   8067a:	882d      	ldrh	r5, [r5, #0]
   8067c:	fb05 f404 	mul.w	r4, r5, r4
   80680:	4d4c      	ldr	r5, [pc, #304]	; (807b4 <TC0_Handler+0x17c>)
   80682:	fb85 6504 	smull	r6, r5, r5, r4
   80686:	17e4      	asrs	r4, r4, #31
   80688:	ebc4 1465 	rsb	r4, r4, r5, asr #5
   8068c:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
	i++;
   80690:	3301      	adds	r3, #1
   80692:	b29b      	uxth	r3, r3
   80694:	800b      	strh	r3, [r1, #0]
	if (i >= delay_btn) {
   80696:	4948      	ldr	r1, [pc, #288]	; (807b8 <TC0_Handler+0x180>)
   80698:	8809      	ldrh	r1, [r1, #0]
   8069a:	4299      	cmp	r1, r3
   8069c:	d802      	bhi.n	806a4 <TC0_Handler+0x6c>
		i = 0;
   8069e:	2100      	movs	r1, #0
   806a0:	4b41      	ldr	r3, [pc, #260]	; (807a8 <TC0_Handler+0x170>)
   806a2:	8019      	strh	r1, [r3, #0]
	}
	outvalue = invalue + buffer[i];
   806a4:	4c40      	ldr	r4, [pc, #256]	; (807a8 <TC0_Handler+0x170>)
   806a6:	8821      	ldrh	r1, [r4, #0]
   806a8:	4b40      	ldr	r3, [pc, #256]	; (807ac <TC0_Handler+0x174>)
   806aa:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
   806ae:	4411      	add	r1, r2
   806b0:	b289      	uxth	r1, r1
   806b2:	4b42      	ldr	r3, [pc, #264]	; (807bc <TC0_Handler+0x184>)
   806b4:	8019      	strh	r1, [r3, #0]
	dacc_write_conversion_data(DACC, outvalue);
   806b6:	4842      	ldr	r0, [pc, #264]	; (807c0 <TC0_Handler+0x188>)
   806b8:	4b42      	ldr	r3, [pc, #264]	; (807c4 <TC0_Handler+0x18c>)
   806ba:	4798      	blx	r3
	
	/*
	* Button function
	*/
	if ((i % 200) == 0) {
   806bc:	8823      	ldrh	r3, [r4, #0]
   806be:	4a3d      	ldr	r2, [pc, #244]	; (807b4 <TC0_Handler+0x17c>)
   806c0:	fba2 1203 	umull	r1, r2, r2, r3
   806c4:	0992      	lsrs	r2, r2, #6
   806c6:	21c8      	movs	r1, #200	; 0xc8
   806c8:	fb01 3312 	mls	r3, r1, r2, r3
   806cc:	b29b      	uxth	r3, r3
   806ce:	2b00      	cmp	r3, #0
   806d0:	d15b      	bne.n	8078a <TC0_Handler+0x152>
		invalue = adc_get_channel_value(ADC, ADC_CHANNEL_7);	//Channel 0 used for buttons
   806d2:	4830      	ldr	r0, [pc, #192]	; (80794 <TC0_Handler+0x15c>)
   806d4:	2107      	movs	r1, #7
   806d6:	4b32      	ldr	r3, [pc, #200]	; (807a0 <TC0_Handler+0x168>)
   806d8:	4798      	blx	r3
   806da:	b280      	uxth	r0, r0
   806dc:	4b31      	ldr	r3, [pc, #196]	; (807a4 <TC0_Handler+0x16c>)
   806de:	8018      	strh	r0, [r3, #0]
		if (invalue < 400) {	//Right button on the LCD Shield, set to increase the echo
   806e0:	f5b0 7fc8 	cmp.w	r0, #400	; 0x190
   806e4:	d20c      	bcs.n	80700 <TC0_Handler+0xc8>
			if (echo < 100) {	//Max value for the echo is 100
   806e6:	4b32      	ldr	r3, [pc, #200]	; (807b0 <TC0_Handler+0x178>)
   806e8:	881b      	ldrh	r3, [r3, #0]
   806ea:	2b63      	cmp	r3, #99	; 0x63
   806ec:	d84d      	bhi.n	8078a <TC0_Handler+0x152>
				echo ++;
   806ee:	3301      	adds	r3, #1
   806f0:	b298      	uxth	r0, r3
   806f2:	4b2f      	ldr	r3, [pc, #188]	; (807b0 <TC0_Handler+0x178>)
   806f4:	8018      	strh	r0, [r3, #0]
				lcd_update(echo, delay_btn);
   806f6:	4b30      	ldr	r3, [pc, #192]	; (807b8 <TC0_Handler+0x180>)
   806f8:	8819      	ldrh	r1, [r3, #0]
   806fa:	4b33      	ldr	r3, [pc, #204]	; (807c8 <TC0_Handler+0x190>)
   806fc:	4798      	blx	r3
   806fe:	bd70      	pop	{r4, r5, r6, pc}
			}
		} else if ((invalue > 1500) & (invalue < 2000)) {	//Left button on the LCD Shield, set to decrease the echo
   80700:	f2a0 53dd 	subw	r3, r0, #1501	; 0x5dd
   80704:	b29b      	uxth	r3, r3
   80706:	f5b3 7ff9 	cmp.w	r3, #498	; 0x1f2
   8070a:	d80c      	bhi.n	80726 <TC0_Handler+0xee>
			if (echo > 0) {
   8070c:	4b28      	ldr	r3, [pc, #160]	; (807b0 <TC0_Handler+0x178>)
   8070e:	881b      	ldrh	r3, [r3, #0]
   80710:	2b00      	cmp	r3, #0
   80712:	d03a      	beq.n	8078a <TC0_Handler+0x152>
				echo --;
   80714:	3b01      	subs	r3, #1
   80716:	b298      	uxth	r0, r3
   80718:	4b25      	ldr	r3, [pc, #148]	; (807b0 <TC0_Handler+0x178>)
   8071a:	8018      	strh	r0, [r3, #0]
				lcd_update(echo, delay_btn);
   8071c:	4b26      	ldr	r3, [pc, #152]	; (807b8 <TC0_Handler+0x180>)
   8071e:	8819      	ldrh	r1, [r3, #0]
   80720:	4b29      	ldr	r3, [pc, #164]	; (807c8 <TC0_Handler+0x190>)
   80722:	4798      	blx	r3
   80724:	bd70      	pop	{r4, r5, r6, pc}
			}
		} else if ((invalue > 400) & (invalue < 1000)) {	//Up button on the LCD Shield, set to increase the delay
   80726:	f2a0 1291 	subw	r2, r0, #401	; 0x191
   8072a:	b292      	uxth	r2, r2
   8072c:	f240 2356 	movw	r3, #598	; 0x256
   80730:	429a      	cmp	r2, r3
   80732:	d819      	bhi.n	80768 <TC0_Handler+0x130>
			if (delay_btn < 5000) {
   80734:	4b20      	ldr	r3, [pc, #128]	; (807b8 <TC0_Handler+0x180>)
   80736:	881b      	ldrh	r3, [r3, #0]
   80738:	f241 3287 	movw	r2, #4999	; 0x1387
   8073c:	4293      	cmp	r3, r2
   8073e:	d824      	bhi.n	8078a <TC0_Handler+0x152>
				delay_btn += 10;
   80740:	330a      	adds	r3, #10
   80742:	b29b      	uxth	r3, r3
				if (delay_btn > 5000) {
   80744:	f241 3288 	movw	r2, #5000	; 0x1388
   80748:	4293      	cmp	r3, r2
   8074a:	d802      	bhi.n	80752 <TC0_Handler+0x11a>
				echo --;
				lcd_update(echo, delay_btn);
			}
		} else if ((invalue > 400) & (invalue < 1000)) {	//Up button on the LCD Shield, set to increase the delay
			if (delay_btn < 5000) {
				delay_btn += 10;
   8074c:	4a1a      	ldr	r2, [pc, #104]	; (807b8 <TC0_Handler+0x180>)
   8074e:	8013      	strh	r3, [r2, #0]
   80750:	e003      	b.n	8075a <TC0_Handler+0x122>
				if (delay_btn > 5000) {
					delay_btn = 5000;
   80752:	f241 3288 	movw	r2, #5000	; 0x1388
   80756:	4b18      	ldr	r3, [pc, #96]	; (807b8 <TC0_Handler+0x180>)
   80758:	801a      	strh	r2, [r3, #0]
				}lcd_update(echo, delay_btn);
   8075a:	4b15      	ldr	r3, [pc, #84]	; (807b0 <TC0_Handler+0x178>)
   8075c:	8818      	ldrh	r0, [r3, #0]
   8075e:	4b16      	ldr	r3, [pc, #88]	; (807b8 <TC0_Handler+0x180>)
   80760:	8819      	ldrh	r1, [r3, #0]
   80762:	4b19      	ldr	r3, [pc, #100]	; (807c8 <TC0_Handler+0x190>)
   80764:	4798      	blx	r3
   80766:	bd70      	pop	{r4, r5, r6, pc}
			}
		} else if ((invalue > 1000) & (invalue < 1500)) {	//Down button on the LCD Shield, set to increase the echo
   80768:	f2a0 33e9 	subw	r3, r0, #1001	; 0x3e9
   8076c:	b29b      	uxth	r3, r3
   8076e:	f5b3 7ff9 	cmp.w	r3, #498	; 0x1f2
   80772:	d80a      	bhi.n	8078a <TC0_Handler+0x152>
			if (delay_btn > 0) {
   80774:	4b10      	ldr	r3, [pc, #64]	; (807b8 <TC0_Handler+0x180>)
   80776:	881b      	ldrh	r3, [r3, #0]
   80778:	b13b      	cbz	r3, 8078a <TC0_Handler+0x152>
				delay_btn -= 10;
   8077a:	3b0a      	subs	r3, #10
   8077c:	b299      	uxth	r1, r3
   8077e:	4b0e      	ldr	r3, [pc, #56]	; (807b8 <TC0_Handler+0x180>)
   80780:	8019      	strh	r1, [r3, #0]
				if (delay_btn < 0) {
					delay_btn = 0;
				}lcd_update(echo, delay_btn);
   80782:	4b0b      	ldr	r3, [pc, #44]	; (807b0 <TC0_Handler+0x178>)
   80784:	8818      	ldrh	r0, [r3, #0]
   80786:	4b10      	ldr	r3, [pc, #64]	; (807c8 <TC0_Handler+0x190>)
   80788:	4798      	blx	r3
   8078a:	bd70      	pop	{r4, r5, r6, pc}
   8078c:	40080000 	.word	0x40080000
   80790:	00080e09 	.word	0x00080e09
   80794:	400c0000 	.word	0x400c0000
   80798:	00080915 	.word	0x00080915
   8079c:	00080939 	.word	0x00080939
   807a0:	00080929 	.word	0x00080929
   807a4:	20072ff0 	.word	0x20072ff0
   807a8:	20072ff4 	.word	0x20072ff4
   807ac:	200708e0 	.word	0x200708e0
   807b0:	20070000 	.word	0x20070000
   807b4:	51eb851f 	.word	0x51eb851f
   807b8:	20070002 	.word	0x20070002
   807bc:	20072ff2 	.word	0x20072ff2
   807c0:	400c8000 	.word	0x400c8000
   807c4:	0008095d 	.word	0x0008095d
   807c8:	000805d5 	.word	0x000805d5

000807cc <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   807cc:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   807ce:	480e      	ldr	r0, [pc, #56]	; (80808 <sysclk_init+0x3c>)
   807d0:	4b0e      	ldr	r3, [pc, #56]	; (8080c <sysclk_init+0x40>)
   807d2:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   807d4:	2000      	movs	r0, #0
   807d6:	213e      	movs	r1, #62	; 0x3e
   807d8:	4b0d      	ldr	r3, [pc, #52]	; (80810 <sysclk_init+0x44>)
   807da:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   807dc:	4c0d      	ldr	r4, [pc, #52]	; (80814 <sysclk_init+0x48>)
   807de:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   807e0:	2800      	cmp	r0, #0
   807e2:	d0fc      	beq.n	807de <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   807e4:	4b0c      	ldr	r3, [pc, #48]	; (80818 <sysclk_init+0x4c>)
   807e6:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   807e8:	4a0c      	ldr	r2, [pc, #48]	; (8081c <sysclk_init+0x50>)
   807ea:	4b0d      	ldr	r3, [pc, #52]	; (80820 <sysclk_init+0x54>)
   807ec:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   807ee:	4c0d      	ldr	r4, [pc, #52]	; (80824 <sysclk_init+0x58>)
   807f0:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   807f2:	2800      	cmp	r0, #0
   807f4:	d0fc      	beq.n	807f0 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   807f6:	2010      	movs	r0, #16
   807f8:	4b0b      	ldr	r3, [pc, #44]	; (80828 <sysclk_init+0x5c>)
   807fa:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   807fc:	4b0b      	ldr	r3, [pc, #44]	; (8082c <sysclk_init+0x60>)
   807fe:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   80800:	4801      	ldr	r0, [pc, #4]	; (80808 <sysclk_init+0x3c>)
   80802:	4b02      	ldr	r3, [pc, #8]	; (8080c <sysclk_init+0x40>)
   80804:	4798      	blx	r3
   80806:	bd10      	pop	{r4, pc}
   80808:	0501bd00 	.word	0x0501bd00
   8080c:	00080fe1 	.word	0x00080fe1
   80810:	00080ce1 	.word	0x00080ce1
   80814:	00080d35 	.word	0x00080d35
   80818:	00080d45 	.word	0x00080d45
   8081c:	200d3f01 	.word	0x200d3f01
   80820:	400e0600 	.word	0x400e0600
   80824:	00080d55 	.word	0x00080d55
   80828:	00080c7d 	.word	0x00080c7d
   8082c:	00080ec5 	.word	0x00080ec5

00080830 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   80830:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   80832:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80836:	4b13      	ldr	r3, [pc, #76]	; (80884 <board_init+0x54>)
   80838:	605a      	str	r2, [r3, #4]
   8083a:	200b      	movs	r0, #11
   8083c:	4c12      	ldr	r4, [pc, #72]	; (80888 <board_init+0x58>)
   8083e:	47a0      	blx	r4
   80840:	200c      	movs	r0, #12
   80842:	47a0      	blx	r4
   80844:	200d      	movs	r0, #13
   80846:	47a0      	blx	r4
   80848:	200e      	movs	r0, #14
   8084a:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   8084c:	203b      	movs	r0, #59	; 0x3b
   8084e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80852:	4c0e      	ldr	r4, [pc, #56]	; (8088c <board_init+0x5c>)
   80854:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   80856:	2055      	movs	r0, #85	; 0x55
   80858:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8085c:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   8085e:	2056      	movs	r0, #86	; 0x56
   80860:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80864:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   80866:	2068      	movs	r0, #104	; 0x68
   80868:	4909      	ldr	r1, [pc, #36]	; (80890 <board_init+0x60>)
   8086a:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   8086c:	205c      	movs	r0, #92	; 0x5c
   8086e:	4909      	ldr	r1, [pc, #36]	; (80894 <board_init+0x64>)
   80870:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   80872:	4809      	ldr	r0, [pc, #36]	; (80898 <board_init+0x68>)
   80874:	f44f 7140 	mov.w	r1, #768	; 0x300
   80878:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   8087c:	4b07      	ldr	r3, [pc, #28]	; (8089c <board_init+0x6c>)
   8087e:	4798      	blx	r3
   80880:	bd10      	pop	{r4, pc}
   80882:	bf00      	nop
   80884:	400e1a50 	.word	0x400e1a50
   80888:	00080d65 	.word	0x00080d65
   8088c:	00080a61 	.word	0x00080a61
   80890:	28000079 	.word	0x28000079
   80894:	28000001 	.word	0x28000001
   80898:	400e0e00 	.word	0x400e0e00
   8089c:	00080b35 	.word	0x00080b35

000808a0 <adc_init>:
 *
 * \return 0 on success.
 */
uint32_t adc_init(Adc *p_adc, const uint32_t ul_mck,
		const uint32_t ul_adc_clock, const enum adc_startup_time startup)
{
   808a0:	b430      	push	{r4, r5}
	uint32_t ul_prescal;

	/*  Reset the controller. */
	p_adc->ADC_CR = ADC_CR_SWRST;
   808a2:	2401      	movs	r4, #1
   808a4:	6004      	str	r4, [r0, #0]

	/* Reset Mode Register. */
	p_adc->ADC_MR = 0;
   808a6:	2400      	movs	r4, #0
   808a8:	6044      	str	r4, [r0, #4]

	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
   808aa:	f240 2502 	movw	r5, #514	; 0x202
   808ae:	f8c0 5120 	str.w	r5, [r0, #288]	; 0x120
	p_adc->ADC_RCR = 0;
   808b2:	f8c0 4104 	str.w	r4, [r0, #260]	; 0x104
	p_adc->ADC_RNCR = 0;
   808b6:	f8c0 4114 	str.w	r4, [r0, #276]	; 0x114

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   808ba:	6845      	ldr	r5, [r0, #4]
   808bc:	432b      	orrs	r3, r5
	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
	p_adc->ADC_RCR = 0;
	p_adc->ADC_RNCR = 0;

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
   808be:	0052      	lsls	r2, r2, #1
   808c0:	fbb1 f1f2 	udiv	r1, r1, r2
   808c4:	1e4d      	subs	r5, r1, #1
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   808c6:	022d      	lsls	r5, r5, #8
   808c8:	b2ad      	uxth	r5, r5
   808ca:	432b      	orrs	r3, r5
   808cc:	6043      	str	r3, [r0, #4]
	return 0;
}
   808ce:	4620      	mov	r0, r4
   808d0:	bc30      	pop	{r4, r5}
   808d2:	4770      	bx	lr

000808d4 <adc_set_resolution>:
		p_adc->ADC_MR &= ~ADC_MR_LOWRES;
		p_adc->ADC_EMR |= resolution;
		break;
	}
#else
	p_adc->ADC_MR &= ~ADC_MR_LOWRES;
   808d4:	6843      	ldr	r3, [r0, #4]
   808d6:	f023 0310 	bic.w	r3, r3, #16
   808da:	6043      	str	r3, [r0, #4]
	p_adc->ADC_MR |= resolution;
   808dc:	6843      	ldr	r3, [r0, #4]
   808de:	4319      	orrs	r1, r3
   808e0:	6041      	str	r1, [r0, #4]
   808e2:	4770      	bx	lr

000808e4 <adc_configure_trigger>:
 *
 */
void adc_configure_trigger(Adc *p_adc, const enum adc_trigger_t trigger,
		uint8_t uc_freerun)
{
	p_adc->ADC_MR |= trigger | ((uc_freerun << 7) & ADC_MR_FREERUN);
   808e4:	6843      	ldr	r3, [r0, #4]
   808e6:	4319      	orrs	r1, r3
   808e8:	01d2      	lsls	r2, r2, #7
   808ea:	b2d3      	uxtb	r3, r2
   808ec:	4319      	orrs	r1, r3
   808ee:	6041      	str	r1, [r0, #4]
   808f0:	4770      	bx	lr
   808f2:	bf00      	nop

000808f4 <adc_configure_timing>:
 * \param uc_settling Analog settling time = (uc_settling + 1) / ADC clock.
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
   808f4:	b410      	push	{r4}
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   808f6:	6844      	ldr	r4, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
   808f8:	4322      	orrs	r2, r4
   808fa:	0609      	lsls	r1, r1, #24
   808fc:	f001 6470 	and.w	r4, r1, #251658240	; 0xf000000
   80900:	4322      	orrs	r2, r4
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   80902:	071b      	lsls	r3, r3, #28
   80904:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
   80908:	431a      	orrs	r2, r3
   8090a:	6042      	str	r2, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
}
   8090c:	f85d 4b04 	ldr.w	r4, [sp], #4
   80910:	4770      	bx	lr
   80912:	bf00      	nop

00080914 <adc_start>:
 * \param p_adc Pointer to an ADC instance.
 */

void adc_start(Adc *p_adc)
{
	p_adc->ADC_CR = ADC_CR_START;
   80914:	2302      	movs	r3, #2
   80916:	6003      	str	r3, [r0, #0]
   80918:	4770      	bx	lr
   8091a:	bf00      	nop

0008091c <adc_enable_channel>:
 * \param p_adc Pointer to an ADC instance.
 * \param adc_ch ADC channel number.
 */
void adc_enable_channel(Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	p_adc->ADC_CHER = 1 << adc_ch;
   8091c:	2301      	movs	r3, #1
   8091e:	fa03 f101 	lsl.w	r1, r3, r1
   80922:	6101      	str	r1, [r0, #16]
   80924:	4770      	bx	lr
   80926:	bf00      	nop

00080928 <adc_get_channel_value>:
 */
uint32_t adc_get_channel_value(const Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	uint32_t ul_data = 0;

	if (15 >= adc_ch) {
   80928:	290f      	cmp	r1, #15
   8092a:	d803      	bhi.n	80934 <adc_get_channel_value+0xc>
		ul_data = *(p_adc->ADC_CDR + adc_ch);
   8092c:	3114      	adds	r1, #20
   8092e:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
   80932:	4770      	bx	lr
 *
 * \return ADC value of the specified channel.
 */
uint32_t adc_get_channel_value(const Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	uint32_t ul_data = 0;
   80934:	2000      	movs	r0, #0
	if (15 >= adc_ch) {
		ul_data = *(p_adc->ADC_CDR + adc_ch);
	}

	return ul_data;
}
   80936:	4770      	bx	lr

00080938 <adc_get_status>:
 *
 * \return ADC status structure.
 */
uint32_t adc_get_status(const Adc *p_adc)
{
	return p_adc->ADC_ISR;
   80938:	6b00      	ldr	r0, [r0, #48]	; 0x30
}
   8093a:	4770      	bx	lr

0008093c <dacc_reset>:
 *
 * \param p_dacc Pointer to a DACC instance. 
 */
void dacc_reset(Dacc *p_dacc)
{
	p_dacc->DACC_CR = DACC_CR_SWRST;
   8093c:	2301      	movs	r3, #1
   8093e:	6003      	str	r3, [r0, #0]
   80940:	4770      	bx	lr
   80942:	bf00      	nop

00080944 <dacc_set_transfer_mode>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_transfer_mode(Dacc *p_dacc, uint32_t ul_mode)
{
	if (ul_mode) {
   80944:	b121      	cbz	r1, 80950 <dacc_set_transfer_mode+0xc>
#if (SAM3N) || (SAM4L) || (SAM4N)
		p_dacc->DACC_MR |= DACC_MR_WORD;
#else
		p_dacc->DACC_MR |= DACC_MR_WORD_WORD;
   80946:	6843      	ldr	r3, [r0, #4]
   80948:	f043 0310 	orr.w	r3, r3, #16
   8094c:	6043      	str	r3, [r0, #4]
   8094e:	e003      	b.n	80958 <dacc_set_transfer_mode+0x14>
#endif
	} else {
#if (SAM3N) || (SAM4L) || (SAM4N)
		p_dacc->DACC_MR &= (~DACC_MR_WORD);
#else
		p_dacc->DACC_MR &= (~DACC_MR_WORD_WORD);
   80950:	6843      	ldr	r3, [r0, #4]
   80952:	f023 0310 	bic.w	r3, r3, #16
   80956:	6043      	str	r3, [r0, #4]
#endif
	}
	return DACC_RC_OK;
}
   80958:	2000      	movs	r0, #0
   8095a:	4770      	bx	lr

0008095c <dacc_write_conversion_data>:
 * \param p_dacc Pointer to a DACC instance. 
 * \param ul_data The data to be transferred to analog value. 
 */
void dacc_write_conversion_data(Dacc *p_dacc, uint32_t ul_data)
{
	p_dacc->DACC_CDR = ul_data;
   8095c:	6201      	str	r1, [r0, #32]
   8095e:	4770      	bx	lr

00080960 <dacc_set_channel_selection>:
 *
 * \return \ref DACC_RC_OK if successful.
 */
uint32_t dacc_set_channel_selection(Dacc *p_dacc, uint32_t ul_channel)
{
	uint32_t mr = p_dacc->DACC_MR & (~DACC_MR_USER_SEL_Msk);
   80960:	6843      	ldr	r3, [r0, #4]
	if (ul_channel > MAX_CH_NB) {
   80962:	2901      	cmp	r1, #1
   80964:	d806      	bhi.n	80974 <dacc_set_channel_selection+0x14>
		return DACC_RC_INVALID_PARAM;
	}
	mr &= ~(DACC_MR_TAG);
   80966:	f423 1398 	bic.w	r3, r3, #1245184	; 0x130000
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
   8096a:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
	p_dacc->DACC_MR = mr;
   8096e:	6041      	str	r1, [r0, #4]
	return DACC_RC_OK;
   80970:	2000      	movs	r0, #0
   80972:	4770      	bx	lr
 */
uint32_t dacc_set_channel_selection(Dacc *p_dacc, uint32_t ul_channel)
{
	uint32_t mr = p_dacc->DACC_MR & (~DACC_MR_USER_SEL_Msk);
	if (ul_channel > MAX_CH_NB) {
		return DACC_RC_INVALID_PARAM;
   80974:	2001      	movs	r0, #1
	}
	mr &= ~(DACC_MR_TAG);
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
	p_dacc->DACC_MR = mr;
	return DACC_RC_OK;
}
   80976:	4770      	bx	lr

00080978 <dacc_set_timing>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_timing(Dacc *p_dacc,
		uint32_t ul_refresh, uint32_t ul_maxs, uint32_t ul_startup)
{
   80978:	b410      	push	{r4}
	uint32_t mr = p_dacc->DACC_MR
   8097a:	6844      	ldr	r4, [r0, #4]
   8097c:	f024 547c 	bic.w	r4, r4, #1056964608	; 0x3f000000
   80980:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
		& (~(DACC_MR_REFRESH_Msk | DACC_MR_STARTUP_Msk));
	mr |= DACC_MR_REFRESH(ul_refresh);
   80984:	0209      	lsls	r1, r1, #8
   80986:	b289      	uxth	r1, r1
   80988:	430c      	orrs	r4, r1
	if (ul_maxs) {
   8098a:	b112      	cbz	r2, 80992 <dacc_set_timing+0x1a>
		mr |= DACC_MR_MAXS;
   8098c:	f444 1400 	orr.w	r4, r4, #2097152	; 0x200000
   80990:	e001      	b.n	80996 <dacc_set_timing+0x1e>
	} else {
		mr &= ~DACC_MR_MAXS;
   80992:	f424 1400 	bic.w	r4, r4, #2097152	; 0x200000
	}
	mr |= (DACC_MR_STARTUP_Msk & ((ul_startup) << DACC_MR_STARTUP_Pos));
   80996:	061b      	lsls	r3, r3, #24
   80998:	f003 537c 	and.w	r3, r3, #1056964608	; 0x3f000000
   8099c:	431c      	orrs	r4, r3
	p_dacc->DACC_MR = mr;
   8099e:	6044      	str	r4, [r0, #4]
	return DACC_RC_OK;
}
   809a0:	2000      	movs	r0, #0
   809a2:	f85d 4b04 	ldr.w	r4, [sp], #4
   809a6:	4770      	bx	lr

000809a8 <dacc_enable_channel>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_enable_channel(Dacc *p_dacc, uint32_t ul_channel)
{
	if (ul_channel > MAX_CH_NB)
   809a8:	2901      	cmp	r1, #1
   809aa:	d805      	bhi.n	809b8 <dacc_enable_channel+0x10>
		return DACC_RC_INVALID_PARAM;

	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
   809ac:	2301      	movs	r3, #1
   809ae:	fa03 f101 	lsl.w	r1, r3, r1
   809b2:	6101      	str	r1, [r0, #16]
	return DACC_RC_OK;
   809b4:	2000      	movs	r0, #0
   809b6:	4770      	bx	lr
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_enable_channel(Dacc *p_dacc, uint32_t ul_channel)
{
	if (ul_channel > MAX_CH_NB)
		return DACC_RC_INVALID_PARAM;
   809b8:	2001      	movs	r0, #1

	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
	return DACC_RC_OK;
}
   809ba:	4770      	bx	lr

000809bc <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   809bc:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   809be:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   809c2:	d016      	beq.n	809f2 <pio_set_peripheral+0x36>
   809c4:	d804      	bhi.n	809d0 <pio_set_peripheral+0x14>
   809c6:	b1c1      	cbz	r1, 809fa <pio_set_peripheral+0x3e>
   809c8:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   809cc:	d00a      	beq.n	809e4 <pio_set_peripheral+0x28>
   809ce:	e013      	b.n	809f8 <pio_set_peripheral+0x3c>
   809d0:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   809d4:	d011      	beq.n	809fa <pio_set_peripheral+0x3e>
   809d6:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   809da:	d00e      	beq.n	809fa <pio_set_peripheral+0x3e>
   809dc:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   809e0:	d10a      	bne.n	809f8 <pio_set_peripheral+0x3c>
   809e2:	4770      	bx	lr
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   809e4:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   809e6:	6f01      	ldr	r1, [r0, #112]	; 0x70
   809e8:	400b      	ands	r3, r1
   809ea:	ea23 0302 	bic.w	r3, r3, r2
   809ee:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   809f0:	e002      	b.n	809f8 <pio_set_peripheral+0x3c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   809f2:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   809f4:	4313      	orrs	r3, r2
   809f6:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   809f8:	6042      	str	r2, [r0, #4]
   809fa:	4770      	bx	lr

000809fc <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   809fc:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   809fe:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   80a02:	bf14      	ite	ne
   80a04:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80a06:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   80a08:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   80a0c:	bf14      	ite	ne
   80a0e:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
   80a10:	6241      	streq	r1, [r0, #36]	; 0x24
			p_pio->PIO_IFSCER = ul_mask;
		}
	}
#elif (SAM3XA|| SAM3U)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
   80a12:	f012 0f02 	tst.w	r2, #2
   80a16:	d002      	beq.n	80a1e <pio_set_input+0x22>
		p_pio->PIO_SCIFSR = ul_mask;
   80a18:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80a1c:	e004      	b.n	80a28 <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
   80a1e:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   80a22:	bf18      	it	ne
   80a24:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
   80a28:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   80a2a:	6001      	str	r1, [r0, #0]
   80a2c:	4770      	bx	lr
   80a2e:	bf00      	nop

00080a30 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
   80a30:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80a32:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a34:	9c01      	ldr	r4, [sp, #4]
   80a36:	b10c      	cbz	r4, 80a3c <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
   80a38:	6641      	str	r1, [r0, #100]	; 0x64
   80a3a:	e000      	b.n	80a3e <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80a3c:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
   80a3e:	b10b      	cbz	r3, 80a44 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
   80a40:	6501      	str	r1, [r0, #80]	; 0x50
   80a42:	e000      	b.n	80a46 <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
   80a44:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
   80a46:	b10a      	cbz	r2, 80a4c <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
   80a48:	6301      	str	r1, [r0, #48]	; 0x30
   80a4a:	e000      	b.n	80a4e <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
   80a4c:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
   80a4e:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80a50:	6001      	str	r1, [r0, #0]
}
   80a52:	f85d 4b04 	ldr.w	r4, [sp], #4
   80a56:	4770      	bx	lr

00080a58 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   80a58:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   80a5a:	4770      	bx	lr

00080a5c <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   80a5c:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   80a5e:	4770      	bx	lr

00080a60 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   80a60:	b570      	push	{r4, r5, r6, lr}
   80a62:	b082      	sub	sp, #8
   80a64:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   80a66:	0944      	lsrs	r4, r0, #5
   80a68:	f504 1400 	add.w	r4, r4, #2097152	; 0x200000
   80a6c:	f204 7407 	addw	r4, r4, #1799	; 0x707
   80a70:	0266      	lsls	r6, r4, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80a72:	f001 44f0 	and.w	r4, r1, #2013265920	; 0x78000000
   80a76:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80a7a:	d030      	beq.n	80ade <pio_configure_pin+0x7e>
   80a7c:	d806      	bhi.n	80a8c <pio_configure_pin+0x2c>
   80a7e:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80a82:	d00a      	beq.n	80a9a <pio_configure_pin+0x3a>
   80a84:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80a88:	d018      	beq.n	80abc <pio_configure_pin+0x5c>
   80a8a:	e049      	b.n	80b20 <pio_configure_pin+0xc0>
   80a8c:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80a90:	d030      	beq.n	80af4 <pio_configure_pin+0x94>
   80a92:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80a96:	d02d      	beq.n	80af4 <pio_configure_pin+0x94>
   80a98:	e042      	b.n	80b20 <pio_configure_pin+0xc0>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   80a9a:	f000 001f 	and.w	r0, r0, #31
   80a9e:	2401      	movs	r4, #1
   80aa0:	4084      	lsls	r4, r0
   80aa2:	4630      	mov	r0, r6
   80aa4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80aa8:	4622      	mov	r2, r4
   80aaa:	4b1f      	ldr	r3, [pc, #124]	; (80b28 <pio_configure_pin+0xc8>)
   80aac:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80aae:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80ab2:	bf14      	ite	ne
   80ab4:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80ab6:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80ab8:	2001      	movs	r0, #1
   80aba:	e032      	b.n	80b22 <pio_configure_pin+0xc2>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   80abc:	f000 001f 	and.w	r0, r0, #31
   80ac0:	2401      	movs	r4, #1
   80ac2:	4084      	lsls	r4, r0
   80ac4:	4630      	mov	r0, r6
   80ac6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80aca:	4622      	mov	r2, r4
   80acc:	4b16      	ldr	r3, [pc, #88]	; (80b28 <pio_configure_pin+0xc8>)
   80ace:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80ad0:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80ad4:	bf14      	ite	ne
   80ad6:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80ad8:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80ada:	2001      	movs	r0, #1
   80adc:	e021      	b.n	80b22 <pio_configure_pin+0xc2>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   80ade:	f000 011f 	and.w	r1, r0, #31
   80ae2:	2401      	movs	r4, #1
   80ae4:	4630      	mov	r0, r6
   80ae6:	fa04 f101 	lsl.w	r1, r4, r1
   80aea:	462a      	mov	r2, r5
   80aec:	4b0f      	ldr	r3, [pc, #60]	; (80b2c <pio_configure_pin+0xcc>)
   80aee:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80af0:	4620      	mov	r0, r4
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
   80af2:	e016      	b.n	80b22 <pio_configure_pin+0xc2>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80af4:	f000 011f 	and.w	r1, r0, #31
   80af8:	2401      	movs	r4, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80afa:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   80afe:	ea05 0304 	and.w	r3, r5, r4
   80b02:	9300      	str	r3, [sp, #0]
   80b04:	4630      	mov	r0, r6
   80b06:	fa04 f101 	lsl.w	r1, r4, r1
   80b0a:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80b0e:	bf14      	ite	ne
   80b10:	2200      	movne	r2, #0
   80b12:	2201      	moveq	r2, #1
   80b14:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80b18:	4d05      	ldr	r5, [pc, #20]	; (80b30 <pio_configure_pin+0xd0>)
   80b1a:	47a8      	blx	r5

	default:
		return 0;
	}

	return 1;
   80b1c:	4620      	mov	r0, r4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80b1e:	e000      	b.n	80b22 <pio_configure_pin+0xc2>

	default:
		return 0;
   80b20:	2000      	movs	r0, #0
	}

	return 1;
}
   80b22:	b002      	add	sp, #8
   80b24:	bd70      	pop	{r4, r5, r6, pc}
   80b26:	bf00      	nop
   80b28:	000809bd 	.word	0x000809bd
   80b2c:	000809fd 	.word	0x000809fd
   80b30:	00080a31 	.word	0x00080a31

00080b34 <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
   80b34:	b5f0      	push	{r4, r5, r6, r7, lr}
   80b36:	b083      	sub	sp, #12
   80b38:	4607      	mov	r7, r0
   80b3a:	460e      	mov	r6, r1
   80b3c:	4615      	mov	r5, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80b3e:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
   80b42:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80b46:	d026      	beq.n	80b96 <pio_configure_pin_group+0x62>
   80b48:	d806      	bhi.n	80b58 <pio_configure_pin_group+0x24>
   80b4a:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80b4e:	d00a      	beq.n	80b66 <pio_configure_pin_group+0x32>
   80b50:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80b54:	d013      	beq.n	80b7e <pio_configure_pin_group+0x4a>
   80b56:	e034      	b.n	80bc2 <pio_configure_pin_group+0x8e>
   80b58:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80b5c:	d01f      	beq.n	80b9e <pio_configure_pin_group+0x6a>
   80b5e:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80b62:	d01c      	beq.n	80b9e <pio_configure_pin_group+0x6a>
   80b64:	e02d      	b.n	80bc2 <pio_configure_pin_group+0x8e>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   80b66:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80b6a:	4632      	mov	r2, r6
   80b6c:	4b16      	ldr	r3, [pc, #88]	; (80bc8 <pio_configure_pin_group+0x94>)
   80b6e:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80b70:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80b74:	bf14      	ite	ne
   80b76:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80b78:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80b7a:	2001      	movs	r0, #1
   80b7c:	e022      	b.n	80bc4 <pio_configure_pin_group+0x90>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80b7e:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80b82:	4632      	mov	r2, r6
   80b84:	4b10      	ldr	r3, [pc, #64]	; (80bc8 <pio_configure_pin_group+0x94>)
   80b86:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80b88:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80b8c:	bf14      	ite	ne
   80b8e:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80b90:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80b92:	2001      	movs	r0, #1
   80b94:	e016      	b.n	80bc4 <pio_configure_pin_group+0x90>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
   80b96:	4b0d      	ldr	r3, [pc, #52]	; (80bcc <pio_configure_pin_group+0x98>)
   80b98:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80b9a:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
   80b9c:	e012      	b.n	80bc4 <pio_configure_pin_group+0x90>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80b9e:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
   80ba2:	f005 0301 	and.w	r3, r5, #1
   80ba6:	9300      	str	r3, [sp, #0]
   80ba8:	4638      	mov	r0, r7
   80baa:	4631      	mov	r1, r6
   80bac:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80bb0:	bf14      	ite	ne
   80bb2:	2200      	movne	r2, #0
   80bb4:	2201      	moveq	r2, #1
   80bb6:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80bba:	4c05      	ldr	r4, [pc, #20]	; (80bd0 <pio_configure_pin_group+0x9c>)
   80bbc:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   80bbe:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80bc0:	e000      	b.n	80bc4 <pio_configure_pin_group+0x90>

	default:
		return 0;
   80bc2:	2000      	movs	r0, #0
	}

	return 1;
}
   80bc4:	b003      	add	sp, #12
   80bc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80bc8:	000809bd 	.word	0x000809bd
   80bcc:	000809fd 	.word	0x000809fd
   80bd0:	00080a31 	.word	0x00080a31

00080bd4 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80bd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80bd8:	4604      	mov	r4, r0
   80bda:	460e      	mov	r6, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80bdc:	4b10      	ldr	r3, [pc, #64]	; (80c20 <pio_handler_process+0x4c>)
   80bde:	4798      	blx	r3
   80be0:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80be2:	4620      	mov	r0, r4
   80be4:	4b0f      	ldr	r3, [pc, #60]	; (80c24 <pio_handler_process+0x50>)
   80be6:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80be8:	4005      	ands	r5, r0
   80bea:	d017      	beq.n	80c1c <pio_handler_process+0x48>
   80bec:	4f0e      	ldr	r7, [pc, #56]	; (80c28 <pio_handler_process+0x54>)
   80bee:	f107 040c 	add.w	r4, r7, #12
   80bf2:	376c      	adds	r7, #108	; 0x6c
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   80bf4:	f854 3c0c 	ldr.w	r3, [r4, #-12]
   80bf8:	42b3      	cmp	r3, r6
   80bfa:	d10a      	bne.n	80c12 <pio_handler_process+0x3e>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80bfc:	f854 1c08 	ldr.w	r1, [r4, #-8]
   80c00:	4229      	tst	r1, r5
   80c02:	d006      	beq.n	80c12 <pio_handler_process+0x3e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80c04:	6823      	ldr	r3, [r4, #0]
   80c06:	4630      	mov	r0, r6
   80c08:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
   80c0a:	f854 3c08 	ldr.w	r3, [r4, #-8]
   80c0e:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80c12:	42bc      	cmp	r4, r7
   80c14:	d002      	beq.n	80c1c <pio_handler_process+0x48>
   80c16:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
   80c18:	2d00      	cmp	r5, #0
   80c1a:	d1eb      	bne.n	80bf4 <pio_handler_process+0x20>
   80c1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80c20:	00080a59 	.word	0x00080a59
   80c24:	00080a5d 	.word	0x00080a5d
   80c28:	20072ff8 	.word	0x20072ff8

00080c2c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80c2c:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80c2e:	4802      	ldr	r0, [pc, #8]	; (80c38 <PIOA_Handler+0xc>)
   80c30:	210b      	movs	r1, #11
   80c32:	4b02      	ldr	r3, [pc, #8]	; (80c3c <PIOA_Handler+0x10>)
   80c34:	4798      	blx	r3
   80c36:	bd08      	pop	{r3, pc}
   80c38:	400e0e00 	.word	0x400e0e00
   80c3c:	00080bd5 	.word	0x00080bd5

00080c40 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80c40:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80c42:	4802      	ldr	r0, [pc, #8]	; (80c4c <PIOB_Handler+0xc>)
   80c44:	210c      	movs	r1, #12
   80c46:	4b02      	ldr	r3, [pc, #8]	; (80c50 <PIOB_Handler+0x10>)
   80c48:	4798      	blx	r3
   80c4a:	bd08      	pop	{r3, pc}
   80c4c:	400e1000 	.word	0x400e1000
   80c50:	00080bd5 	.word	0x00080bd5

00080c54 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80c54:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80c56:	4802      	ldr	r0, [pc, #8]	; (80c60 <PIOC_Handler+0xc>)
   80c58:	210d      	movs	r1, #13
   80c5a:	4b02      	ldr	r3, [pc, #8]	; (80c64 <PIOC_Handler+0x10>)
   80c5c:	4798      	blx	r3
   80c5e:	bd08      	pop	{r3, pc}
   80c60:	400e1200 	.word	0x400e1200
   80c64:	00080bd5 	.word	0x00080bd5

00080c68 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   80c68:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   80c6a:	4802      	ldr	r0, [pc, #8]	; (80c74 <PIOD_Handler+0xc>)
   80c6c:	210e      	movs	r1, #14
   80c6e:	4b02      	ldr	r3, [pc, #8]	; (80c78 <PIOD_Handler+0x10>)
   80c70:	4798      	blx	r3
   80c72:	bd08      	pop	{r3, pc}
   80c74:	400e1400 	.word	0x400e1400
   80c78:	00080bd5 	.word	0x00080bd5

00080c7c <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   80c7c:	4b17      	ldr	r3, [pc, #92]	; (80cdc <pmc_switch_mck_to_pllack+0x60>)
   80c7e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80c80:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   80c84:	4310      	orrs	r0, r2
   80c86:	6318      	str	r0, [r3, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80c88:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80c8a:	f013 0f08 	tst.w	r3, #8
   80c8e:	d109      	bne.n	80ca4 <pmc_switch_mck_to_pllack+0x28>
   80c90:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80c94:	4911      	ldr	r1, [pc, #68]	; (80cdc <pmc_switch_mck_to_pllack+0x60>)
   80c96:	e001      	b.n	80c9c <pmc_switch_mck_to_pllack+0x20>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80c98:	3b01      	subs	r3, #1
   80c9a:	d019      	beq.n	80cd0 <pmc_switch_mck_to_pllack+0x54>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80c9c:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80c9e:	f012 0f08 	tst.w	r2, #8
   80ca2:	d0f9      	beq.n	80c98 <pmc_switch_mck_to_pllack+0x1c>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   80ca4:	4b0d      	ldr	r3, [pc, #52]	; (80cdc <pmc_switch_mck_to_pllack+0x60>)
   80ca6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80ca8:	f022 0203 	bic.w	r2, r2, #3
   80cac:	f042 0202 	orr.w	r2, r2, #2
   80cb0:	631a      	str	r2, [r3, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80cb2:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80cb4:	f010 0008 	ands.w	r0, r0, #8
   80cb8:	d10c      	bne.n	80cd4 <pmc_switch_mck_to_pllack+0x58>
   80cba:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80cbe:	4907      	ldr	r1, [pc, #28]	; (80cdc <pmc_switch_mck_to_pllack+0x60>)
   80cc0:	e001      	b.n	80cc6 <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80cc2:	3b01      	subs	r3, #1
   80cc4:	d008      	beq.n	80cd8 <pmc_switch_mck_to_pllack+0x5c>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80cc6:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80cc8:	f012 0f08 	tst.w	r2, #8
   80ccc:	d0f9      	beq.n	80cc2 <pmc_switch_mck_to_pllack+0x46>
   80cce:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80cd0:	2001      	movs	r0, #1
   80cd2:	4770      	bx	lr
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
   80cd4:	2000      	movs	r0, #0
   80cd6:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80cd8:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   80cda:	4770      	bx	lr
   80cdc:	400e0600 	.word	0x400e0600

00080ce0 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   80ce0:	b138      	cbz	r0, 80cf2 <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80ce2:	4911      	ldr	r1, [pc, #68]	; (80d28 <pmc_switch_mainck_to_xtal+0x48>)
   80ce4:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   80ce6:	4a11      	ldr	r2, [pc, #68]	; (80d2c <pmc_switch_mainck_to_xtal+0x4c>)
   80ce8:	401a      	ands	r2, r3
   80cea:	4b11      	ldr	r3, [pc, #68]	; (80d30 <pmc_switch_mainck_to_xtal+0x50>)
   80cec:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80cee:	620b      	str	r3, [r1, #32]
   80cf0:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80cf2:	4a0d      	ldr	r2, [pc, #52]	; (80d28 <pmc_switch_mainck_to_xtal+0x48>)
   80cf4:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80cf6:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   80cfa:	f023 0303 	bic.w	r3, r3, #3
   80cfe:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80d02:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   80d06:	0209      	lsls	r1, r1, #8
   80d08:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80d0a:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80d0c:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   80d0e:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80d10:	f013 0f01 	tst.w	r3, #1
   80d14:	d0fb      	beq.n	80d0e <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   80d16:	4a04      	ldr	r2, [pc, #16]	; (80d28 <pmc_switch_mainck_to_xtal+0x48>)
   80d18:	6a13      	ldr	r3, [r2, #32]
   80d1a:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   80d1e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   80d22:	6213      	str	r3, [r2, #32]
   80d24:	4770      	bx	lr
   80d26:	bf00      	nop
   80d28:	400e0600 	.word	0x400e0600
   80d2c:	fec8fffc 	.word	0xfec8fffc
   80d30:	01370002 	.word	0x01370002

00080d34 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   80d34:	4b02      	ldr	r3, [pc, #8]	; (80d40 <pmc_osc_is_ready_mainck+0xc>)
   80d36:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80d38:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80d3c:	4770      	bx	lr
   80d3e:	bf00      	nop
   80d40:	400e0600 	.word	0x400e0600

00080d44 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   80d44:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80d48:	4b01      	ldr	r3, [pc, #4]	; (80d50 <pmc_disable_pllack+0xc>)
   80d4a:	629a      	str	r2, [r3, #40]	; 0x28
   80d4c:	4770      	bx	lr
   80d4e:	bf00      	nop
   80d50:	400e0600 	.word	0x400e0600

00080d54 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   80d54:	4b02      	ldr	r3, [pc, #8]	; (80d60 <pmc_is_locked_pllack+0xc>)
   80d56:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80d58:	f000 0002 	and.w	r0, r0, #2
   80d5c:	4770      	bx	lr
   80d5e:	bf00      	nop
   80d60:	400e0600 	.word	0x400e0600

00080d64 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   80d64:	282c      	cmp	r0, #44	; 0x2c
   80d66:	d820      	bhi.n	80daa <pmc_enable_periph_clk+0x46>
		return 1;
	}

	if (ul_id < 32) {
   80d68:	281f      	cmp	r0, #31
   80d6a:	d80d      	bhi.n	80d88 <pmc_enable_periph_clk+0x24>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   80d6c:	4b12      	ldr	r3, [pc, #72]	; (80db8 <pmc_enable_periph_clk+0x54>)
   80d6e:	699a      	ldr	r2, [r3, #24]
   80d70:	2301      	movs	r3, #1
   80d72:	4083      	lsls	r3, r0
   80d74:	401a      	ands	r2, r3
   80d76:	4293      	cmp	r3, r2
   80d78:	d019      	beq.n	80dae <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER0 = 1 << ul_id;
   80d7a:	2301      	movs	r3, #1
   80d7c:	fa03 f000 	lsl.w	r0, r3, r0
   80d80:	4b0d      	ldr	r3, [pc, #52]	; (80db8 <pmc_enable_periph_clk+0x54>)
   80d82:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80d84:	2000      	movs	r0, #0
   80d86:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80d88:	4b0b      	ldr	r3, [pc, #44]	; (80db8 <pmc_enable_periph_clk+0x54>)
   80d8a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP)
	} else {
		ul_id -= 32;
   80d8e:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80d90:	2301      	movs	r3, #1
   80d92:	4083      	lsls	r3, r0
   80d94:	401a      	ands	r2, r3
   80d96:	4293      	cmp	r3, r2
   80d98:	d00b      	beq.n	80db2 <pmc_enable_periph_clk+0x4e>
			PMC->PMC_PCER1 = 1 << ul_id;
   80d9a:	2301      	movs	r3, #1
   80d9c:	fa03 f000 	lsl.w	r0, r3, r0
   80da0:	4b05      	ldr	r3, [pc, #20]	; (80db8 <pmc_enable_periph_clk+0x54>)
   80da2:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
   80da6:	2000      	movs	r0, #0
   80da8:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
   80daa:	2001      	movs	r0, #1
   80dac:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80dae:	2000      	movs	r0, #0
   80db0:	4770      	bx	lr
   80db2:	2000      	movs	r0, #0
}
   80db4:	4770      	bx	lr
   80db6:	bf00      	nop
   80db8:	400e0600 	.word	0x400e0600

00080dbc <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   80dbc:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80dbe:	0189      	lsls	r1, r1, #6
   80dc0:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   80dc2:	2402      	movs	r4, #2
   80dc4:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   80dc6:	f04f 31ff 	mov.w	r1, #4294967295
   80dca:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   80dcc:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   80dce:	605a      	str	r2, [r3, #4]
}
   80dd0:	f85d 4b04 	ldr.w	r4, [sp], #4
   80dd4:	4770      	bx	lr
   80dd6:	bf00      	nop

00080dd8 <tc_set_block_mode>:
		uint32_t ul_blockmode)
{
	/* Validate inputs. */
	Assert(p_tc);
	
	p_tc->TC_BMR = ul_blockmode;
   80dd8:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
   80ddc:	4770      	bx	lr
   80dde:	bf00      	nop

00080de0 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   80de0:	0189      	lsls	r1, r1, #6
   80de2:	2305      	movs	r3, #5
   80de4:	5043      	str	r3, [r0, r1]
   80de6:	4770      	bx	lr

00080de8 <tc_stop>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKDIS;
   80de8:	0189      	lsls	r1, r1, #6
   80dea:	2302      	movs	r3, #2
   80dec:	5043      	str	r3, [r0, r1]
   80dee:	4770      	bx	lr

00080df0 <tc_read_cv>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_CV;
   80df0:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80df4:	6908      	ldr	r0, [r1, #16]
}
   80df6:	4770      	bx	lr

00080df8 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   80df8:	eb00 1181 	add.w	r1, r0, r1, lsl #6
   80dfc:	61ca      	str	r2, [r1, #28]
   80dfe:	4770      	bx	lr

00080e00 <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80e00:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
   80e04:	624a      	str	r2, [r1, #36]	; 0x24
   80e06:	4770      	bx	lr

00080e08 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   80e08:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
   80e0c:	6a08      	ldr	r0, [r1, #32]
}
   80e0e:	4770      	bx	lr

00080e10 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80e10:	e7fe      	b.n	80e10 <Dummy_Handler>
   80e12:	bf00      	nop

00080e14 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80e14:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80e16:	4b1e      	ldr	r3, [pc, #120]	; (80e90 <Reset_Handler+0x7c>)
   80e18:	4a1e      	ldr	r2, [pc, #120]	; (80e94 <Reset_Handler+0x80>)
   80e1a:	429a      	cmp	r2, r3
   80e1c:	d003      	beq.n	80e26 <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
   80e1e:	4b1e      	ldr	r3, [pc, #120]	; (80e98 <Reset_Handler+0x84>)
   80e20:	4a1b      	ldr	r2, [pc, #108]	; (80e90 <Reset_Handler+0x7c>)
   80e22:	429a      	cmp	r2, r3
   80e24:	d304      	bcc.n	80e30 <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80e26:	4b1d      	ldr	r3, [pc, #116]	; (80e9c <Reset_Handler+0x88>)
   80e28:	4a1d      	ldr	r2, [pc, #116]	; (80ea0 <Reset_Handler+0x8c>)
   80e2a:	429a      	cmp	r2, r3
   80e2c:	d30f      	bcc.n	80e4e <Reset_Handler+0x3a>
   80e2e:	e01a      	b.n	80e66 <Reset_Handler+0x52>
   80e30:	4b1c      	ldr	r3, [pc, #112]	; (80ea4 <Reset_Handler+0x90>)
   80e32:	4c1d      	ldr	r4, [pc, #116]	; (80ea8 <Reset_Handler+0x94>)
   80e34:	1ae4      	subs	r4, r4, r3
   80e36:	f024 0403 	bic.w	r4, r4, #3
   80e3a:	3404      	adds	r4, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80e3c:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
   80e3e:	4814      	ldr	r0, [pc, #80]	; (80e90 <Reset_Handler+0x7c>)
   80e40:	4914      	ldr	r1, [pc, #80]	; (80e94 <Reset_Handler+0x80>)
   80e42:	585a      	ldr	r2, [r3, r1]
   80e44:	501a      	str	r2, [r3, r0]
   80e46:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80e48:	42a3      	cmp	r3, r4
   80e4a:	d1fa      	bne.n	80e42 <Reset_Handler+0x2e>
   80e4c:	e7eb      	b.n	80e26 <Reset_Handler+0x12>
   80e4e:	4b17      	ldr	r3, [pc, #92]	; (80eac <Reset_Handler+0x98>)
   80e50:	4917      	ldr	r1, [pc, #92]	; (80eb0 <Reset_Handler+0x9c>)
   80e52:	1ac9      	subs	r1, r1, r3
   80e54:	f021 0103 	bic.w	r1, r1, #3
   80e58:	1d1a      	adds	r2, r3, #4
   80e5a:	4411      	add	r1, r2
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
		*pDest++ = 0;
   80e5c:	2200      	movs	r2, #0
   80e5e:	f843 2f04 	str.w	r2, [r3, #4]!
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80e62:	428b      	cmp	r3, r1
   80e64:	d1fb      	bne.n	80e5e <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80e66:	4a13      	ldr	r2, [pc, #76]	; (80eb4 <Reset_Handler+0xa0>)
   80e68:	f022 4360 	bic.w	r3, r2, #3758096384	; 0xe0000000
   80e6c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   80e70:	4911      	ldr	r1, [pc, #68]	; (80eb8 <Reset_Handler+0xa4>)
   80e72:	608b      	str	r3, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80e74:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
   80e78:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
   80e7c:	d203      	bcs.n	80e86 <Reset_Handler+0x72>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80e7e:	688a      	ldr	r2, [r1, #8]
   80e80:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
   80e84:	608a      	str	r2, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80e86:	4b0d      	ldr	r3, [pc, #52]	; (80ebc <Reset_Handler+0xa8>)
   80e88:	4798      	blx	r3

	/* Branch to main function */
	main();
   80e8a:	4b0d      	ldr	r3, [pc, #52]	; (80ec0 <Reset_Handler+0xac>)
   80e8c:	4798      	blx	r3
   80e8e:	e7fe      	b.n	80e8e <Reset_Handler+0x7a>
   80e90:	20070000 	.word	0x20070000
   80e94:	00085ad4 	.word	0x00085ad4
   80e98:	200708c4 	.word	0x200708c4
   80e9c:	200730a4 	.word	0x200730a4
   80ea0:	200708c4 	.word	0x200708c4
   80ea4:	20070004 	.word	0x20070004
   80ea8:	200708c7 	.word	0x200708c7
   80eac:	200708c0 	.word	0x200708c0
   80eb0:	2007309f 	.word	0x2007309f
   80eb4:	00080000 	.word	0x00080000
   80eb8:	e000ed00 	.word	0xe000ed00
   80ebc:	0008109d 	.word	0x0008109d
   80ec0:	00080545 	.word	0x00080545

00080ec4 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80ec4:	4b3e      	ldr	r3, [pc, #248]	; (80fc0 <SystemCoreClockUpdate+0xfc>)
   80ec6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80ec8:	f003 0303 	and.w	r3, r3, #3
   80ecc:	2b03      	cmp	r3, #3
   80ece:	d85f      	bhi.n	80f90 <SystemCoreClockUpdate+0xcc>
   80ed0:	e8df f003 	tbb	[pc, r3]
   80ed4:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80ed8:	4b3a      	ldr	r3, [pc, #232]	; (80fc4 <SystemCoreClockUpdate+0x100>)
   80eda:	695b      	ldr	r3, [r3, #20]
   80edc:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80ee0:	bf14      	ite	ne
   80ee2:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80ee6:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80eea:	4b37      	ldr	r3, [pc, #220]	; (80fc8 <SystemCoreClockUpdate+0x104>)
   80eec:	601a      	str	r2, [r3, #0]
   80eee:	e04f      	b.n	80f90 <SystemCoreClockUpdate+0xcc>
		}
		break;
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80ef0:	4b33      	ldr	r3, [pc, #204]	; (80fc0 <SystemCoreClockUpdate+0xfc>)
   80ef2:	6a1b      	ldr	r3, [r3, #32]
   80ef4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80ef8:	d003      	beq.n	80f02 <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80efa:	4a34      	ldr	r2, [pc, #208]	; (80fcc <SystemCoreClockUpdate+0x108>)
   80efc:	4b32      	ldr	r3, [pc, #200]	; (80fc8 <SystemCoreClockUpdate+0x104>)
   80efe:	601a      	str	r2, [r3, #0]
   80f00:	e046      	b.n	80f90 <SystemCoreClockUpdate+0xcc>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80f02:	4a33      	ldr	r2, [pc, #204]	; (80fd0 <SystemCoreClockUpdate+0x10c>)
   80f04:	4b30      	ldr	r3, [pc, #192]	; (80fc8 <SystemCoreClockUpdate+0x104>)
   80f06:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80f08:	4b2d      	ldr	r3, [pc, #180]	; (80fc0 <SystemCoreClockUpdate+0xfc>)
   80f0a:	6a1b      	ldr	r3, [r3, #32]
   80f0c:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80f10:	2b10      	cmp	r3, #16
   80f12:	d002      	beq.n	80f1a <SystemCoreClockUpdate+0x56>
   80f14:	2b20      	cmp	r3, #32
   80f16:	d004      	beq.n	80f22 <SystemCoreClockUpdate+0x5e>
   80f18:	e03a      	b.n	80f90 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80f1a:	4a2e      	ldr	r2, [pc, #184]	; (80fd4 <SystemCoreClockUpdate+0x110>)
   80f1c:	4b2a      	ldr	r3, [pc, #168]	; (80fc8 <SystemCoreClockUpdate+0x104>)
   80f1e:	601a      	str	r2, [r3, #0]
				break;
   80f20:	e036      	b.n	80f90 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80f22:	4a2a      	ldr	r2, [pc, #168]	; (80fcc <SystemCoreClockUpdate+0x108>)
   80f24:	4b28      	ldr	r3, [pc, #160]	; (80fc8 <SystemCoreClockUpdate+0x104>)
   80f26:	601a      	str	r2, [r3, #0]
				break;
   80f28:	e032      	b.n	80f90 <SystemCoreClockUpdate+0xcc>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80f2a:	4b25      	ldr	r3, [pc, #148]	; (80fc0 <SystemCoreClockUpdate+0xfc>)
   80f2c:	6a1b      	ldr	r3, [r3, #32]
   80f2e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80f32:	d003      	beq.n	80f3c <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80f34:	4a25      	ldr	r2, [pc, #148]	; (80fcc <SystemCoreClockUpdate+0x108>)
   80f36:	4b24      	ldr	r3, [pc, #144]	; (80fc8 <SystemCoreClockUpdate+0x104>)
   80f38:	601a      	str	r2, [r3, #0]
   80f3a:	e012      	b.n	80f62 <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80f3c:	4a24      	ldr	r2, [pc, #144]	; (80fd0 <SystemCoreClockUpdate+0x10c>)
   80f3e:	4b22      	ldr	r3, [pc, #136]	; (80fc8 <SystemCoreClockUpdate+0x104>)
   80f40:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80f42:	4b1f      	ldr	r3, [pc, #124]	; (80fc0 <SystemCoreClockUpdate+0xfc>)
   80f44:	6a1b      	ldr	r3, [r3, #32]
   80f46:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80f4a:	2b10      	cmp	r3, #16
   80f4c:	d002      	beq.n	80f54 <SystemCoreClockUpdate+0x90>
   80f4e:	2b20      	cmp	r3, #32
   80f50:	d004      	beq.n	80f5c <SystemCoreClockUpdate+0x98>
   80f52:	e006      	b.n	80f62 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80f54:	4a1f      	ldr	r2, [pc, #124]	; (80fd4 <SystemCoreClockUpdate+0x110>)
   80f56:	4b1c      	ldr	r3, [pc, #112]	; (80fc8 <SystemCoreClockUpdate+0x104>)
   80f58:	601a      	str	r2, [r3, #0]
				break;
   80f5a:	e002      	b.n	80f62 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80f5c:	4a1b      	ldr	r2, [pc, #108]	; (80fcc <SystemCoreClockUpdate+0x108>)
   80f5e:	4b1a      	ldr	r3, [pc, #104]	; (80fc8 <SystemCoreClockUpdate+0x104>)
   80f60:	601a      	str	r2, [r3, #0]
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   80f62:	4b17      	ldr	r3, [pc, #92]	; (80fc0 <SystemCoreClockUpdate+0xfc>)
   80f64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80f66:	f003 0303 	and.w	r3, r3, #3
   80f6a:	2b02      	cmp	r3, #2
   80f6c:	d10d      	bne.n	80f8a <SystemCoreClockUpdate+0xc6>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80f6e:	4b14      	ldr	r3, [pc, #80]	; (80fc0 <SystemCoreClockUpdate+0xfc>)
   80f70:	6a98      	ldr	r0, [r3, #40]	; 0x28
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80f72:	6a99      	ldr	r1, [r3, #40]	; 0x28
   80f74:	4b14      	ldr	r3, [pc, #80]	; (80fc8 <SystemCoreClockUpdate+0x104>)
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80f76:	f3c0 400a 	ubfx	r0, r0, #16, #11
   80f7a:	681a      	ldr	r2, [r3, #0]
   80f7c:	fb00 2202 	mla	r2, r0, r2, r2
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80f80:	b2c9      	uxtb	r1, r1
   80f82:	fbb2 f2f1 	udiv	r2, r2, r1
   80f86:	601a      	str	r2, [r3, #0]
   80f88:	e002      	b.n	80f90 <SystemCoreClockUpdate+0xcc>
				                             CKGR_PLLAR_DIVA_Pos));
		} else {
			SystemCoreClock = SYS_UTMIPLL / 2U;
   80f8a:	4a13      	ldr	r2, [pc, #76]	; (80fd8 <SystemCoreClockUpdate+0x114>)
   80f8c:	4b0e      	ldr	r3, [pc, #56]	; (80fc8 <SystemCoreClockUpdate+0x104>)
   80f8e:	601a      	str	r2, [r3, #0]
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   80f90:	4b0b      	ldr	r3, [pc, #44]	; (80fc0 <SystemCoreClockUpdate+0xfc>)
   80f92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80f94:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80f98:	2b70      	cmp	r3, #112	; 0x70
   80f9a:	d107      	bne.n	80fac <SystemCoreClockUpdate+0xe8>
		SystemCoreClock /= 3U;
   80f9c:	4b0a      	ldr	r3, [pc, #40]	; (80fc8 <SystemCoreClockUpdate+0x104>)
   80f9e:	681a      	ldr	r2, [r3, #0]
   80fa0:	490e      	ldr	r1, [pc, #56]	; (80fdc <SystemCoreClockUpdate+0x118>)
   80fa2:	fba1 0202 	umull	r0, r2, r1, r2
   80fa6:	0852      	lsrs	r2, r2, #1
   80fa8:	601a      	str	r2, [r3, #0]
   80faa:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   80fac:	4b04      	ldr	r3, [pc, #16]	; (80fc0 <SystemCoreClockUpdate+0xfc>)
   80fae:	6b19      	ldr	r1, [r3, #48]	; 0x30
   80fb0:	4b05      	ldr	r3, [pc, #20]	; (80fc8 <SystemCoreClockUpdate+0x104>)
   80fb2:	f3c1 1102 	ubfx	r1, r1, #4, #3
   80fb6:	681a      	ldr	r2, [r3, #0]
   80fb8:	40ca      	lsrs	r2, r1
   80fba:	601a      	str	r2, [r3, #0]
   80fbc:	4770      	bx	lr
   80fbe:	bf00      	nop
   80fc0:	400e0600 	.word	0x400e0600
   80fc4:	400e1a10 	.word	0x400e1a10
   80fc8:	20070004 	.word	0x20070004
   80fcc:	00b71b00 	.word	0x00b71b00
   80fd0:	003d0900 	.word	0x003d0900
   80fd4:	007a1200 	.word	0x007a1200
   80fd8:	0e4e1c00 	.word	0x0e4e1c00
   80fdc:	aaaaaaab 	.word	0xaaaaaaab

00080fe0 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
   80fe0:	4b1b      	ldr	r3, [pc, #108]	; (81050 <system_init_flash+0x70>)
   80fe2:	4298      	cmp	r0, r3
   80fe4:	d806      	bhi.n	80ff4 <system_init_flash+0x14>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
   80fe6:	2300      	movs	r3, #0
   80fe8:	4a1a      	ldr	r2, [pc, #104]	; (81054 <system_init_flash+0x74>)
   80fea:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
   80fec:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80ff0:	6013      	str	r3, [r2, #0]
   80ff2:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
   80ff4:	4b18      	ldr	r3, [pc, #96]	; (81058 <system_init_flash+0x78>)
   80ff6:	4298      	cmp	r0, r3
   80ff8:	d807      	bhi.n	8100a <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
   80ffa:	f44f 7380 	mov.w	r3, #256	; 0x100
   80ffe:	4a15      	ldr	r2, [pc, #84]	; (81054 <system_init_flash+0x74>)
   81000:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
   81002:	f502 7200 	add.w	r2, r2, #512	; 0x200
   81006:	6013      	str	r3, [r2, #0]
   81008:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
   8100a:	4b14      	ldr	r3, [pc, #80]	; (8105c <system_init_flash+0x7c>)
   8100c:	4298      	cmp	r0, r3
   8100e:	d807      	bhi.n	81020 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
   81010:	f44f 7300 	mov.w	r3, #512	; 0x200
   81014:	4a0f      	ldr	r2, [pc, #60]	; (81054 <system_init_flash+0x74>)
   81016:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
   81018:	f502 7200 	add.w	r2, r2, #512	; 0x200
   8101c:	6013      	str	r3, [r2, #0]
   8101e:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
   81020:	4b0f      	ldr	r3, [pc, #60]	; (81060 <system_init_flash+0x80>)
   81022:	4298      	cmp	r0, r3
   81024:	d807      	bhi.n	81036 <system_init_flash+0x56>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
   81026:	f44f 7340 	mov.w	r3, #768	; 0x300
   8102a:	4a0a      	ldr	r2, [pc, #40]	; (81054 <system_init_flash+0x74>)
   8102c:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
   8102e:	f502 7200 	add.w	r2, r2, #512	; 0x200
   81032:	6013      	str	r3, [r2, #0]
   81034:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
   81036:	4b0b      	ldr	r3, [pc, #44]	; (81064 <system_init_flash+0x84>)
   81038:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
   8103a:	bf94      	ite	ls
   8103c:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
   81040:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
   81044:	4a03      	ldr	r2, [pc, #12]	; (81054 <system_init_flash+0x74>)
   81046:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
   81048:	f502 7200 	add.w	r2, r2, #512	; 0x200
   8104c:	6013      	str	r3, [r2, #0]
   8104e:	4770      	bx	lr
   81050:	0121eabf 	.word	0x0121eabf
   81054:	400e0a00 	.word	0x400e0a00
   81058:	02faf07f 	.word	0x02faf07f
   8105c:	03d08fff 	.word	0x03d08fff
   81060:	04c4b3ff 	.word	0x04c4b3ff
   81064:	055d4a7f 	.word	0x055d4a7f

00081068 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   81068:	4b09      	ldr	r3, [pc, #36]	; (81090 <_sbrk+0x28>)
   8106a:	681b      	ldr	r3, [r3, #0]
   8106c:	b913      	cbnz	r3, 81074 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
   8106e:	4a09      	ldr	r2, [pc, #36]	; (81094 <_sbrk+0x2c>)
   81070:	4b07      	ldr	r3, [pc, #28]	; (81090 <_sbrk+0x28>)
   81072:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   81074:	4b06      	ldr	r3, [pc, #24]	; (81090 <_sbrk+0x28>)
   81076:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   81078:	181a      	adds	r2, r3, r0
   8107a:	4907      	ldr	r1, [pc, #28]	; (81098 <_sbrk+0x30>)
   8107c:	4291      	cmp	r1, r2
   8107e:	db04      	blt.n	8108a <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
   81080:	4610      	mov	r0, r2
   81082:	4a03      	ldr	r2, [pc, #12]	; (81090 <_sbrk+0x28>)
   81084:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   81086:	4618      	mov	r0, r3
   81088:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
   8108a:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
   8108e:	4770      	bx	lr
   81090:	20073068 	.word	0x20073068
   81094:	200750a8 	.word	0x200750a8
   81098:	20087ffc 	.word	0x20087ffc

0008109c <__libc_init_array>:
   8109c:	b570      	push	{r4, r5, r6, lr}
   8109e:	4b0e      	ldr	r3, [pc, #56]	; (810d8 <__libc_init_array+0x3c>)
   810a0:	4d0e      	ldr	r5, [pc, #56]	; (810dc <__libc_init_array+0x40>)
   810a2:	2400      	movs	r4, #0
   810a4:	1aed      	subs	r5, r5, r3
   810a6:	10ad      	asrs	r5, r5, #2
   810a8:	461e      	mov	r6, r3
   810aa:	42ac      	cmp	r4, r5
   810ac:	d004      	beq.n	810b8 <__libc_init_array+0x1c>
   810ae:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   810b2:	4790      	blx	r2
   810b4:	3401      	adds	r4, #1
   810b6:	e7f8      	b.n	810aa <__libc_init_array+0xe>
   810b8:	f004 fcf6 	bl	85aa8 <_init>
   810bc:	4d08      	ldr	r5, [pc, #32]	; (810e0 <__libc_init_array+0x44>)
   810be:	4b09      	ldr	r3, [pc, #36]	; (810e4 <__libc_init_array+0x48>)
   810c0:	2400      	movs	r4, #0
   810c2:	1aed      	subs	r5, r5, r3
   810c4:	10ad      	asrs	r5, r5, #2
   810c6:	461e      	mov	r6, r3
   810c8:	42ac      	cmp	r4, r5
   810ca:	d004      	beq.n	810d6 <__libc_init_array+0x3a>
   810cc:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
   810d0:	4790      	blx	r2
   810d2:	3401      	adds	r4, #1
   810d4:	e7f8      	b.n	810c8 <__libc_init_array+0x2c>
   810d6:	bd70      	pop	{r4, r5, r6, pc}
   810d8:	00085ab4 	.word	0x00085ab4
   810dc:	00085ab4 	.word	0x00085ab4
   810e0:	00085abc 	.word	0x00085abc
   810e4:	00085ab4 	.word	0x00085ab4

000810e8 <memset>:
   810e8:	4402      	add	r2, r0
   810ea:	4603      	mov	r3, r0
   810ec:	4293      	cmp	r3, r2
   810ee:	d002      	beq.n	810f6 <memset+0xe>
   810f0:	f803 1b01 	strb.w	r1, [r3], #1
   810f4:	e7fa      	b.n	810ec <memset+0x4>
   810f6:	4770      	bx	lr

000810f8 <_sprintf_r>:
   810f8:	b40c      	push	{r2, r3}
   810fa:	b510      	push	{r4, lr}
   810fc:	b09c      	sub	sp, #112	; 0x70
   810fe:	ab1e      	add	r3, sp, #120	; 0x78
   81100:	9102      	str	r1, [sp, #8]
   81102:	9106      	str	r1, [sp, #24]
   81104:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   81108:	f853 2b04 	ldr.w	r2, [r3], #4
   8110c:	9104      	str	r1, [sp, #16]
   8110e:	9107      	str	r1, [sp, #28]
   81110:	f64f 71ff 	movw	r1, #65535	; 0xffff
   81114:	f8ad 1016 	strh.w	r1, [sp, #22]
   81118:	f44f 7402 	mov.w	r4, #520	; 0x208
   8111c:	a902      	add	r1, sp, #8
   8111e:	9301      	str	r3, [sp, #4]
   81120:	f8ad 4014 	strh.w	r4, [sp, #20]
   81124:	f000 f834 	bl	81190 <_svfprintf_r>
   81128:	9b02      	ldr	r3, [sp, #8]
   8112a:	2200      	movs	r2, #0
   8112c:	701a      	strb	r2, [r3, #0]
   8112e:	b01c      	add	sp, #112	; 0x70
   81130:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   81134:	b002      	add	sp, #8
   81136:	4770      	bx	lr

00081138 <sprintf>:
   81138:	b40e      	push	{r1, r2, r3}
   8113a:	b500      	push	{lr}
   8113c:	f44f 7102 	mov.w	r1, #520	; 0x208
   81140:	b09c      	sub	sp, #112	; 0x70
   81142:	f8ad 1014 	strh.w	r1, [sp, #20]
   81146:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
   8114a:	9104      	str	r1, [sp, #16]
   8114c:	9107      	str	r1, [sp, #28]
   8114e:	f64f 71ff 	movw	r1, #65535	; 0xffff
   81152:	ab1d      	add	r3, sp, #116	; 0x74
   81154:	f8ad 1016 	strh.w	r1, [sp, #22]
   81158:	4908      	ldr	r1, [pc, #32]	; (8117c <sprintf+0x44>)
   8115a:	f853 2b04 	ldr.w	r2, [r3], #4
   8115e:	9002      	str	r0, [sp, #8]
   81160:	9006      	str	r0, [sp, #24]
   81162:	6808      	ldr	r0, [r1, #0]
   81164:	a902      	add	r1, sp, #8
   81166:	9301      	str	r3, [sp, #4]
   81168:	f000 f812 	bl	81190 <_svfprintf_r>
   8116c:	9b02      	ldr	r3, [sp, #8]
   8116e:	2200      	movs	r2, #0
   81170:	701a      	strb	r2, [r3, #0]
   81172:	b01c      	add	sp, #112	; 0x70
   81174:	f85d eb04 	ldr.w	lr, [sp], #4
   81178:	b003      	add	sp, #12
   8117a:	4770      	bx	lr
   8117c:	20070008 	.word	0x20070008

00081180 <strlen>:
   81180:	4603      	mov	r3, r0
   81182:	f813 2b01 	ldrb.w	r2, [r3], #1
   81186:	2a00      	cmp	r2, #0
   81188:	d1fb      	bne.n	81182 <strlen+0x2>
   8118a:	1a18      	subs	r0, r3, r0
   8118c:	3801      	subs	r0, #1
   8118e:	4770      	bx	lr

00081190 <_svfprintf_r>:
   81190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81194:	b0c3      	sub	sp, #268	; 0x10c
   81196:	468b      	mov	fp, r1
   81198:	4698      	mov	r8, r3
   8119a:	920b      	str	r2, [sp, #44]	; 0x2c
   8119c:	4682      	mov	sl, r0
   8119e:	f001 ff2b 	bl	82ff8 <_localeconv_r>
   811a2:	6800      	ldr	r0, [r0, #0]
   811a4:	9018      	str	r0, [sp, #96]	; 0x60
   811a6:	f7ff ffeb 	bl	81180 <strlen>
   811aa:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   811ae:	9010      	str	r0, [sp, #64]	; 0x40
   811b0:	0619      	lsls	r1, r3, #24
   811b2:	d515      	bpl.n	811e0 <_svfprintf_r+0x50>
   811b4:	f8db 3010 	ldr.w	r3, [fp, #16]
   811b8:	b993      	cbnz	r3, 811e0 <_svfprintf_r+0x50>
   811ba:	4650      	mov	r0, sl
   811bc:	2140      	movs	r1, #64	; 0x40
   811be:	f001 ff2d 	bl	8301c <_malloc_r>
   811c2:	f8cb 0000 	str.w	r0, [fp]
   811c6:	f8cb 0010 	str.w	r0, [fp, #16]
   811ca:	b930      	cbnz	r0, 811da <_svfprintf_r+0x4a>
   811cc:	230c      	movs	r3, #12
   811ce:	f8ca 3000 	str.w	r3, [sl]
   811d2:	f04f 30ff 	mov.w	r0, #4294967295
   811d6:	f000 bf6e 	b.w	820b6 <_svfprintf_r+0xf26>
   811da:	2340      	movs	r3, #64	; 0x40
   811dc:	f8cb 3014 	str.w	r3, [fp, #20]
   811e0:	2400      	movs	r4, #0
   811e2:	2500      	movs	r5, #0
   811e4:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
   811e8:	2300      	movs	r3, #0
   811ea:	ae32      	add	r6, sp, #200	; 0xc8
   811ec:	9625      	str	r6, [sp, #148]	; 0x94
   811ee:	9327      	str	r3, [sp, #156]	; 0x9c
   811f0:	9326      	str	r3, [sp, #152]	; 0x98
   811f2:	9309      	str	r3, [sp, #36]	; 0x24
   811f4:	931b      	str	r3, [sp, #108]	; 0x6c
   811f6:	931a      	str	r3, [sp, #104]	; 0x68
   811f8:	930f      	str	r3, [sp, #60]	; 0x3c
   811fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   811fc:	461c      	mov	r4, r3
   811fe:	f813 2b01 	ldrb.w	r2, [r3], #1
   81202:	b91a      	cbnz	r2, 8120c <_svfprintf_r+0x7c>
   81204:	980b      	ldr	r0, [sp, #44]	; 0x2c
   81206:	1a25      	subs	r5, r4, r0
   81208:	d103      	bne.n	81212 <_svfprintf_r+0x82>
   8120a:	e01b      	b.n	81244 <_svfprintf_r+0xb4>
   8120c:	2a25      	cmp	r2, #37	; 0x25
   8120e:	d1f5      	bne.n	811fc <_svfprintf_r+0x6c>
   81210:	e7f8      	b.n	81204 <_svfprintf_r+0x74>
   81212:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81214:	990b      	ldr	r1, [sp, #44]	; 0x2c
   81216:	442b      	add	r3, r5
   81218:	9327      	str	r3, [sp, #156]	; 0x9c
   8121a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8121c:	e886 0022 	stmia.w	r6, {r1, r5}
   81220:	3301      	adds	r3, #1
   81222:	2b07      	cmp	r3, #7
   81224:	9326      	str	r3, [sp, #152]	; 0x98
   81226:	dc01      	bgt.n	8122c <_svfprintf_r+0x9c>
   81228:	3608      	adds	r6, #8
   8122a:	e008      	b.n	8123e <_svfprintf_r+0xae>
   8122c:	4650      	mov	r0, sl
   8122e:	4659      	mov	r1, fp
   81230:	aa25      	add	r2, sp, #148	; 0x94
   81232:	f002 feff 	bl	84034 <__ssprint_r>
   81236:	2800      	cmp	r0, #0
   81238:	f040 8735 	bne.w	820a6 <_svfprintf_r+0xf16>
   8123c:	ae32      	add	r6, sp, #200	; 0xc8
   8123e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   81240:	442a      	add	r2, r5
   81242:	920f      	str	r2, [sp, #60]	; 0x3c
   81244:	7823      	ldrb	r3, [r4, #0]
   81246:	2b00      	cmp	r3, #0
   81248:	f000 8726 	beq.w	82098 <_svfprintf_r+0xf08>
   8124c:	2300      	movs	r3, #0
   8124e:	3401      	adds	r4, #1
   81250:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81254:	f04f 39ff 	mov.w	r9, #4294967295
   81258:	930e      	str	r3, [sp, #56]	; 0x38
   8125a:	461f      	mov	r7, r3
   8125c:	1c65      	adds	r5, r4, #1
   8125e:	7824      	ldrb	r4, [r4, #0]
   81260:	950b      	str	r5, [sp, #44]	; 0x2c
   81262:	9408      	str	r4, [sp, #32]
   81264:	9c08      	ldr	r4, [sp, #32]
   81266:	f1a4 0220 	sub.w	r2, r4, #32
   8126a:	2a58      	cmp	r2, #88	; 0x58
   8126c:	f200 8385 	bhi.w	8197a <_svfprintf_r+0x7ea>
   81270:	e8df f012 	tbh	[pc, r2, lsl #1]
   81274:	0383006d 	.word	0x0383006d
   81278:	00710383 	.word	0x00710383
   8127c:	03830383 	.word	0x03830383
   81280:	03830383 	.word	0x03830383
   81284:	03830383 	.word	0x03830383
   81288:	0059005b 	.word	0x0059005b
   8128c:	00770383 	.word	0x00770383
   81290:	0383007a 	.word	0x0383007a
   81294:	00a2009f 	.word	0x00a2009f
   81298:	00a200a2 	.word	0x00a200a2
   8129c:	00a200a2 	.word	0x00a200a2
   812a0:	00a200a2 	.word	0x00a200a2
   812a4:	00a200a2 	.word	0x00a200a2
   812a8:	03830383 	.word	0x03830383
   812ac:	03830383 	.word	0x03830383
   812b0:	03830383 	.word	0x03830383
   812b4:	03830383 	.word	0x03830383
   812b8:	03830383 	.word	0x03830383
   812bc:	00fe00d3 	.word	0x00fe00d3
   812c0:	00fe0383 	.word	0x00fe0383
   812c4:	03830383 	.word	0x03830383
   812c8:	03830383 	.word	0x03830383
   812cc:	038300b6 	.word	0x038300b6
   812d0:	026b0383 	.word	0x026b0383
   812d4:	03830383 	.word	0x03830383
   812d8:	03830383 	.word	0x03830383
   812dc:	02bb0383 	.word	0x02bb0383
   812e0:	03830383 	.word	0x03830383
   812e4:	03830068 	.word	0x03830068
   812e8:	03830383 	.word	0x03830383
   812ec:	03830383 	.word	0x03830383
   812f0:	03830383 	.word	0x03830383
   812f4:	03830383 	.word	0x03830383
   812f8:	00c90383 	.word	0x00c90383
   812fc:	00fe0065 	.word	0x00fe0065
   81300:	00fe00fe 	.word	0x00fe00fe
   81304:	006500b9 	.word	0x006500b9
   81308:	03830383 	.word	0x03830383
   8130c:	038300bc 	.word	0x038300bc
   81310:	026d024c 	.word	0x026d024c
   81314:	00c6028c 	.word	0x00c6028c
   81318:	029e0383 	.word	0x029e0383
   8131c:	02bd0383 	.word	0x02bd0383
   81320:	03830383 	.word	0x03830383
   81324:	02d8      	.short	0x02d8
   81326:	232b      	movs	r3, #43	; 0x2b
   81328:	e007      	b.n	8133a <_svfprintf_r+0x1aa>
   8132a:	f8d8 5000 	ldr.w	r5, [r8]
   8132e:	f108 0204 	add.w	r2, r8, #4
   81332:	2d00      	cmp	r5, #0
   81334:	950e      	str	r5, [sp, #56]	; 0x38
   81336:	db11      	blt.n	8135c <_svfprintf_r+0x1cc>
   81338:	4690      	mov	r8, r2
   8133a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   8133c:	e78e      	b.n	8125c <_svfprintf_r+0xcc>
   8133e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81342:	e06e      	b.n	81422 <_svfprintf_r+0x292>
   81344:	4cab      	ldr	r4, [pc, #684]	; (815f4 <_svfprintf_r+0x464>)
   81346:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8134a:	941b      	str	r4, [sp, #108]	; 0x6c
   8134c:	e26e      	b.n	8182c <_svfprintf_r+0x69c>
   8134e:	2b00      	cmp	r3, #0
   81350:	bf08      	it	eq
   81352:	2320      	moveq	r3, #32
   81354:	e7f1      	b.n	8133a <_svfprintf_r+0x1aa>
   81356:	f047 0701 	orr.w	r7, r7, #1
   8135a:	e7ee      	b.n	8133a <_svfprintf_r+0x1aa>
   8135c:	426d      	negs	r5, r5
   8135e:	950e      	str	r5, [sp, #56]	; 0x38
   81360:	4690      	mov	r8, r2
   81362:	f047 0704 	orr.w	r7, r7, #4
   81366:	e7e8      	b.n	8133a <_svfprintf_r+0x1aa>
   81368:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   8136a:	7825      	ldrb	r5, [r4, #0]
   8136c:	1c62      	adds	r2, r4, #1
   8136e:	2d2a      	cmp	r5, #42	; 0x2a
   81370:	9508      	str	r5, [sp, #32]
   81372:	d002      	beq.n	8137a <_svfprintf_r+0x1ea>
   81374:	f04f 0900 	mov.w	r9, #0
   81378:	e00b      	b.n	81392 <_svfprintf_r+0x202>
   8137a:	f8d8 9000 	ldr.w	r9, [r8]
   8137e:	f108 0104 	add.w	r1, r8, #4
   81382:	f1b9 0f00 	cmp.w	r9, #0
   81386:	4688      	mov	r8, r1
   81388:	920b      	str	r2, [sp, #44]	; 0x2c
   8138a:	dad6      	bge.n	8133a <_svfprintf_r+0x1aa>
   8138c:	f04f 39ff 	mov.w	r9, #4294967295
   81390:	e7d3      	b.n	8133a <_svfprintf_r+0x1aa>
   81392:	9d08      	ldr	r5, [sp, #32]
   81394:	f1a5 0130 	sub.w	r1, r5, #48	; 0x30
   81398:	2909      	cmp	r1, #9
   8139a:	d806      	bhi.n	813aa <_svfprintf_r+0x21a>
   8139c:	f812 4b01 	ldrb.w	r4, [r2], #1
   813a0:	200a      	movs	r0, #10
   813a2:	fb00 1909 	mla	r9, r0, r9, r1
   813a6:	9408      	str	r4, [sp, #32]
   813a8:	e7f3      	b.n	81392 <_svfprintf_r+0x202>
   813aa:	ea49 79e9 	orr.w	r9, r9, r9, asr #31
   813ae:	920b      	str	r2, [sp, #44]	; 0x2c
   813b0:	e758      	b.n	81264 <_svfprintf_r+0xd4>
   813b2:	f047 0780 	orr.w	r7, r7, #128	; 0x80
   813b6:	e7c0      	b.n	8133a <_svfprintf_r+0x1aa>
   813b8:	2400      	movs	r4, #0
   813ba:	940e      	str	r4, [sp, #56]	; 0x38
   813bc:	9d08      	ldr	r5, [sp, #32]
   813be:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   813c0:	f1a5 0230 	sub.w	r2, r5, #48	; 0x30
   813c4:	210a      	movs	r1, #10
   813c6:	fb01 2404 	mla	r4, r1, r4, r2
   813ca:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   813cc:	940e      	str	r4, [sp, #56]	; 0x38
   813ce:	f812 5b01 	ldrb.w	r5, [r2], #1
   813d2:	f1a5 0130 	sub.w	r1, r5, #48	; 0x30
   813d6:	2909      	cmp	r1, #9
   813d8:	9508      	str	r5, [sp, #32]
   813da:	d8e8      	bhi.n	813ae <_svfprintf_r+0x21e>
   813dc:	920b      	str	r2, [sp, #44]	; 0x2c
   813de:	e7ed      	b.n	813bc <_svfprintf_r+0x22c>
   813e0:	f047 0708 	orr.w	r7, r7, #8
   813e4:	e7a9      	b.n	8133a <_svfprintf_r+0x1aa>
   813e6:	f047 0740 	orr.w	r7, r7, #64	; 0x40
   813ea:	e7a6      	b.n	8133a <_svfprintf_r+0x1aa>
   813ec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   813ee:	7822      	ldrb	r2, [r4, #0]
   813f0:	2a6c      	cmp	r2, #108	; 0x6c
   813f2:	d102      	bne.n	813fa <_svfprintf_r+0x26a>
   813f4:	3401      	adds	r4, #1
   813f6:	940b      	str	r4, [sp, #44]	; 0x2c
   813f8:	e002      	b.n	81400 <_svfprintf_r+0x270>
   813fa:	f047 0710 	orr.w	r7, r7, #16
   813fe:	e79c      	b.n	8133a <_svfprintf_r+0x1aa>
   81400:	f047 0720 	orr.w	r7, r7, #32
   81404:	e799      	b.n	8133a <_svfprintf_r+0x1aa>
   81406:	f8d8 3000 	ldr.w	r3, [r8]
   8140a:	2500      	movs	r5, #0
   8140c:	f88d 30a0 	strb.w	r3, [sp, #160]	; 0xa0
   81410:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   81414:	f108 0804 	add.w	r8, r8, #4
   81418:	e2ba      	b.n	81990 <_svfprintf_r+0x800>
   8141a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8141e:	f047 0710 	orr.w	r7, r7, #16
   81422:	06ba      	lsls	r2, r7, #26
   81424:	d508      	bpl.n	81438 <_svfprintf_r+0x2a8>
   81426:	f108 0807 	add.w	r8, r8, #7
   8142a:	f028 0307 	bic.w	r3, r8, #7
   8142e:	f103 0808 	add.w	r8, r3, #8
   81432:	e9d3 4500 	ldrd	r4, r5, [r3]
   81436:	e00f      	b.n	81458 <_svfprintf_r+0x2c8>
   81438:	f017 0f10 	tst.w	r7, #16
   8143c:	f108 0304 	add.w	r3, r8, #4
   81440:	d002      	beq.n	81448 <_svfprintf_r+0x2b8>
   81442:	f8d8 4000 	ldr.w	r4, [r8]
   81446:	e005      	b.n	81454 <_svfprintf_r+0x2c4>
   81448:	f8d8 4000 	ldr.w	r4, [r8]
   8144c:	f017 0f40 	tst.w	r7, #64	; 0x40
   81450:	bf18      	it	ne
   81452:	b224      	sxthne	r4, r4
   81454:	17e5      	asrs	r5, r4, #31
   81456:	4698      	mov	r8, r3
   81458:	2c00      	cmp	r4, #0
   8145a:	f175 0100 	sbcs.w	r1, r5, #0
   8145e:	f280 8210 	bge.w	81882 <_svfprintf_r+0x6f2>
   81462:	232d      	movs	r3, #45	; 0x2d
   81464:	4264      	negs	r4, r4
   81466:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   8146a:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8146e:	e208      	b.n	81882 <_svfprintf_r+0x6f2>
   81470:	9c08      	ldr	r4, [sp, #32]
   81472:	f108 0807 	add.w	r8, r8, #7
   81476:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8147a:	970a      	str	r7, [sp, #40]	; 0x28
   8147c:	f028 0307 	bic.w	r3, r8, #7
   81480:	9411      	str	r4, [sp, #68]	; 0x44
   81482:	e9d3 4500 	ldrd	r4, r5, [r3]
   81486:	e9cd 450c 	strd	r4, r5, [sp, #48]	; 0x30
   8148a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   8148e:	f103 0808 	add.w	r8, r3, #8
   81492:	f002 fd93 	bl	83fbc <__fpclassifyd>
   81496:	2801      	cmp	r0, #1
   81498:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   8149c:	d114      	bne.n	814c8 <_svfprintf_r+0x338>
   8149e:	2200      	movs	r2, #0
   814a0:	2300      	movs	r3, #0
   814a2:	f003 fed7 	bl	85254 <__aeabi_dcmplt>
   814a6:	b110      	cbz	r0, 814ae <_svfprintf_r+0x31e>
   814a8:	232d      	movs	r3, #45	; 0x2d
   814aa:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   814ae:	9d08      	ldr	r5, [sp, #32]
   814b0:	4b51      	ldr	r3, [pc, #324]	; (815f8 <_svfprintf_r+0x468>)
   814b2:	4a52      	ldr	r2, [pc, #328]	; (815fc <_svfprintf_r+0x46c>)
   814b4:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   814b8:	2d47      	cmp	r5, #71	; 0x47
   814ba:	bfd8      	it	le
   814bc:	461a      	movle	r2, r3
   814be:	9207      	str	r2, [sp, #28]
   814c0:	f04f 0903 	mov.w	r9, #3
   814c4:	2500      	movs	r5, #0
   814c6:	e26a      	b.n	8199e <_svfprintf_r+0x80e>
   814c8:	f002 fd78 	bl	83fbc <__fpclassifyd>
   814cc:	b958      	cbnz	r0, 814e6 <_svfprintf_r+0x356>
   814ce:	4b4c      	ldr	r3, [pc, #304]	; (81600 <_svfprintf_r+0x470>)
   814d0:	4a4c      	ldr	r2, [pc, #304]	; (81604 <_svfprintf_r+0x474>)
   814d2:	9c08      	ldr	r4, [sp, #32]
   814d4:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   814d8:	2c47      	cmp	r4, #71	; 0x47
   814da:	bfd8      	it	le
   814dc:	461a      	movle	r2, r3
   814de:	9207      	str	r2, [sp, #28]
   814e0:	f04f 0903 	mov.w	r9, #3
   814e4:	e25a      	b.n	8199c <_svfprintf_r+0x80c>
   814e6:	f1b9 3fff 	cmp.w	r9, #4294967295
   814ea:	d00a      	beq.n	81502 <_svfprintf_r+0x372>
   814ec:	9d08      	ldr	r5, [sp, #32]
   814ee:	f025 0320 	bic.w	r3, r5, #32
   814f2:	2b47      	cmp	r3, #71	; 0x47
   814f4:	d107      	bne.n	81506 <_svfprintf_r+0x376>
   814f6:	f1b9 0f00 	cmp.w	r9, #0
   814fa:	bf08      	it	eq
   814fc:	f04f 0901 	moveq.w	r9, #1
   81500:	e001      	b.n	81506 <_svfprintf_r+0x376>
   81502:	f04f 0906 	mov.w	r9, #6
   81506:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   8150a:	2b00      	cmp	r3, #0
   8150c:	f447 7780 	orr.w	r7, r7, #256	; 0x100
   81510:	da08      	bge.n	81524 <_svfprintf_r+0x394>
   81512:	990d      	ldr	r1, [sp, #52]	; 0x34
   81514:	980c      	ldr	r0, [sp, #48]	; 0x30
   81516:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
   8151a:	242d      	movs	r4, #45	; 0x2d
   8151c:	9012      	str	r0, [sp, #72]	; 0x48
   8151e:	9113      	str	r1, [sp, #76]	; 0x4c
   81520:	9419      	str	r4, [sp, #100]	; 0x64
   81522:	e005      	b.n	81530 <_svfprintf_r+0x3a0>
   81524:	e9dd 450c 	ldrd	r4, r5, [sp, #48]	; 0x30
   81528:	e9cd 4512 	strd	r4, r5, [sp, #72]	; 0x48
   8152c:	2500      	movs	r5, #0
   8152e:	9519      	str	r5, [sp, #100]	; 0x64
   81530:	9d08      	ldr	r5, [sp, #32]
   81532:	f025 0420 	bic.w	r4, r5, #32
   81536:	2c46      	cmp	r4, #70	; 0x46
   81538:	d004      	beq.n	81544 <_svfprintf_r+0x3b4>
   8153a:	2c45      	cmp	r4, #69	; 0x45
   8153c:	d105      	bne.n	8154a <_svfprintf_r+0x3ba>
   8153e:	f109 0501 	add.w	r5, r9, #1
   81542:	e003      	b.n	8154c <_svfprintf_r+0x3bc>
   81544:	464d      	mov	r5, r9
   81546:	2303      	movs	r3, #3
   81548:	e001      	b.n	8154e <_svfprintf_r+0x3be>
   8154a:	464d      	mov	r5, r9
   8154c:	2302      	movs	r3, #2
   8154e:	e88d 0028 	stmia.w	sp, {r3, r5}
   81552:	ab1f      	add	r3, sp, #124	; 0x7c
   81554:	9302      	str	r3, [sp, #8]
   81556:	ab20      	add	r3, sp, #128	; 0x80
   81558:	9303      	str	r3, [sp, #12]
   8155a:	ab23      	add	r3, sp, #140	; 0x8c
   8155c:	9304      	str	r3, [sp, #16]
   8155e:	4650      	mov	r0, sl
   81560:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
   81564:	f000 fe4b 	bl	821fe <_dtoa_r>
   81568:	2c47      	cmp	r4, #71	; 0x47
   8156a:	9007      	str	r0, [sp, #28]
   8156c:	d10a      	bne.n	81584 <_svfprintf_r+0x3f4>
   8156e:	980a      	ldr	r0, [sp, #40]	; 0x28
   81570:	07c3      	lsls	r3, r0, #31
   81572:	d407      	bmi.n	81584 <_svfprintf_r+0x3f4>
   81574:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   81576:	9d07      	ldr	r5, [sp, #28]
   81578:	2c47      	cmp	r4, #71	; 0x47
   8157a:	ebc5 0303 	rsb	r3, r5, r3
   8157e:	9309      	str	r3, [sp, #36]	; 0x24
   81580:	d142      	bne.n	81608 <_svfprintf_r+0x478>
   81582:	e02d      	b.n	815e0 <_svfprintf_r+0x450>
   81584:	f8dd c01c 	ldr.w	ip, [sp, #28]
   81588:	2c46      	cmp	r4, #70	; 0x46
   8158a:	44ac      	add	ip, r5
   8158c:	d113      	bne.n	815b6 <_svfprintf_r+0x426>
   8158e:	9807      	ldr	r0, [sp, #28]
   81590:	7803      	ldrb	r3, [r0, #0]
   81592:	2b30      	cmp	r3, #48	; 0x30
   81594:	d10d      	bne.n	815b2 <_svfprintf_r+0x422>
   81596:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   8159a:	2200      	movs	r2, #0
   8159c:	2300      	movs	r3, #0
   8159e:	f8cd c018 	str.w	ip, [sp, #24]
   815a2:	f003 fe4d 	bl	85240 <__aeabi_dcmpeq>
   815a6:	f8dd c018 	ldr.w	ip, [sp, #24]
   815aa:	b910      	cbnz	r0, 815b2 <_svfprintf_r+0x422>
   815ac:	f1c5 0501 	rsb	r5, r5, #1
   815b0:	951f      	str	r5, [sp, #124]	; 0x7c
   815b2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   815b4:	449c      	add	ip, r3
   815b6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   815ba:	2200      	movs	r2, #0
   815bc:	2300      	movs	r3, #0
   815be:	f8cd c018 	str.w	ip, [sp, #24]
   815c2:	f003 fe3d 	bl	85240 <__aeabi_dcmpeq>
   815c6:	f8dd c018 	ldr.w	ip, [sp, #24]
   815ca:	b108      	cbz	r0, 815d0 <_svfprintf_r+0x440>
   815cc:	f8cd c08c 	str.w	ip, [sp, #140]	; 0x8c
   815d0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   815d2:	4563      	cmp	r3, ip
   815d4:	d2ce      	bcs.n	81574 <_svfprintf_r+0x3e4>
   815d6:	1c5a      	adds	r2, r3, #1
   815d8:	9223      	str	r2, [sp, #140]	; 0x8c
   815da:	2230      	movs	r2, #48	; 0x30
   815dc:	701a      	strb	r2, [r3, #0]
   815de:	e7f7      	b.n	815d0 <_svfprintf_r+0x440>
   815e0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   815e2:	1cdc      	adds	r4, r3, #3
   815e4:	db01      	blt.n	815ea <_svfprintf_r+0x45a>
   815e6:	454b      	cmp	r3, r9
   815e8:	dd6e      	ble.n	816c8 <_svfprintf_r+0x538>
   815ea:	9c08      	ldr	r4, [sp, #32]
   815ec:	3c02      	subs	r4, #2
   815ee:	9408      	str	r4, [sp, #32]
   815f0:	e00d      	b.n	8160e <_svfprintf_r+0x47e>
   815f2:	bf00      	nop
   815f4:	00085926 	.word	0x00085926
   815f8:	00085916 	.word	0x00085916
   815fc:	0008591a 	.word	0x0008591a
   81600:	0008591e 	.word	0x0008591e
   81604:	00085922 	.word	0x00085922
   81608:	9d08      	ldr	r5, [sp, #32]
   8160a:	2d65      	cmp	r5, #101	; 0x65
   8160c:	dc43      	bgt.n	81696 <_svfprintf_r+0x506>
   8160e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81610:	9c08      	ldr	r4, [sp, #32]
   81612:	3b01      	subs	r3, #1
   81614:	2b00      	cmp	r3, #0
   81616:	931f      	str	r3, [sp, #124]	; 0x7c
   81618:	bfba      	itte	lt
   8161a:	425b      	neglt	r3, r3
   8161c:	222d      	movlt	r2, #45	; 0x2d
   8161e:	222b      	movge	r2, #43	; 0x2b
   81620:	2b09      	cmp	r3, #9
   81622:	f88d 4084 	strb.w	r4, [sp, #132]	; 0x84
   81626:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   8162a:	dd1d      	ble.n	81668 <_svfprintf_r+0x4d8>
   8162c:	f10d 0292 	add.w	r2, sp, #146	; 0x92
   81630:	200a      	movs	r0, #10
   81632:	fb93 f1f0 	sdiv	r1, r3, r0
   81636:	fb00 3311 	mls	r3, r0, r1, r3
   8163a:	2909      	cmp	r1, #9
   8163c:	f103 0330 	add.w	r3, r3, #48	; 0x30
   81640:	4614      	mov	r4, r2
   81642:	f802 3901 	strb.w	r3, [r2], #-1
   81646:	460b      	mov	r3, r1
   81648:	dcf2      	bgt.n	81630 <_svfprintf_r+0x4a0>
   8164a:	f101 0330 	add.w	r3, r1, #48	; 0x30
   8164e:	f804 3d01 	strb.w	r3, [r4, #-1]!
   81652:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   81656:	f10d 0293 	add.w	r2, sp, #147	; 0x93
   8165a:	4294      	cmp	r4, r2
   8165c:	d20b      	bcs.n	81676 <_svfprintf_r+0x4e6>
   8165e:	f814 2b01 	ldrb.w	r2, [r4], #1
   81662:	f803 2b01 	strb.w	r2, [r3], #1
   81666:	e7f6      	b.n	81656 <_svfprintf_r+0x4c6>
   81668:	2230      	movs	r2, #48	; 0x30
   8166a:	4413      	add	r3, r2
   8166c:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   81670:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   81674:	ab22      	add	r3, sp, #136	; 0x88
   81676:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81678:	aa21      	add	r2, sp, #132	; 0x84
   8167a:	1a9a      	subs	r2, r3, r2
   8167c:	4691      	mov	r9, r2
   8167e:	2d01      	cmp	r5, #1
   81680:	921a      	str	r2, [sp, #104]	; 0x68
   81682:	44a9      	add	r9, r5
   81684:	dc03      	bgt.n	8168e <_svfprintf_r+0x4fe>
   81686:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   81688:	f015 0401 	ands.w	r4, r5, #1
   8168c:	d037      	beq.n	816fe <_svfprintf_r+0x56e>
   8168e:	f109 0901 	add.w	r9, r9, #1
   81692:	2400      	movs	r4, #0
   81694:	e033      	b.n	816fe <_svfprintf_r+0x56e>
   81696:	9c08      	ldr	r4, [sp, #32]
   81698:	2c66      	cmp	r4, #102	; 0x66
   8169a:	d115      	bne.n	816c8 <_svfprintf_r+0x538>
   8169c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   8169e:	2b00      	cmp	r3, #0
   816a0:	dd09      	ble.n	816b6 <_svfprintf_r+0x526>
   816a2:	f1b9 0f00 	cmp.w	r9, #0
   816a6:	d102      	bne.n	816ae <_svfprintf_r+0x51e>
   816a8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   816aa:	07e8      	lsls	r0, r5, #31
   816ac:	d523      	bpl.n	816f6 <_svfprintf_r+0x566>
   816ae:	f109 0901 	add.w	r9, r9, #1
   816b2:	444b      	add	r3, r9
   816b4:	e01f      	b.n	816f6 <_svfprintf_r+0x566>
   816b6:	f1b9 0f00 	cmp.w	r9, #0
   816ba:	d102      	bne.n	816c2 <_svfprintf_r+0x532>
   816bc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   816be:	07e1      	lsls	r1, r4, #31
   816c0:	d515      	bpl.n	816ee <_svfprintf_r+0x55e>
   816c2:	f109 0302 	add.w	r3, r9, #2
   816c6:	e016      	b.n	816f6 <_svfprintf_r+0x566>
   816c8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   816ca:	9d09      	ldr	r5, [sp, #36]	; 0x24
   816cc:	42ab      	cmp	r3, r5
   816ce:	db04      	blt.n	816da <_svfprintf_r+0x54a>
   816d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   816d2:	07e2      	lsls	r2, r4, #31
   816d4:	d50d      	bpl.n	816f2 <_svfprintf_r+0x562>
   816d6:	3301      	adds	r3, #1
   816d8:	e006      	b.n	816e8 <_svfprintf_r+0x558>
   816da:	2b00      	cmp	r3, #0
   816dc:	9c09      	ldr	r4, [sp, #36]	; 0x24
   816de:	bfd4      	ite	le
   816e0:	f1c3 0302 	rsble	r3, r3, #2
   816e4:	2301      	movgt	r3, #1
   816e6:	4423      	add	r3, r4
   816e8:	2567      	movs	r5, #103	; 0x67
   816ea:	9511      	str	r5, [sp, #68]	; 0x44
   816ec:	e003      	b.n	816f6 <_svfprintf_r+0x566>
   816ee:	2301      	movs	r3, #1
   816f0:	e001      	b.n	816f6 <_svfprintf_r+0x566>
   816f2:	2467      	movs	r4, #103	; 0x67
   816f4:	9411      	str	r4, [sp, #68]	; 0x44
   816f6:	9d11      	ldr	r5, [sp, #68]	; 0x44
   816f8:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
   816fa:	9508      	str	r5, [sp, #32]
   816fc:	4699      	mov	r9, r3
   816fe:	9d19      	ldr	r5, [sp, #100]	; 0x64
   81700:	b115      	cbz	r5, 81708 <_svfprintf_r+0x578>
   81702:	232d      	movs	r3, #45	; 0x2d
   81704:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81708:	2500      	movs	r5, #0
   8170a:	e149      	b.n	819a0 <_svfprintf_r+0x810>
   8170c:	f017 0f20 	tst.w	r7, #32
   81710:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81714:	f108 0104 	add.w	r1, r8, #4
   81718:	d008      	beq.n	8172c <_svfprintf_r+0x59c>
   8171a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8171c:	f8d8 0000 	ldr.w	r0, [r8]
   81720:	17e5      	asrs	r5, r4, #31
   81722:	4622      	mov	r2, r4
   81724:	462b      	mov	r3, r5
   81726:	e9c0 2300 	strd	r2, r3, [r0]
   8172a:	e00c      	b.n	81746 <_svfprintf_r+0x5b6>
   8172c:	06fb      	lsls	r3, r7, #27
   8172e:	d406      	bmi.n	8173e <_svfprintf_r+0x5ae>
   81730:	067d      	lsls	r5, r7, #25
   81732:	d504      	bpl.n	8173e <_svfprintf_r+0x5ae>
   81734:	f8d8 3000 	ldr.w	r3, [r8]
   81738:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8173a:	801c      	strh	r4, [r3, #0]
   8173c:	e003      	b.n	81746 <_svfprintf_r+0x5b6>
   8173e:	f8d8 3000 	ldr.w	r3, [r8]
   81742:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81744:	601d      	str	r5, [r3, #0]
   81746:	4688      	mov	r8, r1
   81748:	e557      	b.n	811fa <_svfprintf_r+0x6a>
   8174a:	f047 0710 	orr.w	r7, r7, #16
   8174e:	f017 0320 	ands.w	r3, r7, #32
   81752:	d009      	beq.n	81768 <_svfprintf_r+0x5d8>
   81754:	f108 0807 	add.w	r8, r8, #7
   81758:	f028 0307 	bic.w	r3, r8, #7
   8175c:	f103 0808 	add.w	r8, r3, #8
   81760:	e9d3 4500 	ldrd	r4, r5, [r3]
   81764:	2300      	movs	r3, #0
   81766:	e088      	b.n	8187a <_svfprintf_r+0x6ea>
   81768:	f017 0110 	ands.w	r1, r7, #16
   8176c:	f108 0204 	add.w	r2, r8, #4
   81770:	d107      	bne.n	81782 <_svfprintf_r+0x5f2>
   81772:	f017 0340 	ands.w	r3, r7, #64	; 0x40
   81776:	d004      	beq.n	81782 <_svfprintf_r+0x5f2>
   81778:	f8b8 4000 	ldrh.w	r4, [r8]
   8177c:	2500      	movs	r5, #0
   8177e:	4690      	mov	r8, r2
   81780:	e7f0      	b.n	81764 <_svfprintf_r+0x5d4>
   81782:	f8d8 4000 	ldr.w	r4, [r8]
   81786:	2500      	movs	r5, #0
   81788:	4690      	mov	r8, r2
   8178a:	e076      	b.n	8187a <_svfprintf_r+0x6ea>
   8178c:	48a9      	ldr	r0, [pc, #676]	; (81a34 <_svfprintf_r+0x8a4>)
   8178e:	2330      	movs	r3, #48	; 0x30
   81790:	2278      	movs	r2, #120	; 0x78
   81792:	f8d8 4000 	ldr.w	r4, [r8]
   81796:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   8179a:	2500      	movs	r5, #0
   8179c:	f047 0702 	orr.w	r7, r7, #2
   817a0:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   817a4:	f108 0804 	add.w	r8, r8, #4
   817a8:	901b      	str	r0, [sp, #108]	; 0x6c
   817aa:	2302      	movs	r3, #2
   817ac:	9208      	str	r2, [sp, #32]
   817ae:	e064      	b.n	8187a <_svfprintf_r+0x6ea>
   817b0:	4643      	mov	r3, r8
   817b2:	2500      	movs	r5, #0
   817b4:	681b      	ldr	r3, [r3, #0]
   817b6:	45a9      	cmp	r9, r5
   817b8:	9307      	str	r3, [sp, #28]
   817ba:	f108 0804 	add.w	r8, r8, #4
   817be:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   817c2:	db0d      	blt.n	817e0 <_svfprintf_r+0x650>
   817c4:	4618      	mov	r0, r3
   817c6:	4629      	mov	r1, r5
   817c8:	464a      	mov	r2, r9
   817ca:	f001 fe2f 	bl	8342c <memchr>
   817ce:	2800      	cmp	r0, #0
   817d0:	f000 80e4 	beq.w	8199c <_svfprintf_r+0x80c>
   817d4:	9c07      	ldr	r4, [sp, #28]
   817d6:	1b00      	subs	r0, r0, r4
   817d8:	4548      	cmp	r0, r9
   817da:	bfb8      	it	lt
   817dc:	4681      	movlt	r9, r0
   817de:	e0de      	b.n	8199e <_svfprintf_r+0x80e>
   817e0:	9807      	ldr	r0, [sp, #28]
   817e2:	f7ff fccd 	bl	81180 <strlen>
   817e6:	4681      	mov	r9, r0
   817e8:	e0d9      	b.n	8199e <_svfprintf_r+0x80e>
   817ea:	f047 0710 	orr.w	r7, r7, #16
   817ee:	06bc      	lsls	r4, r7, #26
   817f0:	d508      	bpl.n	81804 <_svfprintf_r+0x674>
   817f2:	f108 0807 	add.w	r8, r8, #7
   817f6:	f028 0307 	bic.w	r3, r8, #7
   817fa:	f103 0808 	add.w	r8, r3, #8
   817fe:	e9d3 4500 	ldrd	r4, r5, [r3]
   81802:	e00d      	b.n	81820 <_svfprintf_r+0x690>
   81804:	f017 0f10 	tst.w	r7, #16
   81808:	f108 0304 	add.w	r3, r8, #4
   8180c:	d104      	bne.n	81818 <_svfprintf_r+0x688>
   8180e:	0678      	lsls	r0, r7, #25
   81810:	d502      	bpl.n	81818 <_svfprintf_r+0x688>
   81812:	f8b8 4000 	ldrh.w	r4, [r8]
   81816:	e001      	b.n	8181c <_svfprintf_r+0x68c>
   81818:	f8d8 4000 	ldr.w	r4, [r8]
   8181c:	2500      	movs	r5, #0
   8181e:	4698      	mov	r8, r3
   81820:	2301      	movs	r3, #1
   81822:	e02a      	b.n	8187a <_svfprintf_r+0x6ea>
   81824:	4d83      	ldr	r5, [pc, #524]	; (81a34 <_svfprintf_r+0x8a4>)
   81826:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   8182a:	951b      	str	r5, [sp, #108]	; 0x6c
   8182c:	06b9      	lsls	r1, r7, #26
   8182e:	d508      	bpl.n	81842 <_svfprintf_r+0x6b2>
   81830:	f108 0807 	add.w	r8, r8, #7
   81834:	f028 0307 	bic.w	r3, r8, #7
   81838:	f103 0808 	add.w	r8, r3, #8
   8183c:	e9d3 4500 	ldrd	r4, r5, [r3]
   81840:	e00d      	b.n	8185e <_svfprintf_r+0x6ce>
   81842:	f017 0f10 	tst.w	r7, #16
   81846:	f108 0304 	add.w	r3, r8, #4
   8184a:	d104      	bne.n	81856 <_svfprintf_r+0x6c6>
   8184c:	067a      	lsls	r2, r7, #25
   8184e:	d502      	bpl.n	81856 <_svfprintf_r+0x6c6>
   81850:	f8b8 4000 	ldrh.w	r4, [r8]
   81854:	e001      	b.n	8185a <_svfprintf_r+0x6ca>
   81856:	f8d8 4000 	ldr.w	r4, [r8]
   8185a:	2500      	movs	r5, #0
   8185c:	4698      	mov	r8, r3
   8185e:	07fb      	lsls	r3, r7, #31
   81860:	d50a      	bpl.n	81878 <_svfprintf_r+0x6e8>
   81862:	ea54 0005 	orrs.w	r0, r4, r5
   81866:	d007      	beq.n	81878 <_svfprintf_r+0x6e8>
   81868:	9908      	ldr	r1, [sp, #32]
   8186a:	2330      	movs	r3, #48	; 0x30
   8186c:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   81870:	f88d 1079 	strb.w	r1, [sp, #121]	; 0x79
   81874:	f047 0702 	orr.w	r7, r7, #2
   81878:	2302      	movs	r3, #2
   8187a:	2200      	movs	r2, #0
   8187c:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   81880:	e000      	b.n	81884 <_svfprintf_r+0x6f4>
   81882:	2301      	movs	r3, #1
   81884:	f1b9 0f00 	cmp.w	r9, #0
   81888:	bfa8      	it	ge
   8188a:	f027 0780 	bicge.w	r7, r7, #128	; 0x80
   8188e:	ea54 0205 	orrs.w	r2, r4, r5
   81892:	d102      	bne.n	8189a <_svfprintf_r+0x70a>
   81894:	f1b9 0f00 	cmp.w	r9, #0
   81898:	d05a      	beq.n	81950 <_svfprintf_r+0x7c0>
   8189a:	2b01      	cmp	r3, #1
   8189c:	d01f      	beq.n	818de <_svfprintf_r+0x74e>
   8189e:	2b02      	cmp	r3, #2
   818a0:	f10d 03c7 	add.w	r3, sp, #199	; 0xc7
   818a4:	d041      	beq.n	8192a <_svfprintf_r+0x79a>
   818a6:	08e1      	lsrs	r1, r4, #3
   818a8:	ea41 7045 	orr.w	r0, r1, r5, lsl #29
   818ac:	08e9      	lsrs	r1, r5, #3
   818ae:	f004 0207 	and.w	r2, r4, #7
   818b2:	9014      	str	r0, [sp, #80]	; 0x50
   818b4:	9115      	str	r1, [sp, #84]	; 0x54
   818b6:	3230      	adds	r2, #48	; 0x30
   818b8:	e9dd 4514 	ldrd	r4, r5, [sp, #80]	; 0x50
   818bc:	ea54 0005 	orrs.w	r0, r4, r5
   818c0:	9307      	str	r3, [sp, #28]
   818c2:	701a      	strb	r2, [r3, #0]
   818c4:	f103 33ff 	add.w	r3, r3, #4294967295
   818c8:	d1ed      	bne.n	818a6 <_svfprintf_r+0x716>
   818ca:	07f8      	lsls	r0, r7, #31
   818cc:	9907      	ldr	r1, [sp, #28]
   818ce:	d54c      	bpl.n	8196a <_svfprintf_r+0x7da>
   818d0:	2a30      	cmp	r2, #48	; 0x30
   818d2:	d04a      	beq.n	8196a <_svfprintf_r+0x7da>
   818d4:	9307      	str	r3, [sp, #28]
   818d6:	2330      	movs	r3, #48	; 0x30
   818d8:	f801 3c01 	strb.w	r3, [r1, #-1]
   818dc:	e045      	b.n	8196a <_svfprintf_r+0x7da>
   818de:	2d00      	cmp	r5, #0
   818e0:	bf08      	it	eq
   818e2:	2c0a      	cmpeq	r4, #10
   818e4:	d205      	bcs.n	818f2 <_svfprintf_r+0x762>
   818e6:	3430      	adds	r4, #48	; 0x30
   818e8:	f88d 40c7 	strb.w	r4, [sp, #199]	; 0xc7
   818ec:	f10d 04c7 	add.w	r4, sp, #199	; 0xc7
   818f0:	e03a      	b.n	81968 <_svfprintf_r+0x7d8>
   818f2:	f10d 00c7 	add.w	r0, sp, #199	; 0xc7
   818f6:	900a      	str	r0, [sp, #40]	; 0x28
   818f8:	990a      	ldr	r1, [sp, #40]	; 0x28
   818fa:	4620      	mov	r0, r4
   818fc:	9107      	str	r1, [sp, #28]
   818fe:	220a      	movs	r2, #10
   81900:	4629      	mov	r1, r5
   81902:	2300      	movs	r3, #0
   81904:	f003 fcf6 	bl	852f4 <__aeabi_uldivmod>
   81908:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8190a:	3230      	adds	r2, #48	; 0x30
   8190c:	f803 2901 	strb.w	r2, [r3], #-1
   81910:	930a      	str	r3, [sp, #40]	; 0x28
   81912:	4620      	mov	r0, r4
   81914:	4629      	mov	r1, r5
   81916:	220a      	movs	r2, #10
   81918:	2300      	movs	r3, #0
   8191a:	f003 fceb 	bl	852f4 <__aeabi_uldivmod>
   8191e:	4604      	mov	r4, r0
   81920:	460d      	mov	r5, r1
   81922:	ea54 0005 	orrs.w	r0, r4, r5
   81926:	d1e7      	bne.n	818f8 <_svfprintf_r+0x768>
   81928:	e01f      	b.n	8196a <_svfprintf_r+0x7da>
   8192a:	991b      	ldr	r1, [sp, #108]	; 0x6c
   8192c:	f004 020f 	and.w	r2, r4, #15
   81930:	5c8a      	ldrb	r2, [r1, r2]
   81932:	9307      	str	r3, [sp, #28]
   81934:	f803 2901 	strb.w	r2, [r3], #-1
   81938:	0922      	lsrs	r2, r4, #4
   8193a:	ea42 7005 	orr.w	r0, r2, r5, lsl #28
   8193e:	0929      	lsrs	r1, r5, #4
   81940:	9016      	str	r0, [sp, #88]	; 0x58
   81942:	9117      	str	r1, [sp, #92]	; 0x5c
   81944:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	; 0x58
   81948:	ea54 0205 	orrs.w	r2, r4, r5
   8194c:	d1ed      	bne.n	8192a <_svfprintf_r+0x79a>
   8194e:	e00c      	b.n	8196a <_svfprintf_r+0x7da>
   81950:	b933      	cbnz	r3, 81960 <_svfprintf_r+0x7d0>
   81952:	07fb      	lsls	r3, r7, #31
   81954:	d507      	bpl.n	81966 <_svfprintf_r+0x7d6>
   81956:	ac42      	add	r4, sp, #264	; 0x108
   81958:	2330      	movs	r3, #48	; 0x30
   8195a:	f804 3d41 	strb.w	r3, [r4, #-65]!
   8195e:	e003      	b.n	81968 <_svfprintf_r+0x7d8>
   81960:	ad32      	add	r5, sp, #200	; 0xc8
   81962:	9507      	str	r5, [sp, #28]
   81964:	e001      	b.n	8196a <_svfprintf_r+0x7da>
   81966:	ac32      	add	r4, sp, #200	; 0xc8
   81968:	9407      	str	r4, [sp, #28]
   8196a:	9c07      	ldr	r4, [sp, #28]
   8196c:	464d      	mov	r5, r9
   8196e:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   81972:	ebc4 0909 	rsb	r9, r4, r9
   81976:	2400      	movs	r4, #0
   81978:	e012      	b.n	819a0 <_svfprintf_r+0x810>
   8197a:	9d08      	ldr	r5, [sp, #32]
   8197c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   81980:	2d00      	cmp	r5, #0
   81982:	f000 8389 	beq.w	82098 <_svfprintf_r+0xf08>
   81986:	f88d 50a0 	strb.w	r5, [sp, #160]	; 0xa0
   8198a:	2500      	movs	r5, #0
   8198c:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   81990:	a828      	add	r0, sp, #160	; 0xa0
   81992:	f04f 0901 	mov.w	r9, #1
   81996:	462c      	mov	r4, r5
   81998:	9007      	str	r0, [sp, #28]
   8199a:	e001      	b.n	819a0 <_svfprintf_r+0x810>
   8199c:	4605      	mov	r5, r0
   8199e:	462c      	mov	r4, r5
   819a0:	f89d 3077 	ldrb.w	r3, [sp, #119]	; 0x77
   819a4:	45a9      	cmp	r9, r5
   819a6:	bfac      	ite	ge
   819a8:	4649      	movge	r1, r9
   819aa:	4629      	movlt	r1, r5
   819ac:	910a      	str	r1, [sp, #40]	; 0x28
   819ae:	b10b      	cbz	r3, 819b4 <_svfprintf_r+0x824>
   819b0:	3101      	adds	r1, #1
   819b2:	910a      	str	r1, [sp, #40]	; 0x28
   819b4:	f017 0302 	ands.w	r3, r7, #2
   819b8:	9311      	str	r3, [sp, #68]	; 0x44
   819ba:	d002      	beq.n	819c2 <_svfprintf_r+0x832>
   819bc:	980a      	ldr	r0, [sp, #40]	; 0x28
   819be:	3002      	adds	r0, #2
   819c0:	900a      	str	r0, [sp, #40]	; 0x28
   819c2:	f017 0384 	ands.w	r3, r7, #132	; 0x84
   819c6:	9319      	str	r3, [sp, #100]	; 0x64
   819c8:	d141      	bne.n	81a4e <_svfprintf_r+0x8be>
   819ca:	980e      	ldr	r0, [sp, #56]	; 0x38
   819cc:	990a      	ldr	r1, [sp, #40]	; 0x28
   819ce:	ebc1 0c00 	rsb	ip, r1, r0
   819d2:	f1bc 0f00 	cmp.w	ip, #0
   819d6:	dd3a      	ble.n	81a4e <_svfprintf_r+0x8be>
   819d8:	4b17      	ldr	r3, [pc, #92]	; (81a38 <_svfprintf_r+0x8a8>)
   819da:	f1bc 0f10 	cmp.w	ip, #16
   819de:	6033      	str	r3, [r6, #0]
   819e0:	dd1b      	ble.n	81a1a <_svfprintf_r+0x88a>
   819e2:	2310      	movs	r3, #16
   819e4:	6073      	str	r3, [r6, #4]
   819e6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   819e8:	3310      	adds	r3, #16
   819ea:	9327      	str	r3, [sp, #156]	; 0x9c
   819ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
   819ee:	3301      	adds	r3, #1
   819f0:	2b07      	cmp	r3, #7
   819f2:	9326      	str	r3, [sp, #152]	; 0x98
   819f4:	dc01      	bgt.n	819fa <_svfprintf_r+0x86a>
   819f6:	3608      	adds	r6, #8
   819f8:	e00c      	b.n	81a14 <_svfprintf_r+0x884>
   819fa:	4650      	mov	r0, sl
   819fc:	4659      	mov	r1, fp
   819fe:	aa25      	add	r2, sp, #148	; 0x94
   81a00:	f8cd c018 	str.w	ip, [sp, #24]
   81a04:	f002 fb16 	bl	84034 <__ssprint_r>
   81a08:	f8dd c018 	ldr.w	ip, [sp, #24]
   81a0c:	2800      	cmp	r0, #0
   81a0e:	f040 834a 	bne.w	820a6 <_svfprintf_r+0xf16>
   81a12:	ae32      	add	r6, sp, #200	; 0xc8
   81a14:	f1ac 0c10 	sub.w	ip, ip, #16
   81a18:	e7de      	b.n	819d8 <_svfprintf_r+0x848>
   81a1a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81a1c:	f8c6 c004 	str.w	ip, [r6, #4]
   81a20:	4463      	add	r3, ip
   81a22:	9327      	str	r3, [sp, #156]	; 0x9c
   81a24:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81a26:	3301      	adds	r3, #1
   81a28:	2b07      	cmp	r3, #7
   81a2a:	9326      	str	r3, [sp, #152]	; 0x98
   81a2c:	dc06      	bgt.n	81a3c <_svfprintf_r+0x8ac>
   81a2e:	3608      	adds	r6, #8
   81a30:	e00d      	b.n	81a4e <_svfprintf_r+0x8be>
   81a32:	bf00      	nop
   81a34:	00085937 	.word	0x00085937
   81a38:	000858f6 	.word	0x000858f6
   81a3c:	4650      	mov	r0, sl
   81a3e:	4659      	mov	r1, fp
   81a40:	aa25      	add	r2, sp, #148	; 0x94
   81a42:	f002 faf7 	bl	84034 <__ssprint_r>
   81a46:	2800      	cmp	r0, #0
   81a48:	f040 832d 	bne.w	820a6 <_svfprintf_r+0xf16>
   81a4c:	ae32      	add	r6, sp, #200	; 0xc8
   81a4e:	f89d 3077 	ldrb.w	r3, [sp, #119]	; 0x77
   81a52:	b1bb      	cbz	r3, 81a84 <_svfprintf_r+0x8f4>
   81a54:	f10d 0377 	add.w	r3, sp, #119	; 0x77
   81a58:	6033      	str	r3, [r6, #0]
   81a5a:	2301      	movs	r3, #1
   81a5c:	6073      	str	r3, [r6, #4]
   81a5e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81a60:	3301      	adds	r3, #1
   81a62:	9327      	str	r3, [sp, #156]	; 0x9c
   81a64:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81a66:	3301      	adds	r3, #1
   81a68:	2b07      	cmp	r3, #7
   81a6a:	9326      	str	r3, [sp, #152]	; 0x98
   81a6c:	dc01      	bgt.n	81a72 <_svfprintf_r+0x8e2>
   81a6e:	3608      	adds	r6, #8
   81a70:	e008      	b.n	81a84 <_svfprintf_r+0x8f4>
   81a72:	4650      	mov	r0, sl
   81a74:	4659      	mov	r1, fp
   81a76:	aa25      	add	r2, sp, #148	; 0x94
   81a78:	f002 fadc 	bl	84034 <__ssprint_r>
   81a7c:	2800      	cmp	r0, #0
   81a7e:	f040 8312 	bne.w	820a6 <_svfprintf_r+0xf16>
   81a82:	ae32      	add	r6, sp, #200	; 0xc8
   81a84:	9b11      	ldr	r3, [sp, #68]	; 0x44
   81a86:	b1b3      	cbz	r3, 81ab6 <_svfprintf_r+0x926>
   81a88:	ab1e      	add	r3, sp, #120	; 0x78
   81a8a:	6033      	str	r3, [r6, #0]
   81a8c:	2302      	movs	r3, #2
   81a8e:	6073      	str	r3, [r6, #4]
   81a90:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81a92:	3302      	adds	r3, #2
   81a94:	9327      	str	r3, [sp, #156]	; 0x9c
   81a96:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81a98:	3301      	adds	r3, #1
   81a9a:	2b07      	cmp	r3, #7
   81a9c:	9326      	str	r3, [sp, #152]	; 0x98
   81a9e:	dc01      	bgt.n	81aa4 <_svfprintf_r+0x914>
   81aa0:	3608      	adds	r6, #8
   81aa2:	e008      	b.n	81ab6 <_svfprintf_r+0x926>
   81aa4:	4650      	mov	r0, sl
   81aa6:	4659      	mov	r1, fp
   81aa8:	aa25      	add	r2, sp, #148	; 0x94
   81aaa:	f002 fac3 	bl	84034 <__ssprint_r>
   81aae:	2800      	cmp	r0, #0
   81ab0:	f040 82f9 	bne.w	820a6 <_svfprintf_r+0xf16>
   81ab4:	ae32      	add	r6, sp, #200	; 0xc8
   81ab6:	9b19      	ldr	r3, [sp, #100]	; 0x64
   81ab8:	2b80      	cmp	r3, #128	; 0x80
   81aba:	d13c      	bne.n	81b36 <_svfprintf_r+0x9a6>
   81abc:	980e      	ldr	r0, [sp, #56]	; 0x38
   81abe:	990a      	ldr	r1, [sp, #40]	; 0x28
   81ac0:	ebc1 0c00 	rsb	ip, r1, r0
   81ac4:	f1bc 0f00 	cmp.w	ip, #0
   81ac8:	dd35      	ble.n	81b36 <_svfprintf_r+0x9a6>
   81aca:	4b9c      	ldr	r3, [pc, #624]	; (81d3c <_svfprintf_r+0xbac>)
   81acc:	f1bc 0f10 	cmp.w	ip, #16
   81ad0:	6033      	str	r3, [r6, #0]
   81ad2:	dd1b      	ble.n	81b0c <_svfprintf_r+0x97c>
   81ad4:	2310      	movs	r3, #16
   81ad6:	6073      	str	r3, [r6, #4]
   81ad8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81ada:	3310      	adds	r3, #16
   81adc:	9327      	str	r3, [sp, #156]	; 0x9c
   81ade:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81ae0:	3301      	adds	r3, #1
   81ae2:	2b07      	cmp	r3, #7
   81ae4:	9326      	str	r3, [sp, #152]	; 0x98
   81ae6:	dc01      	bgt.n	81aec <_svfprintf_r+0x95c>
   81ae8:	3608      	adds	r6, #8
   81aea:	e00c      	b.n	81b06 <_svfprintf_r+0x976>
   81aec:	4650      	mov	r0, sl
   81aee:	4659      	mov	r1, fp
   81af0:	aa25      	add	r2, sp, #148	; 0x94
   81af2:	f8cd c018 	str.w	ip, [sp, #24]
   81af6:	f002 fa9d 	bl	84034 <__ssprint_r>
   81afa:	f8dd c018 	ldr.w	ip, [sp, #24]
   81afe:	2800      	cmp	r0, #0
   81b00:	f040 82d1 	bne.w	820a6 <_svfprintf_r+0xf16>
   81b04:	ae32      	add	r6, sp, #200	; 0xc8
   81b06:	f1ac 0c10 	sub.w	ip, ip, #16
   81b0a:	e7de      	b.n	81aca <_svfprintf_r+0x93a>
   81b0c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81b0e:	f8c6 c004 	str.w	ip, [r6, #4]
   81b12:	4463      	add	r3, ip
   81b14:	9327      	str	r3, [sp, #156]	; 0x9c
   81b16:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81b18:	3301      	adds	r3, #1
   81b1a:	2b07      	cmp	r3, #7
   81b1c:	9326      	str	r3, [sp, #152]	; 0x98
   81b1e:	dc01      	bgt.n	81b24 <_svfprintf_r+0x994>
   81b20:	3608      	adds	r6, #8
   81b22:	e008      	b.n	81b36 <_svfprintf_r+0x9a6>
   81b24:	4650      	mov	r0, sl
   81b26:	4659      	mov	r1, fp
   81b28:	aa25      	add	r2, sp, #148	; 0x94
   81b2a:	f002 fa83 	bl	84034 <__ssprint_r>
   81b2e:	2800      	cmp	r0, #0
   81b30:	f040 82b9 	bne.w	820a6 <_svfprintf_r+0xf16>
   81b34:	ae32      	add	r6, sp, #200	; 0xc8
   81b36:	ebc9 0505 	rsb	r5, r9, r5
   81b3a:	2d00      	cmp	r5, #0
   81b3c:	dd2e      	ble.n	81b9c <_svfprintf_r+0xa0c>
   81b3e:	4b7f      	ldr	r3, [pc, #508]	; (81d3c <_svfprintf_r+0xbac>)
   81b40:	2d10      	cmp	r5, #16
   81b42:	6033      	str	r3, [r6, #0]
   81b44:	dd16      	ble.n	81b74 <_svfprintf_r+0x9e4>
   81b46:	2310      	movs	r3, #16
   81b48:	6073      	str	r3, [r6, #4]
   81b4a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81b4c:	3310      	adds	r3, #16
   81b4e:	9327      	str	r3, [sp, #156]	; 0x9c
   81b50:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81b52:	3301      	adds	r3, #1
   81b54:	2b07      	cmp	r3, #7
   81b56:	9326      	str	r3, [sp, #152]	; 0x98
   81b58:	dc01      	bgt.n	81b5e <_svfprintf_r+0x9ce>
   81b5a:	3608      	adds	r6, #8
   81b5c:	e008      	b.n	81b70 <_svfprintf_r+0x9e0>
   81b5e:	4650      	mov	r0, sl
   81b60:	4659      	mov	r1, fp
   81b62:	aa25      	add	r2, sp, #148	; 0x94
   81b64:	f002 fa66 	bl	84034 <__ssprint_r>
   81b68:	2800      	cmp	r0, #0
   81b6a:	f040 829c 	bne.w	820a6 <_svfprintf_r+0xf16>
   81b6e:	ae32      	add	r6, sp, #200	; 0xc8
   81b70:	3d10      	subs	r5, #16
   81b72:	e7e4      	b.n	81b3e <_svfprintf_r+0x9ae>
   81b74:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81b76:	6075      	str	r5, [r6, #4]
   81b78:	441d      	add	r5, r3
   81b7a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81b7c:	9527      	str	r5, [sp, #156]	; 0x9c
   81b7e:	3301      	adds	r3, #1
   81b80:	2b07      	cmp	r3, #7
   81b82:	9326      	str	r3, [sp, #152]	; 0x98
   81b84:	dc01      	bgt.n	81b8a <_svfprintf_r+0x9fa>
   81b86:	3608      	adds	r6, #8
   81b88:	e008      	b.n	81b9c <_svfprintf_r+0xa0c>
   81b8a:	4650      	mov	r0, sl
   81b8c:	4659      	mov	r1, fp
   81b8e:	aa25      	add	r2, sp, #148	; 0x94
   81b90:	f002 fa50 	bl	84034 <__ssprint_r>
   81b94:	2800      	cmp	r0, #0
   81b96:	f040 8286 	bne.w	820a6 <_svfprintf_r+0xf16>
   81b9a:	ae32      	add	r6, sp, #200	; 0xc8
   81b9c:	05fd      	lsls	r5, r7, #23
   81b9e:	d405      	bmi.n	81bac <_svfprintf_r+0xa1c>
   81ba0:	9c07      	ldr	r4, [sp, #28]
   81ba2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81ba4:	e886 0210 	stmia.w	r6, {r4, r9}
   81ba8:	444b      	add	r3, r9
   81baa:	e0da      	b.n	81d62 <_svfprintf_r+0xbd2>
   81bac:	9d08      	ldr	r5, [sp, #32]
   81bae:	2d65      	cmp	r5, #101	; 0x65
   81bb0:	f340 81a7 	ble.w	81f02 <_svfprintf_r+0xd72>
   81bb4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   81bb8:	2200      	movs	r2, #0
   81bba:	2300      	movs	r3, #0
   81bbc:	f003 fb40 	bl	85240 <__aeabi_dcmpeq>
   81bc0:	2800      	cmp	r0, #0
   81bc2:	d059      	beq.n	81c78 <_svfprintf_r+0xae8>
   81bc4:	4b5e      	ldr	r3, [pc, #376]	; (81d40 <_svfprintf_r+0xbb0>)
   81bc6:	6033      	str	r3, [r6, #0]
   81bc8:	2301      	movs	r3, #1
   81bca:	6073      	str	r3, [r6, #4]
   81bcc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81bce:	3301      	adds	r3, #1
   81bd0:	9327      	str	r3, [sp, #156]	; 0x9c
   81bd2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81bd4:	3301      	adds	r3, #1
   81bd6:	2b07      	cmp	r3, #7
   81bd8:	9326      	str	r3, [sp, #152]	; 0x98
   81bda:	dc01      	bgt.n	81be0 <_svfprintf_r+0xa50>
   81bdc:	3608      	adds	r6, #8
   81bde:	e008      	b.n	81bf2 <_svfprintf_r+0xa62>
   81be0:	4650      	mov	r0, sl
   81be2:	4659      	mov	r1, fp
   81be4:	aa25      	add	r2, sp, #148	; 0x94
   81be6:	f002 fa25 	bl	84034 <__ssprint_r>
   81bea:	2800      	cmp	r0, #0
   81bec:	f040 825b 	bne.w	820a6 <_svfprintf_r+0xf16>
   81bf0:	ae32      	add	r6, sp, #200	; 0xc8
   81bf2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81bf4:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81bf6:	42a3      	cmp	r3, r4
   81bf8:	db02      	blt.n	81c00 <_svfprintf_r+0xa70>
   81bfa:	07fc      	lsls	r4, r7, #31
   81bfc:	f140 8202 	bpl.w	82004 <_svfprintf_r+0xe74>
   81c00:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81c02:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81c04:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81c06:	4423      	add	r3, r4
   81c08:	9327      	str	r3, [sp, #156]	; 0x9c
   81c0a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81c0c:	6035      	str	r5, [r6, #0]
   81c0e:	3301      	adds	r3, #1
   81c10:	2b07      	cmp	r3, #7
   81c12:	6074      	str	r4, [r6, #4]
   81c14:	9326      	str	r3, [sp, #152]	; 0x98
   81c16:	dc01      	bgt.n	81c1c <_svfprintf_r+0xa8c>
   81c18:	3608      	adds	r6, #8
   81c1a:	e008      	b.n	81c2e <_svfprintf_r+0xa9e>
   81c1c:	4650      	mov	r0, sl
   81c1e:	4659      	mov	r1, fp
   81c20:	aa25      	add	r2, sp, #148	; 0x94
   81c22:	f002 fa07 	bl	84034 <__ssprint_r>
   81c26:	2800      	cmp	r0, #0
   81c28:	f040 823d 	bne.w	820a6 <_svfprintf_r+0xf16>
   81c2c:	ae32      	add	r6, sp, #200	; 0xc8
   81c2e:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81c30:	1e6c      	subs	r4, r5, #1
   81c32:	2c00      	cmp	r4, #0
   81c34:	f340 81e6 	ble.w	82004 <_svfprintf_r+0xe74>
   81c38:	4b40      	ldr	r3, [pc, #256]	; (81d3c <_svfprintf_r+0xbac>)
   81c3a:	2c10      	cmp	r4, #16
   81c3c:	6033      	str	r3, [r6, #0]
   81c3e:	dd16      	ble.n	81c6e <_svfprintf_r+0xade>
   81c40:	2310      	movs	r3, #16
   81c42:	6073      	str	r3, [r6, #4]
   81c44:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81c46:	3310      	adds	r3, #16
   81c48:	9327      	str	r3, [sp, #156]	; 0x9c
   81c4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81c4c:	3301      	adds	r3, #1
   81c4e:	2b07      	cmp	r3, #7
   81c50:	9326      	str	r3, [sp, #152]	; 0x98
   81c52:	dc01      	bgt.n	81c58 <_svfprintf_r+0xac8>
   81c54:	3608      	adds	r6, #8
   81c56:	e008      	b.n	81c6a <_svfprintf_r+0xada>
   81c58:	4650      	mov	r0, sl
   81c5a:	4659      	mov	r1, fp
   81c5c:	aa25      	add	r2, sp, #148	; 0x94
   81c5e:	f002 f9e9 	bl	84034 <__ssprint_r>
   81c62:	2800      	cmp	r0, #0
   81c64:	f040 821f 	bne.w	820a6 <_svfprintf_r+0xf16>
   81c68:	ae32      	add	r6, sp, #200	; 0xc8
   81c6a:	3c10      	subs	r4, #16
   81c6c:	e7e4      	b.n	81c38 <_svfprintf_r+0xaa8>
   81c6e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81c70:	6074      	str	r4, [r6, #4]
   81c72:	441c      	add	r4, r3
   81c74:	9427      	str	r4, [sp, #156]	; 0x9c
   81c76:	e134      	b.n	81ee2 <_svfprintf_r+0xd52>
   81c78:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81c7a:	2b00      	cmp	r3, #0
   81c7c:	dc73      	bgt.n	81d66 <_svfprintf_r+0xbd6>
   81c7e:	4b30      	ldr	r3, [pc, #192]	; (81d40 <_svfprintf_r+0xbb0>)
   81c80:	6033      	str	r3, [r6, #0]
   81c82:	2301      	movs	r3, #1
   81c84:	6073      	str	r3, [r6, #4]
   81c86:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81c88:	3301      	adds	r3, #1
   81c8a:	9327      	str	r3, [sp, #156]	; 0x9c
   81c8c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81c8e:	3301      	adds	r3, #1
   81c90:	2b07      	cmp	r3, #7
   81c92:	9326      	str	r3, [sp, #152]	; 0x98
   81c94:	dc01      	bgt.n	81c9a <_svfprintf_r+0xb0a>
   81c96:	3608      	adds	r6, #8
   81c98:	e008      	b.n	81cac <_svfprintf_r+0xb1c>
   81c9a:	4650      	mov	r0, sl
   81c9c:	4659      	mov	r1, fp
   81c9e:	aa25      	add	r2, sp, #148	; 0x94
   81ca0:	f002 f9c8 	bl	84034 <__ssprint_r>
   81ca4:	2800      	cmp	r0, #0
   81ca6:	f040 81fe 	bne.w	820a6 <_svfprintf_r+0xf16>
   81caa:	ae32      	add	r6, sp, #200	; 0xc8
   81cac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81cae:	b923      	cbnz	r3, 81cba <_svfprintf_r+0xb2a>
   81cb0:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81cb2:	b914      	cbnz	r4, 81cba <_svfprintf_r+0xb2a>
   81cb4:	07f8      	lsls	r0, r7, #31
   81cb6:	f140 81a5 	bpl.w	82004 <_svfprintf_r+0xe74>
   81cba:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81cbc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81cbe:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81cc0:	4423      	add	r3, r4
   81cc2:	9327      	str	r3, [sp, #156]	; 0x9c
   81cc4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81cc6:	6035      	str	r5, [r6, #0]
   81cc8:	3301      	adds	r3, #1
   81cca:	2b07      	cmp	r3, #7
   81ccc:	6074      	str	r4, [r6, #4]
   81cce:	9326      	str	r3, [sp, #152]	; 0x98
   81cd0:	dc01      	bgt.n	81cd6 <_svfprintf_r+0xb46>
   81cd2:	3608      	adds	r6, #8
   81cd4:	e008      	b.n	81ce8 <_svfprintf_r+0xb58>
   81cd6:	4650      	mov	r0, sl
   81cd8:	4659      	mov	r1, fp
   81cda:	aa25      	add	r2, sp, #148	; 0x94
   81cdc:	f002 f9aa 	bl	84034 <__ssprint_r>
   81ce0:	2800      	cmp	r0, #0
   81ce2:	f040 81e0 	bne.w	820a6 <_svfprintf_r+0xf16>
   81ce6:	ae32      	add	r6, sp, #200	; 0xc8
   81ce8:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
   81cea:	4264      	negs	r4, r4
   81cec:	2c00      	cmp	r4, #0
   81cee:	dd32      	ble.n	81d56 <_svfprintf_r+0xbc6>
   81cf0:	4b12      	ldr	r3, [pc, #72]	; (81d3c <_svfprintf_r+0xbac>)
   81cf2:	2c10      	cmp	r4, #16
   81cf4:	6033      	str	r3, [r6, #0]
   81cf6:	dd16      	ble.n	81d26 <_svfprintf_r+0xb96>
   81cf8:	2310      	movs	r3, #16
   81cfa:	6073      	str	r3, [r6, #4]
   81cfc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81cfe:	3310      	adds	r3, #16
   81d00:	9327      	str	r3, [sp, #156]	; 0x9c
   81d02:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81d04:	3301      	adds	r3, #1
   81d06:	2b07      	cmp	r3, #7
   81d08:	9326      	str	r3, [sp, #152]	; 0x98
   81d0a:	dc01      	bgt.n	81d10 <_svfprintf_r+0xb80>
   81d0c:	3608      	adds	r6, #8
   81d0e:	e008      	b.n	81d22 <_svfprintf_r+0xb92>
   81d10:	4650      	mov	r0, sl
   81d12:	4659      	mov	r1, fp
   81d14:	aa25      	add	r2, sp, #148	; 0x94
   81d16:	f002 f98d 	bl	84034 <__ssprint_r>
   81d1a:	2800      	cmp	r0, #0
   81d1c:	f040 81c3 	bne.w	820a6 <_svfprintf_r+0xf16>
   81d20:	ae32      	add	r6, sp, #200	; 0xc8
   81d22:	3c10      	subs	r4, #16
   81d24:	e7e4      	b.n	81cf0 <_svfprintf_r+0xb60>
   81d26:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81d28:	6074      	str	r4, [r6, #4]
   81d2a:	441c      	add	r4, r3
   81d2c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81d2e:	9427      	str	r4, [sp, #156]	; 0x9c
   81d30:	3301      	adds	r3, #1
   81d32:	2b07      	cmp	r3, #7
   81d34:	9326      	str	r3, [sp, #152]	; 0x98
   81d36:	dc05      	bgt.n	81d44 <_svfprintf_r+0xbb4>
   81d38:	3608      	adds	r6, #8
   81d3a:	e00c      	b.n	81d56 <_svfprintf_r+0xbc6>
   81d3c:	00085906 	.word	0x00085906
   81d40:	00085948 	.word	0x00085948
   81d44:	4650      	mov	r0, sl
   81d46:	4659      	mov	r1, fp
   81d48:	aa25      	add	r2, sp, #148	; 0x94
   81d4a:	f002 f973 	bl	84034 <__ssprint_r>
   81d4e:	2800      	cmp	r0, #0
   81d50:	f040 81a9 	bne.w	820a6 <_svfprintf_r+0xf16>
   81d54:	ae32      	add	r6, sp, #200	; 0xc8
   81d56:	9d07      	ldr	r5, [sp, #28]
   81d58:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81d5a:	6035      	str	r5, [r6, #0]
   81d5c:	6074      	str	r4, [r6, #4]
   81d5e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81d60:	4423      	add	r3, r4
   81d62:	9327      	str	r3, [sp, #156]	; 0x9c
   81d64:	e0bd      	b.n	81ee2 <_svfprintf_r+0xd52>
   81d66:	9809      	ldr	r0, [sp, #36]	; 0x24
   81d68:	9d07      	ldr	r5, [sp, #28]
   81d6a:	4681      	mov	r9, r0
   81d6c:	45a1      	cmp	r9, r4
   81d6e:	bfa8      	it	ge
   81d70:	46a1      	movge	r9, r4
   81d72:	f1b9 0f00 	cmp.w	r9, #0
   81d76:	4405      	add	r5, r0
   81d78:	dd15      	ble.n	81da6 <_svfprintf_r+0xc16>
   81d7a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81d7c:	9907      	ldr	r1, [sp, #28]
   81d7e:	444b      	add	r3, r9
   81d80:	9327      	str	r3, [sp, #156]	; 0x9c
   81d82:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81d84:	e886 0202 	stmia.w	r6, {r1, r9}
   81d88:	3301      	adds	r3, #1
   81d8a:	2b07      	cmp	r3, #7
   81d8c:	9326      	str	r3, [sp, #152]	; 0x98
   81d8e:	dc01      	bgt.n	81d94 <_svfprintf_r+0xc04>
   81d90:	3608      	adds	r6, #8
   81d92:	e008      	b.n	81da6 <_svfprintf_r+0xc16>
   81d94:	4650      	mov	r0, sl
   81d96:	4659      	mov	r1, fp
   81d98:	aa25      	add	r2, sp, #148	; 0x94
   81d9a:	f002 f94b 	bl	84034 <__ssprint_r>
   81d9e:	2800      	cmp	r0, #0
   81da0:	f040 8181 	bne.w	820a6 <_svfprintf_r+0xf16>
   81da4:	ae32      	add	r6, sp, #200	; 0xc8
   81da6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
   81daa:	ebc9 0904 	rsb	r9, r9, r4
   81dae:	f1b9 0f00 	cmp.w	r9, #0
   81db2:	dd31      	ble.n	81e18 <_svfprintf_r+0xc88>
   81db4:	4b9a      	ldr	r3, [pc, #616]	; (82020 <_svfprintf_r+0xe90>)
   81db6:	f1b9 0f10 	cmp.w	r9, #16
   81dba:	6033      	str	r3, [r6, #0]
   81dbc:	dd17      	ble.n	81dee <_svfprintf_r+0xc5e>
   81dbe:	2310      	movs	r3, #16
   81dc0:	6073      	str	r3, [r6, #4]
   81dc2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81dc4:	3310      	adds	r3, #16
   81dc6:	9327      	str	r3, [sp, #156]	; 0x9c
   81dc8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81dca:	3301      	adds	r3, #1
   81dcc:	2b07      	cmp	r3, #7
   81dce:	9326      	str	r3, [sp, #152]	; 0x98
   81dd0:	dc01      	bgt.n	81dd6 <_svfprintf_r+0xc46>
   81dd2:	3608      	adds	r6, #8
   81dd4:	e008      	b.n	81de8 <_svfprintf_r+0xc58>
   81dd6:	4650      	mov	r0, sl
   81dd8:	4659      	mov	r1, fp
   81dda:	aa25      	add	r2, sp, #148	; 0x94
   81ddc:	f002 f92a 	bl	84034 <__ssprint_r>
   81de0:	2800      	cmp	r0, #0
   81de2:	f040 8160 	bne.w	820a6 <_svfprintf_r+0xf16>
   81de6:	ae32      	add	r6, sp, #200	; 0xc8
   81de8:	f1a9 0910 	sub.w	r9, r9, #16
   81dec:	e7e2      	b.n	81db4 <_svfprintf_r+0xc24>
   81dee:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81df0:	f8c6 9004 	str.w	r9, [r6, #4]
   81df4:	444b      	add	r3, r9
   81df6:	9327      	str	r3, [sp, #156]	; 0x9c
   81df8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81dfa:	3301      	adds	r3, #1
   81dfc:	2b07      	cmp	r3, #7
   81dfe:	9326      	str	r3, [sp, #152]	; 0x98
   81e00:	dc01      	bgt.n	81e06 <_svfprintf_r+0xc76>
   81e02:	3608      	adds	r6, #8
   81e04:	e008      	b.n	81e18 <_svfprintf_r+0xc88>
   81e06:	4650      	mov	r0, sl
   81e08:	4659      	mov	r1, fp
   81e0a:	aa25      	add	r2, sp, #148	; 0x94
   81e0c:	f002 f912 	bl	84034 <__ssprint_r>
   81e10:	2800      	cmp	r0, #0
   81e12:	f040 8148 	bne.w	820a6 <_svfprintf_r+0xf16>
   81e16:	ae32      	add	r6, sp, #200	; 0xc8
   81e18:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81e1a:	9809      	ldr	r0, [sp, #36]	; 0x24
   81e1c:	9a07      	ldr	r2, [sp, #28]
   81e1e:	4283      	cmp	r3, r0
   81e20:	4414      	add	r4, r2
   81e22:	db01      	blt.n	81e28 <_svfprintf_r+0xc98>
   81e24:	07f9      	lsls	r1, r7, #31
   81e26:	d516      	bpl.n	81e56 <_svfprintf_r+0xcc6>
   81e28:	9a10      	ldr	r2, [sp, #64]	; 0x40
   81e2a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81e2c:	9918      	ldr	r1, [sp, #96]	; 0x60
   81e2e:	4413      	add	r3, r2
   81e30:	9327      	str	r3, [sp, #156]	; 0x9c
   81e32:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81e34:	6031      	str	r1, [r6, #0]
   81e36:	3301      	adds	r3, #1
   81e38:	2b07      	cmp	r3, #7
   81e3a:	6072      	str	r2, [r6, #4]
   81e3c:	9326      	str	r3, [sp, #152]	; 0x98
   81e3e:	dc01      	bgt.n	81e44 <_svfprintf_r+0xcb4>
   81e40:	3608      	adds	r6, #8
   81e42:	e008      	b.n	81e56 <_svfprintf_r+0xcc6>
   81e44:	4650      	mov	r0, sl
   81e46:	4659      	mov	r1, fp
   81e48:	aa25      	add	r2, sp, #148	; 0x94
   81e4a:	f002 f8f3 	bl	84034 <__ssprint_r>
   81e4e:	2800      	cmp	r0, #0
   81e50:	f040 8129 	bne.w	820a6 <_svfprintf_r+0xf16>
   81e54:	ae32      	add	r6, sp, #200	; 0xc8
   81e56:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81e58:	9809      	ldr	r0, [sp, #36]	; 0x24
   81e5a:	1b2d      	subs	r5, r5, r4
   81e5c:	1ac3      	subs	r3, r0, r3
   81e5e:	429d      	cmp	r5, r3
   81e60:	bfa8      	it	ge
   81e62:	461d      	movge	r5, r3
   81e64:	2d00      	cmp	r5, #0
   81e66:	dd14      	ble.n	81e92 <_svfprintf_r+0xd02>
   81e68:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81e6a:	e886 0030 	stmia.w	r6, {r4, r5}
   81e6e:	442b      	add	r3, r5
   81e70:	9327      	str	r3, [sp, #156]	; 0x9c
   81e72:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81e74:	3301      	adds	r3, #1
   81e76:	2b07      	cmp	r3, #7
   81e78:	9326      	str	r3, [sp, #152]	; 0x98
   81e7a:	dc01      	bgt.n	81e80 <_svfprintf_r+0xcf0>
   81e7c:	3608      	adds	r6, #8
   81e7e:	e008      	b.n	81e92 <_svfprintf_r+0xd02>
   81e80:	4650      	mov	r0, sl
   81e82:	4659      	mov	r1, fp
   81e84:	aa25      	add	r2, sp, #148	; 0x94
   81e86:	f002 f8d5 	bl	84034 <__ssprint_r>
   81e8a:	2800      	cmp	r0, #0
   81e8c:	f040 810b 	bne.w	820a6 <_svfprintf_r+0xf16>
   81e90:	ae32      	add	r6, sp, #200	; 0xc8
   81e92:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   81e94:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81e96:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
   81e9a:	1ae3      	subs	r3, r4, r3
   81e9c:	1b5d      	subs	r5, r3, r5
   81e9e:	2d00      	cmp	r5, #0
   81ea0:	f340 80b0 	ble.w	82004 <_svfprintf_r+0xe74>
   81ea4:	4b5e      	ldr	r3, [pc, #376]	; (82020 <_svfprintf_r+0xe90>)
   81ea6:	2d10      	cmp	r5, #16
   81ea8:	6033      	str	r3, [r6, #0]
   81eaa:	dd16      	ble.n	81eda <_svfprintf_r+0xd4a>
   81eac:	2310      	movs	r3, #16
   81eae:	6073      	str	r3, [r6, #4]
   81eb0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81eb2:	3310      	adds	r3, #16
   81eb4:	9327      	str	r3, [sp, #156]	; 0x9c
   81eb6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81eb8:	3301      	adds	r3, #1
   81eba:	2b07      	cmp	r3, #7
   81ebc:	9326      	str	r3, [sp, #152]	; 0x98
   81ebe:	dc01      	bgt.n	81ec4 <_svfprintf_r+0xd34>
   81ec0:	3608      	adds	r6, #8
   81ec2:	e008      	b.n	81ed6 <_svfprintf_r+0xd46>
   81ec4:	4650      	mov	r0, sl
   81ec6:	4659      	mov	r1, fp
   81ec8:	aa25      	add	r2, sp, #148	; 0x94
   81eca:	f002 f8b3 	bl	84034 <__ssprint_r>
   81ece:	2800      	cmp	r0, #0
   81ed0:	f040 80e9 	bne.w	820a6 <_svfprintf_r+0xf16>
   81ed4:	ae32      	add	r6, sp, #200	; 0xc8
   81ed6:	3d10      	subs	r5, #16
   81ed8:	e7e4      	b.n	81ea4 <_svfprintf_r+0xd14>
   81eda:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81edc:	6075      	str	r5, [r6, #4]
   81ede:	441d      	add	r5, r3
   81ee0:	9527      	str	r5, [sp, #156]	; 0x9c
   81ee2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81ee4:	3301      	adds	r3, #1
   81ee6:	2b07      	cmp	r3, #7
   81ee8:	9326      	str	r3, [sp, #152]	; 0x98
   81eea:	f340 808a 	ble.w	82002 <_svfprintf_r+0xe72>
   81eee:	4650      	mov	r0, sl
   81ef0:	4659      	mov	r1, fp
   81ef2:	aa25      	add	r2, sp, #148	; 0x94
   81ef4:	f002 f89e 	bl	84034 <__ssprint_r>
   81ef8:	2800      	cmp	r0, #0
   81efa:	f040 80d4 	bne.w	820a6 <_svfprintf_r+0xf16>
   81efe:	ae32      	add	r6, sp, #200	; 0xc8
   81f00:	e080      	b.n	82004 <_svfprintf_r+0xe74>
   81f02:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81f04:	2d01      	cmp	r5, #1
   81f06:	dc01      	bgt.n	81f0c <_svfprintf_r+0xd7c>
   81f08:	07fa      	lsls	r2, r7, #31
   81f0a:	d56d      	bpl.n	81fe8 <_svfprintf_r+0xe58>
   81f0c:	2301      	movs	r3, #1
   81f0e:	6073      	str	r3, [r6, #4]
   81f10:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81f12:	9c07      	ldr	r4, [sp, #28]
   81f14:	3301      	adds	r3, #1
   81f16:	9327      	str	r3, [sp, #156]	; 0x9c
   81f18:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81f1a:	6034      	str	r4, [r6, #0]
   81f1c:	3301      	adds	r3, #1
   81f1e:	2b07      	cmp	r3, #7
   81f20:	9326      	str	r3, [sp, #152]	; 0x98
   81f22:	dc01      	bgt.n	81f28 <_svfprintf_r+0xd98>
   81f24:	3608      	adds	r6, #8
   81f26:	e008      	b.n	81f3a <_svfprintf_r+0xdaa>
   81f28:	4650      	mov	r0, sl
   81f2a:	4659      	mov	r1, fp
   81f2c:	aa25      	add	r2, sp, #148	; 0x94
   81f2e:	f002 f881 	bl	84034 <__ssprint_r>
   81f32:	2800      	cmp	r0, #0
   81f34:	f040 80b7 	bne.w	820a6 <_svfprintf_r+0xf16>
   81f38:	ae32      	add	r6, sp, #200	; 0xc8
   81f3a:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81f3c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81f3e:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81f40:	4423      	add	r3, r4
   81f42:	9327      	str	r3, [sp, #156]	; 0x9c
   81f44:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81f46:	6035      	str	r5, [r6, #0]
   81f48:	3301      	adds	r3, #1
   81f4a:	2b07      	cmp	r3, #7
   81f4c:	6074      	str	r4, [r6, #4]
   81f4e:	9326      	str	r3, [sp, #152]	; 0x98
   81f50:	dc01      	bgt.n	81f56 <_svfprintf_r+0xdc6>
   81f52:	3608      	adds	r6, #8
   81f54:	e008      	b.n	81f68 <_svfprintf_r+0xdd8>
   81f56:	4650      	mov	r0, sl
   81f58:	4659      	mov	r1, fp
   81f5a:	aa25      	add	r2, sp, #148	; 0x94
   81f5c:	f002 f86a 	bl	84034 <__ssprint_r>
   81f60:	2800      	cmp	r0, #0
   81f62:	f040 80a0 	bne.w	820a6 <_svfprintf_r+0xf16>
   81f66:	ae32      	add	r6, sp, #200	; 0xc8
   81f68:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   81f6c:	2200      	movs	r2, #0
   81f6e:	2300      	movs	r3, #0
   81f70:	f003 f966 	bl	85240 <__aeabi_dcmpeq>
   81f74:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81f76:	1e6c      	subs	r4, r5, #1
   81f78:	b940      	cbnz	r0, 81f8c <_svfprintf_r+0xdfc>
   81f7a:	9d07      	ldr	r5, [sp, #28]
   81f7c:	1c6b      	adds	r3, r5, #1
   81f7e:	e886 0018 	stmia.w	r6, {r3, r4}
   81f82:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81f84:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81f86:	3b01      	subs	r3, #1
   81f88:	4423      	add	r3, r4
   81f8a:	e033      	b.n	81ff4 <_svfprintf_r+0xe64>
   81f8c:	2c00      	cmp	r4, #0
   81f8e:	dd34      	ble.n	81ffa <_svfprintf_r+0xe6a>
   81f90:	4b23      	ldr	r3, [pc, #140]	; (82020 <_svfprintf_r+0xe90>)
   81f92:	2c10      	cmp	r4, #16
   81f94:	6033      	str	r3, [r6, #0]
   81f96:	dd15      	ble.n	81fc4 <_svfprintf_r+0xe34>
   81f98:	2310      	movs	r3, #16
   81f9a:	6073      	str	r3, [r6, #4]
   81f9c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81f9e:	3310      	adds	r3, #16
   81fa0:	9327      	str	r3, [sp, #156]	; 0x9c
   81fa2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81fa4:	3301      	adds	r3, #1
   81fa6:	2b07      	cmp	r3, #7
   81fa8:	9326      	str	r3, [sp, #152]	; 0x98
   81faa:	dc01      	bgt.n	81fb0 <_svfprintf_r+0xe20>
   81fac:	3608      	adds	r6, #8
   81fae:	e007      	b.n	81fc0 <_svfprintf_r+0xe30>
   81fb0:	4650      	mov	r0, sl
   81fb2:	4659      	mov	r1, fp
   81fb4:	aa25      	add	r2, sp, #148	; 0x94
   81fb6:	f002 f83d 	bl	84034 <__ssprint_r>
   81fba:	2800      	cmp	r0, #0
   81fbc:	d173      	bne.n	820a6 <_svfprintf_r+0xf16>
   81fbe:	ae32      	add	r6, sp, #200	; 0xc8
   81fc0:	3c10      	subs	r4, #16
   81fc2:	e7e5      	b.n	81f90 <_svfprintf_r+0xe00>
   81fc4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81fc6:	6074      	str	r4, [r6, #4]
   81fc8:	441c      	add	r4, r3
   81fca:	9427      	str	r4, [sp, #156]	; 0x9c
   81fcc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   81fce:	3301      	adds	r3, #1
   81fd0:	2b07      	cmp	r3, #7
   81fd2:	9326      	str	r3, [sp, #152]	; 0x98
   81fd4:	dd10      	ble.n	81ff8 <_svfprintf_r+0xe68>
   81fd6:	4650      	mov	r0, sl
   81fd8:	4659      	mov	r1, fp
   81fda:	aa25      	add	r2, sp, #148	; 0x94
   81fdc:	f002 f82a 	bl	84034 <__ssprint_r>
   81fe0:	2800      	cmp	r0, #0
   81fe2:	d160      	bne.n	820a6 <_svfprintf_r+0xf16>
   81fe4:	ae32      	add	r6, sp, #200	; 0xc8
   81fe6:	e008      	b.n	81ffa <_svfprintf_r+0xe6a>
   81fe8:	2301      	movs	r3, #1
   81fea:	9d07      	ldr	r5, [sp, #28]
   81fec:	6073      	str	r3, [r6, #4]
   81fee:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   81ff0:	6035      	str	r5, [r6, #0]
   81ff2:	3301      	adds	r3, #1
   81ff4:	9327      	str	r3, [sp, #156]	; 0x9c
   81ff6:	e7e9      	b.n	81fcc <_svfprintf_r+0xe3c>
   81ff8:	3608      	adds	r6, #8
   81ffa:	ab21      	add	r3, sp, #132	; 0x84
   81ffc:	6033      	str	r3, [r6, #0]
   81ffe:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   82000:	e6ac      	b.n	81d5c <_svfprintf_r+0xbcc>
   82002:	3608      	adds	r6, #8
   82004:	077b      	lsls	r3, r7, #29
   82006:	d40d      	bmi.n	82024 <_svfprintf_r+0xe94>
   82008:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   8200a:	980a      	ldr	r0, [sp, #40]	; 0x28
   8200c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   8200e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   82010:	42a0      	cmp	r0, r4
   82012:	bfac      	ite	ge
   82014:	182d      	addge	r5, r5, r0
   82016:	192d      	addlt	r5, r5, r4
   82018:	950f      	str	r5, [sp, #60]	; 0x3c
   8201a:	2b00      	cmp	r3, #0
   8201c:	d037      	beq.n	8208e <_svfprintf_r+0xefe>
   8201e:	e030      	b.n	82082 <_svfprintf_r+0xef2>
   82020:	00085906 	.word	0x00085906
   82024:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   82026:	980a      	ldr	r0, [sp, #40]	; 0x28
   82028:	1a2c      	subs	r4, r5, r0
   8202a:	2c00      	cmp	r4, #0
   8202c:	ddec      	ble.n	82008 <_svfprintf_r+0xe78>
   8202e:	4b23      	ldr	r3, [pc, #140]	; (820bc <_svfprintf_r+0xf2c>)
   82030:	2c10      	cmp	r4, #16
   82032:	6033      	str	r3, [r6, #0]
   82034:	dd14      	ble.n	82060 <_svfprintf_r+0xed0>
   82036:	2310      	movs	r3, #16
   82038:	6073      	str	r3, [r6, #4]
   8203a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   8203c:	3310      	adds	r3, #16
   8203e:	9327      	str	r3, [sp, #156]	; 0x9c
   82040:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82042:	3301      	adds	r3, #1
   82044:	2b07      	cmp	r3, #7
   82046:	9326      	str	r3, [sp, #152]	; 0x98
   82048:	dc01      	bgt.n	8204e <_svfprintf_r+0xebe>
   8204a:	3608      	adds	r6, #8
   8204c:	e006      	b.n	8205c <_svfprintf_r+0xecc>
   8204e:	4650      	mov	r0, sl
   82050:	4659      	mov	r1, fp
   82052:	aa25      	add	r2, sp, #148	; 0x94
   82054:	f001 ffee 	bl	84034 <__ssprint_r>
   82058:	bb28      	cbnz	r0, 820a6 <_svfprintf_r+0xf16>
   8205a:	ae32      	add	r6, sp, #200	; 0xc8
   8205c:	3c10      	subs	r4, #16
   8205e:	e7e6      	b.n	8202e <_svfprintf_r+0xe9e>
   82060:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   82062:	6074      	str	r4, [r6, #4]
   82064:	441c      	add	r4, r3
   82066:	9b26      	ldr	r3, [sp, #152]	; 0x98
   82068:	9427      	str	r4, [sp, #156]	; 0x9c
   8206a:	3301      	adds	r3, #1
   8206c:	2b07      	cmp	r3, #7
   8206e:	9326      	str	r3, [sp, #152]	; 0x98
   82070:	ddca      	ble.n	82008 <_svfprintf_r+0xe78>
   82072:	4650      	mov	r0, sl
   82074:	4659      	mov	r1, fp
   82076:	aa25      	add	r2, sp, #148	; 0x94
   82078:	f001 ffdc 	bl	84034 <__ssprint_r>
   8207c:	2800      	cmp	r0, #0
   8207e:	d0c3      	beq.n	82008 <_svfprintf_r+0xe78>
   82080:	e011      	b.n	820a6 <_svfprintf_r+0xf16>
   82082:	4650      	mov	r0, sl
   82084:	4659      	mov	r1, fp
   82086:	aa25      	add	r2, sp, #148	; 0x94
   82088:	f001 ffd4 	bl	84034 <__ssprint_r>
   8208c:	b958      	cbnz	r0, 820a6 <_svfprintf_r+0xf16>
   8208e:	2300      	movs	r3, #0
   82090:	9326      	str	r3, [sp, #152]	; 0x98
   82092:	ae32      	add	r6, sp, #200	; 0xc8
   82094:	f7ff b8b1 	b.w	811fa <_svfprintf_r+0x6a>
   82098:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   8209a:	b123      	cbz	r3, 820a6 <_svfprintf_r+0xf16>
   8209c:	4650      	mov	r0, sl
   8209e:	4659      	mov	r1, fp
   820a0:	aa25      	add	r2, sp, #148	; 0x94
   820a2:	f001 ffc7 	bl	84034 <__ssprint_r>
   820a6:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   820aa:	980f      	ldr	r0, [sp, #60]	; 0x3c
   820ac:	f013 0f40 	tst.w	r3, #64	; 0x40
   820b0:	bf18      	it	ne
   820b2:	f04f 30ff 	movne.w	r0, #4294967295
   820b6:	b043      	add	sp, #268	; 0x10c
   820b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   820bc:	000858f6 	.word	0x000858f6

000820c0 <register_fini>:
   820c0:	4b02      	ldr	r3, [pc, #8]	; (820cc <register_fini+0xc>)
   820c2:	b113      	cbz	r3, 820ca <register_fini+0xa>
   820c4:	4802      	ldr	r0, [pc, #8]	; (820d0 <register_fini+0x10>)
   820c6:	f000 b805 	b.w	820d4 <atexit>
   820ca:	4770      	bx	lr
   820cc:	00000000 	.word	0x00000000
   820d0:	00082d61 	.word	0x00082d61

000820d4 <atexit>:
   820d4:	4601      	mov	r1, r0
   820d6:	2000      	movs	r0, #0
   820d8:	4602      	mov	r2, r0
   820da:	4603      	mov	r3, r0
   820dc:	f002 bc16 	b.w	8490c <__register_exitproc>

000820e0 <quorem>:
   820e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   820e4:	6903      	ldr	r3, [r0, #16]
   820e6:	690c      	ldr	r4, [r1, #16]
   820e8:	4680      	mov	r8, r0
   820ea:	42a3      	cmp	r3, r4
   820ec:	f2c0 8083 	blt.w	821f6 <quorem+0x116>
   820f0:	3c01      	subs	r4, #1
   820f2:	00a2      	lsls	r2, r4, #2
   820f4:	f101 0714 	add.w	r7, r1, #20
   820f8:	f100 0514 	add.w	r5, r0, #20
   820fc:	4691      	mov	r9, r2
   820fe:	9200      	str	r2, [sp, #0]
   82100:	f857 6024 	ldr.w	r6, [r7, r4, lsl #2]
   82104:	442a      	add	r2, r5
   82106:	9201      	str	r2, [sp, #4]
   82108:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
   8210c:	3601      	adds	r6, #1
   8210e:	fbb2 f6f6 	udiv	r6, r2, r6
   82112:	44b9      	add	r9, r7
   82114:	2e00      	cmp	r6, #0
   82116:	d03b      	beq.n	82190 <quorem+0xb0>
   82118:	f04f 0e00 	mov.w	lr, #0
   8211c:	463a      	mov	r2, r7
   8211e:	4628      	mov	r0, r5
   82120:	46f3      	mov	fp, lr
   82122:	f852 cb04 	ldr.w	ip, [r2], #4
   82126:	6803      	ldr	r3, [r0, #0]
   82128:	fa1f fa8c 	uxth.w	sl, ip
   8212c:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
   82130:	fb0a ea06 	mla	sl, sl, r6, lr
   82134:	fb0c fc06 	mul.w	ip, ip, r6
   82138:	eb0c 4c1a 	add.w	ip, ip, sl, lsr #16
   8213c:	fa1f fa8a 	uxth.w	sl, sl
   82140:	ebca 0b0b 	rsb	fp, sl, fp
   82144:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
   82148:	fa1f fa83 	uxth.w	sl, r3
   8214c:	fa1f fc8c 	uxth.w	ip, ip
   82150:	44da      	add	sl, fp
   82152:	ebcc 4c13 	rsb	ip, ip, r3, lsr #16
   82156:	eb0c 4c2a 	add.w	ip, ip, sl, asr #16
   8215a:	fa1f fa8a 	uxth.w	sl, sl
   8215e:	ea4a 4a0c 	orr.w	sl, sl, ip, lsl #16
   82162:	454a      	cmp	r2, r9
   82164:	ea4f 4b2c 	mov.w	fp, ip, asr #16
   82168:	f840 ab04 	str.w	sl, [r0], #4
   8216c:	d9d9      	bls.n	82122 <quorem+0x42>
   8216e:	9a00      	ldr	r2, [sp, #0]
   82170:	58ab      	ldr	r3, [r5, r2]
   82172:	b96b      	cbnz	r3, 82190 <quorem+0xb0>
   82174:	9a01      	ldr	r2, [sp, #4]
   82176:	1f13      	subs	r3, r2, #4
   82178:	42ab      	cmp	r3, r5
   8217a:	461a      	mov	r2, r3
   8217c:	d802      	bhi.n	82184 <quorem+0xa4>
   8217e:	f8c8 4010 	str.w	r4, [r8, #16]
   82182:	e005      	b.n	82190 <quorem+0xb0>
   82184:	6812      	ldr	r2, [r2, #0]
   82186:	3b04      	subs	r3, #4
   82188:	2a00      	cmp	r2, #0
   8218a:	d1f8      	bne.n	8217e <quorem+0x9e>
   8218c:	3c01      	subs	r4, #1
   8218e:	e7f3      	b.n	82178 <quorem+0x98>
   82190:	4640      	mov	r0, r8
   82192:	f001 fbaa 	bl	838ea <__mcmp>
   82196:	2800      	cmp	r0, #0
   82198:	db2b      	blt.n	821f2 <quorem+0x112>
   8219a:	3601      	adds	r6, #1
   8219c:	462b      	mov	r3, r5
   8219e:	2000      	movs	r0, #0
   821a0:	f857 cb04 	ldr.w	ip, [r7], #4
   821a4:	681a      	ldr	r2, [r3, #0]
   821a6:	fa1f f18c 	uxth.w	r1, ip
   821aa:	1a41      	subs	r1, r0, r1
   821ac:	fa1f fa82 	uxth.w	sl, r2
   821b0:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
   821b4:	4451      	add	r1, sl
   821b6:	ebcc 4212 	rsb	r2, ip, r2, lsr #16
   821ba:	eb02 4221 	add.w	r2, r2, r1, asr #16
   821be:	b289      	uxth	r1, r1
   821c0:	1410      	asrs	r0, r2, #16
   821c2:	454f      	cmp	r7, r9
   821c4:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
   821c8:	f843 2b04 	str.w	r2, [r3], #4
   821cc:	d9e8      	bls.n	821a0 <quorem+0xc0>
   821ce:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
   821d2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
   821d6:	b962      	cbnz	r2, 821f2 <quorem+0x112>
   821d8:	3b04      	subs	r3, #4
   821da:	42ab      	cmp	r3, r5
   821dc:	461a      	mov	r2, r3
   821de:	d802      	bhi.n	821e6 <quorem+0x106>
   821e0:	f8c8 4010 	str.w	r4, [r8, #16]
   821e4:	e005      	b.n	821f2 <quorem+0x112>
   821e6:	6812      	ldr	r2, [r2, #0]
   821e8:	3b04      	subs	r3, #4
   821ea:	2a00      	cmp	r2, #0
   821ec:	d1f8      	bne.n	821e0 <quorem+0x100>
   821ee:	3c01      	subs	r4, #1
   821f0:	e7f3      	b.n	821da <quorem+0xfa>
   821f2:	4630      	mov	r0, r6
   821f4:	e000      	b.n	821f8 <quorem+0x118>
   821f6:	2000      	movs	r0, #0
   821f8:	b003      	add	sp, #12
   821fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000821fe <_dtoa_r>:
   821fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82202:	6c01      	ldr	r1, [r0, #64]	; 0x40
   82204:	b09b      	sub	sp, #108	; 0x6c
   82206:	4682      	mov	sl, r0
   82208:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8220a:	e9cd 2304 	strd	r2, r3, [sp, #16]
   8220e:	b151      	cbz	r1, 82226 <_dtoa_r+0x28>
   82210:	6c43      	ldr	r3, [r0, #68]	; 0x44
   82212:	2201      	movs	r2, #1
   82214:	604b      	str	r3, [r1, #4]
   82216:	fa02 f303 	lsl.w	r3, r2, r3
   8221a:	608b      	str	r3, [r1, #8]
   8221c:	f001 f960 	bl	834e0 <_Bfree>
   82220:	2300      	movs	r3, #0
   82222:	f8ca 3040 	str.w	r3, [sl, #64]	; 0x40
   82226:	9805      	ldr	r0, [sp, #20]
   82228:	2800      	cmp	r0, #0
   8222a:	da05      	bge.n	82238 <_dtoa_r+0x3a>
   8222c:	2301      	movs	r3, #1
   8222e:	f020 4100 	bic.w	r1, r0, #2147483648	; 0x80000000
   82232:	6023      	str	r3, [r4, #0]
   82234:	9105      	str	r1, [sp, #20]
   82236:	e001      	b.n	8223c <_dtoa_r+0x3e>
   82238:	2300      	movs	r3, #0
   8223a:	6023      	str	r3, [r4, #0]
   8223c:	9f05      	ldr	r7, [sp, #20]
   8223e:	4a9c      	ldr	r2, [pc, #624]	; (824b0 <_dtoa_r+0x2b2>)
   82240:	f027 4300 	bic.w	r3, r7, #2147483648	; 0x80000000
   82244:	0d1b      	lsrs	r3, r3, #20
   82246:	051b      	lsls	r3, r3, #20
   82248:	4293      	cmp	r3, r2
   8224a:	d11d      	bne.n	82288 <_dtoa_r+0x8a>
   8224c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8224e:	f242 730f 	movw	r3, #9999	; 0x270f
   82252:	6013      	str	r3, [r2, #0]
   82254:	9b04      	ldr	r3, [sp, #16]
   82256:	b943      	cbnz	r3, 8226a <_dtoa_r+0x6c>
   82258:	4b96      	ldr	r3, [pc, #600]	; (824b4 <_dtoa_r+0x2b6>)
   8225a:	4a97      	ldr	r2, [pc, #604]	; (824b8 <_dtoa_r+0x2ba>)
   8225c:	f3c7 0013 	ubfx	r0, r7, #0, #20
   82260:	2800      	cmp	r0, #0
   82262:	bf0c      	ite	eq
   82264:	4610      	moveq	r0, r2
   82266:	4618      	movne	r0, r3
   82268:	e000      	b.n	8226c <_dtoa_r+0x6e>
   8226a:	4892      	ldr	r0, [pc, #584]	; (824b4 <_dtoa_r+0x2b6>)
   8226c:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   8226e:	2f00      	cmp	r7, #0
   82270:	f000 856f 	beq.w	82d52 <_dtoa_r+0xb54>
   82274:	78c3      	ldrb	r3, [r0, #3]
   82276:	b113      	cbz	r3, 8227e <_dtoa_r+0x80>
   82278:	f100 0308 	add.w	r3, r0, #8
   8227c:	e000      	b.n	82280 <_dtoa_r+0x82>
   8227e:	1cc3      	adds	r3, r0, #3
   82280:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   82282:	603b      	str	r3, [r7, #0]
   82284:	f000 bd65 	b.w	82d52 <_dtoa_r+0xb54>
   82288:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
   8228c:	2200      	movs	r2, #0
   8228e:	4620      	mov	r0, r4
   82290:	4629      	mov	r1, r5
   82292:	2300      	movs	r3, #0
   82294:	f002 ffd4 	bl	85240 <__aeabi_dcmpeq>
   82298:	4680      	mov	r8, r0
   8229a:	b158      	cbz	r0, 822b4 <_dtoa_r+0xb6>
   8229c:	9f26      	ldr	r7, [sp, #152]	; 0x98
   8229e:	2301      	movs	r3, #1
   822a0:	603b      	str	r3, [r7, #0]
   822a2:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   822a4:	2f00      	cmp	r7, #0
   822a6:	f000 8551 	beq.w	82d4c <_dtoa_r+0xb4e>
   822aa:	4884      	ldr	r0, [pc, #528]	; (824bc <_dtoa_r+0x2be>)
   822ac:	6038      	str	r0, [r7, #0]
   822ae:	3801      	subs	r0, #1
   822b0:	f000 bd4f 	b.w	82d52 <_dtoa_r+0xb54>
   822b4:	ab19      	add	r3, sp, #100	; 0x64
   822b6:	9300      	str	r3, [sp, #0]
   822b8:	ab18      	add	r3, sp, #96	; 0x60
   822ba:	9301      	str	r3, [sp, #4]
   822bc:	4650      	mov	r0, sl
   822be:	4622      	mov	r2, r4
   822c0:	462b      	mov	r3, r5
   822c2:	f001 fc02 	bl	83aca <__d2b>
   822c6:	f3c7 560a 	ubfx	r6, r7, #20, #11
   822ca:	4683      	mov	fp, r0
   822cc:	b15e      	cbz	r6, 822e6 <_dtoa_r+0xe8>
   822ce:	f3c5 0313 	ubfx	r3, r5, #0, #20
   822d2:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   822d6:	4620      	mov	r0, r4
   822d8:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   822dc:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
   822e0:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
   822e4:	e01c      	b.n	82320 <_dtoa_r+0x122>
   822e6:	9b19      	ldr	r3, [sp, #100]	; 0x64
   822e8:	9e18      	ldr	r6, [sp, #96]	; 0x60
   822ea:	441e      	add	r6, r3
   822ec:	f46f 6382 	mvn.w	r3, #1040	; 0x410
   822f0:	429e      	cmp	r6, r3
   822f2:	db09      	blt.n	82308 <_dtoa_r+0x10a>
   822f4:	9904      	ldr	r1, [sp, #16]
   822f6:	331f      	adds	r3, #31
   822f8:	f206 4012 	addw	r0, r6, #1042	; 0x412
   822fc:	1b9b      	subs	r3, r3, r6
   822fe:	fa21 f000 	lsr.w	r0, r1, r0
   82302:	409f      	lsls	r7, r3
   82304:	4338      	orrs	r0, r7
   82306:	e004      	b.n	82312 <_dtoa_r+0x114>
   82308:	486d      	ldr	r0, [pc, #436]	; (824c0 <_dtoa_r+0x2c2>)
   8230a:	9a04      	ldr	r2, [sp, #16]
   8230c:	1b80      	subs	r0, r0, r6
   8230e:	fa02 f000 	lsl.w	r0, r2, r0
   82312:	f002 fcb7 	bl	84c84 <__aeabi_ui2d>
   82316:	2701      	movs	r7, #1
   82318:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   8231c:	3e01      	subs	r6, #1
   8231e:	9715      	str	r7, [sp, #84]	; 0x54
   82320:	2200      	movs	r2, #0
   82322:	4b68      	ldr	r3, [pc, #416]	; (824c4 <_dtoa_r+0x2c6>)
   82324:	f002 fb70 	bl	84a08 <__aeabi_dsub>
   82328:	a35b      	add	r3, pc, #364	; (adr r3, 82498 <_dtoa_r+0x29a>)
   8232a:	e9d3 2300 	ldrd	r2, r3, [r3]
   8232e:	f002 fd1f 	bl	84d70 <__aeabi_dmul>
   82332:	a35b      	add	r3, pc, #364	; (adr r3, 824a0 <_dtoa_r+0x2a2>)
   82334:	e9d3 2300 	ldrd	r2, r3, [r3]
   82338:	f002 fb68 	bl	84a0c <__adddf3>
   8233c:	4604      	mov	r4, r0
   8233e:	4630      	mov	r0, r6
   82340:	460d      	mov	r5, r1
   82342:	f002 fcaf 	bl	84ca4 <__aeabi_i2d>
   82346:	a358      	add	r3, pc, #352	; (adr r3, 824a8 <_dtoa_r+0x2aa>)
   82348:	e9d3 2300 	ldrd	r2, r3, [r3]
   8234c:	f002 fd10 	bl	84d70 <__aeabi_dmul>
   82350:	4602      	mov	r2, r0
   82352:	460b      	mov	r3, r1
   82354:	4620      	mov	r0, r4
   82356:	4629      	mov	r1, r5
   82358:	f002 fb58 	bl	84a0c <__adddf3>
   8235c:	4604      	mov	r4, r0
   8235e:	460d      	mov	r5, r1
   82360:	f002 ffa0 	bl	852a4 <__aeabi_d2iz>
   82364:	4629      	mov	r1, r5
   82366:	4681      	mov	r9, r0
   82368:	2200      	movs	r2, #0
   8236a:	4620      	mov	r0, r4
   8236c:	2300      	movs	r3, #0
   8236e:	f002 ff71 	bl	85254 <__aeabi_dcmplt>
   82372:	b158      	cbz	r0, 8238c <_dtoa_r+0x18e>
   82374:	4648      	mov	r0, r9
   82376:	f002 fc95 	bl	84ca4 <__aeabi_i2d>
   8237a:	4602      	mov	r2, r0
   8237c:	460b      	mov	r3, r1
   8237e:	4620      	mov	r0, r4
   82380:	4629      	mov	r1, r5
   82382:	f002 ff5d 	bl	85240 <__aeabi_dcmpeq>
   82386:	b908      	cbnz	r0, 8238c <_dtoa_r+0x18e>
   82388:	f109 39ff 	add.w	r9, r9, #4294967295
   8238c:	f1b9 0f16 	cmp.w	r9, #22
   82390:	d80d      	bhi.n	823ae <_dtoa_r+0x1b0>
   82392:	4b4d      	ldr	r3, [pc, #308]	; (824c8 <_dtoa_r+0x2ca>)
   82394:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
   82398:	e9d3 0100 	ldrd	r0, r1, [r3]
   8239c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   823a0:	f002 ff76 	bl	85290 <__aeabi_dcmpgt>
   823a4:	b130      	cbz	r0, 823b4 <_dtoa_r+0x1b6>
   823a6:	f109 39ff 	add.w	r9, r9, #4294967295
   823aa:	2700      	movs	r7, #0
   823ac:	e000      	b.n	823b0 <_dtoa_r+0x1b2>
   823ae:	2701      	movs	r7, #1
   823b0:	9714      	str	r7, [sp, #80]	; 0x50
   823b2:	e000      	b.n	823b6 <_dtoa_r+0x1b8>
   823b4:	9014      	str	r0, [sp, #80]	; 0x50
   823b6:	9b18      	ldr	r3, [sp, #96]	; 0x60
   823b8:	1b9e      	subs	r6, r3, r6
   823ba:	3e01      	subs	r6, #1
   823bc:	960a      	str	r6, [sp, #40]	; 0x28
   823be:	d504      	bpl.n	823ca <_dtoa_r+0x1cc>
   823c0:	4277      	negs	r7, r6
   823c2:	9708      	str	r7, [sp, #32]
   823c4:	2700      	movs	r7, #0
   823c6:	970a      	str	r7, [sp, #40]	; 0x28
   823c8:	e001      	b.n	823ce <_dtoa_r+0x1d0>
   823ca:	2700      	movs	r7, #0
   823cc:	9708      	str	r7, [sp, #32]
   823ce:	f1b9 0f00 	cmp.w	r9, #0
   823d2:	db07      	blt.n	823e4 <_dtoa_r+0x1e6>
   823d4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   823d6:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
   823da:	444f      	add	r7, r9
   823dc:	970a      	str	r7, [sp, #40]	; 0x28
   823de:	2700      	movs	r7, #0
   823e0:	970e      	str	r7, [sp, #56]	; 0x38
   823e2:	e008      	b.n	823f6 <_dtoa_r+0x1f8>
   823e4:	9f08      	ldr	r7, [sp, #32]
   823e6:	ebc9 0707 	rsb	r7, r9, r7
   823ea:	9708      	str	r7, [sp, #32]
   823ec:	f1c9 0700 	rsb	r7, r9, #0
   823f0:	970e      	str	r7, [sp, #56]	; 0x38
   823f2:	2700      	movs	r7, #0
   823f4:	9711      	str	r7, [sp, #68]	; 0x44
   823f6:	9f24      	ldr	r7, [sp, #144]	; 0x90
   823f8:	2f09      	cmp	r7, #9
   823fa:	d829      	bhi.n	82450 <_dtoa_r+0x252>
   823fc:	2f05      	cmp	r7, #5
   823fe:	bfc4      	itt	gt
   82400:	3f04      	subgt	r7, #4
   82402:	9724      	strgt	r7, [sp, #144]	; 0x90
   82404:	9f24      	ldr	r7, [sp, #144]	; 0x90
   82406:	bfc8      	it	gt
   82408:	2400      	movgt	r4, #0
   8240a:	f1a7 0302 	sub.w	r3, r7, #2
   8240e:	bfd8      	it	le
   82410:	2401      	movle	r4, #1
   82412:	2b03      	cmp	r3, #3
   82414:	d821      	bhi.n	8245a <_dtoa_r+0x25c>
   82416:	e8df f003 	tbb	[pc, r3]
   8241a:	0f06      	.short	0x0f06
   8241c:	0402      	.short	0x0402
   8241e:	2701      	movs	r7, #1
   82420:	e002      	b.n	82428 <_dtoa_r+0x22a>
   82422:	2701      	movs	r7, #1
   82424:	e009      	b.n	8243a <_dtoa_r+0x23c>
   82426:	2700      	movs	r7, #0
   82428:	970f      	str	r7, [sp, #60]	; 0x3c
   8242a:	9f25      	ldr	r7, [sp, #148]	; 0x94
   8242c:	2f00      	cmp	r7, #0
   8242e:	dd1e      	ble.n	8246e <_dtoa_r+0x270>
   82430:	970b      	str	r7, [sp, #44]	; 0x2c
   82432:	9707      	str	r7, [sp, #28]
   82434:	463b      	mov	r3, r7
   82436:	e01f      	b.n	82478 <_dtoa_r+0x27a>
   82438:	2700      	movs	r7, #0
   8243a:	970f      	str	r7, [sp, #60]	; 0x3c
   8243c:	9f25      	ldr	r7, [sp, #148]	; 0x94
   8243e:	444f      	add	r7, r9
   82440:	970b      	str	r7, [sp, #44]	; 0x2c
   82442:	3701      	adds	r7, #1
   82444:	463b      	mov	r3, r7
   82446:	9707      	str	r7, [sp, #28]
   82448:	2b01      	cmp	r3, #1
   8244a:	bfb8      	it	lt
   8244c:	2301      	movlt	r3, #1
   8244e:	e013      	b.n	82478 <_dtoa_r+0x27a>
   82450:	2401      	movs	r4, #1
   82452:	2700      	movs	r7, #0
   82454:	9724      	str	r7, [sp, #144]	; 0x90
   82456:	940f      	str	r4, [sp, #60]	; 0x3c
   82458:	e001      	b.n	8245e <_dtoa_r+0x260>
   8245a:	2701      	movs	r7, #1
   8245c:	970f      	str	r7, [sp, #60]	; 0x3c
   8245e:	f04f 37ff 	mov.w	r7, #4294967295
   82462:	970b      	str	r7, [sp, #44]	; 0x2c
   82464:	9707      	str	r7, [sp, #28]
   82466:	2700      	movs	r7, #0
   82468:	2312      	movs	r3, #18
   8246a:	9725      	str	r7, [sp, #148]	; 0x94
   8246c:	e004      	b.n	82478 <_dtoa_r+0x27a>
   8246e:	2701      	movs	r7, #1
   82470:	970b      	str	r7, [sp, #44]	; 0x2c
   82472:	9707      	str	r7, [sp, #28]
   82474:	463b      	mov	r3, r7
   82476:	9725      	str	r7, [sp, #148]	; 0x94
   82478:	2200      	movs	r2, #0
   8247a:	f8ca 2044 	str.w	r2, [sl, #68]	; 0x44
   8247e:	2204      	movs	r2, #4
   82480:	f102 0114 	add.w	r1, r2, #20
   82484:	4299      	cmp	r1, r3
   82486:	d821      	bhi.n	824cc <_dtoa_r+0x2ce>
   82488:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
   8248c:	0052      	lsls	r2, r2, #1
   8248e:	3101      	adds	r1, #1
   82490:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
   82494:	e7f4      	b.n	82480 <_dtoa_r+0x282>
   82496:	bf00      	nop
   82498:	636f4361 	.word	0x636f4361
   8249c:	3fd287a7 	.word	0x3fd287a7
   824a0:	8b60c8b3 	.word	0x8b60c8b3
   824a4:	3fc68a28 	.word	0x3fc68a28
   824a8:	509f79fb 	.word	0x509f79fb
   824ac:	3fd34413 	.word	0x3fd34413
   824b0:	7ff00000 	.word	0x7ff00000
   824b4:	00085953 	.word	0x00085953
   824b8:	0008594a 	.word	0x0008594a
   824bc:	00085949 	.word	0x00085949
   824c0:	fffffbee 	.word	0xfffffbee
   824c4:	3ff80000 	.word	0x3ff80000
   824c8:	00085970 	.word	0x00085970
   824cc:	4650      	mov	r0, sl
   824ce:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
   824d2:	f000 ffdf 	bl	83494 <_Balloc>
   824d6:	9f07      	ldr	r7, [sp, #28]
   824d8:	9009      	str	r0, [sp, #36]	; 0x24
   824da:	2f0e      	cmp	r7, #14
   824dc:	f8ca 0040 	str.w	r0, [sl, #64]	; 0x40
   824e0:	f200 816a 	bhi.w	827b8 <_dtoa_r+0x5ba>
   824e4:	2c00      	cmp	r4, #0
   824e6:	f000 8167 	beq.w	827b8 <_dtoa_r+0x5ba>
   824ea:	f1b9 0f00 	cmp.w	r9, #0
   824ee:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   824f2:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   824f6:	dd31      	ble.n	8255c <_dtoa_r+0x35e>
   824f8:	4a80      	ldr	r2, [pc, #512]	; (826fc <_dtoa_r+0x4fe>)
   824fa:	f009 030f 	and.w	r3, r9, #15
   824fe:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   82502:	ea4f 1429 	mov.w	r4, r9, asr #4
   82506:	e9d3 0100 	ldrd	r0, r1, [r3]
   8250a:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   8250e:	06e0      	lsls	r0, r4, #27
   82510:	d50c      	bpl.n	8252c <_dtoa_r+0x32e>
   82512:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   82516:	4b7a      	ldr	r3, [pc, #488]	; (82700 <_dtoa_r+0x502>)
   82518:	f004 040f 	and.w	r4, r4, #15
   8251c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   82520:	f002 fd50 	bl	84fc4 <__aeabi_ddiv>
   82524:	2703      	movs	r7, #3
   82526:	e9cd 0104 	strd	r0, r1, [sp, #16]
   8252a:	e000      	b.n	8252e <_dtoa_r+0x330>
   8252c:	2702      	movs	r7, #2
   8252e:	4d74      	ldr	r5, [pc, #464]	; (82700 <_dtoa_r+0x502>)
   82530:	b16c      	cbz	r4, 8254e <_dtoa_r+0x350>
   82532:	07e1      	lsls	r1, r4, #31
   82534:	d508      	bpl.n	82548 <_dtoa_r+0x34a>
   82536:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
   8253a:	e9d5 2300 	ldrd	r2, r3, [r5]
   8253e:	f002 fc17 	bl	84d70 <__aeabi_dmul>
   82542:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   82546:	3701      	adds	r7, #1
   82548:	1064      	asrs	r4, r4, #1
   8254a:	3508      	adds	r5, #8
   8254c:	e7f0      	b.n	82530 <_dtoa_r+0x332>
   8254e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82552:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
   82556:	f002 fd35 	bl	84fc4 <__aeabi_ddiv>
   8255a:	e01b      	b.n	82594 <_dtoa_r+0x396>
   8255c:	f1c9 0400 	rsb	r4, r9, #0
   82560:	b1dc      	cbz	r4, 8259a <_dtoa_r+0x39c>
   82562:	4b66      	ldr	r3, [pc, #408]	; (826fc <_dtoa_r+0x4fe>)
   82564:	f004 020f 	and.w	r2, r4, #15
   82568:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8256c:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   82570:	e9d3 2300 	ldrd	r2, r3, [r3]
   82574:	f002 fbfc 	bl	84d70 <__aeabi_dmul>
   82578:	4d61      	ldr	r5, [pc, #388]	; (82700 <_dtoa_r+0x502>)
   8257a:	1124      	asrs	r4, r4, #4
   8257c:	2702      	movs	r7, #2
   8257e:	b14c      	cbz	r4, 82594 <_dtoa_r+0x396>
   82580:	07e2      	lsls	r2, r4, #31
   82582:	d504      	bpl.n	8258e <_dtoa_r+0x390>
   82584:	e9d5 2300 	ldrd	r2, r3, [r5]
   82588:	3701      	adds	r7, #1
   8258a:	f002 fbf1 	bl	84d70 <__aeabi_dmul>
   8258e:	1064      	asrs	r4, r4, #1
   82590:	3508      	adds	r5, #8
   82592:	e7f4      	b.n	8257e <_dtoa_r+0x380>
   82594:	e9cd 0104 	strd	r0, r1, [sp, #16]
   82598:	e000      	b.n	8259c <_dtoa_r+0x39e>
   8259a:	2702      	movs	r7, #2
   8259c:	9914      	ldr	r1, [sp, #80]	; 0x50
   8259e:	b1e9      	cbz	r1, 825dc <_dtoa_r+0x3de>
   825a0:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
   825a4:	2200      	movs	r2, #0
   825a6:	4620      	mov	r0, r4
   825a8:	4629      	mov	r1, r5
   825aa:	4b56      	ldr	r3, [pc, #344]	; (82704 <_dtoa_r+0x506>)
   825ac:	f002 fe52 	bl	85254 <__aeabi_dcmplt>
   825b0:	b1c8      	cbz	r0, 825e6 <_dtoa_r+0x3e8>
   825b2:	9a07      	ldr	r2, [sp, #28]
   825b4:	b1e2      	cbz	r2, 825f0 <_dtoa_r+0x3f2>
   825b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   825b8:	2b00      	cmp	r3, #0
   825ba:	f340 80f9 	ble.w	827b0 <_dtoa_r+0x5b2>
   825be:	f109 30ff 	add.w	r0, r9, #4294967295
   825c2:	9010      	str	r0, [sp, #64]	; 0x40
   825c4:	4629      	mov	r1, r5
   825c6:	4620      	mov	r0, r4
   825c8:	2200      	movs	r2, #0
   825ca:	4b4f      	ldr	r3, [pc, #316]	; (82708 <_dtoa_r+0x50a>)
   825cc:	f002 fbd0 	bl	84d70 <__aeabi_dmul>
   825d0:	e9cd 0104 	strd	r0, r1, [sp, #16]
   825d4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   825d6:	3701      	adds	r7, #1
   825d8:	910c      	str	r1, [sp, #48]	; 0x30
   825da:	e00d      	b.n	825f8 <_dtoa_r+0x3fa>
   825dc:	9a07      	ldr	r2, [sp, #28]
   825de:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   825e2:	920c      	str	r2, [sp, #48]	; 0x30
   825e4:	e008      	b.n	825f8 <_dtoa_r+0x3fa>
   825e6:	9b07      	ldr	r3, [sp, #28]
   825e8:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   825ec:	930c      	str	r3, [sp, #48]	; 0x30
   825ee:	e003      	b.n	825f8 <_dtoa_r+0x3fa>
   825f0:	9807      	ldr	r0, [sp, #28]
   825f2:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   825f6:	900c      	str	r0, [sp, #48]	; 0x30
   825f8:	4638      	mov	r0, r7
   825fa:	f002 fb53 	bl	84ca4 <__aeabi_i2d>
   825fe:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   82602:	f002 fbb5 	bl	84d70 <__aeabi_dmul>
   82606:	2200      	movs	r2, #0
   82608:	4b40      	ldr	r3, [pc, #256]	; (8270c <_dtoa_r+0x50e>)
   8260a:	f002 f9ff 	bl	84a0c <__adddf3>
   8260e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   82610:	4604      	mov	r4, r0
   82612:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
   82616:	b9cf      	cbnz	r7, 8264c <_dtoa_r+0x44e>
   82618:	2200      	movs	r2, #0
   8261a:	4b3d      	ldr	r3, [pc, #244]	; (82710 <_dtoa_r+0x512>)
   8261c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82620:	f002 f9f2 	bl	84a08 <__aeabi_dsub>
   82624:	4622      	mov	r2, r4
   82626:	462b      	mov	r3, r5
   82628:	4606      	mov	r6, r0
   8262a:	460f      	mov	r7, r1
   8262c:	f002 fe30 	bl	85290 <__aeabi_dcmpgt>
   82630:	2800      	cmp	r0, #0
   82632:	f040 8252 	bne.w	82ada <_dtoa_r+0x8dc>
   82636:	4622      	mov	r2, r4
   82638:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
   8263c:	4630      	mov	r0, r6
   8263e:	4639      	mov	r1, r7
   82640:	f002 fe08 	bl	85254 <__aeabi_dcmplt>
   82644:	2800      	cmp	r0, #0
   82646:	f040 823e 	bne.w	82ac6 <_dtoa_r+0x8c8>
   8264a:	e0b1      	b.n	827b0 <_dtoa_r+0x5b2>
   8264c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   8264e:	4b2b      	ldr	r3, [pc, #172]	; (826fc <_dtoa_r+0x4fe>)
   82650:	1e7a      	subs	r2, r7, #1
   82652:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   82654:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   82658:	2f00      	cmp	r7, #0
   8265a:	d05d      	beq.n	82718 <_dtoa_r+0x51a>
   8265c:	e9d3 2300 	ldrd	r2, r3, [r3]
   82660:	2000      	movs	r0, #0
   82662:	492c      	ldr	r1, [pc, #176]	; (82714 <_dtoa_r+0x516>)
   82664:	f002 fcae 	bl	84fc4 <__aeabi_ddiv>
   82668:	4622      	mov	r2, r4
   8266a:	462b      	mov	r3, r5
   8266c:	f002 f9cc 	bl	84a08 <__aeabi_dsub>
   82670:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   82674:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   82678:	4604      	mov	r4, r0
   8267a:	460d      	mov	r5, r1
   8267c:	4639      	mov	r1, r7
   8267e:	4630      	mov	r0, r6
   82680:	f002 fe10 	bl	852a4 <__aeabi_d2iz>
   82684:	9002      	str	r0, [sp, #8]
   82686:	f002 fb0d 	bl	84ca4 <__aeabi_i2d>
   8268a:	4602      	mov	r2, r0
   8268c:	460b      	mov	r3, r1
   8268e:	4630      	mov	r0, r6
   82690:	4639      	mov	r1, r7
   82692:	f002 f9b9 	bl	84a08 <__aeabi_dsub>
   82696:	f8dd c008 	ldr.w	ip, [sp, #8]
   8269a:	4622      	mov	r2, r4
   8269c:	f10c 0330 	add.w	r3, ip, #48	; 0x30
   826a0:	f808 3b01 	strb.w	r3, [r8], #1
   826a4:	462b      	mov	r3, r5
   826a6:	4606      	mov	r6, r0
   826a8:	460f      	mov	r7, r1
   826aa:	f002 fdd3 	bl	85254 <__aeabi_dcmplt>
   826ae:	2800      	cmp	r0, #0
   826b0:	f040 833a 	bne.w	82d28 <_dtoa_r+0xb2a>
   826b4:	4632      	mov	r2, r6
   826b6:	463b      	mov	r3, r7
   826b8:	2000      	movs	r0, #0
   826ba:	4912      	ldr	r1, [pc, #72]	; (82704 <_dtoa_r+0x506>)
   826bc:	f002 f9a4 	bl	84a08 <__aeabi_dsub>
   826c0:	4622      	mov	r2, r4
   826c2:	462b      	mov	r3, r5
   826c4:	f002 fdc6 	bl	85254 <__aeabi_dcmplt>
   826c8:	2800      	cmp	r0, #0
   826ca:	f040 80d4 	bne.w	82876 <_dtoa_r+0x678>
   826ce:	9809      	ldr	r0, [sp, #36]	; 0x24
   826d0:	990c      	ldr	r1, [sp, #48]	; 0x30
   826d2:	ebc0 0308 	rsb	r3, r0, r8
   826d6:	428b      	cmp	r3, r1
   826d8:	da6a      	bge.n	827b0 <_dtoa_r+0x5b2>
   826da:	4620      	mov	r0, r4
   826dc:	4629      	mov	r1, r5
   826de:	2200      	movs	r2, #0
   826e0:	4b09      	ldr	r3, [pc, #36]	; (82708 <_dtoa_r+0x50a>)
   826e2:	f002 fb45 	bl	84d70 <__aeabi_dmul>
   826e6:	2200      	movs	r2, #0
   826e8:	4604      	mov	r4, r0
   826ea:	460d      	mov	r5, r1
   826ec:	4630      	mov	r0, r6
   826ee:	4639      	mov	r1, r7
   826f0:	4b05      	ldr	r3, [pc, #20]	; (82708 <_dtoa_r+0x50a>)
   826f2:	f002 fb3d 	bl	84d70 <__aeabi_dmul>
   826f6:	4606      	mov	r6, r0
   826f8:	460f      	mov	r7, r1
   826fa:	e7bf      	b.n	8267c <_dtoa_r+0x47e>
   826fc:	00085970 	.word	0x00085970
   82700:	00085a60 	.word	0x00085a60
   82704:	3ff00000 	.word	0x3ff00000
   82708:	40240000 	.word	0x40240000
   8270c:	401c0000 	.word	0x401c0000
   82710:	40140000 	.word	0x40140000
   82714:	3fe00000 	.word	0x3fe00000
   82718:	4622      	mov	r2, r4
   8271a:	e9d3 0100 	ldrd	r0, r1, [r3]
   8271e:	462b      	mov	r3, r5
   82720:	f002 fb26 	bl	84d70 <__aeabi_dmul>
   82724:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   82728:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   8272c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8272e:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   82732:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82734:	4490      	add	r8, r2
   82736:	4639      	mov	r1, r7
   82738:	4630      	mov	r0, r6
   8273a:	f002 fdb3 	bl	852a4 <__aeabi_d2iz>
   8273e:	4605      	mov	r5, r0
   82740:	f002 fab0 	bl	84ca4 <__aeabi_i2d>
   82744:	4602      	mov	r2, r0
   82746:	460b      	mov	r3, r1
   82748:	4630      	mov	r0, r6
   8274a:	4639      	mov	r1, r7
   8274c:	f002 f95c 	bl	84a08 <__aeabi_dsub>
   82750:	3530      	adds	r5, #48	; 0x30
   82752:	f804 5b01 	strb.w	r5, [r4], #1
   82756:	4544      	cmp	r4, r8
   82758:	4606      	mov	r6, r0
   8275a:	460f      	mov	r7, r1
   8275c:	d121      	bne.n	827a2 <_dtoa_r+0x5a4>
   8275e:	2200      	movs	r2, #0
   82760:	4b87      	ldr	r3, [pc, #540]	; (82980 <_dtoa_r+0x782>)
   82762:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   82766:	f002 f951 	bl	84a0c <__adddf3>
   8276a:	4602      	mov	r2, r0
   8276c:	460b      	mov	r3, r1
   8276e:	4630      	mov	r0, r6
   82770:	4639      	mov	r1, r7
   82772:	f002 fd8d 	bl	85290 <__aeabi_dcmpgt>
   82776:	2800      	cmp	r0, #0
   82778:	d17d      	bne.n	82876 <_dtoa_r+0x678>
   8277a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   8277e:	2000      	movs	r0, #0
   82780:	497f      	ldr	r1, [pc, #508]	; (82980 <_dtoa_r+0x782>)
   82782:	f002 f941 	bl	84a08 <__aeabi_dsub>
   82786:	4602      	mov	r2, r0
   82788:	460b      	mov	r3, r1
   8278a:	4630      	mov	r0, r6
   8278c:	4639      	mov	r1, r7
   8278e:	f002 fd61 	bl	85254 <__aeabi_dcmplt>
   82792:	b168      	cbz	r0, 827b0 <_dtoa_r+0x5b2>
   82794:	46a0      	mov	r8, r4
   82796:	f818 3c01 	ldrb.w	r3, [r8, #-1]
   8279a:	3c01      	subs	r4, #1
   8279c:	2b30      	cmp	r3, #48	; 0x30
   8279e:	d0f9      	beq.n	82794 <_dtoa_r+0x596>
   827a0:	e2c2      	b.n	82d28 <_dtoa_r+0xb2a>
   827a2:	2200      	movs	r2, #0
   827a4:	4b77      	ldr	r3, [pc, #476]	; (82984 <_dtoa_r+0x786>)
   827a6:	f002 fae3 	bl	84d70 <__aeabi_dmul>
   827aa:	4606      	mov	r6, r0
   827ac:	460f      	mov	r7, r1
   827ae:	e7c2      	b.n	82736 <_dtoa_r+0x538>
   827b0:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   827b4:	e9cd 0104 	strd	r0, r1, [sp, #16]
   827b8:	9b19      	ldr	r3, [sp, #100]	; 0x64
   827ba:	2b00      	cmp	r3, #0
   827bc:	db7c      	blt.n	828b8 <_dtoa_r+0x6ba>
   827be:	f1b9 0f0e 	cmp.w	r9, #14
   827c2:	dc79      	bgt.n	828b8 <_dtoa_r+0x6ba>
   827c4:	4b70      	ldr	r3, [pc, #448]	; (82988 <_dtoa_r+0x78a>)
   827c6:	9f25      	ldr	r7, [sp, #148]	; 0x94
   827c8:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
   827cc:	2f00      	cmp	r7, #0
   827ce:	e9d3 4500 	ldrd	r4, r5, [r3]
   827d2:	da14      	bge.n	827fe <_dtoa_r+0x600>
   827d4:	9f07      	ldr	r7, [sp, #28]
   827d6:	2f00      	cmp	r7, #0
   827d8:	dc11      	bgt.n	827fe <_dtoa_r+0x600>
   827da:	f040 8176 	bne.w	82aca <_dtoa_r+0x8cc>
   827de:	4620      	mov	r0, r4
   827e0:	4629      	mov	r1, r5
   827e2:	2200      	movs	r2, #0
   827e4:	4b69      	ldr	r3, [pc, #420]	; (8298c <_dtoa_r+0x78e>)
   827e6:	f002 fac3 	bl	84d70 <__aeabi_dmul>
   827ea:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   827ee:	f002 fd45 	bl	8527c <__aeabi_dcmpge>
   827f2:	9d07      	ldr	r5, [sp, #28]
   827f4:	462c      	mov	r4, r5
   827f6:	2800      	cmp	r0, #0
   827f8:	f040 8169 	bne.w	82ace <_dtoa_r+0x8d0>
   827fc:	e171      	b.n	82ae2 <_dtoa_r+0x8e4>
   827fe:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   82802:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   82806:	4622      	mov	r2, r4
   82808:	462b      	mov	r3, r5
   8280a:	4630      	mov	r0, r6
   8280c:	4639      	mov	r1, r7
   8280e:	f002 fbd9 	bl	84fc4 <__aeabi_ddiv>
   82812:	f002 fd47 	bl	852a4 <__aeabi_d2iz>
   82816:	9004      	str	r0, [sp, #16]
   82818:	f002 fa44 	bl	84ca4 <__aeabi_i2d>
   8281c:	4622      	mov	r2, r4
   8281e:	462b      	mov	r3, r5
   82820:	f002 faa6 	bl	84d70 <__aeabi_dmul>
   82824:	4602      	mov	r2, r0
   82826:	460b      	mov	r3, r1
   82828:	4630      	mov	r0, r6
   8282a:	4639      	mov	r1, r7
   8282c:	f002 f8ec 	bl	84a08 <__aeabi_dsub>
   82830:	9f04      	ldr	r7, [sp, #16]
   82832:	4602      	mov	r2, r0
   82834:	f107 0630 	add.w	r6, r7, #48	; 0x30
   82838:	9f09      	ldr	r7, [sp, #36]	; 0x24
   8283a:	f808 6b01 	strb.w	r6, [r8], #1
   8283e:	ebc7 0608 	rsb	r6, r7, r8
   82842:	9f07      	ldr	r7, [sp, #28]
   82844:	460b      	mov	r3, r1
   82846:	42be      	cmp	r6, r7
   82848:	d129      	bne.n	8289e <_dtoa_r+0x6a0>
   8284a:	f002 f8df 	bl	84a0c <__adddf3>
   8284e:	4622      	mov	r2, r4
   82850:	462b      	mov	r3, r5
   82852:	4606      	mov	r6, r0
   82854:	460f      	mov	r7, r1
   82856:	f002 fd1b 	bl	85290 <__aeabi_dcmpgt>
   8285a:	b970      	cbnz	r0, 8287a <_dtoa_r+0x67c>
   8285c:	4630      	mov	r0, r6
   8285e:	4639      	mov	r1, r7
   82860:	4622      	mov	r2, r4
   82862:	462b      	mov	r3, r5
   82864:	f002 fcec 	bl	85240 <__aeabi_dcmpeq>
   82868:	2800      	cmp	r0, #0
   8286a:	f000 825f 	beq.w	82d2c <_dtoa_r+0xb2e>
   8286e:	9f04      	ldr	r7, [sp, #16]
   82870:	07fb      	lsls	r3, r7, #31
   82872:	d402      	bmi.n	8287a <_dtoa_r+0x67c>
   82874:	e25a      	b.n	82d2c <_dtoa_r+0xb2e>
   82876:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   8287a:	4643      	mov	r3, r8
   8287c:	4698      	mov	r8, r3
   8287e:	f818 2c01 	ldrb.w	r2, [r8, #-1]
   82882:	3b01      	subs	r3, #1
   82884:	2a39      	cmp	r2, #57	; 0x39
   82886:	d106      	bne.n	82896 <_dtoa_r+0x698>
   82888:	9f09      	ldr	r7, [sp, #36]	; 0x24
   8288a:	429f      	cmp	r7, r3
   8288c:	d1f6      	bne.n	8287c <_dtoa_r+0x67e>
   8288e:	2230      	movs	r2, #48	; 0x30
   82890:	f109 0901 	add.w	r9, r9, #1
   82894:	703a      	strb	r2, [r7, #0]
   82896:	781a      	ldrb	r2, [r3, #0]
   82898:	3201      	adds	r2, #1
   8289a:	701a      	strb	r2, [r3, #0]
   8289c:	e246      	b.n	82d2c <_dtoa_r+0xb2e>
   8289e:	2200      	movs	r2, #0
   828a0:	4b38      	ldr	r3, [pc, #224]	; (82984 <_dtoa_r+0x786>)
   828a2:	f002 fa65 	bl	84d70 <__aeabi_dmul>
   828a6:	2200      	movs	r2, #0
   828a8:	2300      	movs	r3, #0
   828aa:	4606      	mov	r6, r0
   828ac:	460f      	mov	r7, r1
   828ae:	f002 fcc7 	bl	85240 <__aeabi_dcmpeq>
   828b2:	2800      	cmp	r0, #0
   828b4:	d0a7      	beq.n	82806 <_dtoa_r+0x608>
   828b6:	e239      	b.n	82d2c <_dtoa_r+0xb2e>
   828b8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   828ba:	2f00      	cmp	r7, #0
   828bc:	d030      	beq.n	82920 <_dtoa_r+0x722>
   828be:	9f24      	ldr	r7, [sp, #144]	; 0x90
   828c0:	2f01      	cmp	r7, #1
   828c2:	dc0a      	bgt.n	828da <_dtoa_r+0x6dc>
   828c4:	9f15      	ldr	r7, [sp, #84]	; 0x54
   828c6:	b117      	cbz	r7, 828ce <_dtoa_r+0x6d0>
   828c8:	f203 4333 	addw	r3, r3, #1075	; 0x433
   828cc:	e002      	b.n	828d4 <_dtoa_r+0x6d6>
   828ce:	9b18      	ldr	r3, [sp, #96]	; 0x60
   828d0:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   828d4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   828d6:	9e08      	ldr	r6, [sp, #32]
   828d8:	e016      	b.n	82908 <_dtoa_r+0x70a>
   828da:	9f07      	ldr	r7, [sp, #28]
   828dc:	1e7d      	subs	r5, r7, #1
   828de:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   828e0:	42af      	cmp	r7, r5
   828e2:	db01      	blt.n	828e8 <_dtoa_r+0x6ea>
   828e4:	1b7d      	subs	r5, r7, r5
   828e6:	e006      	b.n	828f6 <_dtoa_r+0x6f8>
   828e8:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   828ea:	950e      	str	r5, [sp, #56]	; 0x38
   828ec:	1beb      	subs	r3, r5, r7
   828ee:	9f11      	ldr	r7, [sp, #68]	; 0x44
   828f0:	2500      	movs	r5, #0
   828f2:	441f      	add	r7, r3
   828f4:	9711      	str	r7, [sp, #68]	; 0x44
   828f6:	9f07      	ldr	r7, [sp, #28]
   828f8:	2f00      	cmp	r7, #0
   828fa:	da03      	bge.n	82904 <_dtoa_r+0x706>
   828fc:	9808      	ldr	r0, [sp, #32]
   828fe:	2300      	movs	r3, #0
   82900:	1bc6      	subs	r6, r0, r7
   82902:	e001      	b.n	82908 <_dtoa_r+0x70a>
   82904:	9e08      	ldr	r6, [sp, #32]
   82906:	9b07      	ldr	r3, [sp, #28]
   82908:	9f08      	ldr	r7, [sp, #32]
   8290a:	4650      	mov	r0, sl
   8290c:	441f      	add	r7, r3
   8290e:	9708      	str	r7, [sp, #32]
   82910:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   82912:	2101      	movs	r1, #1
   82914:	441f      	add	r7, r3
   82916:	970a      	str	r7, [sp, #40]	; 0x28
   82918:	f000 feb4 	bl	83684 <__i2b>
   8291c:	4604      	mov	r4, r0
   8291e:	e002      	b.n	82926 <_dtoa_r+0x728>
   82920:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   82922:	9e08      	ldr	r6, [sp, #32]
   82924:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   82926:	b16e      	cbz	r6, 82944 <_dtoa_r+0x746>
   82928:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   8292a:	2f00      	cmp	r7, #0
   8292c:	dd0a      	ble.n	82944 <_dtoa_r+0x746>
   8292e:	463b      	mov	r3, r7
   82930:	9f08      	ldr	r7, [sp, #32]
   82932:	42b3      	cmp	r3, r6
   82934:	bfa8      	it	ge
   82936:	4633      	movge	r3, r6
   82938:	1aff      	subs	r7, r7, r3
   8293a:	9708      	str	r7, [sp, #32]
   8293c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   8293e:	1af6      	subs	r6, r6, r3
   82940:	1aff      	subs	r7, r7, r3
   82942:	970a      	str	r7, [sp, #40]	; 0x28
   82944:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   82946:	2f00      	cmp	r7, #0
   82948:	dd28      	ble.n	8299c <_dtoa_r+0x79e>
   8294a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   8294c:	b307      	cbz	r7, 82990 <_dtoa_r+0x792>
   8294e:	2d00      	cmp	r5, #0
   82950:	dd10      	ble.n	82974 <_dtoa_r+0x776>
   82952:	4621      	mov	r1, r4
   82954:	462a      	mov	r2, r5
   82956:	4650      	mov	r0, sl
   82958:	f000 ff35 	bl	837c6 <__pow5mult>
   8295c:	4604      	mov	r4, r0
   8295e:	465a      	mov	r2, fp
   82960:	4621      	mov	r1, r4
   82962:	4650      	mov	r0, sl
   82964:	f000 fe97 	bl	83696 <__multiply>
   82968:	4659      	mov	r1, fp
   8296a:	4607      	mov	r7, r0
   8296c:	4650      	mov	r0, sl
   8296e:	f000 fdb7 	bl	834e0 <_Bfree>
   82972:	46bb      	mov	fp, r7
   82974:	9f0e      	ldr	r7, [sp, #56]	; 0x38
   82976:	1b7a      	subs	r2, r7, r5
   82978:	d010      	beq.n	8299c <_dtoa_r+0x79e>
   8297a:	4650      	mov	r0, sl
   8297c:	4659      	mov	r1, fp
   8297e:	e00a      	b.n	82996 <_dtoa_r+0x798>
   82980:	3fe00000 	.word	0x3fe00000
   82984:	40240000 	.word	0x40240000
   82988:	00085970 	.word	0x00085970
   8298c:	40140000 	.word	0x40140000
   82990:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   82992:	4650      	mov	r0, sl
   82994:	4659      	mov	r1, fp
   82996:	f000 ff16 	bl	837c6 <__pow5mult>
   8299a:	4683      	mov	fp, r0
   8299c:	4650      	mov	r0, sl
   8299e:	2101      	movs	r1, #1
   829a0:	f000 fe70 	bl	83684 <__i2b>
   829a4:	9f11      	ldr	r7, [sp, #68]	; 0x44
   829a6:	4605      	mov	r5, r0
   829a8:	2f00      	cmp	r7, #0
   829aa:	dd05      	ble.n	829b8 <_dtoa_r+0x7ba>
   829ac:	4629      	mov	r1, r5
   829ae:	4650      	mov	r0, sl
   829b0:	463a      	mov	r2, r7
   829b2:	f000 ff08 	bl	837c6 <__pow5mult>
   829b6:	4605      	mov	r5, r0
   829b8:	9f24      	ldr	r7, [sp, #144]	; 0x90
   829ba:	2f01      	cmp	r7, #1
   829bc:	dc12      	bgt.n	829e4 <_dtoa_r+0x7e6>
   829be:	9804      	ldr	r0, [sp, #16]
   829c0:	b980      	cbnz	r0, 829e4 <_dtoa_r+0x7e6>
   829c2:	9905      	ldr	r1, [sp, #20]
   829c4:	f3c1 0313 	ubfx	r3, r1, #0, #20
   829c8:	b973      	cbnz	r3, 829e8 <_dtoa_r+0x7ea>
   829ca:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
   829ce:	0d3f      	lsrs	r7, r7, #20
   829d0:	053f      	lsls	r7, r7, #20
   829d2:	b157      	cbz	r7, 829ea <_dtoa_r+0x7ec>
   829d4:	9f08      	ldr	r7, [sp, #32]
   829d6:	3701      	adds	r7, #1
   829d8:	9708      	str	r7, [sp, #32]
   829da:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   829dc:	3701      	adds	r7, #1
   829de:	970a      	str	r7, [sp, #40]	; 0x28
   829e0:	2701      	movs	r7, #1
   829e2:	e002      	b.n	829ea <_dtoa_r+0x7ec>
   829e4:	2700      	movs	r7, #0
   829e6:	e000      	b.n	829ea <_dtoa_r+0x7ec>
   829e8:	9f04      	ldr	r7, [sp, #16]
   829ea:	9811      	ldr	r0, [sp, #68]	; 0x44
   829ec:	b140      	cbz	r0, 82a00 <_dtoa_r+0x802>
   829ee:	692b      	ldr	r3, [r5, #16]
   829f0:	eb05 0383 	add.w	r3, r5, r3, lsl #2
   829f4:	6918      	ldr	r0, [r3, #16]
   829f6:	f000 fdf8 	bl	835ea <__hi0bits>
   829fa:	f1c0 0020 	rsb	r0, r0, #32
   829fe:	e000      	b.n	82a02 <_dtoa_r+0x804>
   82a00:	2001      	movs	r0, #1
   82a02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82a04:	4403      	add	r3, r0
   82a06:	f013 031f 	ands.w	r3, r3, #31
   82a0a:	d00f      	beq.n	82a2c <_dtoa_r+0x82e>
   82a0c:	f1c3 0220 	rsb	r2, r3, #32
   82a10:	2a04      	cmp	r2, #4
   82a12:	dd09      	ble.n	82a28 <_dtoa_r+0x82a>
   82a14:	9908      	ldr	r1, [sp, #32]
   82a16:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82a18:	f1c3 031c 	rsb	r3, r3, #28
   82a1c:	4419      	add	r1, r3
   82a1e:	441a      	add	r2, r3
   82a20:	9108      	str	r1, [sp, #32]
   82a22:	441e      	add	r6, r3
   82a24:	920a      	str	r2, [sp, #40]	; 0x28
   82a26:	e009      	b.n	82a3c <_dtoa_r+0x83e>
   82a28:	d008      	beq.n	82a3c <_dtoa_r+0x83e>
   82a2a:	4613      	mov	r3, r2
   82a2c:	9808      	ldr	r0, [sp, #32]
   82a2e:	990a      	ldr	r1, [sp, #40]	; 0x28
   82a30:	331c      	adds	r3, #28
   82a32:	4418      	add	r0, r3
   82a34:	4419      	add	r1, r3
   82a36:	9008      	str	r0, [sp, #32]
   82a38:	441e      	add	r6, r3
   82a3a:	910a      	str	r1, [sp, #40]	; 0x28
   82a3c:	9a08      	ldr	r2, [sp, #32]
   82a3e:	2a00      	cmp	r2, #0
   82a40:	dd04      	ble.n	82a4c <_dtoa_r+0x84e>
   82a42:	4659      	mov	r1, fp
   82a44:	4650      	mov	r0, sl
   82a46:	f000 fefd 	bl	83844 <__lshift>
   82a4a:	4683      	mov	fp, r0
   82a4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   82a4e:	2b00      	cmp	r3, #0
   82a50:	dd05      	ble.n	82a5e <_dtoa_r+0x860>
   82a52:	4629      	mov	r1, r5
   82a54:	4650      	mov	r0, sl
   82a56:	461a      	mov	r2, r3
   82a58:	f000 fef4 	bl	83844 <__lshift>
   82a5c:	4605      	mov	r5, r0
   82a5e:	9814      	ldr	r0, [sp, #80]	; 0x50
   82a60:	b1e0      	cbz	r0, 82a9c <_dtoa_r+0x89e>
   82a62:	4658      	mov	r0, fp
   82a64:	4629      	mov	r1, r5
   82a66:	f000 ff40 	bl	838ea <__mcmp>
   82a6a:	2800      	cmp	r0, #0
   82a6c:	da16      	bge.n	82a9c <_dtoa_r+0x89e>
   82a6e:	4659      	mov	r1, fp
   82a70:	4650      	mov	r0, sl
   82a72:	220a      	movs	r2, #10
   82a74:	2300      	movs	r3, #0
   82a76:	f000 fd3c 	bl	834f2 <__multadd>
   82a7a:	990f      	ldr	r1, [sp, #60]	; 0x3c
   82a7c:	f109 39ff 	add.w	r9, r9, #4294967295
   82a80:	4683      	mov	fp, r0
   82a82:	b149      	cbz	r1, 82a98 <_dtoa_r+0x89a>
   82a84:	4621      	mov	r1, r4
   82a86:	220a      	movs	r2, #10
   82a88:	4650      	mov	r0, sl
   82a8a:	2300      	movs	r3, #0
   82a8c:	f000 fd31 	bl	834f2 <__multadd>
   82a90:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   82a92:	4604      	mov	r4, r0
   82a94:	9207      	str	r2, [sp, #28]
   82a96:	e001      	b.n	82a9c <_dtoa_r+0x89e>
   82a98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82a9a:	9307      	str	r3, [sp, #28]
   82a9c:	9807      	ldr	r0, [sp, #28]
   82a9e:	2800      	cmp	r0, #0
   82aa0:	dc29      	bgt.n	82af6 <_dtoa_r+0x8f8>
   82aa2:	9924      	ldr	r1, [sp, #144]	; 0x90
   82aa4:	2902      	cmp	r1, #2
   82aa6:	dd26      	ble.n	82af6 <_dtoa_r+0x8f8>
   82aa8:	b988      	cbnz	r0, 82ace <_dtoa_r+0x8d0>
   82aaa:	4629      	mov	r1, r5
   82aac:	2205      	movs	r2, #5
   82aae:	9b07      	ldr	r3, [sp, #28]
   82ab0:	4650      	mov	r0, sl
   82ab2:	f000 fd1e 	bl	834f2 <__multadd>
   82ab6:	4605      	mov	r5, r0
   82ab8:	4629      	mov	r1, r5
   82aba:	4658      	mov	r0, fp
   82abc:	f000 ff15 	bl	838ea <__mcmp>
   82ac0:	2800      	cmp	r0, #0
   82ac2:	dc0e      	bgt.n	82ae2 <_dtoa_r+0x8e4>
   82ac4:	e003      	b.n	82ace <_dtoa_r+0x8d0>
   82ac6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   82ac8:	e000      	b.n	82acc <_dtoa_r+0x8ce>
   82aca:	2500      	movs	r5, #0
   82acc:	462c      	mov	r4, r5
   82ace:	9f25      	ldr	r7, [sp, #148]	; 0x94
   82ad0:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   82ad4:	ea6f 0907 	mvn.w	r9, r7
   82ad8:	e00a      	b.n	82af0 <_dtoa_r+0x8f2>
   82ada:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   82adc:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   82ae0:	462c      	mov	r4, r5
   82ae2:	9f09      	ldr	r7, [sp, #36]	; 0x24
   82ae4:	2331      	movs	r3, #49	; 0x31
   82ae6:	f107 0801 	add.w	r8, r7, #1
   82aea:	703b      	strb	r3, [r7, #0]
   82aec:	f109 0901 	add.w	r9, r9, #1
   82af0:	4627      	mov	r7, r4
   82af2:	2400      	movs	r4, #0
   82af4:	e107      	b.n	82d06 <_dtoa_r+0xb08>
   82af6:	980f      	ldr	r0, [sp, #60]	; 0x3c
   82af8:	2800      	cmp	r0, #0
   82afa:	f000 80bb 	beq.w	82c74 <_dtoa_r+0xa76>
   82afe:	2e00      	cmp	r6, #0
   82b00:	dd05      	ble.n	82b0e <_dtoa_r+0x910>
   82b02:	4621      	mov	r1, r4
   82b04:	4650      	mov	r0, sl
   82b06:	4632      	mov	r2, r6
   82b08:	f000 fe9c 	bl	83844 <__lshift>
   82b0c:	4604      	mov	r4, r0
   82b0e:	b19f      	cbz	r7, 82b38 <_dtoa_r+0x93a>
   82b10:	6861      	ldr	r1, [r4, #4]
   82b12:	4650      	mov	r0, sl
   82b14:	f000 fcbe 	bl	83494 <_Balloc>
   82b18:	6922      	ldr	r2, [r4, #16]
   82b1a:	4606      	mov	r6, r0
   82b1c:	3202      	adds	r2, #2
   82b1e:	f104 010c 	add.w	r1, r4, #12
   82b22:	0092      	lsls	r2, r2, #2
   82b24:	300c      	adds	r0, #12
   82b26:	f000 fc8f 	bl	83448 <memcpy>
   82b2a:	4650      	mov	r0, sl
   82b2c:	4631      	mov	r1, r6
   82b2e:	2201      	movs	r2, #1
   82b30:	f000 fe88 	bl	83844 <__lshift>
   82b34:	4607      	mov	r7, r0
   82b36:	e000      	b.n	82b3a <_dtoa_r+0x93c>
   82b38:	4627      	mov	r7, r4
   82b3a:	9e09      	ldr	r6, [sp, #36]	; 0x24
   82b3c:	4629      	mov	r1, r5
   82b3e:	4658      	mov	r0, fp
   82b40:	f7ff face 	bl	820e0 <quorem>
   82b44:	4621      	mov	r1, r4
   82b46:	f100 0c30 	add.w	ip, r0, #48	; 0x30
   82b4a:	4680      	mov	r8, r0
   82b4c:	4658      	mov	r0, fp
   82b4e:	f8cd c008 	str.w	ip, [sp, #8]
   82b52:	f000 feca 	bl	838ea <__mcmp>
   82b56:	463a      	mov	r2, r7
   82b58:	9008      	str	r0, [sp, #32]
   82b5a:	4629      	mov	r1, r5
   82b5c:	4650      	mov	r0, sl
   82b5e:	f000 fee1 	bl	83924 <__mdiff>
   82b62:	68c3      	ldr	r3, [r0, #12]
   82b64:	4602      	mov	r2, r0
   82b66:	f8dd c008 	ldr.w	ip, [sp, #8]
   82b6a:	b94b      	cbnz	r3, 82b80 <_dtoa_r+0x982>
   82b6c:	4611      	mov	r1, r2
   82b6e:	4658      	mov	r0, fp
   82b70:	9203      	str	r2, [sp, #12]
   82b72:	f000 feba 	bl	838ea <__mcmp>
   82b76:	9a03      	ldr	r2, [sp, #12]
   82b78:	4603      	mov	r3, r0
   82b7a:	f8dd c008 	ldr.w	ip, [sp, #8]
   82b7e:	e000      	b.n	82b82 <_dtoa_r+0x984>
   82b80:	2301      	movs	r3, #1
   82b82:	4650      	mov	r0, sl
   82b84:	4611      	mov	r1, r2
   82b86:	9303      	str	r3, [sp, #12]
   82b88:	f8cd c008 	str.w	ip, [sp, #8]
   82b8c:	f000 fca8 	bl	834e0 <_Bfree>
   82b90:	9b03      	ldr	r3, [sp, #12]
   82b92:	f8dd c008 	ldr.w	ip, [sp, #8]
   82b96:	b963      	cbnz	r3, 82bb2 <_dtoa_r+0x9b4>
   82b98:	9924      	ldr	r1, [sp, #144]	; 0x90
   82b9a:	b951      	cbnz	r1, 82bb2 <_dtoa_r+0x9b4>
   82b9c:	9804      	ldr	r0, [sp, #16]
   82b9e:	f000 0201 	and.w	r2, r0, #1
   82ba2:	b932      	cbnz	r2, 82bb2 <_dtoa_r+0x9b4>
   82ba4:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   82ba8:	d035      	beq.n	82c16 <_dtoa_r+0xa18>
   82baa:	9b08      	ldr	r3, [sp, #32]
   82bac:	2b00      	cmp	r3, #0
   82bae:	dc24      	bgt.n	82bfa <_dtoa_r+0x9fc>
   82bb0:	e025      	b.n	82bfe <_dtoa_r+0xa00>
   82bb2:	9808      	ldr	r0, [sp, #32]
   82bb4:	2800      	cmp	r0, #0
   82bb6:	da02      	bge.n	82bbe <_dtoa_r+0x9c0>
   82bb8:	2b00      	cmp	r3, #0
   82bba:	dc08      	bgt.n	82bce <_dtoa_r+0x9d0>
   82bbc:	e01f      	b.n	82bfe <_dtoa_r+0xa00>
   82bbe:	d123      	bne.n	82c08 <_dtoa_r+0xa0a>
   82bc0:	9924      	ldr	r1, [sp, #144]	; 0x90
   82bc2:	bb09      	cbnz	r1, 82c08 <_dtoa_r+0xa0a>
   82bc4:	9804      	ldr	r0, [sp, #16]
   82bc6:	f000 0201 	and.w	r2, r0, #1
   82bca:	b9ea      	cbnz	r2, 82c08 <_dtoa_r+0xa0a>
   82bcc:	e7f4      	b.n	82bb8 <_dtoa_r+0x9ba>
   82bce:	4659      	mov	r1, fp
   82bd0:	2201      	movs	r2, #1
   82bd2:	4650      	mov	r0, sl
   82bd4:	f8cd c008 	str.w	ip, [sp, #8]
   82bd8:	f000 fe34 	bl	83844 <__lshift>
   82bdc:	4629      	mov	r1, r5
   82bde:	4683      	mov	fp, r0
   82be0:	f000 fe83 	bl	838ea <__mcmp>
   82be4:	2800      	cmp	r0, #0
   82be6:	f8dd c008 	ldr.w	ip, [sp, #8]
   82bea:	dc03      	bgt.n	82bf4 <_dtoa_r+0x9f6>
   82bec:	d107      	bne.n	82bfe <_dtoa_r+0xa00>
   82bee:	f01c 0f01 	tst.w	ip, #1
   82bf2:	d004      	beq.n	82bfe <_dtoa_r+0xa00>
   82bf4:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   82bf8:	d00d      	beq.n	82c16 <_dtoa_r+0xa18>
   82bfa:	f108 0c31 	add.w	ip, r8, #49	; 0x31
   82bfe:	f106 0801 	add.w	r8, r6, #1
   82c02:	f886 c000 	strb.w	ip, [r6]
   82c06:	e07e      	b.n	82d06 <_dtoa_r+0xb08>
   82c08:	2b00      	cmp	r3, #0
   82c0a:	f106 0801 	add.w	r8, r6, #1
   82c0e:	dd09      	ble.n	82c24 <_dtoa_r+0xa26>
   82c10:	f1bc 0f39 	cmp.w	ip, #57	; 0x39
   82c14:	d103      	bne.n	82c1e <_dtoa_r+0xa20>
   82c16:	2339      	movs	r3, #57	; 0x39
   82c18:	7033      	strb	r3, [r6, #0]
   82c1a:	3601      	adds	r6, #1
   82c1c:	e05b      	b.n	82cd6 <_dtoa_r+0xad8>
   82c1e:	f10c 0301 	add.w	r3, ip, #1
   82c22:	e068      	b.n	82cf6 <_dtoa_r+0xaf8>
   82c24:	9909      	ldr	r1, [sp, #36]	; 0x24
   82c26:	9a07      	ldr	r2, [sp, #28]
   82c28:	ebc1 0308 	rsb	r3, r1, r8
   82c2c:	4646      	mov	r6, r8
   82c2e:	4293      	cmp	r3, r2
   82c30:	f806 cc01 	strb.w	ip, [r6, #-1]
   82c34:	d03c      	beq.n	82cb0 <_dtoa_r+0xab2>
   82c36:	4659      	mov	r1, fp
   82c38:	220a      	movs	r2, #10
   82c3a:	2300      	movs	r3, #0
   82c3c:	4650      	mov	r0, sl
   82c3e:	f000 fc58 	bl	834f2 <__multadd>
   82c42:	42bc      	cmp	r4, r7
   82c44:	4683      	mov	fp, r0
   82c46:	4621      	mov	r1, r4
   82c48:	4650      	mov	r0, sl
   82c4a:	f04f 020a 	mov.w	r2, #10
   82c4e:	f04f 0300 	mov.w	r3, #0
   82c52:	d104      	bne.n	82c5e <_dtoa_r+0xa60>
   82c54:	f000 fc4d 	bl	834f2 <__multadd>
   82c58:	4604      	mov	r4, r0
   82c5a:	4607      	mov	r7, r0
   82c5c:	e76e      	b.n	82b3c <_dtoa_r+0x93e>
   82c5e:	f000 fc48 	bl	834f2 <__multadd>
   82c62:	4639      	mov	r1, r7
   82c64:	4604      	mov	r4, r0
   82c66:	220a      	movs	r2, #10
   82c68:	4650      	mov	r0, sl
   82c6a:	2300      	movs	r3, #0
   82c6c:	f000 fc41 	bl	834f2 <__multadd>
   82c70:	4607      	mov	r7, r0
   82c72:	e763      	b.n	82b3c <_dtoa_r+0x93e>
   82c74:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
   82c76:	4658      	mov	r0, fp
   82c78:	4629      	mov	r1, r5
   82c7a:	f7ff fa31 	bl	820e0 <quorem>
   82c7e:	9f09      	ldr	r7, [sp, #36]	; 0x24
   82c80:	f100 0c30 	add.w	ip, r0, #48	; 0x30
   82c84:	f807 c006 	strb.w	ip, [r7, r6]
   82c88:	9f07      	ldr	r7, [sp, #28]
   82c8a:	3601      	adds	r6, #1
   82c8c:	42be      	cmp	r6, r7
   82c8e:	db07      	blt.n	82ca0 <_dtoa_r+0xaa2>
   82c90:	9e09      	ldr	r6, [sp, #36]	; 0x24
   82c92:	2f01      	cmp	r7, #1
   82c94:	bfac      	ite	ge
   82c96:	19f6      	addge	r6, r6, r7
   82c98:	3601      	addlt	r6, #1
   82c9a:	4627      	mov	r7, r4
   82c9c:	2400      	movs	r4, #0
   82c9e:	e007      	b.n	82cb0 <_dtoa_r+0xab2>
   82ca0:	4659      	mov	r1, fp
   82ca2:	4650      	mov	r0, sl
   82ca4:	220a      	movs	r2, #10
   82ca6:	2300      	movs	r3, #0
   82ca8:	f000 fc23 	bl	834f2 <__multadd>
   82cac:	4683      	mov	fp, r0
   82cae:	e7e2      	b.n	82c76 <_dtoa_r+0xa78>
   82cb0:	4659      	mov	r1, fp
   82cb2:	2201      	movs	r2, #1
   82cb4:	4650      	mov	r0, sl
   82cb6:	f8cd c008 	str.w	ip, [sp, #8]
   82cba:	f000 fdc3 	bl	83844 <__lshift>
   82cbe:	4629      	mov	r1, r5
   82cc0:	4683      	mov	fp, r0
   82cc2:	f000 fe12 	bl	838ea <__mcmp>
   82cc6:	2800      	cmp	r0, #0
   82cc8:	f8dd c008 	ldr.w	ip, [sp, #8]
   82ccc:	dc03      	bgt.n	82cd6 <_dtoa_r+0xad8>
   82cce:	d114      	bne.n	82cfa <_dtoa_r+0xafc>
   82cd0:	f01c 0f01 	tst.w	ip, #1
   82cd4:	d011      	beq.n	82cfa <_dtoa_r+0xafc>
   82cd6:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   82cda:	46b0      	mov	r8, r6
   82cdc:	2b39      	cmp	r3, #57	; 0x39
   82cde:	f106 36ff 	add.w	r6, r6, #4294967295
   82ce2:	d107      	bne.n	82cf4 <_dtoa_r+0xaf6>
   82ce4:	9809      	ldr	r0, [sp, #36]	; 0x24
   82ce6:	42b0      	cmp	r0, r6
   82ce8:	d1f5      	bne.n	82cd6 <_dtoa_r+0xad8>
   82cea:	2331      	movs	r3, #49	; 0x31
   82cec:	f109 0901 	add.w	r9, r9, #1
   82cf0:	7003      	strb	r3, [r0, #0]
   82cf2:	e008      	b.n	82d06 <_dtoa_r+0xb08>
   82cf4:	3301      	adds	r3, #1
   82cf6:	7033      	strb	r3, [r6, #0]
   82cf8:	e005      	b.n	82d06 <_dtoa_r+0xb08>
   82cfa:	46b0      	mov	r8, r6
   82cfc:	f818 3c01 	ldrb.w	r3, [r8, #-1]
   82d00:	3e01      	subs	r6, #1
   82d02:	2b30      	cmp	r3, #48	; 0x30
   82d04:	d0f9      	beq.n	82cfa <_dtoa_r+0xafc>
   82d06:	4650      	mov	r0, sl
   82d08:	4629      	mov	r1, r5
   82d0a:	f000 fbe9 	bl	834e0 <_Bfree>
   82d0e:	b16f      	cbz	r7, 82d2c <_dtoa_r+0xb2e>
   82d10:	b12c      	cbz	r4, 82d1e <_dtoa_r+0xb20>
   82d12:	42bc      	cmp	r4, r7
   82d14:	d003      	beq.n	82d1e <_dtoa_r+0xb20>
   82d16:	4650      	mov	r0, sl
   82d18:	4621      	mov	r1, r4
   82d1a:	f000 fbe1 	bl	834e0 <_Bfree>
   82d1e:	4650      	mov	r0, sl
   82d20:	4639      	mov	r1, r7
   82d22:	f000 fbdd 	bl	834e0 <_Bfree>
   82d26:	e001      	b.n	82d2c <_dtoa_r+0xb2e>
   82d28:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   82d2c:	4650      	mov	r0, sl
   82d2e:	4659      	mov	r1, fp
   82d30:	f000 fbd6 	bl	834e0 <_Bfree>
   82d34:	2300      	movs	r3, #0
   82d36:	9f26      	ldr	r7, [sp, #152]	; 0x98
   82d38:	f888 3000 	strb.w	r3, [r8]
   82d3c:	f109 0301 	add.w	r3, r9, #1
   82d40:	603b      	str	r3, [r7, #0]
   82d42:	9f28      	ldr	r7, [sp, #160]	; 0xa0
   82d44:	b127      	cbz	r7, 82d50 <_dtoa_r+0xb52>
   82d46:	f8c7 8000 	str.w	r8, [r7]
   82d4a:	e001      	b.n	82d50 <_dtoa_r+0xb52>
   82d4c:	4802      	ldr	r0, [pc, #8]	; (82d58 <_dtoa_r+0xb5a>)
   82d4e:	e000      	b.n	82d52 <_dtoa_r+0xb54>
   82d50:	9809      	ldr	r0, [sp, #36]	; 0x24
   82d52:	b01b      	add	sp, #108	; 0x6c
   82d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82d58:	00085948 	.word	0x00085948
   82d5c:	f3af 8000 	nop.w

00082d60 <__libc_fini_array>:
   82d60:	b538      	push	{r3, r4, r5, lr}
   82d62:	4d08      	ldr	r5, [pc, #32]	; (82d84 <__libc_fini_array+0x24>)
   82d64:	4c08      	ldr	r4, [pc, #32]	; (82d88 <__libc_fini_array+0x28>)
   82d66:	1b64      	subs	r4, r4, r5
   82d68:	10a4      	asrs	r4, r4, #2
   82d6a:	eb05 0584 	add.w	r5, r5, r4, lsl #2
   82d6e:	b124      	cbz	r4, 82d7a <__libc_fini_array+0x1a>
   82d70:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   82d74:	3c01      	subs	r4, #1
   82d76:	4798      	blx	r3
   82d78:	e7f9      	b.n	82d6e <__libc_fini_array+0xe>
   82d7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   82d7e:	f002 be9d 	b.w	85abc <_fini>
   82d82:	bf00      	nop
   82d84:	00085ac8 	.word	0x00085ac8
   82d88:	00085acc 	.word	0x00085acc

00082d8c <_malloc_trim_r>:
   82d8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82d8e:	4d23      	ldr	r5, [pc, #140]	; (82e1c <_malloc_trim_r+0x90>)
   82d90:	460e      	mov	r6, r1
   82d92:	4604      	mov	r4, r0
   82d94:	f000 fb7c 	bl	83490 <__malloc_lock>
   82d98:	68ab      	ldr	r3, [r5, #8]
   82d9a:	685f      	ldr	r7, [r3, #4]
   82d9c:	f027 0703 	bic.w	r7, r7, #3
   82da0:	1bbe      	subs	r6, r7, r6
   82da2:	f606 76ef 	addw	r6, r6, #4079	; 0xfef
   82da6:	f426 667f 	bic.w	r6, r6, #4080	; 0xff0
   82daa:	f026 060f 	bic.w	r6, r6, #15
   82dae:	f5a6 5680 	sub.w	r6, r6, #4096	; 0x1000
   82db2:	f5b6 5f80 	cmp.w	r6, #4096	; 0x1000
   82db6:	da04      	bge.n	82dc2 <_malloc_trim_r+0x36>
   82db8:	4620      	mov	r0, r4
   82dba:	f000 fb6a 	bl	83492 <__malloc_unlock>
   82dbe:	2000      	movs	r0, #0
   82dc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82dc2:	4620      	mov	r0, r4
   82dc4:	2100      	movs	r1, #0
   82dc6:	f001 f91b 	bl	84000 <_sbrk_r>
   82dca:	68ab      	ldr	r3, [r5, #8]
   82dcc:	443b      	add	r3, r7
   82dce:	4298      	cmp	r0, r3
   82dd0:	d1f2      	bne.n	82db8 <_malloc_trim_r+0x2c>
   82dd2:	4620      	mov	r0, r4
   82dd4:	4271      	negs	r1, r6
   82dd6:	f001 f913 	bl	84000 <_sbrk_r>
   82dda:	3001      	adds	r0, #1
   82ddc:	d110      	bne.n	82e00 <_malloc_trim_r+0x74>
   82dde:	4620      	mov	r0, r4
   82de0:	2100      	movs	r1, #0
   82de2:	f001 f90d 	bl	84000 <_sbrk_r>
   82de6:	68ab      	ldr	r3, [r5, #8]
   82de8:	1ac2      	subs	r2, r0, r3
   82dea:	2a0f      	cmp	r2, #15
   82dec:	dde4      	ble.n	82db8 <_malloc_trim_r+0x2c>
   82dee:	490c      	ldr	r1, [pc, #48]	; (82e20 <_malloc_trim_r+0x94>)
   82df0:	f042 0201 	orr.w	r2, r2, #1
   82df4:	6809      	ldr	r1, [r1, #0]
   82df6:	605a      	str	r2, [r3, #4]
   82df8:	1a40      	subs	r0, r0, r1
   82dfa:	490a      	ldr	r1, [pc, #40]	; (82e24 <_malloc_trim_r+0x98>)
   82dfc:	6008      	str	r0, [r1, #0]
   82dfe:	e7db      	b.n	82db8 <_malloc_trim_r+0x2c>
   82e00:	68ab      	ldr	r3, [r5, #8]
   82e02:	1bbf      	subs	r7, r7, r6
   82e04:	f047 0701 	orr.w	r7, r7, #1
   82e08:	605f      	str	r7, [r3, #4]
   82e0a:	4b06      	ldr	r3, [pc, #24]	; (82e24 <_malloc_trim_r+0x98>)
   82e0c:	4620      	mov	r0, r4
   82e0e:	681a      	ldr	r2, [r3, #0]
   82e10:	1b96      	subs	r6, r2, r6
   82e12:	601e      	str	r6, [r3, #0]
   82e14:	f000 fb3d 	bl	83492 <__malloc_unlock>
   82e18:	2001      	movs	r0, #1
   82e1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82e1c:	200704b4 	.word	0x200704b4
   82e20:	200708bc 	.word	0x200708bc
   82e24:	20073070 	.word	0x20073070

00082e28 <_free_r>:
   82e28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   82e2a:	4606      	mov	r6, r0
   82e2c:	460d      	mov	r5, r1
   82e2e:	2900      	cmp	r1, #0
   82e30:	f000 80a9 	beq.w	82f86 <_free_r+0x15e>
   82e34:	f000 fb2c 	bl	83490 <__malloc_lock>
   82e38:	f855 cc04 	ldr.w	ip, [r5, #-4]
   82e3c:	4c52      	ldr	r4, [pc, #328]	; (82f88 <_free_r+0x160>)
   82e3e:	f1a5 0308 	sub.w	r3, r5, #8
   82e42:	f02c 0201 	bic.w	r2, ip, #1
   82e46:	1898      	adds	r0, r3, r2
   82e48:	68a1      	ldr	r1, [r4, #8]
   82e4a:	6847      	ldr	r7, [r0, #4]
   82e4c:	4288      	cmp	r0, r1
   82e4e:	f027 0703 	bic.w	r7, r7, #3
   82e52:	f00c 0101 	and.w	r1, ip, #1
   82e56:	d11b      	bne.n	82e90 <_free_r+0x68>
   82e58:	443a      	add	r2, r7
   82e5a:	b939      	cbnz	r1, 82e6c <_free_r+0x44>
   82e5c:	f855 1c08 	ldr.w	r1, [r5, #-8]
   82e60:	1a5b      	subs	r3, r3, r1
   82e62:	6898      	ldr	r0, [r3, #8]
   82e64:	440a      	add	r2, r1
   82e66:	68d9      	ldr	r1, [r3, #12]
   82e68:	60c1      	str	r1, [r0, #12]
   82e6a:	6088      	str	r0, [r1, #8]
   82e6c:	f042 0101 	orr.w	r1, r2, #1
   82e70:	6059      	str	r1, [r3, #4]
   82e72:	60a3      	str	r3, [r4, #8]
   82e74:	4b45      	ldr	r3, [pc, #276]	; (82f8c <_free_r+0x164>)
   82e76:	681b      	ldr	r3, [r3, #0]
   82e78:	429a      	cmp	r2, r3
   82e7a:	d304      	bcc.n	82e86 <_free_r+0x5e>
   82e7c:	4b44      	ldr	r3, [pc, #272]	; (82f90 <_free_r+0x168>)
   82e7e:	4630      	mov	r0, r6
   82e80:	6819      	ldr	r1, [r3, #0]
   82e82:	f7ff ff83 	bl	82d8c <_malloc_trim_r>
   82e86:	4630      	mov	r0, r6
   82e88:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   82e8c:	f000 bb01 	b.w	83492 <__malloc_unlock>
   82e90:	6047      	str	r7, [r0, #4]
   82e92:	b979      	cbnz	r1, 82eb4 <_free_r+0x8c>
   82e94:	f855 5c08 	ldr.w	r5, [r5, #-8]
   82e98:	f104 0c08 	add.w	ip, r4, #8
   82e9c:	1b5b      	subs	r3, r3, r5
   82e9e:	442a      	add	r2, r5
   82ea0:	689d      	ldr	r5, [r3, #8]
   82ea2:	4565      	cmp	r5, ip
   82ea4:	d008      	beq.n	82eb8 <_free_r+0x90>
   82ea6:	f8d3 c00c 	ldr.w	ip, [r3, #12]
   82eaa:	f8c5 c00c 	str.w	ip, [r5, #12]
   82eae:	f8cc 5008 	str.w	r5, [ip, #8]
   82eb2:	e002      	b.n	82eba <_free_r+0x92>
   82eb4:	2100      	movs	r1, #0
   82eb6:	e000      	b.n	82eba <_free_r+0x92>
   82eb8:	2101      	movs	r1, #1
   82eba:	19c5      	adds	r5, r0, r7
   82ebc:	686d      	ldr	r5, [r5, #4]
   82ebe:	07ed      	lsls	r5, r5, #31
   82ec0:	d40e      	bmi.n	82ee0 <_free_r+0xb8>
   82ec2:	443a      	add	r2, r7
   82ec4:	6885      	ldr	r5, [r0, #8]
   82ec6:	b941      	cbnz	r1, 82eda <_free_r+0xb2>
   82ec8:	4f32      	ldr	r7, [pc, #200]	; (82f94 <_free_r+0x16c>)
   82eca:	42bd      	cmp	r5, r7
   82ecc:	d105      	bne.n	82eda <_free_r+0xb2>
   82ece:	6163      	str	r3, [r4, #20]
   82ed0:	6123      	str	r3, [r4, #16]
   82ed2:	2101      	movs	r1, #1
   82ed4:	60dd      	str	r5, [r3, #12]
   82ed6:	609d      	str	r5, [r3, #8]
   82ed8:	e002      	b.n	82ee0 <_free_r+0xb8>
   82eda:	68c0      	ldr	r0, [r0, #12]
   82edc:	60e8      	str	r0, [r5, #12]
   82ede:	6085      	str	r5, [r0, #8]
   82ee0:	f042 0001 	orr.w	r0, r2, #1
   82ee4:	6058      	str	r0, [r3, #4]
   82ee6:	509a      	str	r2, [r3, r2]
   82ee8:	2900      	cmp	r1, #0
   82eea:	d1cc      	bne.n	82e86 <_free_r+0x5e>
   82eec:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   82ef0:	d20e      	bcs.n	82f10 <_free_r+0xe8>
   82ef2:	08d2      	lsrs	r2, r2, #3
   82ef4:	1091      	asrs	r1, r2, #2
   82ef6:	2001      	movs	r0, #1
   82ef8:	4088      	lsls	r0, r1
   82efa:	6861      	ldr	r1, [r4, #4]
   82efc:	4301      	orrs	r1, r0
   82efe:	6061      	str	r1, [r4, #4]
   82f00:	eb04 04c2 	add.w	r4, r4, r2, lsl #3
   82f04:	68a2      	ldr	r2, [r4, #8]
   82f06:	60dc      	str	r4, [r3, #12]
   82f08:	609a      	str	r2, [r3, #8]
   82f0a:	60a3      	str	r3, [r4, #8]
   82f0c:	60d3      	str	r3, [r2, #12]
   82f0e:	e7ba      	b.n	82e86 <_free_r+0x5e>
   82f10:	0a51      	lsrs	r1, r2, #9
   82f12:	2904      	cmp	r1, #4
   82f14:	d802      	bhi.n	82f1c <_free_r+0xf4>
   82f16:	0991      	lsrs	r1, r2, #6
   82f18:	3138      	adds	r1, #56	; 0x38
   82f1a:	e015      	b.n	82f48 <_free_r+0x120>
   82f1c:	2914      	cmp	r1, #20
   82f1e:	d801      	bhi.n	82f24 <_free_r+0xfc>
   82f20:	315b      	adds	r1, #91	; 0x5b
   82f22:	e011      	b.n	82f48 <_free_r+0x120>
   82f24:	2954      	cmp	r1, #84	; 0x54
   82f26:	d802      	bhi.n	82f2e <_free_r+0x106>
   82f28:	0b11      	lsrs	r1, r2, #12
   82f2a:	316e      	adds	r1, #110	; 0x6e
   82f2c:	e00c      	b.n	82f48 <_free_r+0x120>
   82f2e:	f5b1 7faa 	cmp.w	r1, #340	; 0x154
   82f32:	d802      	bhi.n	82f3a <_free_r+0x112>
   82f34:	0bd1      	lsrs	r1, r2, #15
   82f36:	3177      	adds	r1, #119	; 0x77
   82f38:	e006      	b.n	82f48 <_free_r+0x120>
   82f3a:	f240 5054 	movw	r0, #1364	; 0x554
   82f3e:	4281      	cmp	r1, r0
   82f40:	bf9a      	itte	ls
   82f42:	0c91      	lsrls	r1, r2, #18
   82f44:	317c      	addls	r1, #124	; 0x7c
   82f46:	217e      	movhi	r1, #126	; 0x7e
   82f48:	eb04 04c1 	add.w	r4, r4, r1, lsl #3
   82f4c:	68a5      	ldr	r5, [r4, #8]
   82f4e:	480e      	ldr	r0, [pc, #56]	; (82f88 <_free_r+0x160>)
   82f50:	42a5      	cmp	r5, r4
   82f52:	d001      	beq.n	82f58 <_free_r+0x130>
   82f54:	4629      	mov	r1, r5
   82f56:	e00b      	b.n	82f70 <_free_r+0x148>
   82f58:	2201      	movs	r2, #1
   82f5a:	1089      	asrs	r1, r1, #2
   82f5c:	fa02 f101 	lsl.w	r1, r2, r1
   82f60:	6842      	ldr	r2, [r0, #4]
   82f62:	430a      	orrs	r2, r1
   82f64:	6042      	str	r2, [r0, #4]
   82f66:	4629      	mov	r1, r5
   82f68:	e008      	b.n	82f7c <_free_r+0x154>
   82f6a:	6889      	ldr	r1, [r1, #8]
   82f6c:	42a1      	cmp	r1, r4
   82f6e:	d004      	beq.n	82f7a <_free_r+0x152>
   82f70:	6848      	ldr	r0, [r1, #4]
   82f72:	f020 0003 	bic.w	r0, r0, #3
   82f76:	4282      	cmp	r2, r0
   82f78:	d3f7      	bcc.n	82f6a <_free_r+0x142>
   82f7a:	68cd      	ldr	r5, [r1, #12]
   82f7c:	60dd      	str	r5, [r3, #12]
   82f7e:	6099      	str	r1, [r3, #8]
   82f80:	60ab      	str	r3, [r5, #8]
   82f82:	60cb      	str	r3, [r1, #12]
   82f84:	e77f      	b.n	82e86 <_free_r+0x5e>
   82f86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82f88:	200704b4 	.word	0x200704b4
   82f8c:	200708c0 	.word	0x200708c0
   82f90:	2007306c 	.word	0x2007306c
   82f94:	200704bc 	.word	0x200704bc

00082f98 <_setlocale_r>:
   82f98:	b510      	push	{r4, lr}
   82f9a:	4614      	mov	r4, r2
   82f9c:	b90a      	cbnz	r2, 82fa2 <_setlocale_r+0xa>
   82f9e:	480b      	ldr	r0, [pc, #44]	; (82fcc <_setlocale_r+0x34>)
   82fa0:	bd10      	pop	{r4, pc}
   82fa2:	4610      	mov	r0, r2
   82fa4:	490a      	ldr	r1, [pc, #40]	; (82fd0 <_setlocale_r+0x38>)
   82fa6:	f001 f83b 	bl	84020 <strcmp>
   82faa:	2800      	cmp	r0, #0
   82fac:	d0f7      	beq.n	82f9e <_setlocale_r+0x6>
   82fae:	4620      	mov	r0, r4
   82fb0:	4906      	ldr	r1, [pc, #24]	; (82fcc <_setlocale_r+0x34>)
   82fb2:	f001 f835 	bl	84020 <strcmp>
   82fb6:	2800      	cmp	r0, #0
   82fb8:	d0f1      	beq.n	82f9e <_setlocale_r+0x6>
   82fba:	4620      	mov	r0, r4
   82fbc:	4905      	ldr	r1, [pc, #20]	; (82fd4 <_setlocale_r+0x3c>)
   82fbe:	f001 f82f 	bl	84020 <strcmp>
   82fc2:	2800      	cmp	r0, #0
   82fc4:	4801      	ldr	r0, [pc, #4]	; (82fcc <_setlocale_r+0x34>)
   82fc6:	bf18      	it	ne
   82fc8:	2000      	movne	r0, #0
   82fca:	bd10      	pop	{r4, pc}
   82fcc:	000858f4 	.word	0x000858f4
   82fd0:	00085957 	.word	0x00085957
   82fd4:	0008595e 	.word	0x0008595e

00082fd8 <__locale_charset>:
   82fd8:	4800      	ldr	r0, [pc, #0]	; (82fdc <__locale_charset+0x4>)
   82fda:	4770      	bx	lr
   82fdc:	20070438 	.word	0x20070438

00082fe0 <__locale_mb_cur_max>:
   82fe0:	4b01      	ldr	r3, [pc, #4]	; (82fe8 <__locale_mb_cur_max+0x8>)
   82fe2:	6a18      	ldr	r0, [r3, #32]
   82fe4:	4770      	bx	lr
   82fe6:	bf00      	nop
   82fe8:	20070438 	.word	0x20070438

00082fec <__locale_msgcharset>:
   82fec:	4800      	ldr	r0, [pc, #0]	; (82ff0 <__locale_msgcharset+0x4>)
   82fee:	4770      	bx	lr
   82ff0:	2007045c 	.word	0x2007045c

00082ff4 <__locale_cjk_lang>:
   82ff4:	2000      	movs	r0, #0
   82ff6:	4770      	bx	lr

00082ff8 <_localeconv_r>:
   82ff8:	4800      	ldr	r0, [pc, #0]	; (82ffc <_localeconv_r+0x4>)
   82ffa:	4770      	bx	lr
   82ffc:	2007047c 	.word	0x2007047c

00083000 <setlocale>:
   83000:	460a      	mov	r2, r1
   83002:	4903      	ldr	r1, [pc, #12]	; (83010 <setlocale+0x10>)
   83004:	4603      	mov	r3, r0
   83006:	6808      	ldr	r0, [r1, #0]
   83008:	4619      	mov	r1, r3
   8300a:	f7ff bfc5 	b.w	82f98 <_setlocale_r>
   8300e:	bf00      	nop
   83010:	20070008 	.word	0x20070008

00083014 <localeconv>:
   83014:	4800      	ldr	r0, [pc, #0]	; (83018 <localeconv+0x4>)
   83016:	4770      	bx	lr
   83018:	2007047c 	.word	0x2007047c

0008301c <_malloc_r>:
   8301c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83020:	f101 040b 	add.w	r4, r1, #11
   83024:	2c16      	cmp	r4, #22
   83026:	4607      	mov	r7, r0
   83028:	d903      	bls.n	83032 <_malloc_r+0x16>
   8302a:	f034 0407 	bics.w	r4, r4, #7
   8302e:	d501      	bpl.n	83034 <_malloc_r+0x18>
   83030:	e002      	b.n	83038 <_malloc_r+0x1c>
   83032:	2410      	movs	r4, #16
   83034:	428c      	cmp	r4, r1
   83036:	d202      	bcs.n	8303e <_malloc_r+0x22>
   83038:	230c      	movs	r3, #12
   8303a:	603b      	str	r3, [r7, #0]
   8303c:	e1de      	b.n	833fc <_malloc_r+0x3e0>
   8303e:	4638      	mov	r0, r7
   83040:	f000 fa26 	bl	83490 <__malloc_lock>
   83044:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
   83048:	4da3      	ldr	r5, [pc, #652]	; (832d8 <_malloc_r+0x2bc>)
   8304a:	d214      	bcs.n	83076 <_malloc_r+0x5a>
   8304c:	08e2      	lsrs	r2, r4, #3
   8304e:	eb05 03c2 	add.w	r3, r5, r2, lsl #3
   83052:	68de      	ldr	r6, [r3, #12]
   83054:	429e      	cmp	r6, r3
   83056:	d106      	bne.n	83066 <_malloc_r+0x4a>
   83058:	f106 0308 	add.w	r3, r6, #8
   8305c:	6976      	ldr	r6, [r6, #20]
   8305e:	429e      	cmp	r6, r3
   83060:	bf08      	it	eq
   83062:	3202      	addeq	r2, #2
   83064:	d043      	beq.n	830ee <_malloc_r+0xd2>
   83066:	6873      	ldr	r3, [r6, #4]
   83068:	68f2      	ldr	r2, [r6, #12]
   8306a:	68b1      	ldr	r1, [r6, #8]
   8306c:	f023 0303 	bic.w	r3, r3, #3
   83070:	60ca      	str	r2, [r1, #12]
   83072:	6091      	str	r1, [r2, #8]
   83074:	e05d      	b.n	83132 <_malloc_r+0x116>
   83076:	0a62      	lsrs	r2, r4, #9
   83078:	d01a      	beq.n	830b0 <_malloc_r+0x94>
   8307a:	2a04      	cmp	r2, #4
   8307c:	d802      	bhi.n	83084 <_malloc_r+0x68>
   8307e:	09a2      	lsrs	r2, r4, #6
   83080:	3238      	adds	r2, #56	; 0x38
   83082:	e018      	b.n	830b6 <_malloc_r+0x9a>
   83084:	2a14      	cmp	r2, #20
   83086:	d801      	bhi.n	8308c <_malloc_r+0x70>
   83088:	325b      	adds	r2, #91	; 0x5b
   8308a:	e014      	b.n	830b6 <_malloc_r+0x9a>
   8308c:	2a54      	cmp	r2, #84	; 0x54
   8308e:	d802      	bhi.n	83096 <_malloc_r+0x7a>
   83090:	0b22      	lsrs	r2, r4, #12
   83092:	326e      	adds	r2, #110	; 0x6e
   83094:	e00f      	b.n	830b6 <_malloc_r+0x9a>
   83096:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   8309a:	d802      	bhi.n	830a2 <_malloc_r+0x86>
   8309c:	0be2      	lsrs	r2, r4, #15
   8309e:	3277      	adds	r2, #119	; 0x77
   830a0:	e009      	b.n	830b6 <_malloc_r+0x9a>
   830a2:	f240 5354 	movw	r3, #1364	; 0x554
   830a6:	429a      	cmp	r2, r3
   830a8:	d804      	bhi.n	830b4 <_malloc_r+0x98>
   830aa:	0ca2      	lsrs	r2, r4, #18
   830ac:	327c      	adds	r2, #124	; 0x7c
   830ae:	e002      	b.n	830b6 <_malloc_r+0x9a>
   830b0:	223f      	movs	r2, #63	; 0x3f
   830b2:	e000      	b.n	830b6 <_malloc_r+0x9a>
   830b4:	227e      	movs	r2, #126	; 0x7e
   830b6:	eb05 03c2 	add.w	r3, r5, r2, lsl #3
   830ba:	68de      	ldr	r6, [r3, #12]
   830bc:	429e      	cmp	r6, r3
   830be:	d015      	beq.n	830ec <_malloc_r+0xd0>
   830c0:	6871      	ldr	r1, [r6, #4]
   830c2:	f021 0103 	bic.w	r1, r1, #3
   830c6:	1b08      	subs	r0, r1, r4
   830c8:	280f      	cmp	r0, #15
   830ca:	dd01      	ble.n	830d0 <_malloc_r+0xb4>
   830cc:	3a01      	subs	r2, #1
   830ce:	e00d      	b.n	830ec <_malloc_r+0xd0>
   830d0:	2800      	cmp	r0, #0
   830d2:	db09      	blt.n	830e8 <_malloc_r+0xcc>
   830d4:	68f3      	ldr	r3, [r6, #12]
   830d6:	68b2      	ldr	r2, [r6, #8]
   830d8:	60d3      	str	r3, [r2, #12]
   830da:	609a      	str	r2, [r3, #8]
   830dc:	1873      	adds	r3, r6, r1
   830de:	685a      	ldr	r2, [r3, #4]
   830e0:	f042 0201 	orr.w	r2, r2, #1
   830e4:	605a      	str	r2, [r3, #4]
   830e6:	e194      	b.n	83412 <_malloc_r+0x3f6>
   830e8:	68f6      	ldr	r6, [r6, #12]
   830ea:	e7e7      	b.n	830bc <_malloc_r+0xa0>
   830ec:	3201      	adds	r2, #1
   830ee:	497a      	ldr	r1, [pc, #488]	; (832d8 <_malloc_r+0x2bc>)
   830f0:	692e      	ldr	r6, [r5, #16]
   830f2:	f101 0008 	add.w	r0, r1, #8
   830f6:	4286      	cmp	r6, r0
   830f8:	4686      	mov	lr, r0
   830fa:	d06d      	beq.n	831d8 <_malloc_r+0x1bc>
   830fc:	6873      	ldr	r3, [r6, #4]
   830fe:	f023 0303 	bic.w	r3, r3, #3
   83102:	ebc4 0c03 	rsb	ip, r4, r3
   83106:	f1bc 0f0f 	cmp.w	ip, #15
   8310a:	dd0d      	ble.n	83128 <_malloc_r+0x10c>
   8310c:	1933      	adds	r3, r6, r4
   8310e:	f04c 0201 	orr.w	r2, ip, #1
   83112:	f044 0401 	orr.w	r4, r4, #1
   83116:	6074      	str	r4, [r6, #4]
   83118:	614b      	str	r3, [r1, #20]
   8311a:	610b      	str	r3, [r1, #16]
   8311c:	60d8      	str	r0, [r3, #12]
   8311e:	6098      	str	r0, [r3, #8]
   83120:	605a      	str	r2, [r3, #4]
   83122:	f843 c00c 	str.w	ip, [r3, ip]
   83126:	e174      	b.n	83412 <_malloc_r+0x3f6>
   83128:	f1bc 0f00 	cmp.w	ip, #0
   8312c:	6148      	str	r0, [r1, #20]
   8312e:	6108      	str	r0, [r1, #16]
   83130:	db01      	blt.n	83136 <_malloc_r+0x11a>
   83132:	4433      	add	r3, r6
   83134:	e7d3      	b.n	830de <_malloc_r+0xc2>
   83136:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   8313a:	d211      	bcs.n	83160 <_malloc_r+0x144>
   8313c:	08db      	lsrs	r3, r3, #3
   8313e:	1098      	asrs	r0, r3, #2
   83140:	f04f 0c01 	mov.w	ip, #1
   83144:	fa0c fc00 	lsl.w	ip, ip, r0
   83148:	6848      	ldr	r0, [r1, #4]
   8314a:	ea4c 0000 	orr.w	r0, ip, r0
   8314e:	6048      	str	r0, [r1, #4]
   83150:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
   83154:	688b      	ldr	r3, [r1, #8]
   83156:	60f1      	str	r1, [r6, #12]
   83158:	60b3      	str	r3, [r6, #8]
   8315a:	608e      	str	r6, [r1, #8]
   8315c:	60de      	str	r6, [r3, #12]
   8315e:	e03b      	b.n	831d8 <_malloc_r+0x1bc>
   83160:	0a58      	lsrs	r0, r3, #9
   83162:	2804      	cmp	r0, #4
   83164:	d802      	bhi.n	8316c <_malloc_r+0x150>
   83166:	0998      	lsrs	r0, r3, #6
   83168:	3038      	adds	r0, #56	; 0x38
   8316a:	e015      	b.n	83198 <_malloc_r+0x17c>
   8316c:	2814      	cmp	r0, #20
   8316e:	d801      	bhi.n	83174 <_malloc_r+0x158>
   83170:	305b      	adds	r0, #91	; 0x5b
   83172:	e011      	b.n	83198 <_malloc_r+0x17c>
   83174:	2854      	cmp	r0, #84	; 0x54
   83176:	d802      	bhi.n	8317e <_malloc_r+0x162>
   83178:	0b18      	lsrs	r0, r3, #12
   8317a:	306e      	adds	r0, #110	; 0x6e
   8317c:	e00c      	b.n	83198 <_malloc_r+0x17c>
   8317e:	f5b0 7faa 	cmp.w	r0, #340	; 0x154
   83182:	d802      	bhi.n	8318a <_malloc_r+0x16e>
   83184:	0bd8      	lsrs	r0, r3, #15
   83186:	3077      	adds	r0, #119	; 0x77
   83188:	e006      	b.n	83198 <_malloc_r+0x17c>
   8318a:	f240 5154 	movw	r1, #1364	; 0x554
   8318e:	4288      	cmp	r0, r1
   83190:	bf9a      	itte	ls
   83192:	0c98      	lsrls	r0, r3, #18
   83194:	307c      	addls	r0, #124	; 0x7c
   83196:	207e      	movhi	r0, #126	; 0x7e
   83198:	eb05 0cc0 	add.w	ip, r5, r0, lsl #3
   8319c:	f8dc 1008 	ldr.w	r1, [ip, #8]
   831a0:	f8df 8134 	ldr.w	r8, [pc, #308]	; 832d8 <_malloc_r+0x2bc>
   831a4:	4561      	cmp	r1, ip
   831a6:	d10d      	bne.n	831c4 <_malloc_r+0x1a8>
   831a8:	2301      	movs	r3, #1
   831aa:	1080      	asrs	r0, r0, #2
   831ac:	fa03 f000 	lsl.w	r0, r3, r0
   831b0:	f8d8 3004 	ldr.w	r3, [r8, #4]
   831b4:	4303      	orrs	r3, r0
   831b6:	f8c8 3004 	str.w	r3, [r8, #4]
   831ba:	460b      	mov	r3, r1
   831bc:	e008      	b.n	831d0 <_malloc_r+0x1b4>
   831be:	6889      	ldr	r1, [r1, #8]
   831c0:	4561      	cmp	r1, ip
   831c2:	d004      	beq.n	831ce <_malloc_r+0x1b2>
   831c4:	6848      	ldr	r0, [r1, #4]
   831c6:	f020 0003 	bic.w	r0, r0, #3
   831ca:	4283      	cmp	r3, r0
   831cc:	d3f7      	bcc.n	831be <_malloc_r+0x1a2>
   831ce:	68cb      	ldr	r3, [r1, #12]
   831d0:	60f3      	str	r3, [r6, #12]
   831d2:	60b1      	str	r1, [r6, #8]
   831d4:	609e      	str	r6, [r3, #8]
   831d6:	60ce      	str	r6, [r1, #12]
   831d8:	2101      	movs	r1, #1
   831da:	1093      	asrs	r3, r2, #2
   831dc:	fa01 f303 	lsl.w	r3, r1, r3
   831e0:	6869      	ldr	r1, [r5, #4]
   831e2:	428b      	cmp	r3, r1
   831e4:	d85d      	bhi.n	832a2 <_malloc_r+0x286>
   831e6:	420b      	tst	r3, r1
   831e8:	d106      	bne.n	831f8 <_malloc_r+0x1dc>
   831ea:	f022 0203 	bic.w	r2, r2, #3
   831ee:	005b      	lsls	r3, r3, #1
   831f0:	420b      	tst	r3, r1
   831f2:	f102 0204 	add.w	r2, r2, #4
   831f6:	d0fa      	beq.n	831ee <_malloc_r+0x1d2>
   831f8:	eb05 00c2 	add.w	r0, r5, r2, lsl #3
   831fc:	4680      	mov	r8, r0
   831fe:	4694      	mov	ip, r2
   83200:	f8d8 600c 	ldr.w	r6, [r8, #12]
   83204:	4546      	cmp	r6, r8
   83206:	d02d      	beq.n	83264 <_malloc_r+0x248>
   83208:	6871      	ldr	r1, [r6, #4]
   8320a:	f021 0903 	bic.w	r9, r1, #3
   8320e:	ebc4 0109 	rsb	r1, r4, r9
   83212:	290f      	cmp	r1, #15
   83214:	dd13      	ble.n	8323e <_malloc_r+0x222>
   83216:	1933      	adds	r3, r6, r4
   83218:	f044 0401 	orr.w	r4, r4, #1
   8321c:	68f2      	ldr	r2, [r6, #12]
   8321e:	6074      	str	r4, [r6, #4]
   83220:	f856 0f08 	ldr.w	r0, [r6, #8]!
   83224:	60c2      	str	r2, [r0, #12]
   83226:	6090      	str	r0, [r2, #8]
   83228:	f041 0201 	orr.w	r2, r1, #1
   8322c:	616b      	str	r3, [r5, #20]
   8322e:	612b      	str	r3, [r5, #16]
   83230:	f8c3 e00c 	str.w	lr, [r3, #12]
   83234:	f8c3 e008 	str.w	lr, [r3, #8]
   83238:	605a      	str	r2, [r3, #4]
   8323a:	5059      	str	r1, [r3, r1]
   8323c:	e00c      	b.n	83258 <_malloc_r+0x23c>
   8323e:	2900      	cmp	r1, #0
   83240:	db0e      	blt.n	83260 <_malloc_r+0x244>
   83242:	eb06 0109 	add.w	r1, r6, r9
   83246:	684b      	ldr	r3, [r1, #4]
   83248:	f043 0301 	orr.w	r3, r3, #1
   8324c:	604b      	str	r3, [r1, #4]
   8324e:	68f3      	ldr	r3, [r6, #12]
   83250:	f856 2f08 	ldr.w	r2, [r6, #8]!
   83254:	60d3      	str	r3, [r2, #12]
   83256:	609a      	str	r2, [r3, #8]
   83258:	4638      	mov	r0, r7
   8325a:	f000 f91a 	bl	83492 <__malloc_unlock>
   8325e:	e0dc      	b.n	8341a <_malloc_r+0x3fe>
   83260:	68f6      	ldr	r6, [r6, #12]
   83262:	e7cf      	b.n	83204 <_malloc_r+0x1e8>
   83264:	f10c 0c01 	add.w	ip, ip, #1
   83268:	f01c 0f03 	tst.w	ip, #3
   8326c:	f108 0808 	add.w	r8, r8, #8
   83270:	d1c6      	bne.n	83200 <_malloc_r+0x1e4>
   83272:	0791      	lsls	r1, r2, #30
   83274:	d104      	bne.n	83280 <_malloc_r+0x264>
   83276:	686a      	ldr	r2, [r5, #4]
   83278:	ea22 0203 	bic.w	r2, r2, r3
   8327c:	606a      	str	r2, [r5, #4]
   8327e:	e005      	b.n	8328c <_malloc_r+0x270>
   83280:	f1a0 0108 	sub.w	r1, r0, #8
   83284:	6800      	ldr	r0, [r0, #0]
   83286:	3a01      	subs	r2, #1
   83288:	4288      	cmp	r0, r1
   8328a:	d0f2      	beq.n	83272 <_malloc_r+0x256>
   8328c:	6869      	ldr	r1, [r5, #4]
   8328e:	005b      	lsls	r3, r3, #1
   83290:	428b      	cmp	r3, r1
   83292:	d806      	bhi.n	832a2 <_malloc_r+0x286>
   83294:	b12b      	cbz	r3, 832a2 <_malloc_r+0x286>
   83296:	4662      	mov	r2, ip
   83298:	420b      	tst	r3, r1
   8329a:	d1ad      	bne.n	831f8 <_malloc_r+0x1dc>
   8329c:	3204      	adds	r2, #4
   8329e:	005b      	lsls	r3, r3, #1
   832a0:	e7fa      	b.n	83298 <_malloc_r+0x27c>
   832a2:	f8d5 9008 	ldr.w	r9, [r5, #8]
   832a6:	f8d9 3004 	ldr.w	r3, [r9, #4]
   832aa:	f023 0b03 	bic.w	fp, r3, #3
   832ae:	45a3      	cmp	fp, r4
   832b0:	d304      	bcc.n	832bc <_malloc_r+0x2a0>
   832b2:	ebc4 030b 	rsb	r3, r4, fp
   832b6:	2b0f      	cmp	r3, #15
   832b8:	f300 80a2 	bgt.w	83400 <_malloc_r+0x3e4>
   832bc:	4907      	ldr	r1, [pc, #28]	; (832dc <_malloc_r+0x2c0>)
   832be:	eb09 030b 	add.w	r3, r9, fp
   832c2:	680a      	ldr	r2, [r1, #0]
   832c4:	4688      	mov	r8, r1
   832c6:	eb04 0a02 	add.w	sl, r4, r2
   832ca:	f8d5 2408 	ldr.w	r2, [r5, #1032]	; 0x408
   832ce:	3201      	adds	r2, #1
   832d0:	d106      	bne.n	832e0 <_malloc_r+0x2c4>
   832d2:	f10a 0a10 	add.w	sl, sl, #16
   832d6:	e00b      	b.n	832f0 <_malloc_r+0x2d4>
   832d8:	200704b4 	.word	0x200704b4
   832dc:	2007306c 	.word	0x2007306c
   832e0:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
   832e4:	f10a 0a0f 	add.w	sl, sl, #15
   832e8:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
   832ec:	f02a 0a0f 	bic.w	sl, sl, #15
   832f0:	4638      	mov	r0, r7
   832f2:	4651      	mov	r1, sl
   832f4:	9301      	str	r3, [sp, #4]
   832f6:	f000 fe83 	bl	84000 <_sbrk_r>
   832fa:	1c42      	adds	r2, r0, #1
   832fc:	4606      	mov	r6, r0
   832fe:	9b01      	ldr	r3, [sp, #4]
   83300:	d06f      	beq.n	833e2 <_malloc_r+0x3c6>
   83302:	4298      	cmp	r0, r3
   83304:	d201      	bcs.n	8330a <_malloc_r+0x2ee>
   83306:	45a9      	cmp	r9, r5
   83308:	d16b      	bne.n	833e2 <_malloc_r+0x3c6>
   8330a:	f8d8 2004 	ldr.w	r2, [r8, #4]
   8330e:	429e      	cmp	r6, r3
   83310:	4452      	add	r2, sl
   83312:	f8c8 2004 	str.w	r2, [r8, #4]
   83316:	d108      	bne.n	8332a <_malloc_r+0x30e>
   83318:	f3c6 010b 	ubfx	r1, r6, #0, #12
   8331c:	b929      	cbnz	r1, 8332a <_malloc_r+0x30e>
   8331e:	68ab      	ldr	r3, [r5, #8]
   83320:	44da      	add	sl, fp
   83322:	f04a 0201 	orr.w	r2, sl, #1
   83326:	605a      	str	r2, [r3, #4]
   83328:	e04d      	b.n	833c6 <_malloc_r+0x3aa>
   8332a:	f8d5 1408 	ldr.w	r1, [r5, #1032]	; 0x408
   8332e:	3101      	adds	r1, #1
   83330:	d103      	bne.n	8333a <_malloc_r+0x31e>
   83332:	4b3c      	ldr	r3, [pc, #240]	; (83424 <_malloc_r+0x408>)
   83334:	f8c3 6408 	str.w	r6, [r3, #1032]	; 0x408
   83338:	e003      	b.n	83342 <_malloc_r+0x326>
   8333a:	1af3      	subs	r3, r6, r3
   8333c:	441a      	add	r2, r3
   8333e:	f8c8 2004 	str.w	r2, [r8, #4]
   83342:	f016 0307 	ands.w	r3, r6, #7
   83346:	bf1c      	itt	ne
   83348:	f1c3 0308 	rsbne	r3, r3, #8
   8334c:	18f6      	addne	r6, r6, r3
   8334e:	44b2      	add	sl, r6
   83350:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   83354:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
   83358:	ebca 0a03 	rsb	sl, sl, r3
   8335c:	4651      	mov	r1, sl
   8335e:	4638      	mov	r0, r7
   83360:	f000 fe4e 	bl	84000 <_sbrk_r>
   83364:	1c43      	adds	r3, r0, #1
   83366:	bf04      	itt	eq
   83368:	4630      	moveq	r0, r6
   8336a:	f04f 0a00 	moveq.w	sl, #0
   8336e:	f8d8 3004 	ldr.w	r3, [r8, #4]
   83372:	1b80      	subs	r0, r0, r6
   83374:	4450      	add	r0, sl
   83376:	4453      	add	r3, sl
   83378:	f040 0001 	orr.w	r0, r0, #1
   8337c:	45a9      	cmp	r9, r5
   8337e:	60ae      	str	r6, [r5, #8]
   83380:	f8c8 3004 	str.w	r3, [r8, #4]
   83384:	6070      	str	r0, [r6, #4]
   83386:	d01e      	beq.n	833c6 <_malloc_r+0x3aa>
   83388:	f1bb 0f0f 	cmp.w	fp, #15
   8338c:	d802      	bhi.n	83394 <_malloc_r+0x378>
   8338e:	2301      	movs	r3, #1
   83390:	6073      	str	r3, [r6, #4]
   83392:	e026      	b.n	833e2 <_malloc_r+0x3c6>
   83394:	f8d9 3004 	ldr.w	r3, [r9, #4]
   83398:	f1ab 0b0c 	sub.w	fp, fp, #12
   8339c:	f02b 0b07 	bic.w	fp, fp, #7
   833a0:	f003 0301 	and.w	r3, r3, #1
   833a4:	ea4b 0303 	orr.w	r3, fp, r3
   833a8:	f8c9 3004 	str.w	r3, [r9, #4]
   833ac:	2205      	movs	r2, #5
   833ae:	eb09 030b 	add.w	r3, r9, fp
   833b2:	f1bb 0f0f 	cmp.w	fp, #15
   833b6:	605a      	str	r2, [r3, #4]
   833b8:	609a      	str	r2, [r3, #8]
   833ba:	d904      	bls.n	833c6 <_malloc_r+0x3aa>
   833bc:	4638      	mov	r0, r7
   833be:	f109 0108 	add.w	r1, r9, #8
   833c2:	f7ff fd31 	bl	82e28 <_free_r>
   833c6:	f8d8 3004 	ldr.w	r3, [r8, #4]
   833ca:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
   833ce:	4293      	cmp	r3, r2
   833d0:	bf84      	itt	hi
   833d2:	4a15      	ldrhi	r2, [pc, #84]	; (83428 <_malloc_r+0x40c>)
   833d4:	62d3      	strhi	r3, [r2, #44]	; 0x2c
   833d6:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
   833da:	4293      	cmp	r3, r2
   833dc:	bf84      	itt	hi
   833de:	4a12      	ldrhi	r2, [pc, #72]	; (83428 <_malloc_r+0x40c>)
   833e0:	6313      	strhi	r3, [r2, #48]	; 0x30
   833e2:	68ab      	ldr	r3, [r5, #8]
   833e4:	685a      	ldr	r2, [r3, #4]
   833e6:	f022 0203 	bic.w	r2, r2, #3
   833ea:	42a2      	cmp	r2, r4
   833ec:	ebc4 0302 	rsb	r3, r4, r2
   833f0:	d301      	bcc.n	833f6 <_malloc_r+0x3da>
   833f2:	2b0f      	cmp	r3, #15
   833f4:	dc04      	bgt.n	83400 <_malloc_r+0x3e4>
   833f6:	4638      	mov	r0, r7
   833f8:	f000 f84b 	bl	83492 <__malloc_unlock>
   833fc:	2600      	movs	r6, #0
   833fe:	e00c      	b.n	8341a <_malloc_r+0x3fe>
   83400:	68ae      	ldr	r6, [r5, #8]
   83402:	f044 0201 	orr.w	r2, r4, #1
   83406:	f043 0301 	orr.w	r3, r3, #1
   8340a:	4434      	add	r4, r6
   8340c:	6072      	str	r2, [r6, #4]
   8340e:	60ac      	str	r4, [r5, #8]
   83410:	6063      	str	r3, [r4, #4]
   83412:	4638      	mov	r0, r7
   83414:	f000 f83d 	bl	83492 <__malloc_unlock>
   83418:	3608      	adds	r6, #8
   8341a:	4630      	mov	r0, r6
   8341c:	b003      	add	sp, #12
   8341e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83422:	bf00      	nop
   83424:	200704b4 	.word	0x200704b4
   83428:	2007306c 	.word	0x2007306c

0008342c <memchr>:
   8342c:	b510      	push	{r4, lr}
   8342e:	b2c9      	uxtb	r1, r1
   83430:	4402      	add	r2, r0
   83432:	4290      	cmp	r0, r2
   83434:	4603      	mov	r3, r0
   83436:	d005      	beq.n	83444 <memchr+0x18>
   83438:	781c      	ldrb	r4, [r3, #0]
   8343a:	3001      	adds	r0, #1
   8343c:	428c      	cmp	r4, r1
   8343e:	d1f8      	bne.n	83432 <memchr+0x6>
   83440:	4618      	mov	r0, r3
   83442:	bd10      	pop	{r4, pc}
   83444:	2000      	movs	r0, #0
   83446:	bd10      	pop	{r4, pc}

00083448 <memcpy>:
   83448:	b510      	push	{r4, lr}
   8344a:	2300      	movs	r3, #0
   8344c:	4293      	cmp	r3, r2
   8344e:	d003      	beq.n	83458 <memcpy+0x10>
   83450:	5ccc      	ldrb	r4, [r1, r3]
   83452:	54c4      	strb	r4, [r0, r3]
   83454:	3301      	adds	r3, #1
   83456:	e7f9      	b.n	8344c <memcpy+0x4>
   83458:	bd10      	pop	{r4, pc}

0008345a <memmove>:
   8345a:	4281      	cmp	r1, r0
   8345c:	b570      	push	{r4, r5, r6, lr}
   8345e:	d301      	bcc.n	83464 <memmove+0xa>
   83460:	2300      	movs	r3, #0
   83462:	e00e      	b.n	83482 <memmove+0x28>
   83464:	188c      	adds	r4, r1, r2
   83466:	42a0      	cmp	r0, r4
   83468:	d2fa      	bcs.n	83460 <memmove+0x6>
   8346a:	1885      	adds	r5, r0, r2
   8346c:	4613      	mov	r3, r2
   8346e:	f113 33ff 	adds.w	r3, r3, #4294967295
   83472:	d305      	bcc.n	83480 <memmove+0x26>
   83474:	4251      	negs	r1, r2
   83476:	1866      	adds	r6, r4, r1
   83478:	5cf6      	ldrb	r6, [r6, r3]
   8347a:	4429      	add	r1, r5
   8347c:	54ce      	strb	r6, [r1, r3]
   8347e:	e7f6      	b.n	8346e <memmove+0x14>
   83480:	bd70      	pop	{r4, r5, r6, pc}
   83482:	4293      	cmp	r3, r2
   83484:	d003      	beq.n	8348e <memmove+0x34>
   83486:	5ccc      	ldrb	r4, [r1, r3]
   83488:	54c4      	strb	r4, [r0, r3]
   8348a:	3301      	adds	r3, #1
   8348c:	e7f9      	b.n	83482 <memmove+0x28>
   8348e:	bd70      	pop	{r4, r5, r6, pc}

00083490 <__malloc_lock>:
   83490:	4770      	bx	lr

00083492 <__malloc_unlock>:
   83492:	4770      	bx	lr

00083494 <_Balloc>:
   83494:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   83496:	b570      	push	{r4, r5, r6, lr}
   83498:	4605      	mov	r5, r0
   8349a:	460c      	mov	r4, r1
   8349c:	b13b      	cbz	r3, 834ae <_Balloc+0x1a>
   8349e:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   834a0:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
   834a4:	b160      	cbz	r0, 834c0 <_Balloc+0x2c>
   834a6:	6801      	ldr	r1, [r0, #0]
   834a8:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
   834ac:	e014      	b.n	834d8 <_Balloc+0x44>
   834ae:	2104      	movs	r1, #4
   834b0:	2221      	movs	r2, #33	; 0x21
   834b2:	f001 fa77 	bl	849a4 <_calloc_r>
   834b6:	64e8      	str	r0, [r5, #76]	; 0x4c
   834b8:	2800      	cmp	r0, #0
   834ba:	d1f0      	bne.n	8349e <_Balloc+0xa>
   834bc:	2000      	movs	r0, #0
   834be:	bd70      	pop	{r4, r5, r6, pc}
   834c0:	2101      	movs	r1, #1
   834c2:	fa01 f604 	lsl.w	r6, r1, r4
   834c6:	1d72      	adds	r2, r6, #5
   834c8:	4628      	mov	r0, r5
   834ca:	0092      	lsls	r2, r2, #2
   834cc:	f001 fa6a 	bl	849a4 <_calloc_r>
   834d0:	2800      	cmp	r0, #0
   834d2:	d0f3      	beq.n	834bc <_Balloc+0x28>
   834d4:	6044      	str	r4, [r0, #4]
   834d6:	6086      	str	r6, [r0, #8]
   834d8:	2200      	movs	r2, #0
   834da:	6102      	str	r2, [r0, #16]
   834dc:	60c2      	str	r2, [r0, #12]
   834de:	bd70      	pop	{r4, r5, r6, pc}

000834e0 <_Bfree>:
   834e0:	b131      	cbz	r1, 834f0 <_Bfree+0x10>
   834e2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   834e4:	684a      	ldr	r2, [r1, #4]
   834e6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   834ea:	6008      	str	r0, [r1, #0]
   834ec:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   834f0:	4770      	bx	lr

000834f2 <__multadd>:
   834f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   834f6:	460c      	mov	r4, r1
   834f8:	461e      	mov	r6, r3
   834fa:	690d      	ldr	r5, [r1, #16]
   834fc:	4607      	mov	r7, r0
   834fe:	3114      	adds	r1, #20
   83500:	2300      	movs	r3, #0
   83502:	6808      	ldr	r0, [r1, #0]
   83504:	3301      	adds	r3, #1
   83506:	fa1f fc80 	uxth.w	ip, r0
   8350a:	0c00      	lsrs	r0, r0, #16
   8350c:	fb02 6c0c 	mla	ip, r2, ip, r6
   83510:	4350      	muls	r0, r2
   83512:	eb00 401c 	add.w	r0, r0, ip, lsr #16
   83516:	fa1f fc8c 	uxth.w	ip, ip
   8351a:	0c06      	lsrs	r6, r0, #16
   8351c:	42ab      	cmp	r3, r5
   8351e:	eb0c 4000 	add.w	r0, ip, r0, lsl #16
   83522:	f841 0b04 	str.w	r0, [r1], #4
   83526:	dbec      	blt.n	83502 <__multadd+0x10>
   83528:	b1d6      	cbz	r6, 83560 <__multadd+0x6e>
   8352a:	68a3      	ldr	r3, [r4, #8]
   8352c:	429d      	cmp	r5, r3
   8352e:	db12      	blt.n	83556 <__multadd+0x64>
   83530:	6861      	ldr	r1, [r4, #4]
   83532:	4638      	mov	r0, r7
   83534:	3101      	adds	r1, #1
   83536:	f7ff ffad 	bl	83494 <_Balloc>
   8353a:	6922      	ldr	r2, [r4, #16]
   8353c:	f104 010c 	add.w	r1, r4, #12
   83540:	3202      	adds	r2, #2
   83542:	4680      	mov	r8, r0
   83544:	0092      	lsls	r2, r2, #2
   83546:	300c      	adds	r0, #12
   83548:	f7ff ff7e 	bl	83448 <memcpy>
   8354c:	4621      	mov	r1, r4
   8354e:	4638      	mov	r0, r7
   83550:	f7ff ffc6 	bl	834e0 <_Bfree>
   83554:	4644      	mov	r4, r8
   83556:	eb04 0385 	add.w	r3, r4, r5, lsl #2
   8355a:	3501      	adds	r5, #1
   8355c:	615e      	str	r6, [r3, #20]
   8355e:	6125      	str	r5, [r4, #16]
   83560:	4620      	mov	r0, r4
   83562:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00083566 <__s2b>:
   83566:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   8356a:	4614      	mov	r4, r2
   8356c:	4698      	mov	r8, r3
   8356e:	f103 0208 	add.w	r2, r3, #8
   83572:	2309      	movs	r3, #9
   83574:	460d      	mov	r5, r1
   83576:	fb92 f2f3 	sdiv	r2, r2, r3
   8357a:	4606      	mov	r6, r0
   8357c:	2301      	movs	r3, #1
   8357e:	2100      	movs	r1, #0
   83580:	429a      	cmp	r2, r3
   83582:	dd02      	ble.n	8358a <__s2b+0x24>
   83584:	005b      	lsls	r3, r3, #1
   83586:	3101      	adds	r1, #1
   83588:	e7fa      	b.n	83580 <__s2b+0x1a>
   8358a:	4630      	mov	r0, r6
   8358c:	f7ff ff82 	bl	83494 <_Balloc>
   83590:	9b08      	ldr	r3, [sp, #32]
   83592:	2c09      	cmp	r4, #9
   83594:	6143      	str	r3, [r0, #20]
   83596:	f04f 0301 	mov.w	r3, #1
   8359a:	4601      	mov	r1, r0
   8359c:	6103      	str	r3, [r0, #16]
   8359e:	dd11      	ble.n	835c4 <__s2b+0x5e>
   835a0:	f105 0909 	add.w	r9, r5, #9
   835a4:	464f      	mov	r7, r9
   835a6:	4425      	add	r5, r4
   835a8:	f817 3b01 	ldrb.w	r3, [r7], #1
   835ac:	4630      	mov	r0, r6
   835ae:	220a      	movs	r2, #10
   835b0:	3b30      	subs	r3, #48	; 0x30
   835b2:	f7ff ff9e 	bl	834f2 <__multadd>
   835b6:	42af      	cmp	r7, r5
   835b8:	4601      	mov	r1, r0
   835ba:	d1f5      	bne.n	835a8 <__s2b+0x42>
   835bc:	eb09 0704 	add.w	r7, r9, r4
   835c0:	3f08      	subs	r7, #8
   835c2:	e002      	b.n	835ca <__s2b+0x64>
   835c4:	f105 070a 	add.w	r7, r5, #10
   835c8:	2409      	movs	r4, #9
   835ca:	4625      	mov	r5, r4
   835cc:	4545      	cmp	r5, r8
   835ce:	da09      	bge.n	835e4 <__s2b+0x7e>
   835d0:	1b3b      	subs	r3, r7, r4
   835d2:	5d5b      	ldrb	r3, [r3, r5]
   835d4:	4630      	mov	r0, r6
   835d6:	220a      	movs	r2, #10
   835d8:	3b30      	subs	r3, #48	; 0x30
   835da:	f7ff ff8a 	bl	834f2 <__multadd>
   835de:	3501      	adds	r5, #1
   835e0:	4601      	mov	r1, r0
   835e2:	e7f3      	b.n	835cc <__s2b+0x66>
   835e4:	4608      	mov	r0, r1
   835e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

000835ea <__hi0bits>:
   835ea:	0c03      	lsrs	r3, r0, #16
   835ec:	041b      	lsls	r3, r3, #16
   835ee:	b913      	cbnz	r3, 835f6 <__hi0bits+0xc>
   835f0:	0400      	lsls	r0, r0, #16
   835f2:	2310      	movs	r3, #16
   835f4:	e000      	b.n	835f8 <__hi0bits+0xe>
   835f6:	2300      	movs	r3, #0
   835f8:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   835fc:	bf04      	itt	eq
   835fe:	0200      	lsleq	r0, r0, #8
   83600:	3308      	addeq	r3, #8
   83602:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   83606:	bf04      	itt	eq
   83608:	0100      	lsleq	r0, r0, #4
   8360a:	3304      	addeq	r3, #4
   8360c:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   83610:	bf04      	itt	eq
   83612:	0080      	lsleq	r0, r0, #2
   83614:	3302      	addeq	r3, #2
   83616:	2800      	cmp	r0, #0
   83618:	db03      	blt.n	83622 <__hi0bits+0x38>
   8361a:	0042      	lsls	r2, r0, #1
   8361c:	d503      	bpl.n	83626 <__hi0bits+0x3c>
   8361e:	1c58      	adds	r0, r3, #1
   83620:	4770      	bx	lr
   83622:	4618      	mov	r0, r3
   83624:	4770      	bx	lr
   83626:	2020      	movs	r0, #32
   83628:	4770      	bx	lr

0008362a <__lo0bits>:
   8362a:	6803      	ldr	r3, [r0, #0]
   8362c:	f013 0207 	ands.w	r2, r3, #7
   83630:	d00b      	beq.n	8364a <__lo0bits+0x20>
   83632:	07d9      	lsls	r1, r3, #31
   83634:	d422      	bmi.n	8367c <__lo0bits+0x52>
   83636:	079a      	lsls	r2, r3, #30
   83638:	d503      	bpl.n	83642 <__lo0bits+0x18>
   8363a:	085b      	lsrs	r3, r3, #1
   8363c:	6003      	str	r3, [r0, #0]
   8363e:	2001      	movs	r0, #1
   83640:	4770      	bx	lr
   83642:	089b      	lsrs	r3, r3, #2
   83644:	6003      	str	r3, [r0, #0]
   83646:	2002      	movs	r0, #2
   83648:	4770      	bx	lr
   8364a:	b299      	uxth	r1, r3
   8364c:	b909      	cbnz	r1, 83652 <__lo0bits+0x28>
   8364e:	0c1b      	lsrs	r3, r3, #16
   83650:	2210      	movs	r2, #16
   83652:	f013 0fff 	tst.w	r3, #255	; 0xff
   83656:	bf04      	itt	eq
   83658:	0a1b      	lsreq	r3, r3, #8
   8365a:	3208      	addeq	r2, #8
   8365c:	0719      	lsls	r1, r3, #28
   8365e:	bf04      	itt	eq
   83660:	091b      	lsreq	r3, r3, #4
   83662:	3204      	addeq	r2, #4
   83664:	0799      	lsls	r1, r3, #30
   83666:	bf04      	itt	eq
   83668:	089b      	lsreq	r3, r3, #2
   8366a:	3202      	addeq	r2, #2
   8366c:	07d9      	lsls	r1, r3, #31
   8366e:	d402      	bmi.n	83676 <__lo0bits+0x4c>
   83670:	085b      	lsrs	r3, r3, #1
   83672:	d005      	beq.n	83680 <__lo0bits+0x56>
   83674:	3201      	adds	r2, #1
   83676:	6003      	str	r3, [r0, #0]
   83678:	4610      	mov	r0, r2
   8367a:	4770      	bx	lr
   8367c:	2000      	movs	r0, #0
   8367e:	4770      	bx	lr
   83680:	2020      	movs	r0, #32
   83682:	4770      	bx	lr

00083684 <__i2b>:
   83684:	b510      	push	{r4, lr}
   83686:	460c      	mov	r4, r1
   83688:	2101      	movs	r1, #1
   8368a:	f7ff ff03 	bl	83494 <_Balloc>
   8368e:	2201      	movs	r2, #1
   83690:	6144      	str	r4, [r0, #20]
   83692:	6102      	str	r2, [r0, #16]
   83694:	bd10      	pop	{r4, pc}

00083696 <__multiply>:
   83696:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8369a:	4616      	mov	r6, r2
   8369c:	6933      	ldr	r3, [r6, #16]
   8369e:	690a      	ldr	r2, [r1, #16]
   836a0:	b085      	sub	sp, #20
   836a2:	429a      	cmp	r2, r3
   836a4:	460d      	mov	r5, r1
   836a6:	da01      	bge.n	836ac <__multiply+0x16>
   836a8:	4635      	mov	r5, r6
   836aa:	460e      	mov	r6, r1
   836ac:	f8d5 8010 	ldr.w	r8, [r5, #16]
   836b0:	6937      	ldr	r7, [r6, #16]
   836b2:	68ab      	ldr	r3, [r5, #8]
   836b4:	6869      	ldr	r1, [r5, #4]
   836b6:	eb08 0407 	add.w	r4, r8, r7
   836ba:	429c      	cmp	r4, r3
   836bc:	bfc8      	it	gt
   836be:	3101      	addgt	r1, #1
   836c0:	f7ff fee8 	bl	83494 <_Balloc>
   836c4:	f100 0314 	add.w	r3, r0, #20
   836c8:	eb03 0184 	add.w	r1, r3, r4, lsl #2
   836cc:	9101      	str	r1, [sp, #4]
   836ce:	461a      	mov	r2, r3
   836d0:	f8dd a004 	ldr.w	sl, [sp, #4]
   836d4:	4552      	cmp	r2, sl
   836d6:	d203      	bcs.n	836e0 <__multiply+0x4a>
   836d8:	2100      	movs	r1, #0
   836da:	f842 1b04 	str.w	r1, [r2], #4
   836de:	e7f7      	b.n	836d0 <__multiply+0x3a>
   836e0:	f105 0114 	add.w	r1, r5, #20
   836e4:	f106 0214 	add.w	r2, r6, #20
   836e8:	eb01 0888 	add.w	r8, r1, r8, lsl #2
   836ec:	eb02 0787 	add.w	r7, r2, r7, lsl #2
   836f0:	f8cd 8008 	str.w	r8, [sp, #8]
   836f4:	9703      	str	r7, [sp, #12]
   836f6:	9e03      	ldr	r6, [sp, #12]
   836f8:	4615      	mov	r5, r2
   836fa:	42b2      	cmp	r2, r6
   836fc:	d256      	bcs.n	837ac <__multiply+0x116>
   836fe:	f8b5 c000 	ldrh.w	ip, [r5]
   83702:	3204      	adds	r2, #4
   83704:	f1bc 0f00 	cmp.w	ip, #0
   83708:	d025      	beq.n	83756 <__multiply+0xc0>
   8370a:	460f      	mov	r7, r1
   8370c:	461d      	mov	r5, r3
   8370e:	2600      	movs	r6, #0
   83710:	f857 9b04 	ldr.w	r9, [r7], #4
   83714:	f8d5 8000 	ldr.w	r8, [r5]
   83718:	fa1f fb89 	uxth.w	fp, r9
   8371c:	fa1f fa88 	uxth.w	sl, r8
   83720:	fb0c aa0b 	mla	sl, ip, fp, sl
   83724:	ea4f 4919 	mov.w	r9, r9, lsr #16
   83728:	ea4f 4818 	mov.w	r8, r8, lsr #16
   8372c:	fb0c 8809 	mla	r8, ip, r9, r8
   83730:	44b2      	add	sl, r6
   83732:	eb08 481a 	add.w	r8, r8, sl, lsr #16
   83736:	fa1f fa8a 	uxth.w	sl, sl
   8373a:	ea4a 4a08 	orr.w	sl, sl, r8, lsl #16
   8373e:	ea4f 4618 	mov.w	r6, r8, lsr #16
   83742:	f8dd 8008 	ldr.w	r8, [sp, #8]
   83746:	46ab      	mov	fp, r5
   83748:	45b8      	cmp	r8, r7
   8374a:	f84b ab04 	str.w	sl, [fp], #4
   8374e:	d901      	bls.n	83754 <__multiply+0xbe>
   83750:	465d      	mov	r5, fp
   83752:	e7dd      	b.n	83710 <__multiply+0x7a>
   83754:	606e      	str	r6, [r5, #4]
   83756:	f832 8c02 	ldrh.w	r8, [r2, #-2]
   8375a:	f1b8 0f00 	cmp.w	r8, #0
   8375e:	d023      	beq.n	837a8 <__multiply+0x112>
   83760:	681e      	ldr	r6, [r3, #0]
   83762:	460f      	mov	r7, r1
   83764:	461d      	mov	r5, r3
   83766:	f04f 0900 	mov.w	r9, #0
   8376a:	f8b7 a000 	ldrh.w	sl, [r7]
   8376e:	f8b5 c002 	ldrh.w	ip, [r5, #2]
   83772:	b2b6      	uxth	r6, r6
   83774:	fb08 cc0a 	mla	ip, r8, sl, ip
   83778:	44e1      	add	r9, ip
   8377a:	ea46 4609 	orr.w	r6, r6, r9, lsl #16
   8377e:	46ac      	mov	ip, r5
   83780:	f84c 6b04 	str.w	r6, [ip], #4
   83784:	f857 6b04 	ldr.w	r6, [r7], #4
   83788:	f8b5 a004 	ldrh.w	sl, [r5, #4]
   8378c:	0c36      	lsrs	r6, r6, #16
   8378e:	fb08 a606 	mla	r6, r8, r6, sl
   83792:	f8dd a008 	ldr.w	sl, [sp, #8]
   83796:	eb06 4619 	add.w	r6, r6, r9, lsr #16
   8379a:	4557      	cmp	r7, sl
   8379c:	ea4f 4916 	mov.w	r9, r6, lsr #16
   837a0:	d201      	bcs.n	837a6 <__multiply+0x110>
   837a2:	4665      	mov	r5, ip
   837a4:	e7e1      	b.n	8376a <__multiply+0xd4>
   837a6:	606e      	str	r6, [r5, #4]
   837a8:	3304      	adds	r3, #4
   837aa:	e7a4      	b.n	836f6 <__multiply+0x60>
   837ac:	9b01      	ldr	r3, [sp, #4]
   837ae:	2c00      	cmp	r4, #0
   837b0:	dc03      	bgt.n	837ba <__multiply+0x124>
   837b2:	6104      	str	r4, [r0, #16]
   837b4:	b005      	add	sp, #20
   837b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   837ba:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   837be:	2a00      	cmp	r2, #0
   837c0:	d1f7      	bne.n	837b2 <__multiply+0x11c>
   837c2:	3c01      	subs	r4, #1
   837c4:	e7f3      	b.n	837ae <__multiply+0x118>

000837c6 <__pow5mult>:
   837c6:	f012 0303 	ands.w	r3, r2, #3
   837ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   837ce:	4605      	mov	r5, r0
   837d0:	460e      	mov	r6, r1
   837d2:	4617      	mov	r7, r2
   837d4:	d007      	beq.n	837e6 <__pow5mult+0x20>
   837d6:	4a1a      	ldr	r2, [pc, #104]	; (83840 <__pow5mult+0x7a>)
   837d8:	3b01      	subs	r3, #1
   837da:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   837de:	2300      	movs	r3, #0
   837e0:	f7ff fe87 	bl	834f2 <__multadd>
   837e4:	4606      	mov	r6, r0
   837e6:	10bf      	asrs	r7, r7, #2
   837e8:	d027      	beq.n	8383a <__pow5mult+0x74>
   837ea:	6cac      	ldr	r4, [r5, #72]	; 0x48
   837ec:	b974      	cbnz	r4, 8380c <__pow5mult+0x46>
   837ee:	4628      	mov	r0, r5
   837f0:	f240 2171 	movw	r1, #625	; 0x271
   837f4:	f7ff ff46 	bl	83684 <__i2b>
   837f8:	2300      	movs	r3, #0
   837fa:	64a8      	str	r0, [r5, #72]	; 0x48
   837fc:	4604      	mov	r4, r0
   837fe:	6003      	str	r3, [r0, #0]
   83800:	e004      	b.n	8380c <__pow5mult+0x46>
   83802:	107f      	asrs	r7, r7, #1
   83804:	d019      	beq.n	8383a <__pow5mult+0x74>
   83806:	6820      	ldr	r0, [r4, #0]
   83808:	b170      	cbz	r0, 83828 <__pow5mult+0x62>
   8380a:	4604      	mov	r4, r0
   8380c:	07fb      	lsls	r3, r7, #31
   8380e:	d5f8      	bpl.n	83802 <__pow5mult+0x3c>
   83810:	4631      	mov	r1, r6
   83812:	4622      	mov	r2, r4
   83814:	4628      	mov	r0, r5
   83816:	f7ff ff3e 	bl	83696 <__multiply>
   8381a:	4631      	mov	r1, r6
   8381c:	4680      	mov	r8, r0
   8381e:	4628      	mov	r0, r5
   83820:	f7ff fe5e 	bl	834e0 <_Bfree>
   83824:	4646      	mov	r6, r8
   83826:	e7ec      	b.n	83802 <__pow5mult+0x3c>
   83828:	4628      	mov	r0, r5
   8382a:	4621      	mov	r1, r4
   8382c:	4622      	mov	r2, r4
   8382e:	f7ff ff32 	bl	83696 <__multiply>
   83832:	2300      	movs	r3, #0
   83834:	6020      	str	r0, [r4, #0]
   83836:	6003      	str	r3, [r0, #0]
   83838:	e7e7      	b.n	8380a <__pow5mult+0x44>
   8383a:	4630      	mov	r0, r6
   8383c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   83840:	00085960 	.word	0x00085960

00083844 <__lshift>:
   83844:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   83848:	460c      	mov	r4, r1
   8384a:	6923      	ldr	r3, [r4, #16]
   8384c:	ea4f 1a62 	mov.w	sl, r2, asr #5
   83850:	eb0a 0903 	add.w	r9, sl, r3
   83854:	6849      	ldr	r1, [r1, #4]
   83856:	68a3      	ldr	r3, [r4, #8]
   83858:	4680      	mov	r8, r0
   8385a:	4615      	mov	r5, r2
   8385c:	f109 0701 	add.w	r7, r9, #1
   83860:	429f      	cmp	r7, r3
   83862:	dd02      	ble.n	8386a <__lshift+0x26>
   83864:	3101      	adds	r1, #1
   83866:	005b      	lsls	r3, r3, #1
   83868:	e7fa      	b.n	83860 <__lshift+0x1c>
   8386a:	4640      	mov	r0, r8
   8386c:	f7ff fe12 	bl	83494 <_Balloc>
   83870:	2300      	movs	r3, #0
   83872:	4606      	mov	r6, r0
   83874:	f100 0214 	add.w	r2, r0, #20
   83878:	4553      	cmp	r3, sl
   8387a:	da04      	bge.n	83886 <__lshift+0x42>
   8387c:	2100      	movs	r1, #0
   8387e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
   83882:	3301      	adds	r3, #1
   83884:	e7f8      	b.n	83878 <__lshift+0x34>
   83886:	6920      	ldr	r0, [r4, #16]
   83888:	ea2a 71ea 	bic.w	r1, sl, sl, asr #31
   8388c:	f104 0314 	add.w	r3, r4, #20
   83890:	f015 0c1f 	ands.w	ip, r5, #31
   83894:	eb02 0181 	add.w	r1, r2, r1, lsl #2
   83898:	eb03 0e80 	add.w	lr, r3, r0, lsl #2
   8389c:	d016      	beq.n	838cc <__lshift+0x88>
   8389e:	f1cc 0a20 	rsb	sl, ip, #32
   838a2:	2500      	movs	r5, #0
   838a4:	6818      	ldr	r0, [r3, #0]
   838a6:	460a      	mov	r2, r1
   838a8:	fa00 f00c 	lsl.w	r0, r0, ip
   838ac:	4305      	orrs	r5, r0
   838ae:	f842 5b04 	str.w	r5, [r2], #4
   838b2:	f853 5b04 	ldr.w	r5, [r3], #4
   838b6:	4573      	cmp	r3, lr
   838b8:	fa25 f50a 	lsr.w	r5, r5, sl
   838bc:	d201      	bcs.n	838c2 <__lshift+0x7e>
   838be:	4611      	mov	r1, r2
   838c0:	e7f0      	b.n	838a4 <__lshift+0x60>
   838c2:	604d      	str	r5, [r1, #4]
   838c4:	b145      	cbz	r5, 838d8 <__lshift+0x94>
   838c6:	f109 0702 	add.w	r7, r9, #2
   838ca:	e005      	b.n	838d8 <__lshift+0x94>
   838cc:	f853 2b04 	ldr.w	r2, [r3], #4
   838d0:	4573      	cmp	r3, lr
   838d2:	f841 2b04 	str.w	r2, [r1], #4
   838d6:	d3f9      	bcc.n	838cc <__lshift+0x88>
   838d8:	3f01      	subs	r7, #1
   838da:	4640      	mov	r0, r8
   838dc:	6137      	str	r7, [r6, #16]
   838de:	4621      	mov	r1, r4
   838e0:	f7ff fdfe 	bl	834e0 <_Bfree>
   838e4:	4630      	mov	r0, r6
   838e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

000838ea <__mcmp>:
   838ea:	6902      	ldr	r2, [r0, #16]
   838ec:	690b      	ldr	r3, [r1, #16]
   838ee:	b510      	push	{r4, lr}
   838f0:	1ad2      	subs	r2, r2, r3
   838f2:	d113      	bne.n	8391c <__mcmp+0x32>
   838f4:	009c      	lsls	r4, r3, #2
   838f6:	3014      	adds	r0, #20
   838f8:	f101 0214 	add.w	r2, r1, #20
   838fc:	1903      	adds	r3, r0, r4
   838fe:	4422      	add	r2, r4
   83900:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   83904:	f852 1d04 	ldr.w	r1, [r2, #-4]!
   83908:	428c      	cmp	r4, r1
   8390a:	d003      	beq.n	83914 <__mcmp+0x2a>
   8390c:	d208      	bcs.n	83920 <__mcmp+0x36>
   8390e:	f04f 30ff 	mov.w	r0, #4294967295
   83912:	bd10      	pop	{r4, pc}
   83914:	4298      	cmp	r0, r3
   83916:	d3f3      	bcc.n	83900 <__mcmp+0x16>
   83918:	2000      	movs	r0, #0
   8391a:	bd10      	pop	{r4, pc}
   8391c:	4610      	mov	r0, r2
   8391e:	bd10      	pop	{r4, pc}
   83920:	2001      	movs	r0, #1
   83922:	bd10      	pop	{r4, pc}

00083924 <__mdiff>:
   83924:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   83928:	4606      	mov	r6, r0
   8392a:	460c      	mov	r4, r1
   8392c:	4608      	mov	r0, r1
   8392e:	4611      	mov	r1, r2
   83930:	4615      	mov	r5, r2
   83932:	f7ff ffda 	bl	838ea <__mcmp>
   83936:	1e07      	subs	r7, r0, #0
   83938:	d108      	bne.n	8394c <__mdiff+0x28>
   8393a:	4630      	mov	r0, r6
   8393c:	4639      	mov	r1, r7
   8393e:	f7ff fda9 	bl	83494 <_Balloc>
   83942:	2301      	movs	r3, #1
   83944:	6103      	str	r3, [r0, #16]
   83946:	6147      	str	r7, [r0, #20]
   83948:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8394c:	db01      	blt.n	83952 <__mdiff+0x2e>
   8394e:	2700      	movs	r7, #0
   83950:	e003      	b.n	8395a <__mdiff+0x36>
   83952:	4623      	mov	r3, r4
   83954:	2701      	movs	r7, #1
   83956:	462c      	mov	r4, r5
   83958:	461d      	mov	r5, r3
   8395a:	6861      	ldr	r1, [r4, #4]
   8395c:	4630      	mov	r0, r6
   8395e:	f7ff fd99 	bl	83494 <_Balloc>
   83962:	6922      	ldr	r2, [r4, #16]
   83964:	692b      	ldr	r3, [r5, #16]
   83966:	3414      	adds	r4, #20
   83968:	f105 0614 	add.w	r6, r5, #20
   8396c:	eb06 0a83 	add.w	sl, r6, r3, lsl #2
   83970:	60c7      	str	r7, [r0, #12]
   83972:	eb04 0c82 	add.w	ip, r4, r2, lsl #2
   83976:	f100 0314 	add.w	r3, r0, #20
   8397a:	2100      	movs	r1, #0
   8397c:	f854 7b04 	ldr.w	r7, [r4], #4
   83980:	f856 9b04 	ldr.w	r9, [r6], #4
   83984:	fa1f f887 	uxth.w	r8, r7
   83988:	fa1f f589 	uxth.w	r5, r9
   8398c:	4441      	add	r1, r8
   8398e:	ea4f 4919 	mov.w	r9, r9, lsr #16
   83992:	ebc5 0801 	rsb	r8, r5, r1
   83996:	ebc9 4717 	rsb	r7, r9, r7, lsr #16
   8399a:	eb07 4728 	add.w	r7, r7, r8, asr #16
   8399e:	fa1f f888 	uxth.w	r8, r8
   839a2:	1439      	asrs	r1, r7, #16
   839a4:	45b2      	cmp	sl, r6
   839a6:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   839aa:	4625      	mov	r5, r4
   839ac:	f843 7b04 	str.w	r7, [r3], #4
   839b0:	d8e4      	bhi.n	8397c <__mdiff+0x58>
   839b2:	4565      	cmp	r5, ip
   839b4:	d20d      	bcs.n	839d2 <__mdiff+0xae>
   839b6:	f855 4b04 	ldr.w	r4, [r5], #4
   839ba:	b2a6      	uxth	r6, r4
   839bc:	440e      	add	r6, r1
   839be:	0c24      	lsrs	r4, r4, #16
   839c0:	eb04 4426 	add.w	r4, r4, r6, asr #16
   839c4:	b2b6      	uxth	r6, r6
   839c6:	1421      	asrs	r1, r4, #16
   839c8:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   839cc:	f843 4b04 	str.w	r4, [r3], #4
   839d0:	e7ef      	b.n	839b2 <__mdiff+0x8e>
   839d2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   839d6:	b909      	cbnz	r1, 839dc <__mdiff+0xb8>
   839d8:	3a01      	subs	r2, #1
   839da:	e7fa      	b.n	839d2 <__mdiff+0xae>
   839dc:	6102      	str	r2, [r0, #16]
   839de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

000839e2 <__ulp>:
   839e2:	4b0f      	ldr	r3, [pc, #60]	; (83a20 <__ulp+0x3e>)
   839e4:	400b      	ands	r3, r1
   839e6:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   839ea:	2b00      	cmp	r3, #0
   839ec:	dd01      	ble.n	839f2 <__ulp+0x10>
   839ee:	4619      	mov	r1, r3
   839f0:	e009      	b.n	83a06 <__ulp+0x24>
   839f2:	425b      	negs	r3, r3
   839f4:	151b      	asrs	r3, r3, #20
   839f6:	2b13      	cmp	r3, #19
   839f8:	f04f 0100 	mov.w	r1, #0
   839fc:	dc05      	bgt.n	83a0a <__ulp+0x28>
   839fe:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   83a02:	fa42 f103 	asr.w	r1, r2, r3
   83a06:	2000      	movs	r0, #0
   83a08:	4770      	bx	lr
   83a0a:	2b32      	cmp	r3, #50	; 0x32
   83a0c:	f04f 0201 	mov.w	r2, #1
   83a10:	bfda      	itte	le
   83a12:	f1c3 0333 	rsble	r3, r3, #51	; 0x33
   83a16:	fa02 f303 	lslle.w	r3, r2, r3
   83a1a:	4613      	movgt	r3, r2
   83a1c:	4618      	mov	r0, r3
   83a1e:	4770      	bx	lr
   83a20:	7ff00000 	.word	0x7ff00000

00083a24 <__b2d>:
   83a24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   83a28:	6906      	ldr	r6, [r0, #16]
   83a2a:	f100 0714 	add.w	r7, r0, #20
   83a2e:	eb07 0686 	add.w	r6, r7, r6, lsl #2
   83a32:	f856 4c04 	ldr.w	r4, [r6, #-4]
   83a36:	4688      	mov	r8, r1
   83a38:	4620      	mov	r0, r4
   83a3a:	f7ff fdd6 	bl	835ea <__hi0bits>
   83a3e:	f1c0 0320 	rsb	r3, r0, #32
   83a42:	280a      	cmp	r0, #10
   83a44:	f1a6 0504 	sub.w	r5, r6, #4
   83a48:	f8c8 3000 	str.w	r3, [r8]
   83a4c:	dc14      	bgt.n	83a78 <__b2d+0x54>
   83a4e:	42bd      	cmp	r5, r7
   83a50:	f1c0 010b 	rsb	r1, r0, #11
   83a54:	bf88      	it	hi
   83a56:	f856 5c08 	ldrhi.w	r5, [r6, #-8]
   83a5a:	fa24 fc01 	lsr.w	ip, r4, r1
   83a5e:	bf98      	it	ls
   83a60:	2500      	movls	r5, #0
   83a62:	3015      	adds	r0, #21
   83a64:	fa25 f101 	lsr.w	r1, r5, r1
   83a68:	4084      	lsls	r4, r0
   83a6a:	f04c 537f 	orr.w	r3, ip, #1069547520	; 0x3fc00000
   83a6e:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
   83a72:	ea41 0204 	orr.w	r2, r1, r4
   83a76:	e024      	b.n	83ac2 <__b2d+0x9e>
   83a78:	42bd      	cmp	r5, r7
   83a7a:	bf86      	itte	hi
   83a7c:	f1a6 0508 	subhi.w	r5, r6, #8
   83a80:	f856 1c08 	ldrhi.w	r1, [r6, #-8]
   83a84:	2100      	movls	r1, #0
   83a86:	f1b0 060b 	subs.w	r6, r0, #11
   83a8a:	d015      	beq.n	83ab8 <__b2d+0x94>
   83a8c:	40b4      	lsls	r4, r6
   83a8e:	f1c0 002b 	rsb	r0, r0, #43	; 0x2b
   83a92:	fa21 fc00 	lsr.w	ip, r1, r0
   83a96:	f044 547f 	orr.w	r4, r4, #1069547520	; 0x3fc00000
   83a9a:	f444 1440 	orr.w	r4, r4, #3145728	; 0x300000
   83a9e:	42bd      	cmp	r5, r7
   83aa0:	ea44 030c 	orr.w	r3, r4, ip
   83aa4:	bf8c      	ite	hi
   83aa6:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
   83aaa:	2400      	movls	r4, #0
   83aac:	fa24 f000 	lsr.w	r0, r4, r0
   83ab0:	40b1      	lsls	r1, r6
   83ab2:	ea40 0201 	orr.w	r2, r0, r1
   83ab6:	e004      	b.n	83ac2 <__b2d+0x9e>
   83ab8:	f044 537f 	orr.w	r3, r4, #1069547520	; 0x3fc00000
   83abc:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
   83ac0:	460a      	mov	r2, r1
   83ac2:	4610      	mov	r0, r2
   83ac4:	4619      	mov	r1, r3
   83ac6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00083aca <__d2b>:
   83aca:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   83ace:	2101      	movs	r1, #1
   83ad0:	461d      	mov	r5, r3
   83ad2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   83ad6:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   83ada:	4614      	mov	r4, r2
   83adc:	f7ff fcda 	bl	83494 <_Balloc>
   83ae0:	f3c5 570a 	ubfx	r7, r5, #20, #11
   83ae4:	4606      	mov	r6, r0
   83ae6:	f3c5 0313 	ubfx	r3, r5, #0, #20
   83aea:	b10f      	cbz	r7, 83af0 <__d2b+0x26>
   83aec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   83af0:	9301      	str	r3, [sp, #4]
   83af2:	b1d4      	cbz	r4, 83b2a <__d2b+0x60>
   83af4:	a802      	add	r0, sp, #8
   83af6:	f840 4d08 	str.w	r4, [r0, #-8]!
   83afa:	4668      	mov	r0, sp
   83afc:	f7ff fd95 	bl	8362a <__lo0bits>
   83b00:	9b00      	ldr	r3, [sp, #0]
   83b02:	b148      	cbz	r0, 83b18 <__d2b+0x4e>
   83b04:	9a01      	ldr	r2, [sp, #4]
   83b06:	f1c0 0120 	rsb	r1, r0, #32
   83b0a:	fa02 f101 	lsl.w	r1, r2, r1
   83b0e:	40c2      	lsrs	r2, r0
   83b10:	430b      	orrs	r3, r1
   83b12:	6173      	str	r3, [r6, #20]
   83b14:	9201      	str	r2, [sp, #4]
   83b16:	e000      	b.n	83b1a <__d2b+0x50>
   83b18:	6173      	str	r3, [r6, #20]
   83b1a:	9b01      	ldr	r3, [sp, #4]
   83b1c:	2b00      	cmp	r3, #0
   83b1e:	bf0c      	ite	eq
   83b20:	2401      	moveq	r4, #1
   83b22:	2402      	movne	r4, #2
   83b24:	61b3      	str	r3, [r6, #24]
   83b26:	6134      	str	r4, [r6, #16]
   83b28:	e007      	b.n	83b3a <__d2b+0x70>
   83b2a:	a801      	add	r0, sp, #4
   83b2c:	f7ff fd7d 	bl	8362a <__lo0bits>
   83b30:	9b01      	ldr	r3, [sp, #4]
   83b32:	2401      	movs	r4, #1
   83b34:	6173      	str	r3, [r6, #20]
   83b36:	6134      	str	r4, [r6, #16]
   83b38:	3020      	adds	r0, #32
   83b3a:	b13f      	cbz	r7, 83b4c <__d2b+0x82>
   83b3c:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
   83b40:	4407      	add	r7, r0
   83b42:	f8c9 7000 	str.w	r7, [r9]
   83b46:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   83b4a:	e00a      	b.n	83b62 <__d2b+0x98>
   83b4c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   83b50:	eb06 0384 	add.w	r3, r6, r4, lsl #2
   83b54:	f8c9 0000 	str.w	r0, [r9]
   83b58:	6918      	ldr	r0, [r3, #16]
   83b5a:	f7ff fd46 	bl	835ea <__hi0bits>
   83b5e:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
   83b62:	f8c8 0000 	str.w	r0, [r8]
   83b66:	4630      	mov	r0, r6
   83b68:	b003      	add	sp, #12
   83b6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00083b6e <__ratio>:
   83b6e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   83b72:	460e      	mov	r6, r1
   83b74:	4669      	mov	r1, sp
   83b76:	4680      	mov	r8, r0
   83b78:	f7ff ff54 	bl	83a24 <__b2d>
   83b7c:	460d      	mov	r5, r1
   83b7e:	4604      	mov	r4, r0
   83b80:	a901      	add	r1, sp, #4
   83b82:	4630      	mov	r0, r6
   83b84:	f7ff ff4e 	bl	83a24 <__b2d>
   83b88:	9f00      	ldr	r7, [sp, #0]
   83b8a:	460b      	mov	r3, r1
   83b8c:	9901      	ldr	r1, [sp, #4]
   83b8e:	4602      	mov	r2, r0
   83b90:	1a7f      	subs	r7, r7, r1
   83b92:	f8d8 0010 	ldr.w	r0, [r8, #16]
   83b96:	6931      	ldr	r1, [r6, #16]
   83b98:	1a41      	subs	r1, r0, r1
   83b9a:	eb07 1141 	add.w	r1, r7, r1, lsl #5
   83b9e:	2900      	cmp	r1, #0
   83ba0:	bfcc      	ite	gt
   83ba2:	eb05 5501 	addgt.w	r5, r5, r1, lsl #20
   83ba6:	eba3 5301 	suble.w	r3, r3, r1, lsl #20
   83baa:	4620      	mov	r0, r4
   83bac:	4629      	mov	r1, r5
   83bae:	f001 fa09 	bl	84fc4 <__aeabi_ddiv>
   83bb2:	b002      	add	sp, #8
   83bb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00083bb8 <_mprec_log10>:
   83bb8:	2817      	cmp	r0, #23
   83bba:	b510      	push	{r4, lr}
   83bbc:	4604      	mov	r4, r0
   83bbe:	dc05      	bgt.n	83bcc <_mprec_log10+0x14>
   83bc0:	4b07      	ldr	r3, [pc, #28]	; (83be0 <_mprec_log10+0x28>)
   83bc2:	eb03 04c0 	add.w	r4, r3, r0, lsl #3
   83bc6:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
   83bca:	bd10      	pop	{r4, pc}
   83bcc:	4905      	ldr	r1, [pc, #20]	; (83be4 <_mprec_log10+0x2c>)
   83bce:	2000      	movs	r0, #0
   83bd0:	2200      	movs	r2, #0
   83bd2:	4b05      	ldr	r3, [pc, #20]	; (83be8 <_mprec_log10+0x30>)
   83bd4:	f001 f8cc 	bl	84d70 <__aeabi_dmul>
   83bd8:	3c01      	subs	r4, #1
   83bda:	d1f9      	bne.n	83bd0 <_mprec_log10+0x18>
   83bdc:	bd10      	pop	{r4, pc}
   83bde:	bf00      	nop
   83be0:	00085960 	.word	0x00085960
   83be4:	3ff00000 	.word	0x3ff00000
   83be8:	40240000 	.word	0x40240000

00083bec <__copybits>:
   83bec:	b510      	push	{r4, lr}
   83bee:	3901      	subs	r1, #1
   83bf0:	f102 0314 	add.w	r3, r2, #20
   83bf4:	1149      	asrs	r1, r1, #5
   83bf6:	6912      	ldr	r2, [r2, #16]
   83bf8:	3101      	adds	r1, #1
   83bfa:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   83bfe:	eb03 0282 	add.w	r2, r3, r2, lsl #2
   83c02:	4293      	cmp	r3, r2
   83c04:	d204      	bcs.n	83c10 <__copybits+0x24>
   83c06:	f853 4b04 	ldr.w	r4, [r3], #4
   83c0a:	f840 4b04 	str.w	r4, [r0], #4
   83c0e:	e7f8      	b.n	83c02 <__copybits+0x16>
   83c10:	4288      	cmp	r0, r1
   83c12:	d203      	bcs.n	83c1c <__copybits+0x30>
   83c14:	2300      	movs	r3, #0
   83c16:	f840 3b04 	str.w	r3, [r0], #4
   83c1a:	e7f9      	b.n	83c10 <__copybits+0x24>
   83c1c:	bd10      	pop	{r4, pc}

00083c1e <__any_on>:
   83c1e:	f100 0214 	add.w	r2, r0, #20
   83c22:	6900      	ldr	r0, [r0, #16]
   83c24:	114b      	asrs	r3, r1, #5
   83c26:	4283      	cmp	r3, r0
   83c28:	b510      	push	{r4, lr}
   83c2a:	dc0c      	bgt.n	83c46 <__any_on+0x28>
   83c2c:	da0c      	bge.n	83c48 <__any_on+0x2a>
   83c2e:	f011 011f 	ands.w	r1, r1, #31
   83c32:	d009      	beq.n	83c48 <__any_on+0x2a>
   83c34:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
   83c38:	fa20 f401 	lsr.w	r4, r0, r1
   83c3c:	fa04 f101 	lsl.w	r1, r4, r1
   83c40:	4281      	cmp	r1, r0
   83c42:	d10e      	bne.n	83c62 <__any_on+0x44>
   83c44:	e000      	b.n	83c48 <__any_on+0x2a>
   83c46:	4603      	mov	r3, r0
   83c48:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   83c4c:	4293      	cmp	r3, r2
   83c4e:	4619      	mov	r1, r3
   83c50:	d905      	bls.n	83c5e <__any_on+0x40>
   83c52:	f851 1c04 	ldr.w	r1, [r1, #-4]
   83c56:	3b04      	subs	r3, #4
   83c58:	2900      	cmp	r1, #0
   83c5a:	d0f7      	beq.n	83c4c <__any_on+0x2e>
   83c5c:	e001      	b.n	83c62 <__any_on+0x44>
   83c5e:	2000      	movs	r0, #0
   83c60:	bd10      	pop	{r4, pc}
   83c62:	2001      	movs	r0, #1
   83c64:	bd10      	pop	{r4, pc}
   83c66:	bf00      	nop

00083c68 <_realloc_r>:
   83c68:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83c6c:	4681      	mov	r9, r0
   83c6e:	460c      	mov	r4, r1
   83c70:	b929      	cbnz	r1, 83c7e <_realloc_r+0x16>
   83c72:	4611      	mov	r1, r2
   83c74:	b003      	add	sp, #12
   83c76:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83c7a:	f7ff b9cf 	b.w	8301c <_malloc_r>
   83c7e:	9201      	str	r2, [sp, #4]
   83c80:	f7ff fc06 	bl	83490 <__malloc_lock>
   83c84:	9a01      	ldr	r2, [sp, #4]
   83c86:	f854 5c04 	ldr.w	r5, [r4, #-4]
   83c8a:	f102 070b 	add.w	r7, r2, #11
   83c8e:	2f16      	cmp	r7, #22
   83c90:	f1a4 0808 	sub.w	r8, r4, #8
   83c94:	f025 0603 	bic.w	r6, r5, #3
   83c98:	d903      	bls.n	83ca2 <_realloc_r+0x3a>
   83c9a:	f037 0707 	bics.w	r7, r7, #7
   83c9e:	d501      	bpl.n	83ca4 <_realloc_r+0x3c>
   83ca0:	e002      	b.n	83ca8 <_realloc_r+0x40>
   83ca2:	2710      	movs	r7, #16
   83ca4:	4297      	cmp	r7, r2
   83ca6:	d204      	bcs.n	83cb2 <_realloc_r+0x4a>
   83ca8:	230c      	movs	r3, #12
   83caa:	f8c9 3000 	str.w	r3, [r9]
   83cae:	2000      	movs	r0, #0
   83cb0:	e180      	b.n	83fb4 <_realloc_r+0x34c>
   83cb2:	42be      	cmp	r6, r7
   83cb4:	f280 8156 	bge.w	83f64 <_realloc_r+0x2fc>
   83cb8:	49a3      	ldr	r1, [pc, #652]	; (83f48 <_realloc_r+0x2e0>)
   83cba:	eb08 0306 	add.w	r3, r8, r6
   83cbe:	f8d1 e008 	ldr.w	lr, [r1, #8]
   83cc2:	468b      	mov	fp, r1
   83cc4:	4573      	cmp	r3, lr
   83cc6:	6858      	ldr	r0, [r3, #4]
   83cc8:	d005      	beq.n	83cd6 <_realloc_r+0x6e>
   83cca:	f020 0101 	bic.w	r1, r0, #1
   83cce:	4419      	add	r1, r3
   83cd0:	6849      	ldr	r1, [r1, #4]
   83cd2:	07c9      	lsls	r1, r1, #31
   83cd4:	d425      	bmi.n	83d22 <_realloc_r+0xba>
   83cd6:	f020 0003 	bic.w	r0, r0, #3
   83cda:	4573      	cmp	r3, lr
   83cdc:	eb00 0106 	add.w	r1, r0, r6
   83ce0:	d117      	bne.n	83d12 <_realloc_r+0xaa>
   83ce2:	f107 0c10 	add.w	ip, r7, #16
   83ce6:	4561      	cmp	r1, ip
   83ce8:	db1d      	blt.n	83d26 <_realloc_r+0xbe>
   83cea:	1bc9      	subs	r1, r1, r7
   83cec:	eb08 0507 	add.w	r5, r8, r7
   83cf0:	f041 0101 	orr.w	r1, r1, #1
   83cf4:	f8cb 5008 	str.w	r5, [fp, #8]
   83cf8:	6069      	str	r1, [r5, #4]
   83cfa:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83cfe:	4648      	mov	r0, r9
   83d00:	f003 0301 	and.w	r3, r3, #1
   83d04:	431f      	orrs	r7, r3
   83d06:	f844 7c04 	str.w	r7, [r4, #-4]
   83d0a:	f7ff fbc2 	bl	83492 <__malloc_unlock>
   83d0e:	4620      	mov	r0, r4
   83d10:	e150      	b.n	83fb4 <_realloc_r+0x34c>
   83d12:	42b9      	cmp	r1, r7
   83d14:	db07      	blt.n	83d26 <_realloc_r+0xbe>
   83d16:	68da      	ldr	r2, [r3, #12]
   83d18:	689b      	ldr	r3, [r3, #8]
   83d1a:	460e      	mov	r6, r1
   83d1c:	60da      	str	r2, [r3, #12]
   83d1e:	6093      	str	r3, [r2, #8]
   83d20:	e120      	b.n	83f64 <_realloc_r+0x2fc>
   83d22:	2000      	movs	r0, #0
   83d24:	4603      	mov	r3, r0
   83d26:	07e9      	lsls	r1, r5, #31
   83d28:	f100 80cb 	bmi.w	83ec2 <_realloc_r+0x25a>
   83d2c:	f854 5c08 	ldr.w	r5, [r4, #-8]
   83d30:	ebc5 0508 	rsb	r5, r5, r8
   83d34:	6869      	ldr	r1, [r5, #4]
   83d36:	f021 0103 	bic.w	r1, r1, #3
   83d3a:	eb01 0a06 	add.w	sl, r1, r6
   83d3e:	2b00      	cmp	r3, #0
   83d40:	f000 808a 	beq.w	83e58 <_realloc_r+0x1f0>
   83d44:	4573      	cmp	r3, lr
   83d46:	d14d      	bne.n	83de4 <_realloc_r+0x17c>
   83d48:	eb0a 0300 	add.w	r3, sl, r0
   83d4c:	f107 0110 	add.w	r1, r7, #16
   83d50:	428b      	cmp	r3, r1
   83d52:	f2c0 8081 	blt.w	83e58 <_realloc_r+0x1f0>
   83d56:	46a8      	mov	r8, r5
   83d58:	68ea      	ldr	r2, [r5, #12]
   83d5a:	f858 1f08 	ldr.w	r1, [r8, #8]!
   83d5e:	60ca      	str	r2, [r1, #12]
   83d60:	6091      	str	r1, [r2, #8]
   83d62:	1f32      	subs	r2, r6, #4
   83d64:	2a24      	cmp	r2, #36	; 0x24
   83d66:	d826      	bhi.n	83db6 <_realloc_r+0x14e>
   83d68:	2a13      	cmp	r2, #19
   83d6a:	d91c      	bls.n	83da6 <_realloc_r+0x13e>
   83d6c:	6821      	ldr	r1, [r4, #0]
   83d6e:	2a1b      	cmp	r2, #27
   83d70:	60a9      	str	r1, [r5, #8]
   83d72:	6861      	ldr	r1, [r4, #4]
   83d74:	60e9      	str	r1, [r5, #12]
   83d76:	d803      	bhi.n	83d80 <_realloc_r+0x118>
   83d78:	f105 0210 	add.w	r2, r5, #16
   83d7c:	3408      	adds	r4, #8
   83d7e:	e013      	b.n	83da8 <_realloc_r+0x140>
   83d80:	68a1      	ldr	r1, [r4, #8]
   83d82:	2a24      	cmp	r2, #36	; 0x24
   83d84:	6129      	str	r1, [r5, #16]
   83d86:	68e1      	ldr	r1, [r4, #12]
   83d88:	6169      	str	r1, [r5, #20]
   83d8a:	d003      	beq.n	83d94 <_realloc_r+0x12c>
   83d8c:	f105 0218 	add.w	r2, r5, #24
   83d90:	3410      	adds	r4, #16
   83d92:	e009      	b.n	83da8 <_realloc_r+0x140>
   83d94:	6922      	ldr	r2, [r4, #16]
   83d96:	3418      	adds	r4, #24
   83d98:	61aa      	str	r2, [r5, #24]
   83d9a:	f854 1c04 	ldr.w	r1, [r4, #-4]
   83d9e:	f105 0220 	add.w	r2, r5, #32
   83da2:	61e9      	str	r1, [r5, #28]
   83da4:	e000      	b.n	83da8 <_realloc_r+0x140>
   83da6:	4642      	mov	r2, r8
   83da8:	6821      	ldr	r1, [r4, #0]
   83daa:	6011      	str	r1, [r2, #0]
   83dac:	6861      	ldr	r1, [r4, #4]
   83dae:	6051      	str	r1, [r2, #4]
   83db0:	68a1      	ldr	r1, [r4, #8]
   83db2:	6091      	str	r1, [r2, #8]
   83db4:	e005      	b.n	83dc2 <_realloc_r+0x15a>
   83db6:	4640      	mov	r0, r8
   83db8:	4621      	mov	r1, r4
   83dba:	9301      	str	r3, [sp, #4]
   83dbc:	f7ff fb4d 	bl	8345a <memmove>
   83dc0:	9b01      	ldr	r3, [sp, #4]
   83dc2:	1bdb      	subs	r3, r3, r7
   83dc4:	19ea      	adds	r2, r5, r7
   83dc6:	f043 0301 	orr.w	r3, r3, #1
   83dca:	f8cb 2008 	str.w	r2, [fp, #8]
   83dce:	6053      	str	r3, [r2, #4]
   83dd0:	686b      	ldr	r3, [r5, #4]
   83dd2:	4648      	mov	r0, r9
   83dd4:	f003 0301 	and.w	r3, r3, #1
   83dd8:	431f      	orrs	r7, r3
   83dda:	606f      	str	r7, [r5, #4]
   83ddc:	f7ff fb59 	bl	83492 <__malloc_unlock>
   83de0:	4640      	mov	r0, r8
   83de2:	e0e7      	b.n	83fb4 <_realloc_r+0x34c>
   83de4:	eb0a 0b00 	add.w	fp, sl, r0
   83de8:	45bb      	cmp	fp, r7
   83dea:	db35      	blt.n	83e58 <_realloc_r+0x1f0>
   83dec:	68da      	ldr	r2, [r3, #12]
   83dee:	689b      	ldr	r3, [r3, #8]
   83df0:	4628      	mov	r0, r5
   83df2:	60da      	str	r2, [r3, #12]
   83df4:	6093      	str	r3, [r2, #8]
   83df6:	f850 2f08 	ldr.w	r2, [r0, #8]!
   83dfa:	68eb      	ldr	r3, [r5, #12]
   83dfc:	60d3      	str	r3, [r2, #12]
   83dfe:	609a      	str	r2, [r3, #8]
   83e00:	1f32      	subs	r2, r6, #4
   83e02:	2a24      	cmp	r2, #36	; 0x24
   83e04:	d823      	bhi.n	83e4e <_realloc_r+0x1e6>
   83e06:	2a13      	cmp	r2, #19
   83e08:	d91a      	bls.n	83e40 <_realloc_r+0x1d8>
   83e0a:	6823      	ldr	r3, [r4, #0]
   83e0c:	2a1b      	cmp	r2, #27
   83e0e:	60ab      	str	r3, [r5, #8]
   83e10:	6863      	ldr	r3, [r4, #4]
   83e12:	60eb      	str	r3, [r5, #12]
   83e14:	d803      	bhi.n	83e1e <_realloc_r+0x1b6>
   83e16:	f105 0010 	add.w	r0, r5, #16
   83e1a:	3408      	adds	r4, #8
   83e1c:	e010      	b.n	83e40 <_realloc_r+0x1d8>
   83e1e:	68a3      	ldr	r3, [r4, #8]
   83e20:	2a24      	cmp	r2, #36	; 0x24
   83e22:	612b      	str	r3, [r5, #16]
   83e24:	68e3      	ldr	r3, [r4, #12]
   83e26:	616b      	str	r3, [r5, #20]
   83e28:	d003      	beq.n	83e32 <_realloc_r+0x1ca>
   83e2a:	f105 0018 	add.w	r0, r5, #24
   83e2e:	3410      	adds	r4, #16
   83e30:	e006      	b.n	83e40 <_realloc_r+0x1d8>
   83e32:	6923      	ldr	r3, [r4, #16]
   83e34:	f105 0020 	add.w	r0, r5, #32
   83e38:	61ab      	str	r3, [r5, #24]
   83e3a:	6963      	ldr	r3, [r4, #20]
   83e3c:	3418      	adds	r4, #24
   83e3e:	61eb      	str	r3, [r5, #28]
   83e40:	6823      	ldr	r3, [r4, #0]
   83e42:	6003      	str	r3, [r0, #0]
   83e44:	6863      	ldr	r3, [r4, #4]
   83e46:	6043      	str	r3, [r0, #4]
   83e48:	68a3      	ldr	r3, [r4, #8]
   83e4a:	6083      	str	r3, [r0, #8]
   83e4c:	e002      	b.n	83e54 <_realloc_r+0x1ec>
   83e4e:	4621      	mov	r1, r4
   83e50:	f7ff fb03 	bl	8345a <memmove>
   83e54:	465e      	mov	r6, fp
   83e56:	e02e      	b.n	83eb6 <_realloc_r+0x24e>
   83e58:	45ba      	cmp	sl, r7
   83e5a:	db32      	blt.n	83ec2 <_realloc_r+0x25a>
   83e5c:	4628      	mov	r0, r5
   83e5e:	f850 2f08 	ldr.w	r2, [r0, #8]!
   83e62:	68eb      	ldr	r3, [r5, #12]
   83e64:	60d3      	str	r3, [r2, #12]
   83e66:	609a      	str	r2, [r3, #8]
   83e68:	1f32      	subs	r2, r6, #4
   83e6a:	2a24      	cmp	r2, #36	; 0x24
   83e6c:	d825      	bhi.n	83eba <_realloc_r+0x252>
   83e6e:	2a13      	cmp	r2, #19
   83e70:	d91a      	bls.n	83ea8 <_realloc_r+0x240>
   83e72:	6823      	ldr	r3, [r4, #0]
   83e74:	2a1b      	cmp	r2, #27
   83e76:	60ab      	str	r3, [r5, #8]
   83e78:	6863      	ldr	r3, [r4, #4]
   83e7a:	60eb      	str	r3, [r5, #12]
   83e7c:	d803      	bhi.n	83e86 <_realloc_r+0x21e>
   83e7e:	f105 0010 	add.w	r0, r5, #16
   83e82:	3408      	adds	r4, #8
   83e84:	e010      	b.n	83ea8 <_realloc_r+0x240>
   83e86:	68a3      	ldr	r3, [r4, #8]
   83e88:	2a24      	cmp	r2, #36	; 0x24
   83e8a:	612b      	str	r3, [r5, #16]
   83e8c:	68e3      	ldr	r3, [r4, #12]
   83e8e:	616b      	str	r3, [r5, #20]
   83e90:	d003      	beq.n	83e9a <_realloc_r+0x232>
   83e92:	f105 0018 	add.w	r0, r5, #24
   83e96:	3410      	adds	r4, #16
   83e98:	e006      	b.n	83ea8 <_realloc_r+0x240>
   83e9a:	6923      	ldr	r3, [r4, #16]
   83e9c:	f105 0020 	add.w	r0, r5, #32
   83ea0:	61ab      	str	r3, [r5, #24]
   83ea2:	6963      	ldr	r3, [r4, #20]
   83ea4:	3418      	adds	r4, #24
   83ea6:	61eb      	str	r3, [r5, #28]
   83ea8:	6823      	ldr	r3, [r4, #0]
   83eaa:	6003      	str	r3, [r0, #0]
   83eac:	6863      	ldr	r3, [r4, #4]
   83eae:	6043      	str	r3, [r0, #4]
   83eb0:	68a3      	ldr	r3, [r4, #8]
   83eb2:	6083      	str	r3, [r0, #8]
   83eb4:	4656      	mov	r6, sl
   83eb6:	46a8      	mov	r8, r5
   83eb8:	e054      	b.n	83f64 <_realloc_r+0x2fc>
   83eba:	4621      	mov	r1, r4
   83ebc:	f7ff facd 	bl	8345a <memmove>
   83ec0:	e7f8      	b.n	83eb4 <_realloc_r+0x24c>
   83ec2:	4648      	mov	r0, r9
   83ec4:	4611      	mov	r1, r2
   83ec6:	f7ff f8a9 	bl	8301c <_malloc_r>
   83eca:	4605      	mov	r5, r0
   83ecc:	2800      	cmp	r0, #0
   83ece:	d044      	beq.n	83f5a <_realloc_r+0x2f2>
   83ed0:	f854 3c04 	ldr.w	r3, [r4, #-4]
   83ed4:	f1a0 0208 	sub.w	r2, r0, #8
   83ed8:	f023 0301 	bic.w	r3, r3, #1
   83edc:	4443      	add	r3, r8
   83ede:	429a      	cmp	r2, r3
   83ee0:	d105      	bne.n	83eee <_realloc_r+0x286>
   83ee2:	f850 3c04 	ldr.w	r3, [r0, #-4]
   83ee6:	f023 0303 	bic.w	r3, r3, #3
   83eea:	441e      	add	r6, r3
   83eec:	e03a      	b.n	83f64 <_realloc_r+0x2fc>
   83eee:	1f32      	subs	r2, r6, #4
   83ef0:	2a24      	cmp	r2, #36	; 0x24
   83ef2:	d82b      	bhi.n	83f4c <_realloc_r+0x2e4>
   83ef4:	2a13      	cmp	r2, #19
   83ef6:	d91e      	bls.n	83f36 <_realloc_r+0x2ce>
   83ef8:	6823      	ldr	r3, [r4, #0]
   83efa:	2a1b      	cmp	r2, #27
   83efc:	6003      	str	r3, [r0, #0]
   83efe:	6863      	ldr	r3, [r4, #4]
   83f00:	6043      	str	r3, [r0, #4]
   83f02:	d804      	bhi.n	83f0e <_realloc_r+0x2a6>
   83f04:	f100 0308 	add.w	r3, r0, #8
   83f08:	f104 0208 	add.w	r2, r4, #8
   83f0c:	e015      	b.n	83f3a <_realloc_r+0x2d2>
   83f0e:	68a3      	ldr	r3, [r4, #8]
   83f10:	2a24      	cmp	r2, #36	; 0x24
   83f12:	6083      	str	r3, [r0, #8]
   83f14:	68e3      	ldr	r3, [r4, #12]
   83f16:	60c3      	str	r3, [r0, #12]
   83f18:	d004      	beq.n	83f24 <_realloc_r+0x2bc>
   83f1a:	f100 0310 	add.w	r3, r0, #16
   83f1e:	f104 0210 	add.w	r2, r4, #16
   83f22:	e00a      	b.n	83f3a <_realloc_r+0x2d2>
   83f24:	6923      	ldr	r3, [r4, #16]
   83f26:	f104 0218 	add.w	r2, r4, #24
   83f2a:	6103      	str	r3, [r0, #16]
   83f2c:	6961      	ldr	r1, [r4, #20]
   83f2e:	f100 0318 	add.w	r3, r0, #24
   83f32:	6141      	str	r1, [r0, #20]
   83f34:	e001      	b.n	83f3a <_realloc_r+0x2d2>
   83f36:	4603      	mov	r3, r0
   83f38:	4622      	mov	r2, r4
   83f3a:	6811      	ldr	r1, [r2, #0]
   83f3c:	6019      	str	r1, [r3, #0]
   83f3e:	6851      	ldr	r1, [r2, #4]
   83f40:	6059      	str	r1, [r3, #4]
   83f42:	6892      	ldr	r2, [r2, #8]
   83f44:	609a      	str	r2, [r3, #8]
   83f46:	e004      	b.n	83f52 <_realloc_r+0x2ea>
   83f48:	200704b4 	.word	0x200704b4
   83f4c:	4621      	mov	r1, r4
   83f4e:	f7ff fa84 	bl	8345a <memmove>
   83f52:	4648      	mov	r0, r9
   83f54:	4621      	mov	r1, r4
   83f56:	f7fe ff67 	bl	82e28 <_free_r>
   83f5a:	4648      	mov	r0, r9
   83f5c:	f7ff fa99 	bl	83492 <__malloc_unlock>
   83f60:	4628      	mov	r0, r5
   83f62:	e027      	b.n	83fb4 <_realloc_r+0x34c>
   83f64:	1bf3      	subs	r3, r6, r7
   83f66:	2b0f      	cmp	r3, #15
   83f68:	f8d8 2004 	ldr.w	r2, [r8, #4]
   83f6c:	d913      	bls.n	83f96 <_realloc_r+0x32e>
   83f6e:	f002 0201 	and.w	r2, r2, #1
   83f72:	eb08 0107 	add.w	r1, r8, r7
   83f76:	4317      	orrs	r7, r2
   83f78:	f043 0201 	orr.w	r2, r3, #1
   83f7c:	f8c8 7004 	str.w	r7, [r8, #4]
   83f80:	440b      	add	r3, r1
   83f82:	604a      	str	r2, [r1, #4]
   83f84:	685a      	ldr	r2, [r3, #4]
   83f86:	4648      	mov	r0, r9
   83f88:	f042 0201 	orr.w	r2, r2, #1
   83f8c:	605a      	str	r2, [r3, #4]
   83f8e:	3108      	adds	r1, #8
   83f90:	f7fe ff4a 	bl	82e28 <_free_r>
   83f94:	e009      	b.n	83faa <_realloc_r+0x342>
   83f96:	f002 0201 	and.w	r2, r2, #1
   83f9a:	4332      	orrs	r2, r6
   83f9c:	f8c8 2004 	str.w	r2, [r8, #4]
   83fa0:	4446      	add	r6, r8
   83fa2:	6873      	ldr	r3, [r6, #4]
   83fa4:	f043 0301 	orr.w	r3, r3, #1
   83fa8:	6073      	str	r3, [r6, #4]
   83faa:	4648      	mov	r0, r9
   83fac:	f7ff fa71 	bl	83492 <__malloc_unlock>
   83fb0:	f108 0008 	add.w	r0, r8, #8
   83fb4:	b003      	add	sp, #12
   83fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83fba:	bf00      	nop

00083fbc <__fpclassifyd>:
   83fbc:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   83fc0:	b510      	push	{r4, lr}
   83fc2:	d100      	bne.n	83fc6 <__fpclassifyd+0xa>
   83fc4:	b178      	cbz	r0, 83fe6 <__fpclassifyd+0x2a>
   83fc6:	4a0c      	ldr	r2, [pc, #48]	; (83ff8 <__fpclassifyd+0x3c>)
   83fc8:	f5a3 1480 	sub.w	r4, r3, #1048576	; 0x100000
   83fcc:	4294      	cmp	r4, r2
   83fce:	d90c      	bls.n	83fea <__fpclassifyd+0x2e>
   83fd0:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   83fd4:	d30b      	bcc.n	83fee <__fpclassifyd+0x32>
   83fd6:	4a09      	ldr	r2, [pc, #36]	; (83ffc <__fpclassifyd+0x40>)
   83fd8:	4293      	cmp	r3, r2
   83fda:	d10a      	bne.n	83ff2 <__fpclassifyd+0x36>
   83fdc:	f1d0 0001 	rsbs	r0, r0, #1
   83fe0:	bf38      	it	cc
   83fe2:	2000      	movcc	r0, #0
   83fe4:	bd10      	pop	{r4, pc}
   83fe6:	2002      	movs	r0, #2
   83fe8:	bd10      	pop	{r4, pc}
   83fea:	2004      	movs	r0, #4
   83fec:	bd10      	pop	{r4, pc}
   83fee:	2003      	movs	r0, #3
   83ff0:	bd10      	pop	{r4, pc}
   83ff2:	2000      	movs	r0, #0
   83ff4:	bd10      	pop	{r4, pc}
   83ff6:	bf00      	nop
   83ff8:	7fdfffff 	.word	0x7fdfffff
   83ffc:	7ff00000 	.word	0x7ff00000

00084000 <_sbrk_r>:
   84000:	b538      	push	{r3, r4, r5, lr}
   84002:	4c06      	ldr	r4, [pc, #24]	; (8401c <_sbrk_r+0x1c>)
   84004:	2300      	movs	r3, #0
   84006:	4605      	mov	r5, r0
   84008:	4608      	mov	r0, r1
   8400a:	6023      	str	r3, [r4, #0]
   8400c:	f7fd f82c 	bl	81068 <_sbrk>
   84010:	1c43      	adds	r3, r0, #1
   84012:	d102      	bne.n	8401a <_sbrk_r+0x1a>
   84014:	6823      	ldr	r3, [r4, #0]
   84016:	b103      	cbz	r3, 8401a <_sbrk_r+0x1a>
   84018:	602b      	str	r3, [r5, #0]
   8401a:	bd38      	pop	{r3, r4, r5, pc}
   8401c:	200730a0 	.word	0x200730a0

00084020 <strcmp>:
   84020:	f810 2b01 	ldrb.w	r2, [r0], #1
   84024:	f811 3b01 	ldrb.w	r3, [r1], #1
   84028:	2a01      	cmp	r2, #1
   8402a:	bf28      	it	cs
   8402c:	429a      	cmpcs	r2, r3
   8402e:	d0f7      	beq.n	84020 <strcmp>
   84030:	1ad0      	subs	r0, r2, r3
   84032:	4770      	bx	lr

00084034 <__ssprint_r>:
   84034:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84038:	4680      	mov	r8, r0
   8403a:	6890      	ldr	r0, [r2, #8]
   8403c:	460c      	mov	r4, r1
   8403e:	4615      	mov	r5, r2
   84040:	f8d2 9000 	ldr.w	r9, [r2]
   84044:	b118      	cbz	r0, 8404e <__ssprint_r+0x1a>
   84046:	2300      	movs	r3, #0
   84048:	9301      	str	r3, [sp, #4]
   8404a:	461e      	mov	r6, r3
   8404c:	e008      	b.n	84060 <__ssprint_r+0x2c>
   8404e:	6050      	str	r0, [r2, #4]
   84050:	e066      	b.n	84120 <__ssprint_r+0xec>
   84052:	f8d9 3000 	ldr.w	r3, [r9]
   84056:	f8d9 6004 	ldr.w	r6, [r9, #4]
   8405a:	9301      	str	r3, [sp, #4]
   8405c:	f109 0908 	add.w	r9, r9, #8
   84060:	2e00      	cmp	r6, #0
   84062:	d0f6      	beq.n	84052 <__ssprint_r+0x1e>
   84064:	68a7      	ldr	r7, [r4, #8]
   84066:	42be      	cmp	r6, r7
   84068:	d347      	bcc.n	840fa <__ssprint_r+0xc6>
   8406a:	89a2      	ldrh	r2, [r4, #12]
   8406c:	f412 6f90 	tst.w	r2, #1152	; 0x480
   84070:	d041      	beq.n	840f6 <__ssprint_r+0xc2>
   84072:	6823      	ldr	r3, [r4, #0]
   84074:	6921      	ldr	r1, [r4, #16]
   84076:	2002      	movs	r0, #2
   84078:	ebc1 0a03 	rsb	sl, r1, r3
   8407c:	6963      	ldr	r3, [r4, #20]
   8407e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   84082:	fb93 fbf0 	sdiv	fp, r3, r0
   84086:	f10a 0001 	add.w	r0, sl, #1
   8408a:	4430      	add	r0, r6
   8408c:	4583      	cmp	fp, r0
   8408e:	bf38      	it	cc
   84090:	4683      	movcc	fp, r0
   84092:	0553      	lsls	r3, r2, #21
   84094:	4640      	mov	r0, r8
   84096:	d50f      	bpl.n	840b8 <__ssprint_r+0x84>
   84098:	4659      	mov	r1, fp
   8409a:	f7fe ffbf 	bl	8301c <_malloc_r>
   8409e:	4607      	mov	r7, r0
   840a0:	b198      	cbz	r0, 840ca <__ssprint_r+0x96>
   840a2:	4652      	mov	r2, sl
   840a4:	6921      	ldr	r1, [r4, #16]
   840a6:	f7ff f9cf 	bl	83448 <memcpy>
   840aa:	89a2      	ldrh	r2, [r4, #12]
   840ac:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   840b0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   840b4:	81a2      	strh	r2, [r4, #12]
   840b6:	e015      	b.n	840e4 <__ssprint_r+0xb0>
   840b8:	465a      	mov	r2, fp
   840ba:	f7ff fdd5 	bl	83c68 <_realloc_r>
   840be:	4607      	mov	r7, r0
   840c0:	b980      	cbnz	r0, 840e4 <__ssprint_r+0xb0>
   840c2:	4640      	mov	r0, r8
   840c4:	6921      	ldr	r1, [r4, #16]
   840c6:	f7fe feaf 	bl	82e28 <_free_r>
   840ca:	230c      	movs	r3, #12
   840cc:	f8c8 3000 	str.w	r3, [r8]
   840d0:	89a3      	ldrh	r3, [r4, #12]
   840d2:	f04f 30ff 	mov.w	r0, #4294967295
   840d6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   840da:	81a3      	strh	r3, [r4, #12]
   840dc:	2300      	movs	r3, #0
   840de:	60ab      	str	r3, [r5, #8]
   840e0:	606b      	str	r3, [r5, #4]
   840e2:	e01d      	b.n	84120 <__ssprint_r+0xec>
   840e4:	6127      	str	r7, [r4, #16]
   840e6:	ebca 030b 	rsb	r3, sl, fp
   840ea:	4457      	add	r7, sl
   840ec:	6027      	str	r7, [r4, #0]
   840ee:	f8c4 b014 	str.w	fp, [r4, #20]
   840f2:	4637      	mov	r7, r6
   840f4:	60a3      	str	r3, [r4, #8]
   840f6:	42be      	cmp	r6, r7
   840f8:	d200      	bcs.n	840fc <__ssprint_r+0xc8>
   840fa:	4637      	mov	r7, r6
   840fc:	463a      	mov	r2, r7
   840fe:	6820      	ldr	r0, [r4, #0]
   84100:	9901      	ldr	r1, [sp, #4]
   84102:	f7ff f9aa 	bl	8345a <memmove>
   84106:	68a3      	ldr	r3, [r4, #8]
   84108:	1bdb      	subs	r3, r3, r7
   8410a:	60a3      	str	r3, [r4, #8]
   8410c:	6823      	ldr	r3, [r4, #0]
   8410e:	441f      	add	r7, r3
   84110:	68ab      	ldr	r3, [r5, #8]
   84112:	6027      	str	r7, [r4, #0]
   84114:	1b9e      	subs	r6, r3, r6
   84116:	60ae      	str	r6, [r5, #8]
   84118:	2e00      	cmp	r6, #0
   8411a:	d19a      	bne.n	84052 <__ssprint_r+0x1e>
   8411c:	606e      	str	r6, [r5, #4]
   8411e:	4630      	mov	r0, r6
   84120:	b003      	add	sp, #12
   84122:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00084126 <_svfiprintf_r>:
   84126:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8412a:	461e      	mov	r6, r3
   8412c:	898b      	ldrh	r3, [r1, #12]
   8412e:	b0ad      	sub	sp, #180	; 0xb4
   84130:	4688      	mov	r8, r1
   84132:	0619      	lsls	r1, r3, #24
   84134:	4683      	mov	fp, r0
   84136:	9202      	str	r2, [sp, #8]
   84138:	d513      	bpl.n	84162 <_svfiprintf_r+0x3c>
   8413a:	f8d8 3010 	ldr.w	r3, [r8, #16]
   8413e:	b983      	cbnz	r3, 84162 <_svfiprintf_r+0x3c>
   84140:	2140      	movs	r1, #64	; 0x40
   84142:	f7fe ff6b 	bl	8301c <_malloc_r>
   84146:	f8c8 0000 	str.w	r0, [r8]
   8414a:	f8c8 0010 	str.w	r0, [r8, #16]
   8414e:	b928      	cbnz	r0, 8415c <_svfiprintf_r+0x36>
   84150:	230c      	movs	r3, #12
   84152:	f8cb 3000 	str.w	r3, [fp]
   84156:	f04f 30ff 	mov.w	r0, #4294967295
   8415a:	e3d4      	b.n	84906 <_svfiprintf_r+0x7e0>
   8415c:	2340      	movs	r3, #64	; 0x40
   8415e:	f8c8 3014 	str.w	r3, [r8, #20]
   84162:	2300      	movs	r3, #0
   84164:	aa1c      	add	r2, sp, #112	; 0x70
   84166:	920f      	str	r2, [sp, #60]	; 0x3c
   84168:	9311      	str	r3, [sp, #68]	; 0x44
   8416a:	9310      	str	r3, [sp, #64]	; 0x40
   8416c:	4694      	mov	ip, r2
   8416e:	930a      	str	r3, [sp, #40]	; 0x28
   84170:	9305      	str	r3, [sp, #20]
   84172:	9b02      	ldr	r3, [sp, #8]
   84174:	461c      	mov	r4, r3
   84176:	f813 2b01 	ldrb.w	r2, [r3], #1
   8417a:	b91a      	cbnz	r2, 84184 <_svfiprintf_r+0x5e>
   8417c:	9802      	ldr	r0, [sp, #8]
   8417e:	1a25      	subs	r5, r4, r0
   84180:	d103      	bne.n	8418a <_svfiprintf_r+0x64>
   84182:	e01d      	b.n	841c0 <_svfiprintf_r+0x9a>
   84184:	2a25      	cmp	r2, #37	; 0x25
   84186:	d1f5      	bne.n	84174 <_svfiprintf_r+0x4e>
   84188:	e7f8      	b.n	8417c <_svfiprintf_r+0x56>
   8418a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8418c:	9902      	ldr	r1, [sp, #8]
   8418e:	442b      	add	r3, r5
   84190:	9311      	str	r3, [sp, #68]	; 0x44
   84192:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84194:	e88c 0022 	stmia.w	ip, {r1, r5}
   84198:	3301      	adds	r3, #1
   8419a:	2b07      	cmp	r3, #7
   8419c:	9310      	str	r3, [sp, #64]	; 0x40
   8419e:	dc02      	bgt.n	841a6 <_svfiprintf_r+0x80>
   841a0:	f10c 0c08 	add.w	ip, ip, #8
   841a4:	e009      	b.n	841ba <_svfiprintf_r+0x94>
   841a6:	4658      	mov	r0, fp
   841a8:	4641      	mov	r1, r8
   841aa:	aa0f      	add	r2, sp, #60	; 0x3c
   841ac:	f7ff ff42 	bl	84034 <__ssprint_r>
   841b0:	2800      	cmp	r0, #0
   841b2:	f040 83a0 	bne.w	848f6 <_svfiprintf_r+0x7d0>
   841b6:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   841ba:	9a05      	ldr	r2, [sp, #20]
   841bc:	442a      	add	r2, r5
   841be:	9205      	str	r2, [sp, #20]
   841c0:	7823      	ldrb	r3, [r4, #0]
   841c2:	2b00      	cmp	r3, #0
   841c4:	f000 8390 	beq.w	848e8 <_svfiprintf_r+0x7c2>
   841c8:	2200      	movs	r2, #0
   841ca:	3401      	adds	r4, #1
   841cc:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   841d0:	f04f 3aff 	mov.w	sl, #4294967295
   841d4:	9204      	str	r2, [sp, #16]
   841d6:	4617      	mov	r7, r2
   841d8:	1c65      	adds	r5, r4, #1
   841da:	7823      	ldrb	r3, [r4, #0]
   841dc:	9502      	str	r5, [sp, #8]
   841de:	2b58      	cmp	r3, #88	; 0x58
   841e0:	d064      	beq.n	842ac <_svfiprintf_r+0x186>
   841e2:	dc2d      	bgt.n	84240 <_svfiprintf_r+0x11a>
   841e4:	2b2e      	cmp	r3, #46	; 0x2e
   841e6:	d076      	beq.n	842d6 <_svfiprintf_r+0x1b0>
   841e8:	dc12      	bgt.n	84210 <_svfiprintf_r+0xea>
   841ea:	2b2a      	cmp	r3, #42	; 0x2a
   841ec:	d066      	beq.n	842bc <_svfiprintf_r+0x196>
   841ee:	dc08      	bgt.n	84202 <_svfiprintf_r+0xdc>
   841f0:	2b20      	cmp	r3, #32
   841f2:	d05f      	beq.n	842b4 <_svfiprintf_r+0x18e>
   841f4:	2b23      	cmp	r3, #35	; 0x23
   841f6:	f040 8201 	bne.w	845fc <_svfiprintf_r+0x4d6>
   841fa:	f047 0701 	orr.w	r7, r7, #1
   841fe:	9c02      	ldr	r4, [sp, #8]
   84200:	e7ea      	b.n	841d8 <_svfiprintf_r+0xb2>
   84202:	2b2b      	cmp	r3, #43	; 0x2b
   84204:	d101      	bne.n	8420a <_svfiprintf_r+0xe4>
   84206:	461a      	mov	r2, r3
   84208:	e7f9      	b.n	841fe <_svfiprintf_r+0xd8>
   8420a:	2b2d      	cmp	r3, #45	; 0x2d
   8420c:	d060      	beq.n	842d0 <_svfiprintf_r+0x1aa>
   8420e:	e1f5      	b.n	845fc <_svfiprintf_r+0x4d6>
   84210:	2b39      	cmp	r3, #57	; 0x39
   84212:	dc07      	bgt.n	84224 <_svfiprintf_r+0xfe>
   84214:	2b31      	cmp	r3, #49	; 0x31
   84216:	da7f      	bge.n	84318 <_svfiprintf_r+0x1f2>
   84218:	2b30      	cmp	r3, #48	; 0x30
   8421a:	f040 81ef 	bne.w	845fc <_svfiprintf_r+0x4d6>
   8421e:	f047 0780 	orr.w	r7, r7, #128	; 0x80
   84222:	e7ec      	b.n	841fe <_svfiprintf_r+0xd8>
   84224:	2b4f      	cmp	r3, #79	; 0x4f
   84226:	f000 80e0 	beq.w	843ea <_svfiprintf_r+0x2c4>
   8422a:	2b55      	cmp	r3, #85	; 0x55
   8422c:	f000 8120 	beq.w	84470 <_svfiprintf_r+0x34a>
   84230:	2b44      	cmp	r3, #68	; 0x44
   84232:	f040 81e3 	bne.w	845fc <_svfiprintf_r+0x4d6>
   84236:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   8423a:	f047 0710 	orr.w	r7, r7, #16
   8423e:	e094      	b.n	8436a <_svfiprintf_r+0x244>
   84240:	2b6e      	cmp	r3, #110	; 0x6e
   84242:	f000 80b6 	beq.w	843b2 <_svfiprintf_r+0x28c>
   84246:	dc0d      	bgt.n	84264 <_svfiprintf_r+0x13e>
   84248:	2b68      	cmp	r3, #104	; 0x68
   8424a:	d076      	beq.n	8433a <_svfiprintf_r+0x214>
   8424c:	dc05      	bgt.n	8425a <_svfiprintf_r+0x134>
   8424e:	2b63      	cmp	r3, #99	; 0x63
   84250:	f000 8083 	beq.w	8435a <_svfiprintf_r+0x234>
   84254:	2b64      	cmp	r3, #100	; 0x64
   84256:	d026      	beq.n	842a6 <_svfiprintf_r+0x180>
   84258:	e1d0      	b.n	845fc <_svfiprintf_r+0x4d6>
   8425a:	2b69      	cmp	r3, #105	; 0x69
   8425c:	d023      	beq.n	842a6 <_svfiprintf_r+0x180>
   8425e:	2b6c      	cmp	r3, #108	; 0x6c
   84260:	d06e      	beq.n	84340 <_svfiprintf_r+0x21a>
   84262:	e1cb      	b.n	845fc <_svfiprintf_r+0x4d6>
   84264:	2b71      	cmp	r3, #113	; 0x71
   84266:	d075      	beq.n	84354 <_svfiprintf_r+0x22e>
   84268:	dc13      	bgt.n	84292 <_svfiprintf_r+0x16c>
   8426a:	2b6f      	cmp	r3, #111	; 0x6f
   8426c:	f000 80bf 	beq.w	843ee <_svfiprintf_r+0x2c8>
   84270:	2b70      	cmp	r3, #112	; 0x70
   84272:	f040 81c3 	bne.w	845fc <_svfiprintf_r+0x4d6>
   84276:	2330      	movs	r3, #48	; 0x30
   84278:	48a0      	ldr	r0, [pc, #640]	; (844fc <_svfiprintf_r+0x3d6>)
   8427a:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
   8427e:	2378      	movs	r3, #120	; 0x78
   84280:	6834      	ldr	r4, [r6, #0]
   84282:	2500      	movs	r5, #0
   84284:	f047 0702 	orr.w	r7, r7, #2
   84288:	f88d 3039 	strb.w	r3, [sp, #57]	; 0x39
   8428c:	3604      	adds	r6, #4
   8428e:	900a      	str	r0, [sp, #40]	; 0x28
   84290:	e12e      	b.n	844f0 <_svfiprintf_r+0x3ca>
   84292:	2b75      	cmp	r3, #117	; 0x75
   84294:	f000 80ee 	beq.w	84474 <_svfiprintf_r+0x34e>
   84298:	2b78      	cmp	r3, #120	; 0x78
   8429a:	f000 8103 	beq.w	844a4 <_svfiprintf_r+0x37e>
   8429e:	2b73      	cmp	r3, #115	; 0x73
   842a0:	f040 81ac 	bne.w	845fc <_svfiprintf_r+0x4d6>
   842a4:	e0bf      	b.n	84426 <_svfiprintf_r+0x300>
   842a6:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   842aa:	e05e      	b.n	8436a <_svfiprintf_r+0x244>
   842ac:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   842b0:	4c93      	ldr	r4, [pc, #588]	; (84500 <_svfiprintf_r+0x3da>)
   842b2:	e0fa      	b.n	844aa <_svfiprintf_r+0x384>
   842b4:	2a00      	cmp	r2, #0
   842b6:	bf08      	it	eq
   842b8:	2220      	moveq	r2, #32
   842ba:	e7a0      	b.n	841fe <_svfiprintf_r+0xd8>
   842bc:	1d33      	adds	r3, r6, #4
   842be:	6836      	ldr	r6, [r6, #0]
   842c0:	2e00      	cmp	r6, #0
   842c2:	9604      	str	r6, [sp, #16]
   842c4:	db01      	blt.n	842ca <_svfiprintf_r+0x1a4>
   842c6:	461e      	mov	r6, r3
   842c8:	e799      	b.n	841fe <_svfiprintf_r+0xd8>
   842ca:	4275      	negs	r5, r6
   842cc:	9504      	str	r5, [sp, #16]
   842ce:	461e      	mov	r6, r3
   842d0:	f047 0704 	orr.w	r7, r7, #4
   842d4:	e793      	b.n	841fe <_svfiprintf_r+0xd8>
   842d6:	9c02      	ldr	r4, [sp, #8]
   842d8:	7823      	ldrb	r3, [r4, #0]
   842da:	1c61      	adds	r1, r4, #1
   842dc:	2b2a      	cmp	r3, #42	; 0x2a
   842de:	d002      	beq.n	842e6 <_svfiprintf_r+0x1c0>
   842e0:	f04f 0a00 	mov.w	sl, #0
   842e4:	e00a      	b.n	842fc <_svfiprintf_r+0x1d6>
   842e6:	f8d6 a000 	ldr.w	sl, [r6]
   842ea:	1d33      	adds	r3, r6, #4
   842ec:	f1ba 0f00 	cmp.w	sl, #0
   842f0:	461e      	mov	r6, r3
   842f2:	9102      	str	r1, [sp, #8]
   842f4:	da83      	bge.n	841fe <_svfiprintf_r+0xd8>
   842f6:	f04f 3aff 	mov.w	sl, #4294967295
   842fa:	e780      	b.n	841fe <_svfiprintf_r+0xd8>
   842fc:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   84300:	2809      	cmp	r0, #9
   84302:	d805      	bhi.n	84310 <_svfiprintf_r+0x1ea>
   84304:	230a      	movs	r3, #10
   84306:	fb03 0a0a 	mla	sl, r3, sl, r0
   8430a:	f811 3b01 	ldrb.w	r3, [r1], #1
   8430e:	e7f5      	b.n	842fc <_svfiprintf_r+0x1d6>
   84310:	ea4a 7aea 	orr.w	sl, sl, sl, asr #31
   84314:	9102      	str	r1, [sp, #8]
   84316:	e762      	b.n	841de <_svfiprintf_r+0xb8>
   84318:	2500      	movs	r5, #0
   8431a:	9504      	str	r5, [sp, #16]
   8431c:	9c04      	ldr	r4, [sp, #16]
   8431e:	3b30      	subs	r3, #48	; 0x30
   84320:	210a      	movs	r1, #10
   84322:	fb01 3404 	mla	r4, r1, r4, r3
   84326:	9902      	ldr	r1, [sp, #8]
   84328:	9404      	str	r4, [sp, #16]
   8432a:	f811 3b01 	ldrb.w	r3, [r1], #1
   8432e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   84332:	2809      	cmp	r0, #9
   84334:	d8ee      	bhi.n	84314 <_svfiprintf_r+0x1ee>
   84336:	9102      	str	r1, [sp, #8]
   84338:	e7f0      	b.n	8431c <_svfiprintf_r+0x1f6>
   8433a:	f047 0740 	orr.w	r7, r7, #64	; 0x40
   8433e:	e75e      	b.n	841fe <_svfiprintf_r+0xd8>
   84340:	9d02      	ldr	r5, [sp, #8]
   84342:	782b      	ldrb	r3, [r5, #0]
   84344:	2b6c      	cmp	r3, #108	; 0x6c
   84346:	d102      	bne.n	8434e <_svfiprintf_r+0x228>
   84348:	3501      	adds	r5, #1
   8434a:	9502      	str	r5, [sp, #8]
   8434c:	e002      	b.n	84354 <_svfiprintf_r+0x22e>
   8434e:	f047 0710 	orr.w	r7, r7, #16
   84352:	e754      	b.n	841fe <_svfiprintf_r+0xd8>
   84354:	f047 0720 	orr.w	r7, r7, #32
   84358:	e751      	b.n	841fe <_svfiprintf_r+0xd8>
   8435a:	6833      	ldr	r3, [r6, #0]
   8435c:	2500      	movs	r5, #0
   8435e:	f88d 3048 	strb.w	r3, [sp, #72]	; 0x48
   84362:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
   84366:	3604      	adds	r6, #4
   84368:	e152      	b.n	84610 <_svfiprintf_r+0x4ea>
   8436a:	06ba      	lsls	r2, r7, #26
   8436c:	d507      	bpl.n	8437e <_svfiprintf_r+0x258>
   8436e:	3607      	adds	r6, #7
   84370:	f026 0307 	bic.w	r3, r6, #7
   84374:	f103 0608 	add.w	r6, r3, #8
   84378:	e9d3 4500 	ldrd	r4, r5, [r3]
   8437c:	e00d      	b.n	8439a <_svfiprintf_r+0x274>
   8437e:	f017 0f10 	tst.w	r7, #16
   84382:	f106 0304 	add.w	r3, r6, #4
   84386:	d001      	beq.n	8438c <_svfiprintf_r+0x266>
   84388:	6834      	ldr	r4, [r6, #0]
   8438a:	e004      	b.n	84396 <_svfiprintf_r+0x270>
   8438c:	6834      	ldr	r4, [r6, #0]
   8438e:	f017 0f40 	tst.w	r7, #64	; 0x40
   84392:	bf18      	it	ne
   84394:	b224      	sxthne	r4, r4
   84396:	17e5      	asrs	r5, r4, #31
   84398:	461e      	mov	r6, r3
   8439a:	2c00      	cmp	r4, #0
   8439c:	f175 0000 	sbcs.w	r0, r5, #0
   843a0:	f280 80b0 	bge.w	84504 <_svfiprintf_r+0x3de>
   843a4:	232d      	movs	r3, #45	; 0x2d
   843a6:	4264      	negs	r4, r4
   843a8:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   843ac:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   843b0:	e0a8      	b.n	84504 <_svfiprintf_r+0x3de>
   843b2:	f017 0f20 	tst.w	r7, #32
   843b6:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   843ba:	f106 0104 	add.w	r1, r6, #4
   843be:	d007      	beq.n	843d0 <_svfiprintf_r+0x2aa>
   843c0:	9c05      	ldr	r4, [sp, #20]
   843c2:	6830      	ldr	r0, [r6, #0]
   843c4:	17e5      	asrs	r5, r4, #31
   843c6:	4622      	mov	r2, r4
   843c8:	462b      	mov	r3, r5
   843ca:	e9c0 2300 	strd	r2, r3, [r0]
   843ce:	e00a      	b.n	843e6 <_svfiprintf_r+0x2c0>
   843d0:	06fb      	lsls	r3, r7, #27
   843d2:	d405      	bmi.n	843e0 <_svfiprintf_r+0x2ba>
   843d4:	067f      	lsls	r7, r7, #25
   843d6:	d503      	bpl.n	843e0 <_svfiprintf_r+0x2ba>
   843d8:	6833      	ldr	r3, [r6, #0]
   843da:	9c05      	ldr	r4, [sp, #20]
   843dc:	801c      	strh	r4, [r3, #0]
   843de:	e002      	b.n	843e6 <_svfiprintf_r+0x2c0>
   843e0:	6833      	ldr	r3, [r6, #0]
   843e2:	9d05      	ldr	r5, [sp, #20]
   843e4:	601d      	str	r5, [r3, #0]
   843e6:	460e      	mov	r6, r1
   843e8:	e6c3      	b.n	84172 <_svfiprintf_r+0x4c>
   843ea:	f047 0710 	orr.w	r7, r7, #16
   843ee:	f017 0320 	ands.w	r3, r7, #32
   843f2:	d008      	beq.n	84406 <_svfiprintf_r+0x2e0>
   843f4:	3607      	adds	r6, #7
   843f6:	f026 0307 	bic.w	r3, r6, #7
   843fa:	f103 0608 	add.w	r6, r3, #8
   843fe:	e9d3 4500 	ldrd	r4, r5, [r3]
   84402:	2300      	movs	r3, #0
   84404:	e075      	b.n	844f2 <_svfiprintf_r+0x3cc>
   84406:	f017 0110 	ands.w	r1, r7, #16
   8440a:	f106 0204 	add.w	r2, r6, #4
   8440e:	d106      	bne.n	8441e <_svfiprintf_r+0x2f8>
   84410:	f017 0340 	ands.w	r3, r7, #64	; 0x40
   84414:	d003      	beq.n	8441e <_svfiprintf_r+0x2f8>
   84416:	8834      	ldrh	r4, [r6, #0]
   84418:	2500      	movs	r5, #0
   8441a:	4616      	mov	r6, r2
   8441c:	e7f1      	b.n	84402 <_svfiprintf_r+0x2dc>
   8441e:	6834      	ldr	r4, [r6, #0]
   84420:	2500      	movs	r5, #0
   84422:	4616      	mov	r6, r2
   84424:	e065      	b.n	844f2 <_svfiprintf_r+0x3cc>
   84426:	f8d6 9000 	ldr.w	r9, [r6]
   8442a:	2300      	movs	r3, #0
   8442c:	459a      	cmp	sl, r3
   8442e:	f106 0604 	add.w	r6, r6, #4
   84432:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   84436:	4648      	mov	r0, r9
   84438:	db11      	blt.n	8445e <_svfiprintf_r+0x338>
   8443a:	4619      	mov	r1, r3
   8443c:	4652      	mov	r2, sl
   8443e:	f8cd c004 	str.w	ip, [sp, #4]
   84442:	f7fe fff3 	bl	8342c <memchr>
   84446:	f8dd c004 	ldr.w	ip, [sp, #4]
   8444a:	2800      	cmp	r0, #0
   8444c:	f000 80e5 	beq.w	8461a <_svfiprintf_r+0x4f4>
   84450:	ebc9 0000 	rsb	r0, r9, r0
   84454:	4550      	cmp	r0, sl
   84456:	bfb8      	it	lt
   84458:	4682      	movlt	sl, r0
   8445a:	2500      	movs	r5, #0
   8445c:	e0de      	b.n	8461c <_svfiprintf_r+0x4f6>
   8445e:	f8cd c004 	str.w	ip, [sp, #4]
   84462:	f7fc fe8d 	bl	81180 <strlen>
   84466:	2500      	movs	r5, #0
   84468:	4682      	mov	sl, r0
   8446a:	f8dd c004 	ldr.w	ip, [sp, #4]
   8446e:	e0d5      	b.n	8461c <_svfiprintf_r+0x4f6>
   84470:	f047 0710 	orr.w	r7, r7, #16
   84474:	06bd      	lsls	r5, r7, #26
   84476:	d507      	bpl.n	84488 <_svfiprintf_r+0x362>
   84478:	3607      	adds	r6, #7
   8447a:	f026 0307 	bic.w	r3, r6, #7
   8447e:	f103 0608 	add.w	r6, r3, #8
   84482:	e9d3 4500 	ldrd	r4, r5, [r3]
   84486:	e00b      	b.n	844a0 <_svfiprintf_r+0x37a>
   84488:	f017 0f10 	tst.w	r7, #16
   8448c:	f106 0304 	add.w	r3, r6, #4
   84490:	d103      	bne.n	8449a <_svfiprintf_r+0x374>
   84492:	067c      	lsls	r4, r7, #25
   84494:	d501      	bpl.n	8449a <_svfiprintf_r+0x374>
   84496:	8834      	ldrh	r4, [r6, #0]
   84498:	e000      	b.n	8449c <_svfiprintf_r+0x376>
   8449a:	6834      	ldr	r4, [r6, #0]
   8449c:	2500      	movs	r5, #0
   8449e:	461e      	mov	r6, r3
   844a0:	2301      	movs	r3, #1
   844a2:	e026      	b.n	844f2 <_svfiprintf_r+0x3cc>
   844a4:	4c15      	ldr	r4, [pc, #84]	; (844fc <_svfiprintf_r+0x3d6>)
   844a6:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   844aa:	06b8      	lsls	r0, r7, #26
   844ac:	940a      	str	r4, [sp, #40]	; 0x28
   844ae:	d507      	bpl.n	844c0 <_svfiprintf_r+0x39a>
   844b0:	3607      	adds	r6, #7
   844b2:	f026 0207 	bic.w	r2, r6, #7
   844b6:	f102 0608 	add.w	r6, r2, #8
   844ba:	e9d2 4500 	ldrd	r4, r5, [r2]
   844be:	e00b      	b.n	844d8 <_svfiprintf_r+0x3b2>
   844c0:	f017 0f10 	tst.w	r7, #16
   844c4:	f106 0204 	add.w	r2, r6, #4
   844c8:	d103      	bne.n	844d2 <_svfiprintf_r+0x3ac>
   844ca:	0679      	lsls	r1, r7, #25
   844cc:	d501      	bpl.n	844d2 <_svfiprintf_r+0x3ac>
   844ce:	8834      	ldrh	r4, [r6, #0]
   844d0:	e000      	b.n	844d4 <_svfiprintf_r+0x3ae>
   844d2:	6834      	ldr	r4, [r6, #0]
   844d4:	2500      	movs	r5, #0
   844d6:	4616      	mov	r6, r2
   844d8:	07fa      	lsls	r2, r7, #31
   844da:	d509      	bpl.n	844f0 <_svfiprintf_r+0x3ca>
   844dc:	ea54 0005 	orrs.w	r0, r4, r5
   844e0:	d006      	beq.n	844f0 <_svfiprintf_r+0x3ca>
   844e2:	2230      	movs	r2, #48	; 0x30
   844e4:	f88d 2038 	strb.w	r2, [sp, #56]	; 0x38
   844e8:	f88d 3039 	strb.w	r3, [sp, #57]	; 0x39
   844ec:	f047 0702 	orr.w	r7, r7, #2
   844f0:	2302      	movs	r3, #2
   844f2:	2200      	movs	r2, #0
   844f4:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   844f8:	e005      	b.n	84506 <_svfiprintf_r+0x3e0>
   844fa:	bf00      	nop
   844fc:	00085937 	.word	0x00085937
   84500:	00085926 	.word	0x00085926
   84504:	2301      	movs	r3, #1
   84506:	f1ba 0f00 	cmp.w	sl, #0
   8450a:	bfa8      	it	ge
   8450c:	f027 0780 	bicge.w	r7, r7, #128	; 0x80
   84510:	ea54 0105 	orrs.w	r1, r4, r5
   84514:	d102      	bne.n	8451c <_svfiprintf_r+0x3f6>
   84516:	f1ba 0f00 	cmp.w	sl, #0
   8451a:	d05e      	beq.n	845da <_svfiprintf_r+0x4b4>
   8451c:	2b01      	cmp	r3, #1
   8451e:	d01f      	beq.n	84560 <_svfiprintf_r+0x43a>
   84520:	2b02      	cmp	r3, #2
   84522:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
   84526:	d045      	beq.n	845b4 <_svfiprintf_r+0x48e>
   84528:	08e0      	lsrs	r0, r4, #3
   8452a:	ea40 7145 	orr.w	r1, r0, r5, lsl #29
   8452e:	08e8      	lsrs	r0, r5, #3
   84530:	f004 0207 	and.w	r2, r4, #7
   84534:	9106      	str	r1, [sp, #24]
   84536:	9007      	str	r0, [sp, #28]
   84538:	3230      	adds	r2, #48	; 0x30
   8453a:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
   8453e:	ea54 0105 	orrs.w	r1, r4, r5
   84542:	4699      	mov	r9, r3
   84544:	701a      	strb	r2, [r3, #0]
   84546:	f103 33ff 	add.w	r3, r3, #4294967295
   8454a:	d1ed      	bne.n	84528 <_svfiprintf_r+0x402>
   8454c:	07f8      	lsls	r0, r7, #31
   8454e:	4649      	mov	r1, r9
   84550:	d54e      	bpl.n	845f0 <_svfiprintf_r+0x4ca>
   84552:	2a30      	cmp	r2, #48	; 0x30
   84554:	d04c      	beq.n	845f0 <_svfiprintf_r+0x4ca>
   84556:	4699      	mov	r9, r3
   84558:	2330      	movs	r3, #48	; 0x30
   8455a:	f801 3c01 	strb.w	r3, [r1, #-1]
   8455e:	e047      	b.n	845f0 <_svfiprintf_r+0x4ca>
   84560:	2d00      	cmp	r5, #0
   84562:	bf08      	it	eq
   84564:	2c0a      	cmpeq	r4, #10
   84566:	d205      	bcs.n	84574 <_svfiprintf_r+0x44e>
   84568:	3430      	adds	r4, #48	; 0x30
   8456a:	f88d 406f 	strb.w	r4, [sp, #111]	; 0x6f
   8456e:	f10d 096f 	add.w	r9, sp, #111	; 0x6f
   84572:	e03d      	b.n	845f0 <_svfiprintf_r+0x4ca>
   84574:	f10d 026f 	add.w	r2, sp, #111	; 0x6f
   84578:	9203      	str	r2, [sp, #12]
   8457a:	4620      	mov	r0, r4
   8457c:	4629      	mov	r1, r5
   8457e:	220a      	movs	r2, #10
   84580:	2300      	movs	r3, #0
   84582:	f8cd c004 	str.w	ip, [sp, #4]
   84586:	f000 feb5 	bl	852f4 <__aeabi_uldivmod>
   8458a:	9b03      	ldr	r3, [sp, #12]
   8458c:	3230      	adds	r2, #48	; 0x30
   8458e:	f803 2901 	strb.w	r2, [r3], #-1
   84592:	4620      	mov	r0, r4
   84594:	4629      	mov	r1, r5
   84596:	f8dd 900c 	ldr.w	r9, [sp, #12]
   8459a:	220a      	movs	r2, #10
   8459c:	9303      	str	r3, [sp, #12]
   8459e:	2300      	movs	r3, #0
   845a0:	f000 fea8 	bl	852f4 <__aeabi_uldivmod>
   845a4:	4604      	mov	r4, r0
   845a6:	460d      	mov	r5, r1
   845a8:	ea54 0005 	orrs.w	r0, r4, r5
   845ac:	f8dd c004 	ldr.w	ip, [sp, #4]
   845b0:	d1e3      	bne.n	8457a <_svfiprintf_r+0x454>
   845b2:	e01d      	b.n	845f0 <_svfiprintf_r+0x4ca>
   845b4:	990a      	ldr	r1, [sp, #40]	; 0x28
   845b6:	f004 020f 	and.w	r2, r4, #15
   845ba:	5c8a      	ldrb	r2, [r1, r2]
   845bc:	4699      	mov	r9, r3
   845be:	f803 2901 	strb.w	r2, [r3], #-1
   845c2:	0922      	lsrs	r2, r4, #4
   845c4:	ea42 7005 	orr.w	r0, r2, r5, lsl #28
   845c8:	0929      	lsrs	r1, r5, #4
   845ca:	9008      	str	r0, [sp, #32]
   845cc:	9109      	str	r1, [sp, #36]	; 0x24
   845ce:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
   845d2:	ea54 0205 	orrs.w	r2, r4, r5
   845d6:	d1ed      	bne.n	845b4 <_svfiprintf_r+0x48e>
   845d8:	e00a      	b.n	845f0 <_svfiprintf_r+0x4ca>
   845da:	b93b      	cbnz	r3, 845ec <_svfiprintf_r+0x4c6>
   845dc:	07f9      	lsls	r1, r7, #31
   845de:	d505      	bpl.n	845ec <_svfiprintf_r+0x4c6>
   845e0:	f10d 09b0 	add.w	r9, sp, #176	; 0xb0
   845e4:	2330      	movs	r3, #48	; 0x30
   845e6:	f809 3d41 	strb.w	r3, [r9, #-65]!
   845ea:	e001      	b.n	845f0 <_svfiprintf_r+0x4ca>
   845ec:	f10d 0970 	add.w	r9, sp, #112	; 0x70
   845f0:	4655      	mov	r5, sl
   845f2:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
   845f6:	ebc9 0a0a 	rsb	sl, r9, sl
   845fa:	e00f      	b.n	8461c <_svfiprintf_r+0x4f6>
   845fc:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   84600:	2b00      	cmp	r3, #0
   84602:	f000 8171 	beq.w	848e8 <_svfiprintf_r+0x7c2>
   84606:	2500      	movs	r5, #0
   84608:	f88d 3048 	strb.w	r3, [sp, #72]	; 0x48
   8460c:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
   84610:	f04f 0a01 	mov.w	sl, #1
   84614:	f10d 0948 	add.w	r9, sp, #72	; 0x48
   84618:	e000      	b.n	8461c <_svfiprintf_r+0x4f6>
   8461a:	4605      	mov	r5, r0
   8461c:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
   84620:	45aa      	cmp	sl, r5
   84622:	bfac      	ite	ge
   84624:	4654      	movge	r4, sl
   84626:	462c      	movlt	r4, r5
   84628:	b103      	cbz	r3, 8462c <_svfiprintf_r+0x506>
   8462a:	3401      	adds	r4, #1
   8462c:	f017 0302 	ands.w	r3, r7, #2
   84630:	9303      	str	r3, [sp, #12]
   84632:	bf18      	it	ne
   84634:	3402      	addne	r4, #2
   84636:	f017 0384 	ands.w	r3, r7, #132	; 0x84
   8463a:	930b      	str	r3, [sp, #44]	; 0x2c
   8463c:	d13b      	bne.n	846b6 <_svfiprintf_r+0x590>
   8463e:	9804      	ldr	r0, [sp, #16]
   84640:	1b03      	subs	r3, r0, r4
   84642:	2b00      	cmp	r3, #0
   84644:	dd37      	ble.n	846b6 <_svfiprintf_r+0x590>
   84646:	4aa6      	ldr	r2, [pc, #664]	; (848e0 <_svfiprintf_r+0x7ba>)
   84648:	2b10      	cmp	r3, #16
   8464a:	f8cc 2000 	str.w	r2, [ip]
   8464e:	dd1b      	ble.n	84688 <_svfiprintf_r+0x562>
   84650:	2210      	movs	r2, #16
   84652:	f8cc 2004 	str.w	r2, [ip, #4]
   84656:	9a11      	ldr	r2, [sp, #68]	; 0x44
   84658:	3210      	adds	r2, #16
   8465a:	9211      	str	r2, [sp, #68]	; 0x44
   8465c:	9a10      	ldr	r2, [sp, #64]	; 0x40
   8465e:	3201      	adds	r2, #1
   84660:	2a07      	cmp	r2, #7
   84662:	9210      	str	r2, [sp, #64]	; 0x40
   84664:	dc02      	bgt.n	8466c <_svfiprintf_r+0x546>
   84666:	f10c 0c08 	add.w	ip, ip, #8
   8466a:	e00b      	b.n	84684 <_svfiprintf_r+0x55e>
   8466c:	4658      	mov	r0, fp
   8466e:	4641      	mov	r1, r8
   84670:	aa0f      	add	r2, sp, #60	; 0x3c
   84672:	9301      	str	r3, [sp, #4]
   84674:	f7ff fcde 	bl	84034 <__ssprint_r>
   84678:	9b01      	ldr	r3, [sp, #4]
   8467a:	2800      	cmp	r0, #0
   8467c:	f040 813b 	bne.w	848f6 <_svfiprintf_r+0x7d0>
   84680:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   84684:	3b10      	subs	r3, #16
   84686:	e7de      	b.n	84646 <_svfiprintf_r+0x520>
   84688:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8468a:	f8cc 3004 	str.w	r3, [ip, #4]
   8468e:	4413      	add	r3, r2
   84690:	9311      	str	r3, [sp, #68]	; 0x44
   84692:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84694:	3301      	adds	r3, #1
   84696:	2b07      	cmp	r3, #7
   84698:	9310      	str	r3, [sp, #64]	; 0x40
   8469a:	dc02      	bgt.n	846a2 <_svfiprintf_r+0x57c>
   8469c:	f10c 0c08 	add.w	ip, ip, #8
   846a0:	e009      	b.n	846b6 <_svfiprintf_r+0x590>
   846a2:	4658      	mov	r0, fp
   846a4:	4641      	mov	r1, r8
   846a6:	aa0f      	add	r2, sp, #60	; 0x3c
   846a8:	f7ff fcc4 	bl	84034 <__ssprint_r>
   846ac:	2800      	cmp	r0, #0
   846ae:	f040 8122 	bne.w	848f6 <_svfiprintf_r+0x7d0>
   846b2:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   846b6:	f89d 3037 	ldrb.w	r3, [sp, #55]	; 0x37
   846ba:	b1db      	cbz	r3, 846f4 <_svfiprintf_r+0x5ce>
   846bc:	f10d 0337 	add.w	r3, sp, #55	; 0x37
   846c0:	f8cc 3000 	str.w	r3, [ip]
   846c4:	2301      	movs	r3, #1
   846c6:	f8cc 3004 	str.w	r3, [ip, #4]
   846ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
   846cc:	3301      	adds	r3, #1
   846ce:	9311      	str	r3, [sp, #68]	; 0x44
   846d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
   846d2:	3301      	adds	r3, #1
   846d4:	2b07      	cmp	r3, #7
   846d6:	9310      	str	r3, [sp, #64]	; 0x40
   846d8:	dc02      	bgt.n	846e0 <_svfiprintf_r+0x5ba>
   846da:	f10c 0c08 	add.w	ip, ip, #8
   846de:	e009      	b.n	846f4 <_svfiprintf_r+0x5ce>
   846e0:	4658      	mov	r0, fp
   846e2:	4641      	mov	r1, r8
   846e4:	aa0f      	add	r2, sp, #60	; 0x3c
   846e6:	f7ff fca5 	bl	84034 <__ssprint_r>
   846ea:	2800      	cmp	r0, #0
   846ec:	f040 8103 	bne.w	848f6 <_svfiprintf_r+0x7d0>
   846f0:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   846f4:	9b03      	ldr	r3, [sp, #12]
   846f6:	b1d3      	cbz	r3, 8472e <_svfiprintf_r+0x608>
   846f8:	ab0e      	add	r3, sp, #56	; 0x38
   846fa:	f8cc 3000 	str.w	r3, [ip]
   846fe:	2302      	movs	r3, #2
   84700:	f8cc 3004 	str.w	r3, [ip, #4]
   84704:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84706:	3302      	adds	r3, #2
   84708:	9311      	str	r3, [sp, #68]	; 0x44
   8470a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8470c:	3301      	adds	r3, #1
   8470e:	2b07      	cmp	r3, #7
   84710:	9310      	str	r3, [sp, #64]	; 0x40
   84712:	dc02      	bgt.n	8471a <_svfiprintf_r+0x5f4>
   84714:	f10c 0c08 	add.w	ip, ip, #8
   84718:	e009      	b.n	8472e <_svfiprintf_r+0x608>
   8471a:	4658      	mov	r0, fp
   8471c:	4641      	mov	r1, r8
   8471e:	aa0f      	add	r2, sp, #60	; 0x3c
   84720:	f7ff fc88 	bl	84034 <__ssprint_r>
   84724:	2800      	cmp	r0, #0
   84726:	f040 80e6 	bne.w	848f6 <_svfiprintf_r+0x7d0>
   8472a:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   8472e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84730:	2b80      	cmp	r3, #128	; 0x80
   84732:	d13f      	bne.n	847b4 <_svfiprintf_r+0x68e>
   84734:	9b04      	ldr	r3, [sp, #16]
   84736:	1b1b      	subs	r3, r3, r4
   84738:	2b00      	cmp	r3, #0
   8473a:	9303      	str	r3, [sp, #12]
   8473c:	dd3a      	ble.n	847b4 <_svfiprintf_r+0x68e>
   8473e:	9b03      	ldr	r3, [sp, #12]
   84740:	2b10      	cmp	r3, #16
   84742:	4b68      	ldr	r3, [pc, #416]	; (848e4 <_svfiprintf_r+0x7be>)
   84744:	f8cc 3000 	str.w	r3, [ip]
   84748:	dd1b      	ble.n	84782 <_svfiprintf_r+0x65c>
   8474a:	2310      	movs	r3, #16
   8474c:	f8cc 3004 	str.w	r3, [ip, #4]
   84750:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84752:	3310      	adds	r3, #16
   84754:	9311      	str	r3, [sp, #68]	; 0x44
   84756:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84758:	3301      	adds	r3, #1
   8475a:	2b07      	cmp	r3, #7
   8475c:	9310      	str	r3, [sp, #64]	; 0x40
   8475e:	dc02      	bgt.n	84766 <_svfiprintf_r+0x640>
   84760:	f10c 0c08 	add.w	ip, ip, #8
   84764:	e009      	b.n	8477a <_svfiprintf_r+0x654>
   84766:	4658      	mov	r0, fp
   84768:	4641      	mov	r1, r8
   8476a:	aa0f      	add	r2, sp, #60	; 0x3c
   8476c:	f7ff fc62 	bl	84034 <__ssprint_r>
   84770:	2800      	cmp	r0, #0
   84772:	f040 80c0 	bne.w	848f6 <_svfiprintf_r+0x7d0>
   84776:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   8477a:	9b03      	ldr	r3, [sp, #12]
   8477c:	3b10      	subs	r3, #16
   8477e:	9303      	str	r3, [sp, #12]
   84780:	e7dd      	b.n	8473e <_svfiprintf_r+0x618>
   84782:	9b03      	ldr	r3, [sp, #12]
   84784:	9803      	ldr	r0, [sp, #12]
   84786:	f8cc 3004 	str.w	r3, [ip, #4]
   8478a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8478c:	4403      	add	r3, r0
   8478e:	9311      	str	r3, [sp, #68]	; 0x44
   84790:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84792:	3301      	adds	r3, #1
   84794:	2b07      	cmp	r3, #7
   84796:	9310      	str	r3, [sp, #64]	; 0x40
   84798:	dc02      	bgt.n	847a0 <_svfiprintf_r+0x67a>
   8479a:	f10c 0c08 	add.w	ip, ip, #8
   8479e:	e009      	b.n	847b4 <_svfiprintf_r+0x68e>
   847a0:	4658      	mov	r0, fp
   847a2:	4641      	mov	r1, r8
   847a4:	aa0f      	add	r2, sp, #60	; 0x3c
   847a6:	f7ff fc45 	bl	84034 <__ssprint_r>
   847aa:	2800      	cmp	r0, #0
   847ac:	f040 80a3 	bne.w	848f6 <_svfiprintf_r+0x7d0>
   847b0:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   847b4:	ebca 0505 	rsb	r5, sl, r5
   847b8:	2d00      	cmp	r5, #0
   847ba:	dd34      	ble.n	84826 <_svfiprintf_r+0x700>
   847bc:	4b49      	ldr	r3, [pc, #292]	; (848e4 <_svfiprintf_r+0x7be>)
   847be:	2d10      	cmp	r5, #16
   847c0:	f8cc 3000 	str.w	r3, [ip]
   847c4:	dd19      	ble.n	847fa <_svfiprintf_r+0x6d4>
   847c6:	2310      	movs	r3, #16
   847c8:	f8cc 3004 	str.w	r3, [ip, #4]
   847cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
   847ce:	3310      	adds	r3, #16
   847d0:	9311      	str	r3, [sp, #68]	; 0x44
   847d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   847d4:	3301      	adds	r3, #1
   847d6:	2b07      	cmp	r3, #7
   847d8:	9310      	str	r3, [sp, #64]	; 0x40
   847da:	dc02      	bgt.n	847e2 <_svfiprintf_r+0x6bc>
   847dc:	f10c 0c08 	add.w	ip, ip, #8
   847e0:	e009      	b.n	847f6 <_svfiprintf_r+0x6d0>
   847e2:	4658      	mov	r0, fp
   847e4:	4641      	mov	r1, r8
   847e6:	aa0f      	add	r2, sp, #60	; 0x3c
   847e8:	f7ff fc24 	bl	84034 <__ssprint_r>
   847ec:	2800      	cmp	r0, #0
   847ee:	f040 8082 	bne.w	848f6 <_svfiprintf_r+0x7d0>
   847f2:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   847f6:	3d10      	subs	r5, #16
   847f8:	e7e0      	b.n	847bc <_svfiprintf_r+0x696>
   847fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
   847fc:	f8cc 5004 	str.w	r5, [ip, #4]
   84800:	441d      	add	r5, r3
   84802:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84804:	9511      	str	r5, [sp, #68]	; 0x44
   84806:	3301      	adds	r3, #1
   84808:	2b07      	cmp	r3, #7
   8480a:	9310      	str	r3, [sp, #64]	; 0x40
   8480c:	dc02      	bgt.n	84814 <_svfiprintf_r+0x6ee>
   8480e:	f10c 0c08 	add.w	ip, ip, #8
   84812:	e008      	b.n	84826 <_svfiprintf_r+0x700>
   84814:	4658      	mov	r0, fp
   84816:	4641      	mov	r1, r8
   84818:	aa0f      	add	r2, sp, #60	; 0x3c
   8481a:	f7ff fc0b 	bl	84034 <__ssprint_r>
   8481e:	2800      	cmp	r0, #0
   84820:	d169      	bne.n	848f6 <_svfiprintf_r+0x7d0>
   84822:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   84826:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84828:	e88c 0600 	stmia.w	ip, {r9, sl}
   8482c:	4453      	add	r3, sl
   8482e:	9311      	str	r3, [sp, #68]	; 0x44
   84830:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84832:	3301      	adds	r3, #1
   84834:	2b07      	cmp	r3, #7
   84836:	9310      	str	r3, [sp, #64]	; 0x40
   84838:	dc02      	bgt.n	84840 <_svfiprintf_r+0x71a>
   8483a:	f10c 0308 	add.w	r3, ip, #8
   8483e:	e007      	b.n	84850 <_svfiprintf_r+0x72a>
   84840:	4658      	mov	r0, fp
   84842:	4641      	mov	r1, r8
   84844:	aa0f      	add	r2, sp, #60	; 0x3c
   84846:	f7ff fbf5 	bl	84034 <__ssprint_r>
   8484a:	2800      	cmp	r0, #0
   8484c:	d153      	bne.n	848f6 <_svfiprintf_r+0x7d0>
   8484e:	ab1c      	add	r3, sp, #112	; 0x70
   84850:	077a      	lsls	r2, r7, #29
   84852:	d40a      	bmi.n	8486a <_svfiprintf_r+0x744>
   84854:	9d05      	ldr	r5, [sp, #20]
   84856:	9804      	ldr	r0, [sp, #16]
   84858:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8485a:	4284      	cmp	r4, r0
   8485c:	bfac      	ite	ge
   8485e:	192d      	addge	r5, r5, r4
   84860:	182d      	addlt	r5, r5, r0
   84862:	9505      	str	r5, [sp, #20]
   84864:	2b00      	cmp	r3, #0
   84866:	d035      	beq.n	848d4 <_svfiprintf_r+0x7ae>
   84868:	e02e      	b.n	848c8 <_svfiprintf_r+0x7a2>
   8486a:	9904      	ldr	r1, [sp, #16]
   8486c:	1b0d      	subs	r5, r1, r4
   8486e:	2d00      	cmp	r5, #0
   84870:	ddf0      	ble.n	84854 <_svfiprintf_r+0x72e>
   84872:	4a1b      	ldr	r2, [pc, #108]	; (848e0 <_svfiprintf_r+0x7ba>)
   84874:	2d10      	cmp	r5, #16
   84876:	601a      	str	r2, [r3, #0]
   84878:	dd15      	ble.n	848a6 <_svfiprintf_r+0x780>
   8487a:	2210      	movs	r2, #16
   8487c:	605a      	str	r2, [r3, #4]
   8487e:	9a11      	ldr	r2, [sp, #68]	; 0x44
   84880:	3210      	adds	r2, #16
   84882:	9211      	str	r2, [sp, #68]	; 0x44
   84884:	9a10      	ldr	r2, [sp, #64]	; 0x40
   84886:	3201      	adds	r2, #1
   84888:	2a07      	cmp	r2, #7
   8488a:	9210      	str	r2, [sp, #64]	; 0x40
   8488c:	dc01      	bgt.n	84892 <_svfiprintf_r+0x76c>
   8488e:	3308      	adds	r3, #8
   84890:	e007      	b.n	848a2 <_svfiprintf_r+0x77c>
   84892:	4658      	mov	r0, fp
   84894:	4641      	mov	r1, r8
   84896:	aa0f      	add	r2, sp, #60	; 0x3c
   84898:	f7ff fbcc 	bl	84034 <__ssprint_r>
   8489c:	2800      	cmp	r0, #0
   8489e:	d12a      	bne.n	848f6 <_svfiprintf_r+0x7d0>
   848a0:	ab1c      	add	r3, sp, #112	; 0x70
   848a2:	3d10      	subs	r5, #16
   848a4:	e7e5      	b.n	84872 <_svfiprintf_r+0x74c>
   848a6:	605d      	str	r5, [r3, #4]
   848a8:	9b11      	ldr	r3, [sp, #68]	; 0x44
   848aa:	441d      	add	r5, r3
   848ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
   848ae:	9511      	str	r5, [sp, #68]	; 0x44
   848b0:	3301      	adds	r3, #1
   848b2:	2b07      	cmp	r3, #7
   848b4:	9310      	str	r3, [sp, #64]	; 0x40
   848b6:	ddcd      	ble.n	84854 <_svfiprintf_r+0x72e>
   848b8:	4658      	mov	r0, fp
   848ba:	4641      	mov	r1, r8
   848bc:	aa0f      	add	r2, sp, #60	; 0x3c
   848be:	f7ff fbb9 	bl	84034 <__ssprint_r>
   848c2:	2800      	cmp	r0, #0
   848c4:	d0c6      	beq.n	84854 <_svfiprintf_r+0x72e>
   848c6:	e016      	b.n	848f6 <_svfiprintf_r+0x7d0>
   848c8:	4658      	mov	r0, fp
   848ca:	4641      	mov	r1, r8
   848cc:	aa0f      	add	r2, sp, #60	; 0x3c
   848ce:	f7ff fbb1 	bl	84034 <__ssprint_r>
   848d2:	b980      	cbnz	r0, 848f6 <_svfiprintf_r+0x7d0>
   848d4:	2300      	movs	r3, #0
   848d6:	9310      	str	r3, [sp, #64]	; 0x40
   848d8:	f10d 0c70 	add.w	ip, sp, #112	; 0x70
   848dc:	e449      	b.n	84172 <_svfiprintf_r+0x4c>
   848de:	bf00      	nop
   848e0:	00085a88 	.word	0x00085a88
   848e4:	00085a98 	.word	0x00085a98
   848e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
   848ea:	b123      	cbz	r3, 848f6 <_svfiprintf_r+0x7d0>
   848ec:	4658      	mov	r0, fp
   848ee:	4641      	mov	r1, r8
   848f0:	aa0f      	add	r2, sp, #60	; 0x3c
   848f2:	f7ff fb9f 	bl	84034 <__ssprint_r>
   848f6:	f8b8 300c 	ldrh.w	r3, [r8, #12]
   848fa:	9805      	ldr	r0, [sp, #20]
   848fc:	f013 0f40 	tst.w	r3, #64	; 0x40
   84900:	bf18      	it	ne
   84902:	f04f 30ff 	movne.w	r0, #4294967295
   84906:	b02d      	add	sp, #180	; 0xb4
   84908:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0008490c <__register_exitproc>:
   8490c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   84910:	4698      	mov	r8, r3
   84912:	4b22      	ldr	r3, [pc, #136]	; (8499c <__register_exitproc+0x90>)
   84914:	4606      	mov	r6, r0
   84916:	681c      	ldr	r4, [r3, #0]
   84918:	460f      	mov	r7, r1
   8491a:	f8d4 0148 	ldr.w	r0, [r4, #328]	; 0x148
   8491e:	4691      	mov	r9, r2
   84920:	b918      	cbnz	r0, 8492a <__register_exitproc+0x1e>
   84922:	f504 70a6 	add.w	r0, r4, #332	; 0x14c
   84926:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
   8492a:	6843      	ldr	r3, [r0, #4]
   8492c:	2b1f      	cmp	r3, #31
   8492e:	dd16      	ble.n	8495e <__register_exitproc+0x52>
   84930:	4b1b      	ldr	r3, [pc, #108]	; (849a0 <__register_exitproc+0x94>)
   84932:	b91b      	cbnz	r3, 8493c <__register_exitproc+0x30>
   84934:	f04f 30ff 	mov.w	r0, #4294967295
   84938:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8493c:	f44f 70c8 	mov.w	r0, #400	; 0x190
   84940:	f3af 8000 	nop.w
   84944:	2800      	cmp	r0, #0
   84946:	d0f5      	beq.n	84934 <__register_exitproc+0x28>
   84948:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   8494c:	2500      	movs	r5, #0
   8494e:	6045      	str	r5, [r0, #4]
   84950:	6001      	str	r1, [r0, #0]
   84952:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
   84956:	f8c0 5188 	str.w	r5, [r0, #392]	; 0x188
   8495a:	f8c0 518c 	str.w	r5, [r0, #396]	; 0x18c
   8495e:	6844      	ldr	r4, [r0, #4]
   84960:	b1a6      	cbz	r6, 8498c <__register_exitproc+0x80>
   84962:	2201      	movs	r2, #1
   84964:	40a2      	lsls	r2, r4
   84966:	eb00 0584 	add.w	r5, r0, r4, lsl #2
   8496a:	f8c5 9088 	str.w	r9, [r5, #136]	; 0x88
   8496e:	f8d0 1188 	ldr.w	r1, [r0, #392]	; 0x188
   84972:	2e02      	cmp	r6, #2
   84974:	ea41 0102 	orr.w	r1, r1, r2
   84978:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
   8497c:	f8c5 8108 	str.w	r8, [r5, #264]	; 0x108
   84980:	d104      	bne.n	8498c <__register_exitproc+0x80>
   84982:	f8d0 318c 	ldr.w	r3, [r0, #396]	; 0x18c
   84986:	431a      	orrs	r2, r3
   84988:	f8c0 218c 	str.w	r2, [r0, #396]	; 0x18c
   8498c:	1c63      	adds	r3, r4, #1
   8498e:	3402      	adds	r4, #2
   84990:	6043      	str	r3, [r0, #4]
   84992:	f840 7024 	str.w	r7, [r0, r4, lsl #2]
   84996:	2000      	movs	r0, #0
   84998:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8499c:	000858f0 	.word	0x000858f0
   849a0:	00000000 	.word	0x00000000

000849a4 <_calloc_r>:
   849a4:	b510      	push	{r4, lr}
   849a6:	4351      	muls	r1, r2
   849a8:	f7fe fb38 	bl	8301c <_malloc_r>
   849ac:	4604      	mov	r4, r0
   849ae:	b320      	cbz	r0, 849fa <_calloc_r+0x56>
   849b0:	f850 2c04 	ldr.w	r2, [r0, #-4]
   849b4:	f022 0203 	bic.w	r2, r2, #3
   849b8:	3a04      	subs	r2, #4
   849ba:	2a24      	cmp	r2, #36	; 0x24
   849bc:	d81a      	bhi.n	849f4 <_calloc_r+0x50>
   849be:	2a13      	cmp	r2, #19
   849c0:	d912      	bls.n	849e8 <_calloc_r+0x44>
   849c2:	2100      	movs	r1, #0
   849c4:	2a1b      	cmp	r2, #27
   849c6:	6001      	str	r1, [r0, #0]
   849c8:	6041      	str	r1, [r0, #4]
   849ca:	d802      	bhi.n	849d2 <_calloc_r+0x2e>
   849cc:	f100 0308 	add.w	r3, r0, #8
   849d0:	e00b      	b.n	849ea <_calloc_r+0x46>
   849d2:	2a24      	cmp	r2, #36	; 0x24
   849d4:	6081      	str	r1, [r0, #8]
   849d6:	60c1      	str	r1, [r0, #12]
   849d8:	bf11      	iteee	ne
   849da:	f100 0310 	addne.w	r3, r0, #16
   849de:	6101      	streq	r1, [r0, #16]
   849e0:	f100 0318 	addeq.w	r3, r0, #24
   849e4:	6141      	streq	r1, [r0, #20]
   849e6:	e000      	b.n	849ea <_calloc_r+0x46>
   849e8:	4603      	mov	r3, r0
   849ea:	2200      	movs	r2, #0
   849ec:	601a      	str	r2, [r3, #0]
   849ee:	605a      	str	r2, [r3, #4]
   849f0:	609a      	str	r2, [r3, #8]
   849f2:	e002      	b.n	849fa <_calloc_r+0x56>
   849f4:	2100      	movs	r1, #0
   849f6:	f7fc fb77 	bl	810e8 <memset>
   849fa:	4620      	mov	r0, r4
   849fc:	bd10      	pop	{r4, pc}
	...

00084a00 <__aeabi_drsub>:
   84a00:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   84a04:	e002      	b.n	84a0c <__adddf3>
   84a06:	bf00      	nop

00084a08 <__aeabi_dsub>:
   84a08:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00084a0c <__adddf3>:
   84a0c:	b530      	push	{r4, r5, lr}
   84a0e:	ea4f 0441 	mov.w	r4, r1, lsl #1
   84a12:	ea4f 0543 	mov.w	r5, r3, lsl #1
   84a16:	ea94 0f05 	teq	r4, r5
   84a1a:	bf08      	it	eq
   84a1c:	ea90 0f02 	teqeq	r0, r2
   84a20:	bf1f      	itttt	ne
   84a22:	ea54 0c00 	orrsne.w	ip, r4, r0
   84a26:	ea55 0c02 	orrsne.w	ip, r5, r2
   84a2a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   84a2e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84a32:	f000 80e2 	beq.w	84bfa <__adddf3+0x1ee>
   84a36:	ea4f 5454 	mov.w	r4, r4, lsr #21
   84a3a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   84a3e:	bfb8      	it	lt
   84a40:	426d      	neglt	r5, r5
   84a42:	dd0c      	ble.n	84a5e <__adddf3+0x52>
   84a44:	442c      	add	r4, r5
   84a46:	ea80 0202 	eor.w	r2, r0, r2
   84a4a:	ea81 0303 	eor.w	r3, r1, r3
   84a4e:	ea82 0000 	eor.w	r0, r2, r0
   84a52:	ea83 0101 	eor.w	r1, r3, r1
   84a56:	ea80 0202 	eor.w	r2, r0, r2
   84a5a:	ea81 0303 	eor.w	r3, r1, r3
   84a5e:	2d36      	cmp	r5, #54	; 0x36
   84a60:	bf88      	it	hi
   84a62:	bd30      	pophi	{r4, r5, pc}
   84a64:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   84a68:	ea4f 3101 	mov.w	r1, r1, lsl #12
   84a6c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   84a70:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   84a74:	d002      	beq.n	84a7c <__adddf3+0x70>
   84a76:	4240      	negs	r0, r0
   84a78:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84a7c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   84a80:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84a84:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   84a88:	d002      	beq.n	84a90 <__adddf3+0x84>
   84a8a:	4252      	negs	r2, r2
   84a8c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   84a90:	ea94 0f05 	teq	r4, r5
   84a94:	f000 80a7 	beq.w	84be6 <__adddf3+0x1da>
   84a98:	f1a4 0401 	sub.w	r4, r4, #1
   84a9c:	f1d5 0e20 	rsbs	lr, r5, #32
   84aa0:	db0d      	blt.n	84abe <__adddf3+0xb2>
   84aa2:	fa02 fc0e 	lsl.w	ip, r2, lr
   84aa6:	fa22 f205 	lsr.w	r2, r2, r5
   84aaa:	1880      	adds	r0, r0, r2
   84aac:	f141 0100 	adc.w	r1, r1, #0
   84ab0:	fa03 f20e 	lsl.w	r2, r3, lr
   84ab4:	1880      	adds	r0, r0, r2
   84ab6:	fa43 f305 	asr.w	r3, r3, r5
   84aba:	4159      	adcs	r1, r3
   84abc:	e00e      	b.n	84adc <__adddf3+0xd0>
   84abe:	f1a5 0520 	sub.w	r5, r5, #32
   84ac2:	f10e 0e20 	add.w	lr, lr, #32
   84ac6:	2a01      	cmp	r2, #1
   84ac8:	fa03 fc0e 	lsl.w	ip, r3, lr
   84acc:	bf28      	it	cs
   84ace:	f04c 0c02 	orrcs.w	ip, ip, #2
   84ad2:	fa43 f305 	asr.w	r3, r3, r5
   84ad6:	18c0      	adds	r0, r0, r3
   84ad8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   84adc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84ae0:	d507      	bpl.n	84af2 <__adddf3+0xe6>
   84ae2:	f04f 0e00 	mov.w	lr, #0
   84ae6:	f1dc 0c00 	rsbs	ip, ip, #0
   84aea:	eb7e 0000 	sbcs.w	r0, lr, r0
   84aee:	eb6e 0101 	sbc.w	r1, lr, r1
   84af2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   84af6:	d31b      	bcc.n	84b30 <__adddf3+0x124>
   84af8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   84afc:	d30c      	bcc.n	84b18 <__adddf3+0x10c>
   84afe:	0849      	lsrs	r1, r1, #1
   84b00:	ea5f 0030 	movs.w	r0, r0, rrx
   84b04:	ea4f 0c3c 	mov.w	ip, ip, rrx
   84b08:	f104 0401 	add.w	r4, r4, #1
   84b0c:	ea4f 5244 	mov.w	r2, r4, lsl #21
   84b10:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   84b14:	f080 809a 	bcs.w	84c4c <__adddf3+0x240>
   84b18:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   84b1c:	bf08      	it	eq
   84b1e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   84b22:	f150 0000 	adcs.w	r0, r0, #0
   84b26:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84b2a:	ea41 0105 	orr.w	r1, r1, r5
   84b2e:	bd30      	pop	{r4, r5, pc}
   84b30:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   84b34:	4140      	adcs	r0, r0
   84b36:	eb41 0101 	adc.w	r1, r1, r1
   84b3a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84b3e:	f1a4 0401 	sub.w	r4, r4, #1
   84b42:	d1e9      	bne.n	84b18 <__adddf3+0x10c>
   84b44:	f091 0f00 	teq	r1, #0
   84b48:	bf04      	itt	eq
   84b4a:	4601      	moveq	r1, r0
   84b4c:	2000      	moveq	r0, #0
   84b4e:	fab1 f381 	clz	r3, r1
   84b52:	bf08      	it	eq
   84b54:	3320      	addeq	r3, #32
   84b56:	f1a3 030b 	sub.w	r3, r3, #11
   84b5a:	f1b3 0220 	subs.w	r2, r3, #32
   84b5e:	da0c      	bge.n	84b7a <__adddf3+0x16e>
   84b60:	320c      	adds	r2, #12
   84b62:	dd08      	ble.n	84b76 <__adddf3+0x16a>
   84b64:	f102 0c14 	add.w	ip, r2, #20
   84b68:	f1c2 020c 	rsb	r2, r2, #12
   84b6c:	fa01 f00c 	lsl.w	r0, r1, ip
   84b70:	fa21 f102 	lsr.w	r1, r1, r2
   84b74:	e00c      	b.n	84b90 <__adddf3+0x184>
   84b76:	f102 0214 	add.w	r2, r2, #20
   84b7a:	bfd8      	it	le
   84b7c:	f1c2 0c20 	rsble	ip, r2, #32
   84b80:	fa01 f102 	lsl.w	r1, r1, r2
   84b84:	fa20 fc0c 	lsr.w	ip, r0, ip
   84b88:	bfdc      	itt	le
   84b8a:	ea41 010c 	orrle.w	r1, r1, ip
   84b8e:	4090      	lslle	r0, r2
   84b90:	1ae4      	subs	r4, r4, r3
   84b92:	bfa2      	ittt	ge
   84b94:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   84b98:	4329      	orrge	r1, r5
   84b9a:	bd30      	popge	{r4, r5, pc}
   84b9c:	ea6f 0404 	mvn.w	r4, r4
   84ba0:	3c1f      	subs	r4, #31
   84ba2:	da1c      	bge.n	84bde <__adddf3+0x1d2>
   84ba4:	340c      	adds	r4, #12
   84ba6:	dc0e      	bgt.n	84bc6 <__adddf3+0x1ba>
   84ba8:	f104 0414 	add.w	r4, r4, #20
   84bac:	f1c4 0220 	rsb	r2, r4, #32
   84bb0:	fa20 f004 	lsr.w	r0, r0, r4
   84bb4:	fa01 f302 	lsl.w	r3, r1, r2
   84bb8:	ea40 0003 	orr.w	r0, r0, r3
   84bbc:	fa21 f304 	lsr.w	r3, r1, r4
   84bc0:	ea45 0103 	orr.w	r1, r5, r3
   84bc4:	bd30      	pop	{r4, r5, pc}
   84bc6:	f1c4 040c 	rsb	r4, r4, #12
   84bca:	f1c4 0220 	rsb	r2, r4, #32
   84bce:	fa20 f002 	lsr.w	r0, r0, r2
   84bd2:	fa01 f304 	lsl.w	r3, r1, r4
   84bd6:	ea40 0003 	orr.w	r0, r0, r3
   84bda:	4629      	mov	r1, r5
   84bdc:	bd30      	pop	{r4, r5, pc}
   84bde:	fa21 f004 	lsr.w	r0, r1, r4
   84be2:	4629      	mov	r1, r5
   84be4:	bd30      	pop	{r4, r5, pc}
   84be6:	f094 0f00 	teq	r4, #0
   84bea:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   84bee:	bf06      	itte	eq
   84bf0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   84bf4:	3401      	addeq	r4, #1
   84bf6:	3d01      	subne	r5, #1
   84bf8:	e74e      	b.n	84a98 <__adddf3+0x8c>
   84bfa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84bfe:	bf18      	it	ne
   84c00:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84c04:	d029      	beq.n	84c5a <__adddf3+0x24e>
   84c06:	ea94 0f05 	teq	r4, r5
   84c0a:	bf08      	it	eq
   84c0c:	ea90 0f02 	teqeq	r0, r2
   84c10:	d005      	beq.n	84c1e <__adddf3+0x212>
   84c12:	ea54 0c00 	orrs.w	ip, r4, r0
   84c16:	bf04      	itt	eq
   84c18:	4619      	moveq	r1, r3
   84c1a:	4610      	moveq	r0, r2
   84c1c:	bd30      	pop	{r4, r5, pc}
   84c1e:	ea91 0f03 	teq	r1, r3
   84c22:	bf1e      	ittt	ne
   84c24:	2100      	movne	r1, #0
   84c26:	2000      	movne	r0, #0
   84c28:	bd30      	popne	{r4, r5, pc}
   84c2a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   84c2e:	d105      	bne.n	84c3c <__adddf3+0x230>
   84c30:	0040      	lsls	r0, r0, #1
   84c32:	4149      	adcs	r1, r1
   84c34:	bf28      	it	cs
   84c36:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   84c3a:	bd30      	pop	{r4, r5, pc}
   84c3c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   84c40:	bf3c      	itt	cc
   84c42:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   84c46:	bd30      	popcc	{r4, r5, pc}
   84c48:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84c4c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   84c50:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   84c54:	f04f 0000 	mov.w	r0, #0
   84c58:	bd30      	pop	{r4, r5, pc}
   84c5a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84c5e:	bf1a      	itte	ne
   84c60:	4619      	movne	r1, r3
   84c62:	4610      	movne	r0, r2
   84c64:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   84c68:	bf1c      	itt	ne
   84c6a:	460b      	movne	r3, r1
   84c6c:	4602      	movne	r2, r0
   84c6e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   84c72:	bf06      	itte	eq
   84c74:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   84c78:	ea91 0f03 	teqeq	r1, r3
   84c7c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   84c80:	bd30      	pop	{r4, r5, pc}
   84c82:	bf00      	nop

00084c84 <__aeabi_ui2d>:
   84c84:	f090 0f00 	teq	r0, #0
   84c88:	bf04      	itt	eq
   84c8a:	2100      	moveq	r1, #0
   84c8c:	4770      	bxeq	lr
   84c8e:	b530      	push	{r4, r5, lr}
   84c90:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84c94:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84c98:	f04f 0500 	mov.w	r5, #0
   84c9c:	f04f 0100 	mov.w	r1, #0
   84ca0:	e750      	b.n	84b44 <__adddf3+0x138>
   84ca2:	bf00      	nop

00084ca4 <__aeabi_i2d>:
   84ca4:	f090 0f00 	teq	r0, #0
   84ca8:	bf04      	itt	eq
   84caa:	2100      	moveq	r1, #0
   84cac:	4770      	bxeq	lr
   84cae:	b530      	push	{r4, r5, lr}
   84cb0:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84cb4:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84cb8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   84cbc:	bf48      	it	mi
   84cbe:	4240      	negmi	r0, r0
   84cc0:	f04f 0100 	mov.w	r1, #0
   84cc4:	e73e      	b.n	84b44 <__adddf3+0x138>
   84cc6:	bf00      	nop

00084cc8 <__aeabi_f2d>:
   84cc8:	0042      	lsls	r2, r0, #1
   84cca:	ea4f 01e2 	mov.w	r1, r2, asr #3
   84cce:	ea4f 0131 	mov.w	r1, r1, rrx
   84cd2:	ea4f 7002 	mov.w	r0, r2, lsl #28
   84cd6:	bf1f      	itttt	ne
   84cd8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   84cdc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84ce0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   84ce4:	4770      	bxne	lr
   84ce6:	f092 0f00 	teq	r2, #0
   84cea:	bf14      	ite	ne
   84cec:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84cf0:	4770      	bxeq	lr
   84cf2:	b530      	push	{r4, r5, lr}
   84cf4:	f44f 7460 	mov.w	r4, #896	; 0x380
   84cf8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84cfc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84d00:	e720      	b.n	84b44 <__adddf3+0x138>
   84d02:	bf00      	nop

00084d04 <__aeabi_ul2d>:
   84d04:	ea50 0201 	orrs.w	r2, r0, r1
   84d08:	bf08      	it	eq
   84d0a:	4770      	bxeq	lr
   84d0c:	b530      	push	{r4, r5, lr}
   84d0e:	f04f 0500 	mov.w	r5, #0
   84d12:	e00a      	b.n	84d2a <__aeabi_l2d+0x16>

00084d14 <__aeabi_l2d>:
   84d14:	ea50 0201 	orrs.w	r2, r0, r1
   84d18:	bf08      	it	eq
   84d1a:	4770      	bxeq	lr
   84d1c:	b530      	push	{r4, r5, lr}
   84d1e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   84d22:	d502      	bpl.n	84d2a <__aeabi_l2d+0x16>
   84d24:	4240      	negs	r0, r0
   84d26:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84d2a:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84d2e:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84d32:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   84d36:	f43f aedc 	beq.w	84af2 <__adddf3+0xe6>
   84d3a:	f04f 0203 	mov.w	r2, #3
   84d3e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84d42:	bf18      	it	ne
   84d44:	3203      	addne	r2, #3
   84d46:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84d4a:	bf18      	it	ne
   84d4c:	3203      	addne	r2, #3
   84d4e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   84d52:	f1c2 0320 	rsb	r3, r2, #32
   84d56:	fa00 fc03 	lsl.w	ip, r0, r3
   84d5a:	fa20 f002 	lsr.w	r0, r0, r2
   84d5e:	fa01 fe03 	lsl.w	lr, r1, r3
   84d62:	ea40 000e 	orr.w	r0, r0, lr
   84d66:	fa21 f102 	lsr.w	r1, r1, r2
   84d6a:	4414      	add	r4, r2
   84d6c:	e6c1      	b.n	84af2 <__adddf3+0xe6>
   84d6e:	bf00      	nop

00084d70 <__aeabi_dmul>:
   84d70:	b570      	push	{r4, r5, r6, lr}
   84d72:	f04f 0cff 	mov.w	ip, #255	; 0xff
   84d76:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   84d7a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   84d7e:	bf1d      	ittte	ne
   84d80:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   84d84:	ea94 0f0c 	teqne	r4, ip
   84d88:	ea95 0f0c 	teqne	r5, ip
   84d8c:	f000 f8de 	bleq	84f4c <__aeabi_dmul+0x1dc>
   84d90:	442c      	add	r4, r5
   84d92:	ea81 0603 	eor.w	r6, r1, r3
   84d96:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   84d9a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   84d9e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   84da2:	bf18      	it	ne
   84da4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   84da8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84dac:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   84db0:	d038      	beq.n	84e24 <__aeabi_dmul+0xb4>
   84db2:	fba0 ce02 	umull	ip, lr, r0, r2
   84db6:	f04f 0500 	mov.w	r5, #0
   84dba:	fbe1 e502 	umlal	lr, r5, r1, r2
   84dbe:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   84dc2:	fbe0 e503 	umlal	lr, r5, r0, r3
   84dc6:	f04f 0600 	mov.w	r6, #0
   84dca:	fbe1 5603 	umlal	r5, r6, r1, r3
   84dce:	f09c 0f00 	teq	ip, #0
   84dd2:	bf18      	it	ne
   84dd4:	f04e 0e01 	orrne.w	lr, lr, #1
   84dd8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   84ddc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   84de0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   84de4:	d204      	bcs.n	84df0 <__aeabi_dmul+0x80>
   84de6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   84dea:	416d      	adcs	r5, r5
   84dec:	eb46 0606 	adc.w	r6, r6, r6
   84df0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   84df4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   84df8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   84dfc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   84e00:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   84e04:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   84e08:	bf88      	it	hi
   84e0a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   84e0e:	d81e      	bhi.n	84e4e <__aeabi_dmul+0xde>
   84e10:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   84e14:	bf08      	it	eq
   84e16:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   84e1a:	f150 0000 	adcs.w	r0, r0, #0
   84e1e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84e22:	bd70      	pop	{r4, r5, r6, pc}
   84e24:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   84e28:	ea46 0101 	orr.w	r1, r6, r1
   84e2c:	ea40 0002 	orr.w	r0, r0, r2
   84e30:	ea81 0103 	eor.w	r1, r1, r3
   84e34:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   84e38:	bfc2      	ittt	gt
   84e3a:	ebd4 050c 	rsbsgt	r5, r4, ip
   84e3e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   84e42:	bd70      	popgt	{r4, r5, r6, pc}
   84e44:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84e48:	f04f 0e00 	mov.w	lr, #0
   84e4c:	3c01      	subs	r4, #1
   84e4e:	f300 80ab 	bgt.w	84fa8 <__aeabi_dmul+0x238>
   84e52:	f114 0f36 	cmn.w	r4, #54	; 0x36
   84e56:	bfde      	ittt	le
   84e58:	2000      	movle	r0, #0
   84e5a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   84e5e:	bd70      	pople	{r4, r5, r6, pc}
   84e60:	f1c4 0400 	rsb	r4, r4, #0
   84e64:	3c20      	subs	r4, #32
   84e66:	da35      	bge.n	84ed4 <__aeabi_dmul+0x164>
   84e68:	340c      	adds	r4, #12
   84e6a:	dc1b      	bgt.n	84ea4 <__aeabi_dmul+0x134>
   84e6c:	f104 0414 	add.w	r4, r4, #20
   84e70:	f1c4 0520 	rsb	r5, r4, #32
   84e74:	fa00 f305 	lsl.w	r3, r0, r5
   84e78:	fa20 f004 	lsr.w	r0, r0, r4
   84e7c:	fa01 f205 	lsl.w	r2, r1, r5
   84e80:	ea40 0002 	orr.w	r0, r0, r2
   84e84:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   84e88:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84e8c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   84e90:	fa21 f604 	lsr.w	r6, r1, r4
   84e94:	eb42 0106 	adc.w	r1, r2, r6
   84e98:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   84e9c:	bf08      	it	eq
   84e9e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   84ea2:	bd70      	pop	{r4, r5, r6, pc}
   84ea4:	f1c4 040c 	rsb	r4, r4, #12
   84ea8:	f1c4 0520 	rsb	r5, r4, #32
   84eac:	fa00 f304 	lsl.w	r3, r0, r4
   84eb0:	fa20 f005 	lsr.w	r0, r0, r5
   84eb4:	fa01 f204 	lsl.w	r2, r1, r4
   84eb8:	ea40 0002 	orr.w	r0, r0, r2
   84ebc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84ec0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   84ec4:	f141 0100 	adc.w	r1, r1, #0
   84ec8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   84ecc:	bf08      	it	eq
   84ece:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   84ed2:	bd70      	pop	{r4, r5, r6, pc}
   84ed4:	f1c4 0520 	rsb	r5, r4, #32
   84ed8:	fa00 f205 	lsl.w	r2, r0, r5
   84edc:	ea4e 0e02 	orr.w	lr, lr, r2
   84ee0:	fa20 f304 	lsr.w	r3, r0, r4
   84ee4:	fa01 f205 	lsl.w	r2, r1, r5
   84ee8:	ea43 0302 	orr.w	r3, r3, r2
   84eec:	fa21 f004 	lsr.w	r0, r1, r4
   84ef0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84ef4:	fa21 f204 	lsr.w	r2, r1, r4
   84ef8:	ea20 0002 	bic.w	r0, r0, r2
   84efc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   84f00:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   84f04:	bf08      	it	eq
   84f06:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   84f0a:	bd70      	pop	{r4, r5, r6, pc}
   84f0c:	f094 0f00 	teq	r4, #0
   84f10:	d10f      	bne.n	84f32 <__aeabi_dmul+0x1c2>
   84f12:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   84f16:	0040      	lsls	r0, r0, #1
   84f18:	eb41 0101 	adc.w	r1, r1, r1
   84f1c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84f20:	bf08      	it	eq
   84f22:	3c01      	subeq	r4, #1
   84f24:	d0f7      	beq.n	84f16 <__aeabi_dmul+0x1a6>
   84f26:	ea41 0106 	orr.w	r1, r1, r6
   84f2a:	f095 0f00 	teq	r5, #0
   84f2e:	bf18      	it	ne
   84f30:	4770      	bxne	lr
   84f32:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   84f36:	0052      	lsls	r2, r2, #1
   84f38:	eb43 0303 	adc.w	r3, r3, r3
   84f3c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   84f40:	bf08      	it	eq
   84f42:	3d01      	subeq	r5, #1
   84f44:	d0f7      	beq.n	84f36 <__aeabi_dmul+0x1c6>
   84f46:	ea43 0306 	orr.w	r3, r3, r6
   84f4a:	4770      	bx	lr
   84f4c:	ea94 0f0c 	teq	r4, ip
   84f50:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   84f54:	bf18      	it	ne
   84f56:	ea95 0f0c 	teqne	r5, ip
   84f5a:	d00c      	beq.n	84f76 <__aeabi_dmul+0x206>
   84f5c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   84f60:	bf18      	it	ne
   84f62:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   84f66:	d1d1      	bne.n	84f0c <__aeabi_dmul+0x19c>
   84f68:	ea81 0103 	eor.w	r1, r1, r3
   84f6c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84f70:	f04f 0000 	mov.w	r0, #0
   84f74:	bd70      	pop	{r4, r5, r6, pc}
   84f76:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   84f7a:	bf06      	itte	eq
   84f7c:	4610      	moveq	r0, r2
   84f7e:	4619      	moveq	r1, r3
   84f80:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   84f84:	d019      	beq.n	84fba <__aeabi_dmul+0x24a>
   84f86:	ea94 0f0c 	teq	r4, ip
   84f8a:	d102      	bne.n	84f92 <__aeabi_dmul+0x222>
   84f8c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   84f90:	d113      	bne.n	84fba <__aeabi_dmul+0x24a>
   84f92:	ea95 0f0c 	teq	r5, ip
   84f96:	d105      	bne.n	84fa4 <__aeabi_dmul+0x234>
   84f98:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   84f9c:	bf1c      	itt	ne
   84f9e:	4610      	movne	r0, r2
   84fa0:	4619      	movne	r1, r3
   84fa2:	d10a      	bne.n	84fba <__aeabi_dmul+0x24a>
   84fa4:	ea81 0103 	eor.w	r1, r1, r3
   84fa8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84fac:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   84fb0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   84fb4:	f04f 0000 	mov.w	r0, #0
   84fb8:	bd70      	pop	{r4, r5, r6, pc}
   84fba:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   84fbe:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   84fc2:	bd70      	pop	{r4, r5, r6, pc}

00084fc4 <__aeabi_ddiv>:
   84fc4:	b570      	push	{r4, r5, r6, lr}
   84fc6:	f04f 0cff 	mov.w	ip, #255	; 0xff
   84fca:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   84fce:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   84fd2:	bf1d      	ittte	ne
   84fd4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   84fd8:	ea94 0f0c 	teqne	r4, ip
   84fdc:	ea95 0f0c 	teqne	r5, ip
   84fe0:	f000 f8a7 	bleq	85132 <__aeabi_ddiv+0x16e>
   84fe4:	eba4 0405 	sub.w	r4, r4, r5
   84fe8:	ea81 0e03 	eor.w	lr, r1, r3
   84fec:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   84ff0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   84ff4:	f000 8088 	beq.w	85108 <__aeabi_ddiv+0x144>
   84ff8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84ffc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   85000:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   85004:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   85008:	ea4f 2202 	mov.w	r2, r2, lsl #8
   8500c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   85010:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   85014:	ea4f 2600 	mov.w	r6, r0, lsl #8
   85018:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   8501c:	429d      	cmp	r5, r3
   8501e:	bf08      	it	eq
   85020:	4296      	cmpeq	r6, r2
   85022:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   85026:	f504 7440 	add.w	r4, r4, #768	; 0x300
   8502a:	d202      	bcs.n	85032 <__aeabi_ddiv+0x6e>
   8502c:	085b      	lsrs	r3, r3, #1
   8502e:	ea4f 0232 	mov.w	r2, r2, rrx
   85032:	1ab6      	subs	r6, r6, r2
   85034:	eb65 0503 	sbc.w	r5, r5, r3
   85038:	085b      	lsrs	r3, r3, #1
   8503a:	ea4f 0232 	mov.w	r2, r2, rrx
   8503e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   85042:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   85046:	ebb6 0e02 	subs.w	lr, r6, r2
   8504a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8504e:	bf22      	ittt	cs
   85050:	1ab6      	subcs	r6, r6, r2
   85052:	4675      	movcs	r5, lr
   85054:	ea40 000c 	orrcs.w	r0, r0, ip
   85058:	085b      	lsrs	r3, r3, #1
   8505a:	ea4f 0232 	mov.w	r2, r2, rrx
   8505e:	ebb6 0e02 	subs.w	lr, r6, r2
   85062:	eb75 0e03 	sbcs.w	lr, r5, r3
   85066:	bf22      	ittt	cs
   85068:	1ab6      	subcs	r6, r6, r2
   8506a:	4675      	movcs	r5, lr
   8506c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   85070:	085b      	lsrs	r3, r3, #1
   85072:	ea4f 0232 	mov.w	r2, r2, rrx
   85076:	ebb6 0e02 	subs.w	lr, r6, r2
   8507a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8507e:	bf22      	ittt	cs
   85080:	1ab6      	subcs	r6, r6, r2
   85082:	4675      	movcs	r5, lr
   85084:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   85088:	085b      	lsrs	r3, r3, #1
   8508a:	ea4f 0232 	mov.w	r2, r2, rrx
   8508e:	ebb6 0e02 	subs.w	lr, r6, r2
   85092:	eb75 0e03 	sbcs.w	lr, r5, r3
   85096:	bf22      	ittt	cs
   85098:	1ab6      	subcs	r6, r6, r2
   8509a:	4675      	movcs	r5, lr
   8509c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   850a0:	ea55 0e06 	orrs.w	lr, r5, r6
   850a4:	d018      	beq.n	850d8 <__aeabi_ddiv+0x114>
   850a6:	ea4f 1505 	mov.w	r5, r5, lsl #4
   850aa:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   850ae:	ea4f 1606 	mov.w	r6, r6, lsl #4
   850b2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   850b6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   850ba:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   850be:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   850c2:	d1c0      	bne.n	85046 <__aeabi_ddiv+0x82>
   850c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   850c8:	d10b      	bne.n	850e2 <__aeabi_ddiv+0x11e>
   850ca:	ea41 0100 	orr.w	r1, r1, r0
   850ce:	f04f 0000 	mov.w	r0, #0
   850d2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   850d6:	e7b6      	b.n	85046 <__aeabi_ddiv+0x82>
   850d8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   850dc:	bf04      	itt	eq
   850de:	4301      	orreq	r1, r0
   850e0:	2000      	moveq	r0, #0
   850e2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   850e6:	bf88      	it	hi
   850e8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   850ec:	f63f aeaf 	bhi.w	84e4e <__aeabi_dmul+0xde>
   850f0:	ebb5 0c03 	subs.w	ip, r5, r3
   850f4:	bf04      	itt	eq
   850f6:	ebb6 0c02 	subseq.w	ip, r6, r2
   850fa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   850fe:	f150 0000 	adcs.w	r0, r0, #0
   85102:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   85106:	bd70      	pop	{r4, r5, r6, pc}
   85108:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   8510c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   85110:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   85114:	bfc2      	ittt	gt
   85116:	ebd4 050c 	rsbsgt	r5, r4, ip
   8511a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8511e:	bd70      	popgt	{r4, r5, r6, pc}
   85120:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   85124:	f04f 0e00 	mov.w	lr, #0
   85128:	3c01      	subs	r4, #1
   8512a:	e690      	b.n	84e4e <__aeabi_dmul+0xde>
   8512c:	ea45 0e06 	orr.w	lr, r5, r6
   85130:	e68d      	b.n	84e4e <__aeabi_dmul+0xde>
   85132:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   85136:	ea94 0f0c 	teq	r4, ip
   8513a:	bf08      	it	eq
   8513c:	ea95 0f0c 	teqeq	r5, ip
   85140:	f43f af3b 	beq.w	84fba <__aeabi_dmul+0x24a>
   85144:	ea94 0f0c 	teq	r4, ip
   85148:	d10a      	bne.n	85160 <__aeabi_ddiv+0x19c>
   8514a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8514e:	f47f af34 	bne.w	84fba <__aeabi_dmul+0x24a>
   85152:	ea95 0f0c 	teq	r5, ip
   85156:	f47f af25 	bne.w	84fa4 <__aeabi_dmul+0x234>
   8515a:	4610      	mov	r0, r2
   8515c:	4619      	mov	r1, r3
   8515e:	e72c      	b.n	84fba <__aeabi_dmul+0x24a>
   85160:	ea95 0f0c 	teq	r5, ip
   85164:	d106      	bne.n	85174 <__aeabi_ddiv+0x1b0>
   85166:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   8516a:	f43f aefd 	beq.w	84f68 <__aeabi_dmul+0x1f8>
   8516e:	4610      	mov	r0, r2
   85170:	4619      	mov	r1, r3
   85172:	e722      	b.n	84fba <__aeabi_dmul+0x24a>
   85174:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85178:	bf18      	it	ne
   8517a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8517e:	f47f aec5 	bne.w	84f0c <__aeabi_dmul+0x19c>
   85182:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   85186:	f47f af0d 	bne.w	84fa4 <__aeabi_dmul+0x234>
   8518a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   8518e:	f47f aeeb 	bne.w	84f68 <__aeabi_dmul+0x1f8>
   85192:	e712      	b.n	84fba <__aeabi_dmul+0x24a>

00085194 <__gedf2>:
   85194:	f04f 3cff 	mov.w	ip, #4294967295
   85198:	e006      	b.n	851a8 <__cmpdf2+0x4>
   8519a:	bf00      	nop

0008519c <__ledf2>:
   8519c:	f04f 0c01 	mov.w	ip, #1
   851a0:	e002      	b.n	851a8 <__cmpdf2+0x4>
   851a2:	bf00      	nop

000851a4 <__cmpdf2>:
   851a4:	f04f 0c01 	mov.w	ip, #1
   851a8:	f84d cd04 	str.w	ip, [sp, #-4]!
   851ac:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   851b0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   851b4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   851b8:	bf18      	it	ne
   851ba:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   851be:	d01b      	beq.n	851f8 <__cmpdf2+0x54>
   851c0:	b001      	add	sp, #4
   851c2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   851c6:	bf0c      	ite	eq
   851c8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   851cc:	ea91 0f03 	teqne	r1, r3
   851d0:	bf02      	ittt	eq
   851d2:	ea90 0f02 	teqeq	r0, r2
   851d6:	2000      	moveq	r0, #0
   851d8:	4770      	bxeq	lr
   851da:	f110 0f00 	cmn.w	r0, #0
   851de:	ea91 0f03 	teq	r1, r3
   851e2:	bf58      	it	pl
   851e4:	4299      	cmppl	r1, r3
   851e6:	bf08      	it	eq
   851e8:	4290      	cmpeq	r0, r2
   851ea:	bf2c      	ite	cs
   851ec:	17d8      	asrcs	r0, r3, #31
   851ee:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   851f2:	f040 0001 	orr.w	r0, r0, #1
   851f6:	4770      	bx	lr
   851f8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   851fc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85200:	d102      	bne.n	85208 <__cmpdf2+0x64>
   85202:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   85206:	d107      	bne.n	85218 <__cmpdf2+0x74>
   85208:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   8520c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85210:	d1d6      	bne.n	851c0 <__cmpdf2+0x1c>
   85212:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   85216:	d0d3      	beq.n	851c0 <__cmpdf2+0x1c>
   85218:	f85d 0b04 	ldr.w	r0, [sp], #4
   8521c:	4770      	bx	lr
   8521e:	bf00      	nop

00085220 <__aeabi_cdrcmple>:
   85220:	4684      	mov	ip, r0
   85222:	4610      	mov	r0, r2
   85224:	4662      	mov	r2, ip
   85226:	468c      	mov	ip, r1
   85228:	4619      	mov	r1, r3
   8522a:	4663      	mov	r3, ip
   8522c:	e000      	b.n	85230 <__aeabi_cdcmpeq>
   8522e:	bf00      	nop

00085230 <__aeabi_cdcmpeq>:
   85230:	b501      	push	{r0, lr}
   85232:	f7ff ffb7 	bl	851a4 <__cmpdf2>
   85236:	2800      	cmp	r0, #0
   85238:	bf48      	it	mi
   8523a:	f110 0f00 	cmnmi.w	r0, #0
   8523e:	bd01      	pop	{r0, pc}

00085240 <__aeabi_dcmpeq>:
   85240:	f84d ed08 	str.w	lr, [sp, #-8]!
   85244:	f7ff fff4 	bl	85230 <__aeabi_cdcmpeq>
   85248:	bf0c      	ite	eq
   8524a:	2001      	moveq	r0, #1
   8524c:	2000      	movne	r0, #0
   8524e:	f85d fb08 	ldr.w	pc, [sp], #8
   85252:	bf00      	nop

00085254 <__aeabi_dcmplt>:
   85254:	f84d ed08 	str.w	lr, [sp, #-8]!
   85258:	f7ff ffea 	bl	85230 <__aeabi_cdcmpeq>
   8525c:	bf34      	ite	cc
   8525e:	2001      	movcc	r0, #1
   85260:	2000      	movcs	r0, #0
   85262:	f85d fb08 	ldr.w	pc, [sp], #8
   85266:	bf00      	nop

00085268 <__aeabi_dcmple>:
   85268:	f84d ed08 	str.w	lr, [sp, #-8]!
   8526c:	f7ff ffe0 	bl	85230 <__aeabi_cdcmpeq>
   85270:	bf94      	ite	ls
   85272:	2001      	movls	r0, #1
   85274:	2000      	movhi	r0, #0
   85276:	f85d fb08 	ldr.w	pc, [sp], #8
   8527a:	bf00      	nop

0008527c <__aeabi_dcmpge>:
   8527c:	f84d ed08 	str.w	lr, [sp, #-8]!
   85280:	f7ff ffce 	bl	85220 <__aeabi_cdrcmple>
   85284:	bf94      	ite	ls
   85286:	2001      	movls	r0, #1
   85288:	2000      	movhi	r0, #0
   8528a:	f85d fb08 	ldr.w	pc, [sp], #8
   8528e:	bf00      	nop

00085290 <__aeabi_dcmpgt>:
   85290:	f84d ed08 	str.w	lr, [sp, #-8]!
   85294:	f7ff ffc4 	bl	85220 <__aeabi_cdrcmple>
   85298:	bf34      	ite	cc
   8529a:	2001      	movcc	r0, #1
   8529c:	2000      	movcs	r0, #0
   8529e:	f85d fb08 	ldr.w	pc, [sp], #8
   852a2:	bf00      	nop

000852a4 <__aeabi_d2iz>:
   852a4:	ea4f 0241 	mov.w	r2, r1, lsl #1
   852a8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   852ac:	d215      	bcs.n	852da <__aeabi_d2iz+0x36>
   852ae:	d511      	bpl.n	852d4 <__aeabi_d2iz+0x30>
   852b0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   852b4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   852b8:	d912      	bls.n	852e0 <__aeabi_d2iz+0x3c>
   852ba:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   852be:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   852c2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   852c6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   852ca:	fa23 f002 	lsr.w	r0, r3, r2
   852ce:	bf18      	it	ne
   852d0:	4240      	negne	r0, r0
   852d2:	4770      	bx	lr
   852d4:	f04f 0000 	mov.w	r0, #0
   852d8:	4770      	bx	lr
   852da:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   852de:	d105      	bne.n	852ec <__aeabi_d2iz+0x48>
   852e0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   852e4:	bf08      	it	eq
   852e6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   852ea:	4770      	bx	lr
   852ec:	f04f 0000 	mov.w	r0, #0
   852f0:	4770      	bx	lr
   852f2:	bf00      	nop

000852f4 <__aeabi_uldivmod>:
   852f4:	b94b      	cbnz	r3, 8530a <__aeabi_uldivmod+0x16>
   852f6:	b942      	cbnz	r2, 8530a <__aeabi_uldivmod+0x16>
   852f8:	2900      	cmp	r1, #0
   852fa:	bf08      	it	eq
   852fc:	2800      	cmpeq	r0, #0
   852fe:	d002      	beq.n	85306 <__aeabi_uldivmod+0x12>
   85300:	f04f 31ff 	mov.w	r1, #4294967295
   85304:	4608      	mov	r0, r1
   85306:	f000 b83b 	b.w	85380 <__aeabi_idiv0>
   8530a:	b082      	sub	sp, #8
   8530c:	46ec      	mov	ip, sp
   8530e:	e92d 5000 	stmdb	sp!, {ip, lr}
   85312:	f000 f81d 	bl	85350 <__gnu_uldivmod_helper>
   85316:	f8dd e004 	ldr.w	lr, [sp, #4]
   8531a:	b002      	add	sp, #8
   8531c:	bc0c      	pop	{r2, r3}
   8531e:	4770      	bx	lr

00085320 <__gnu_ldivmod_helper>:
   85320:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   85324:	9e08      	ldr	r6, [sp, #32]
   85326:	4614      	mov	r4, r2
   85328:	461d      	mov	r5, r3
   8532a:	4680      	mov	r8, r0
   8532c:	4689      	mov	r9, r1
   8532e:	f000 f829 	bl	85384 <__divdi3>
   85332:	fb04 f301 	mul.w	r3, r4, r1
   85336:	fba4 ab00 	umull	sl, fp, r4, r0
   8533a:	fb00 3205 	mla	r2, r0, r5, r3
   8533e:	4493      	add	fp, r2
   85340:	ebb8 080a 	subs.w	r8, r8, sl
   85344:	eb69 090b 	sbc.w	r9, r9, fp
   85348:	e9c6 8900 	strd	r8, r9, [r6]
   8534c:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

00085350 <__gnu_uldivmod_helper>:
   85350:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   85354:	9e08      	ldr	r6, [sp, #32]
   85356:	4614      	mov	r4, r2
   85358:	461d      	mov	r5, r3
   8535a:	4680      	mov	r8, r0
   8535c:	4689      	mov	r9, r1
   8535e:	f000 f961 	bl	85624 <__udivdi3>
   85362:	fb00 f505 	mul.w	r5, r0, r5
   85366:	fba0 ab04 	umull	sl, fp, r0, r4
   8536a:	fb04 5401 	mla	r4, r4, r1, r5
   8536e:	44a3      	add	fp, r4
   85370:	ebb8 080a 	subs.w	r8, r8, sl
   85374:	eb69 090b 	sbc.w	r9, r9, fp
   85378:	e9c6 8900 	strd	r8, r9, [r6]
   8537c:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

00085380 <__aeabi_idiv0>:
   85380:	4770      	bx	lr
   85382:	bf00      	nop

00085384 <__divdi3>:
   85384:	2900      	cmp	r1, #0
   85386:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8538a:	f2c0 80a1 	blt.w	854d0 <__divdi3+0x14c>
   8538e:	2400      	movs	r4, #0
   85390:	2b00      	cmp	r3, #0
   85392:	f2c0 8098 	blt.w	854c6 <__divdi3+0x142>
   85396:	4615      	mov	r5, r2
   85398:	4606      	mov	r6, r0
   8539a:	460f      	mov	r7, r1
   8539c:	2b00      	cmp	r3, #0
   8539e:	d13f      	bne.n	85420 <__divdi3+0x9c>
   853a0:	428a      	cmp	r2, r1
   853a2:	d958      	bls.n	85456 <__divdi3+0xd2>
   853a4:	fab2 f382 	clz	r3, r2
   853a8:	b14b      	cbz	r3, 853be <__divdi3+0x3a>
   853aa:	f1c3 0220 	rsb	r2, r3, #32
   853ae:	fa01 f703 	lsl.w	r7, r1, r3
   853b2:	fa20 f202 	lsr.w	r2, r0, r2
   853b6:	409d      	lsls	r5, r3
   853b8:	fa00 f603 	lsl.w	r6, r0, r3
   853bc:	4317      	orrs	r7, r2
   853be:	0c29      	lsrs	r1, r5, #16
   853c0:	fbb7 f2f1 	udiv	r2, r7, r1
   853c4:	fb01 7712 	mls	r7, r1, r2, r7
   853c8:	b2a8      	uxth	r0, r5
   853ca:	fb00 f302 	mul.w	r3, r0, r2
   853ce:	ea4f 4c16 	mov.w	ip, r6, lsr #16
   853d2:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
   853d6:	42bb      	cmp	r3, r7
   853d8:	d909      	bls.n	853ee <__divdi3+0x6a>
   853da:	197f      	adds	r7, r7, r5
   853dc:	f102 3cff 	add.w	ip, r2, #4294967295
   853e0:	f080 8105 	bcs.w	855ee <__divdi3+0x26a>
   853e4:	42bb      	cmp	r3, r7
   853e6:	f240 8102 	bls.w	855ee <__divdi3+0x26a>
   853ea:	3a02      	subs	r2, #2
   853ec:	442f      	add	r7, r5
   853ee:	1aff      	subs	r7, r7, r3
   853f0:	fbb7 f3f1 	udiv	r3, r7, r1
   853f4:	fb01 7113 	mls	r1, r1, r3, r7
   853f8:	fb00 f003 	mul.w	r0, r0, r3
   853fc:	b2b6      	uxth	r6, r6
   853fe:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
   85402:	4288      	cmp	r0, r1
   85404:	d908      	bls.n	85418 <__divdi3+0x94>
   85406:	1949      	adds	r1, r1, r5
   85408:	f103 37ff 	add.w	r7, r3, #4294967295
   8540c:	f080 80f1 	bcs.w	855f2 <__divdi3+0x26e>
   85410:	4288      	cmp	r0, r1
   85412:	f240 80ee 	bls.w	855f2 <__divdi3+0x26e>
   85416:	3b02      	subs	r3, #2
   85418:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   8541c:	2300      	movs	r3, #0
   8541e:	e003      	b.n	85428 <__divdi3+0xa4>
   85420:	428b      	cmp	r3, r1
   85422:	d90a      	bls.n	8543a <__divdi3+0xb6>
   85424:	2300      	movs	r3, #0
   85426:	461a      	mov	r2, r3
   85428:	4610      	mov	r0, r2
   8542a:	4619      	mov	r1, r3
   8542c:	b114      	cbz	r4, 85434 <__divdi3+0xb0>
   8542e:	4240      	negs	r0, r0
   85430:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   85434:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85438:	4770      	bx	lr
   8543a:	fab3 f883 	clz	r8, r3
   8543e:	f1b8 0f00 	cmp.w	r8, #0
   85442:	f040 8088 	bne.w	85556 <__divdi3+0x1d2>
   85446:	428b      	cmp	r3, r1
   85448:	d302      	bcc.n	85450 <__divdi3+0xcc>
   8544a:	4282      	cmp	r2, r0
   8544c:	f200 80e2 	bhi.w	85614 <__divdi3+0x290>
   85450:	2300      	movs	r3, #0
   85452:	2201      	movs	r2, #1
   85454:	e7e8      	b.n	85428 <__divdi3+0xa4>
   85456:	b912      	cbnz	r2, 8545e <__divdi3+0xda>
   85458:	2301      	movs	r3, #1
   8545a:	fbb3 f5f2 	udiv	r5, r3, r2
   8545e:	fab5 f285 	clz	r2, r5
   85462:	2a00      	cmp	r2, #0
   85464:	d13a      	bne.n	854dc <__divdi3+0x158>
   85466:	1b7f      	subs	r7, r7, r5
   85468:	0c28      	lsrs	r0, r5, #16
   8546a:	fa1f fc85 	uxth.w	ip, r5
   8546e:	2301      	movs	r3, #1
   85470:	fbb7 f1f0 	udiv	r1, r7, r0
   85474:	fb00 7711 	mls	r7, r0, r1, r7
   85478:	fb0c f201 	mul.w	r2, ip, r1
   8547c:	ea4f 4816 	mov.w	r8, r6, lsr #16
   85480:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   85484:	42ba      	cmp	r2, r7
   85486:	d907      	bls.n	85498 <__divdi3+0x114>
   85488:	197f      	adds	r7, r7, r5
   8548a:	f101 38ff 	add.w	r8, r1, #4294967295
   8548e:	d202      	bcs.n	85496 <__divdi3+0x112>
   85490:	42ba      	cmp	r2, r7
   85492:	f200 80c4 	bhi.w	8561e <__divdi3+0x29a>
   85496:	4641      	mov	r1, r8
   85498:	1abf      	subs	r7, r7, r2
   8549a:	fbb7 f2f0 	udiv	r2, r7, r0
   8549e:	fb00 7012 	mls	r0, r0, r2, r7
   854a2:	fb0c fc02 	mul.w	ip, ip, r2
   854a6:	b2b6      	uxth	r6, r6
   854a8:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
   854ac:	4584      	cmp	ip, r0
   854ae:	d907      	bls.n	854c0 <__divdi3+0x13c>
   854b0:	1940      	adds	r0, r0, r5
   854b2:	f102 37ff 	add.w	r7, r2, #4294967295
   854b6:	d202      	bcs.n	854be <__divdi3+0x13a>
   854b8:	4584      	cmp	ip, r0
   854ba:	f200 80ae 	bhi.w	8561a <__divdi3+0x296>
   854be:	463a      	mov	r2, r7
   854c0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   854c4:	e7b0      	b.n	85428 <__divdi3+0xa4>
   854c6:	43e4      	mvns	r4, r4
   854c8:	4252      	negs	r2, r2
   854ca:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   854ce:	e762      	b.n	85396 <__divdi3+0x12>
   854d0:	4240      	negs	r0, r0
   854d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   854d6:	f04f 34ff 	mov.w	r4, #4294967295
   854da:	e759      	b.n	85390 <__divdi3+0xc>
   854dc:	4095      	lsls	r5, r2
   854de:	f1c2 0920 	rsb	r9, r2, #32
   854e2:	fa27 f109 	lsr.w	r1, r7, r9
   854e6:	fa26 f909 	lsr.w	r9, r6, r9
   854ea:	4097      	lsls	r7, r2
   854ec:	0c28      	lsrs	r0, r5, #16
   854ee:	fbb1 f8f0 	udiv	r8, r1, r0
   854f2:	fb00 1118 	mls	r1, r0, r8, r1
   854f6:	fa1f fc85 	uxth.w	ip, r5
   854fa:	fb0c f308 	mul.w	r3, ip, r8
   854fe:	ea49 0907 	orr.w	r9, r9, r7
   85502:	ea4f 4719 	mov.w	r7, r9, lsr #16
   85506:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
   8550a:	428b      	cmp	r3, r1
   8550c:	fa06 f602 	lsl.w	r6, r6, r2
   85510:	d908      	bls.n	85524 <__divdi3+0x1a0>
   85512:	1949      	adds	r1, r1, r5
   85514:	f108 32ff 	add.w	r2, r8, #4294967295
   85518:	d27a      	bcs.n	85610 <__divdi3+0x28c>
   8551a:	428b      	cmp	r3, r1
   8551c:	d978      	bls.n	85610 <__divdi3+0x28c>
   8551e:	f1a8 0802 	sub.w	r8, r8, #2
   85522:	4429      	add	r1, r5
   85524:	1ac9      	subs	r1, r1, r3
   85526:	fbb1 f3f0 	udiv	r3, r1, r0
   8552a:	fb00 1713 	mls	r7, r0, r3, r1
   8552e:	fb0c f203 	mul.w	r2, ip, r3
   85532:	fa1f f989 	uxth.w	r9, r9
   85536:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
   8553a:	42ba      	cmp	r2, r7
   8553c:	d907      	bls.n	8554e <__divdi3+0x1ca>
   8553e:	197f      	adds	r7, r7, r5
   85540:	f103 31ff 	add.w	r1, r3, #4294967295
   85544:	d260      	bcs.n	85608 <__divdi3+0x284>
   85546:	42ba      	cmp	r2, r7
   85548:	d95e      	bls.n	85608 <__divdi3+0x284>
   8554a:	3b02      	subs	r3, #2
   8554c:	442f      	add	r7, r5
   8554e:	1abf      	subs	r7, r7, r2
   85550:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   85554:	e78c      	b.n	85470 <__divdi3+0xec>
   85556:	f1c8 0220 	rsb	r2, r8, #32
   8555a:	fa25 f102 	lsr.w	r1, r5, r2
   8555e:	fa03 fc08 	lsl.w	ip, r3, r8
   85562:	fa27 f302 	lsr.w	r3, r7, r2
   85566:	fa20 f202 	lsr.w	r2, r0, r2
   8556a:	fa07 f708 	lsl.w	r7, r7, r8
   8556e:	ea41 0c0c 	orr.w	ip, r1, ip
   85572:	ea4f 491c 	mov.w	r9, ip, lsr #16
   85576:	fbb3 f1f9 	udiv	r1, r3, r9
   8557a:	fb09 3311 	mls	r3, r9, r1, r3
   8557e:	fa1f fa8c 	uxth.w	sl, ip
   85582:	fb0a fb01 	mul.w	fp, sl, r1
   85586:	4317      	orrs	r7, r2
   85588:	0c3a      	lsrs	r2, r7, #16
   8558a:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   8558e:	459b      	cmp	fp, r3
   85590:	fa05 f008 	lsl.w	r0, r5, r8
   85594:	d908      	bls.n	855a8 <__divdi3+0x224>
   85596:	eb13 030c 	adds.w	r3, r3, ip
   8559a:	f101 32ff 	add.w	r2, r1, #4294967295
   8559e:	d235      	bcs.n	8560c <__divdi3+0x288>
   855a0:	459b      	cmp	fp, r3
   855a2:	d933      	bls.n	8560c <__divdi3+0x288>
   855a4:	3902      	subs	r1, #2
   855a6:	4463      	add	r3, ip
   855a8:	ebcb 0303 	rsb	r3, fp, r3
   855ac:	fbb3 f2f9 	udiv	r2, r3, r9
   855b0:	fb09 3312 	mls	r3, r9, r2, r3
   855b4:	fb0a fa02 	mul.w	sl, sl, r2
   855b8:	b2bf      	uxth	r7, r7
   855ba:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
   855be:	45ba      	cmp	sl, r7
   855c0:	d908      	bls.n	855d4 <__divdi3+0x250>
   855c2:	eb17 070c 	adds.w	r7, r7, ip
   855c6:	f102 33ff 	add.w	r3, r2, #4294967295
   855ca:	d21b      	bcs.n	85604 <__divdi3+0x280>
   855cc:	45ba      	cmp	sl, r7
   855ce:	d919      	bls.n	85604 <__divdi3+0x280>
   855d0:	3a02      	subs	r2, #2
   855d2:	4467      	add	r7, ip
   855d4:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
   855d8:	fba5 0100 	umull	r0, r1, r5, r0
   855dc:	ebca 0707 	rsb	r7, sl, r7
   855e0:	428f      	cmp	r7, r1
   855e2:	f04f 0300 	mov.w	r3, #0
   855e6:	d30a      	bcc.n	855fe <__divdi3+0x27a>
   855e8:	d005      	beq.n	855f6 <__divdi3+0x272>
   855ea:	462a      	mov	r2, r5
   855ec:	e71c      	b.n	85428 <__divdi3+0xa4>
   855ee:	4662      	mov	r2, ip
   855f0:	e6fd      	b.n	853ee <__divdi3+0x6a>
   855f2:	463b      	mov	r3, r7
   855f4:	e710      	b.n	85418 <__divdi3+0x94>
   855f6:	fa06 f608 	lsl.w	r6, r6, r8
   855fa:	4286      	cmp	r6, r0
   855fc:	d2f5      	bcs.n	855ea <__divdi3+0x266>
   855fe:	1e6a      	subs	r2, r5, #1
   85600:	2300      	movs	r3, #0
   85602:	e711      	b.n	85428 <__divdi3+0xa4>
   85604:	461a      	mov	r2, r3
   85606:	e7e5      	b.n	855d4 <__divdi3+0x250>
   85608:	460b      	mov	r3, r1
   8560a:	e7a0      	b.n	8554e <__divdi3+0x1ca>
   8560c:	4611      	mov	r1, r2
   8560e:	e7cb      	b.n	855a8 <__divdi3+0x224>
   85610:	4690      	mov	r8, r2
   85612:	e787      	b.n	85524 <__divdi3+0x1a0>
   85614:	4643      	mov	r3, r8
   85616:	4642      	mov	r2, r8
   85618:	e706      	b.n	85428 <__divdi3+0xa4>
   8561a:	3a02      	subs	r2, #2
   8561c:	e750      	b.n	854c0 <__divdi3+0x13c>
   8561e:	3902      	subs	r1, #2
   85620:	442f      	add	r7, r5
   85622:	e739      	b.n	85498 <__divdi3+0x114>

00085624 <__udivdi3>:
   85624:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85628:	4614      	mov	r4, r2
   8562a:	4605      	mov	r5, r0
   8562c:	460e      	mov	r6, r1
   8562e:	2b00      	cmp	r3, #0
   85630:	d143      	bne.n	856ba <__udivdi3+0x96>
   85632:	428a      	cmp	r2, r1
   85634:	d953      	bls.n	856de <__udivdi3+0xba>
   85636:	fab2 f782 	clz	r7, r2
   8563a:	b157      	cbz	r7, 85652 <__udivdi3+0x2e>
   8563c:	f1c7 0620 	rsb	r6, r7, #32
   85640:	fa20 f606 	lsr.w	r6, r0, r6
   85644:	fa01 f307 	lsl.w	r3, r1, r7
   85648:	fa02 f407 	lsl.w	r4, r2, r7
   8564c:	fa00 f507 	lsl.w	r5, r0, r7
   85650:	431e      	orrs	r6, r3
   85652:	0c21      	lsrs	r1, r4, #16
   85654:	fbb6 f2f1 	udiv	r2, r6, r1
   85658:	fb01 6612 	mls	r6, r1, r2, r6
   8565c:	b2a0      	uxth	r0, r4
   8565e:	fb00 f302 	mul.w	r3, r0, r2
   85662:	0c2f      	lsrs	r7, r5, #16
   85664:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
   85668:	42b3      	cmp	r3, r6
   8566a:	d909      	bls.n	85680 <__udivdi3+0x5c>
   8566c:	1936      	adds	r6, r6, r4
   8566e:	f102 37ff 	add.w	r7, r2, #4294967295
   85672:	f080 80fd 	bcs.w	85870 <__udivdi3+0x24c>
   85676:	42b3      	cmp	r3, r6
   85678:	f240 80fa 	bls.w	85870 <__udivdi3+0x24c>
   8567c:	3a02      	subs	r2, #2
   8567e:	4426      	add	r6, r4
   85680:	1af6      	subs	r6, r6, r3
   85682:	fbb6 f3f1 	udiv	r3, r6, r1
   85686:	fb01 6113 	mls	r1, r1, r3, r6
   8568a:	fb00 f003 	mul.w	r0, r0, r3
   8568e:	b2ad      	uxth	r5, r5
   85690:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
   85694:	4288      	cmp	r0, r1
   85696:	d908      	bls.n	856aa <__udivdi3+0x86>
   85698:	1909      	adds	r1, r1, r4
   8569a:	f103 36ff 	add.w	r6, r3, #4294967295
   8569e:	f080 80e9 	bcs.w	85874 <__udivdi3+0x250>
   856a2:	4288      	cmp	r0, r1
   856a4:	f240 80e6 	bls.w	85874 <__udivdi3+0x250>
   856a8:	3b02      	subs	r3, #2
   856aa:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   856ae:	2300      	movs	r3, #0
   856b0:	4610      	mov	r0, r2
   856b2:	4619      	mov	r1, r3
   856b4:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   856b8:	4770      	bx	lr
   856ba:	428b      	cmp	r3, r1
   856bc:	d84c      	bhi.n	85758 <__udivdi3+0x134>
   856be:	fab3 f683 	clz	r6, r3
   856c2:	2e00      	cmp	r6, #0
   856c4:	d14f      	bne.n	85766 <__udivdi3+0x142>
   856c6:	428b      	cmp	r3, r1
   856c8:	d302      	bcc.n	856d0 <__udivdi3+0xac>
   856ca:	4282      	cmp	r2, r0
   856cc:	f200 80dd 	bhi.w	8588a <__udivdi3+0x266>
   856d0:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   856d4:	2300      	movs	r3, #0
   856d6:	2201      	movs	r2, #1
   856d8:	4610      	mov	r0, r2
   856da:	4619      	mov	r1, r3
   856dc:	4770      	bx	lr
   856de:	b912      	cbnz	r2, 856e6 <__udivdi3+0xc2>
   856e0:	2401      	movs	r4, #1
   856e2:	fbb4 f4f2 	udiv	r4, r4, r2
   856e6:	fab4 f284 	clz	r2, r4
   856ea:	2a00      	cmp	r2, #0
   856ec:	f040 8082 	bne.w	857f4 <__udivdi3+0x1d0>
   856f0:	1b09      	subs	r1, r1, r4
   856f2:	0c26      	lsrs	r6, r4, #16
   856f4:	b2a7      	uxth	r7, r4
   856f6:	2301      	movs	r3, #1
   856f8:	fbb1 f0f6 	udiv	r0, r1, r6
   856fc:	fb06 1110 	mls	r1, r6, r0, r1
   85700:	fb07 f200 	mul.w	r2, r7, r0
   85704:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   85708:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
   8570c:	428a      	cmp	r2, r1
   8570e:	d907      	bls.n	85720 <__udivdi3+0xfc>
   85710:	1909      	adds	r1, r1, r4
   85712:	f100 3cff 	add.w	ip, r0, #4294967295
   85716:	d202      	bcs.n	8571e <__udivdi3+0xfa>
   85718:	428a      	cmp	r2, r1
   8571a:	f200 80c8 	bhi.w	858ae <__udivdi3+0x28a>
   8571e:	4660      	mov	r0, ip
   85720:	1a89      	subs	r1, r1, r2
   85722:	fbb1 f2f6 	udiv	r2, r1, r6
   85726:	fb06 1112 	mls	r1, r6, r2, r1
   8572a:	fb07 f702 	mul.w	r7, r7, r2
   8572e:	b2ad      	uxth	r5, r5
   85730:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
   85734:	42af      	cmp	r7, r5
   85736:	d908      	bls.n	8574a <__udivdi3+0x126>
   85738:	192c      	adds	r4, r5, r4
   8573a:	f102 31ff 	add.w	r1, r2, #4294967295
   8573e:	f080 809b 	bcs.w	85878 <__udivdi3+0x254>
   85742:	42a7      	cmp	r7, r4
   85744:	f240 8098 	bls.w	85878 <__udivdi3+0x254>
   85748:	3a02      	subs	r2, #2
   8574a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   8574e:	4610      	mov	r0, r2
   85750:	4619      	mov	r1, r3
   85752:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85756:	4770      	bx	lr
   85758:	2300      	movs	r3, #0
   8575a:	461a      	mov	r2, r3
   8575c:	4610      	mov	r0, r2
   8575e:	4619      	mov	r1, r3
   85760:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85764:	4770      	bx	lr
   85766:	f1c6 0520 	rsb	r5, r6, #32
   8576a:	fa22 f705 	lsr.w	r7, r2, r5
   8576e:	fa03 f406 	lsl.w	r4, r3, r6
   85772:	fa21 f305 	lsr.w	r3, r1, r5
   85776:	fa01 fb06 	lsl.w	fp, r1, r6
   8577a:	fa20 f505 	lsr.w	r5, r0, r5
   8577e:	433c      	orrs	r4, r7
   85780:	ea4f 4814 	mov.w	r8, r4, lsr #16
   85784:	fbb3 fcf8 	udiv	ip, r3, r8
   85788:	fb08 331c 	mls	r3, r8, ip, r3
   8578c:	fa1f f984 	uxth.w	r9, r4
   85790:	fb09 fa0c 	mul.w	sl, r9, ip
   85794:	ea45 0b0b 	orr.w	fp, r5, fp
   85798:	ea4f 451b 	mov.w	r5, fp, lsr #16
   8579c:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
   857a0:	459a      	cmp	sl, r3
   857a2:	fa02 f206 	lsl.w	r2, r2, r6
   857a6:	d904      	bls.n	857b2 <__udivdi3+0x18e>
   857a8:	191b      	adds	r3, r3, r4
   857aa:	f10c 35ff 	add.w	r5, ip, #4294967295
   857ae:	d36f      	bcc.n	85890 <__udivdi3+0x26c>
   857b0:	46ac      	mov	ip, r5
   857b2:	ebca 0303 	rsb	r3, sl, r3
   857b6:	fbb3 f5f8 	udiv	r5, r3, r8
   857ba:	fb08 3315 	mls	r3, r8, r5, r3
   857be:	fb09 f905 	mul.w	r9, r9, r5
   857c2:	fa1f fb8b 	uxth.w	fp, fp
   857c6:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
   857ca:	45b9      	cmp	r9, r7
   857cc:	d904      	bls.n	857d8 <__udivdi3+0x1b4>
   857ce:	193f      	adds	r7, r7, r4
   857d0:	f105 33ff 	add.w	r3, r5, #4294967295
   857d4:	d362      	bcc.n	8589c <__udivdi3+0x278>
   857d6:	461d      	mov	r5, r3
   857d8:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
   857dc:	fbac 2302 	umull	r2, r3, ip, r2
   857e0:	ebc9 0707 	rsb	r7, r9, r7
   857e4:	429f      	cmp	r7, r3
   857e6:	f04f 0500 	mov.w	r5, #0
   857ea:	d34a      	bcc.n	85882 <__udivdi3+0x25e>
   857ec:	d046      	beq.n	8587c <__udivdi3+0x258>
   857ee:	4662      	mov	r2, ip
   857f0:	462b      	mov	r3, r5
   857f2:	e75d      	b.n	856b0 <__udivdi3+0x8c>
   857f4:	4094      	lsls	r4, r2
   857f6:	f1c2 0920 	rsb	r9, r2, #32
   857fa:	fa21 fc09 	lsr.w	ip, r1, r9
   857fe:	4091      	lsls	r1, r2
   85800:	fa20 f909 	lsr.w	r9, r0, r9
   85804:	0c26      	lsrs	r6, r4, #16
   85806:	fbbc f8f6 	udiv	r8, ip, r6
   8580a:	fb06 cc18 	mls	ip, r6, r8, ip
   8580e:	b2a7      	uxth	r7, r4
   85810:	fb07 f308 	mul.w	r3, r7, r8
   85814:	ea49 0901 	orr.w	r9, r9, r1
   85818:	ea4f 4119 	mov.w	r1, r9, lsr #16
   8581c:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
   85820:	4563      	cmp	r3, ip
   85822:	fa00 f502 	lsl.w	r5, r0, r2
   85826:	d909      	bls.n	8583c <__udivdi3+0x218>
   85828:	eb1c 0c04 	adds.w	ip, ip, r4
   8582c:	f108 32ff 	add.w	r2, r8, #4294967295
   85830:	d23b      	bcs.n	858aa <__udivdi3+0x286>
   85832:	4563      	cmp	r3, ip
   85834:	d939      	bls.n	858aa <__udivdi3+0x286>
   85836:	f1a8 0802 	sub.w	r8, r8, #2
   8583a:	44a4      	add	ip, r4
   8583c:	ebc3 0c0c 	rsb	ip, r3, ip
   85840:	fbbc f3f6 	udiv	r3, ip, r6
   85844:	fb06 c113 	mls	r1, r6, r3, ip
   85848:	fb07 f203 	mul.w	r2, r7, r3
   8584c:	fa1f f989 	uxth.w	r9, r9
   85850:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
   85854:	428a      	cmp	r2, r1
   85856:	d907      	bls.n	85868 <__udivdi3+0x244>
   85858:	1909      	adds	r1, r1, r4
   8585a:	f103 30ff 	add.w	r0, r3, #4294967295
   8585e:	d222      	bcs.n	858a6 <__udivdi3+0x282>
   85860:	428a      	cmp	r2, r1
   85862:	d920      	bls.n	858a6 <__udivdi3+0x282>
   85864:	3b02      	subs	r3, #2
   85866:	4421      	add	r1, r4
   85868:	1a89      	subs	r1, r1, r2
   8586a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   8586e:	e743      	b.n	856f8 <__udivdi3+0xd4>
   85870:	463a      	mov	r2, r7
   85872:	e705      	b.n	85680 <__udivdi3+0x5c>
   85874:	4633      	mov	r3, r6
   85876:	e718      	b.n	856aa <__udivdi3+0x86>
   85878:	460a      	mov	r2, r1
   8587a:	e766      	b.n	8574a <__udivdi3+0x126>
   8587c:	40b0      	lsls	r0, r6
   8587e:	4290      	cmp	r0, r2
   85880:	d2b5      	bcs.n	857ee <__udivdi3+0x1ca>
   85882:	f10c 32ff 	add.w	r2, ip, #4294967295
   85886:	2300      	movs	r3, #0
   85888:	e712      	b.n	856b0 <__udivdi3+0x8c>
   8588a:	4633      	mov	r3, r6
   8588c:	4632      	mov	r2, r6
   8588e:	e70f      	b.n	856b0 <__udivdi3+0x8c>
   85890:	459a      	cmp	sl, r3
   85892:	d98d      	bls.n	857b0 <__udivdi3+0x18c>
   85894:	f1ac 0c02 	sub.w	ip, ip, #2
   85898:	4423      	add	r3, r4
   8589a:	e78a      	b.n	857b2 <__udivdi3+0x18e>
   8589c:	45b9      	cmp	r9, r7
   8589e:	d99a      	bls.n	857d6 <__udivdi3+0x1b2>
   858a0:	3d02      	subs	r5, #2
   858a2:	4427      	add	r7, r4
   858a4:	e798      	b.n	857d8 <__udivdi3+0x1b4>
   858a6:	4603      	mov	r3, r0
   858a8:	e7de      	b.n	85868 <__udivdi3+0x244>
   858aa:	4690      	mov	r8, r2
   858ac:	e7c6      	b.n	8583c <__udivdi3+0x218>
   858ae:	3802      	subs	r0, #2
   858b0:	4421      	add	r1, r4
   858b2:	e735      	b.n	85720 <__udivdi3+0xfc>
   858b4:	0c040800 	.word	0x0c040800
   858b8:	0e060a02 	.word	0x0e060a02
   858bc:	0d050901 	.word	0x0d050901
   858c0:	0f070b03 	.word	0x0f070b03
   858c4:	00006425 	.word	0x00006425
   858c8:	53524556 	.word	0x53524556
   858cc:	204e4f49 	.word	0x204e4f49
   858d0:	30303039 	.word	0x30303039
   858d4:	00000000 	.word	0x00000000
   858d8:	4f484345 	.word	0x4f484345
   858dc:	0000203a 	.word	0x0000203a
   858e0:	00000025 	.word	0x00000025
   858e4:	414c4544 	.word	0x414c4544
   858e8:	00203a59 	.word	0x00203a59
   858ec:	0000736d 	.word	0x0000736d

000858f0 <_global_impure_ptr>:
   858f0:	20070010 20200043                                ... C.

000858f6 <blanks.6743>:
   858f6:	20202020 20202020 20202020 20202020                     

00085906 <zeroes.6744>:
   85906:	30303030 30303030 30303030 30303030     0000000000000000
   85916:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   85926:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   85936:	32313000 36353433 61393837 65646362     .0123456789abcde
   85946:	00300066 69666e49 7974696e 4e614e00     f.0.Infinity.NaN
   85956:	534f5000 2e005849 00050000                       .POSIX....

00085960 <p05.5289>:
   85960:	00000005 00000019 0000007d 00000000     ........}.......

00085970 <__mprec_tens>:
   85970:	00000000 3ff00000 00000000 40240000     .......?......$@
   85980:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   85990:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   859a0:	00000000 412e8480 00000000 416312d0     .......A......cA
   859b0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   859c0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   859d0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   859e0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   859f0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   85a00:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   85a10:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   85a20:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   85a30:	79d99db4 44ea7843                       ...yCx.D

00085a38 <__mprec_tinytens>:
   85a38:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   85a48:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   85a58:	64ac6f43 0ac80628                       Co.d(...

00085a60 <__mprec_bigtens>:
   85a60:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   85a70:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   85a80:	7f73bf3c 75154fdd                       <.s..O.u

00085a88 <blanks.6687>:
   85a88:	20202020 20202020 20202020 20202020                     

00085a98 <zeroes.6688>:
   85a98:	30303030 30303030 30303030 30303030     0000000000000000

00085aa8 <_init>:
   85aa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85aaa:	bf00      	nop
   85aac:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85aae:	bc08      	pop	{r3}
   85ab0:	469e      	mov	lr, r3
   85ab2:	4770      	bx	lr

00085ab4 <__init_array_start>:
   85ab4:	000820c1 	.word	0x000820c1

00085ab8 <__frame_dummy_init_array_entry>:
   85ab8:	0008016d                                m...

00085abc <_fini>:
   85abc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85abe:	bf00      	nop
   85ac0:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85ac2:	bc08      	pop	{r3}
   85ac4:	469e      	mov	lr, r3
   85ac6:	4770      	bx	lr

00085ac8 <__fini_array_start>:
   85ac8:	00080145 	.word	0x00080145
